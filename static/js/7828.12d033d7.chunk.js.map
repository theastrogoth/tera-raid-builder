{"version":3,"file":"static/js/7828.12d033d7.chunk.js","mappings":"4HAGO,SAASA,EAAKC,GACnB,OAAQ,GAAKA,GAAMC,cAAcC,QAAQ,cAAe,GAC1D,CAEO,SAASC,EAAMC,EAAcC,GAClC,GAAID,EACF,MAAM,IAAIE,MAAMD,GAEhBE,QAAQC,IAAIH,EAEhB,CAEO,SAASI,EACdC,EAAyBC,EAAyBC,GAElD,IAAK,IAAMC,KAAOF,EACZG,OAAOC,UAAUC,eAAeC,KAAKN,EAAGE,KAASD,EAAQM,IAAIL,KAC/DH,EAAEG,GAAOF,EAAEE,GAGjB,CAmCA,I,EAAMM,EAAoC,CACxC,mBAAoB,UACpB,kBAAmB,SACnB,kBAAmB,SACnB,oBAAqB,WACrB,iBAAkB,QAClB,gBAAiB,OACjB,kBAAmB,SACnB,kBAAmB,SACnB,iBAAkB,SAGdC,EAAeD,EAAWE,SAC1BC,EAAaH,EAAWH,eAU9B,SAASO,EAAQC,GACf,OAAW,MAAPA,EACKC,OAAOD,GAEM,kBAARA,GAAmC,oBAARA,EACrCL,EAAWC,EAAaH,KAAKO,KAAS,gBAC/BA,CACb,CAEA,SAASE,EAAcF,GACrB,GAAqB,WAAjBD,EAAQC,IAAqBA,EAAIG,UAdvC,SAAkBH,GAChB,OAAc,MAAPA,GAAeA,IAAQA,EAAII,MACpC,CAYmDC,CAASL,GACxD,OAAO,EAGT,IACE,GAAIA,EAAIM,cAAgBR,EAAWL,KAAKO,EAAIM,YAAYf,UAAW,iBACjE,OAAO,CAEX,CAAE,MAAOgB,GACP,OAAO,CACT,CAEA,OAAO,CACT,CAEO,SAASC,IACd,IAAIC,EAASC,EAAMC,EAAKC,EAAMC,EAAaC,EACvCC,GAASC,UAAAC,QAAA,OAAAC,EAAAF,UAAA,KAAW,CAAC,EACrBG,EAAI,EACJC,GAAO,EACLH,EAASD,UAAKC,OAkBpB,IAhBsB,mBAAXF,IACTK,EAAOL,EACPA,GAASC,UAAAC,QAAA,OAAAC,EAAAF,UAAA,KAAW,CAAC,EACrBG,EAAI,GAGgB,kBAAXJ,GA7Ca,aAAjBhB,EA6CuCgB,KAC5CA,EAAS,CAAC,GAGRE,IAAWE,IAEbJ,EAASM,OACPF,GAGGA,EAAIF,EAAQE,IACjB,GAA2B,OAAtBV,EAAeU,EAAC,GAAAH,UAAAC,QAADE,OAACD,EAAAF,UAADG,IAElB,IAAKT,KAAQD,EACXE,EAAMI,EAAOL,GAGTK,KAFJH,EAAOH,EAAQC,MAMXU,GAAQR,IAASV,EAAcU,KAAUC,EAAcS,MAAMC,QAAQX,MACnEC,GACFA,GAAc,EACdC,EAAQH,GAAOW,MAAMC,QAAQZ,GAAOA,EAAM,IAE1CG,EAAQH,GAAOT,EAAcS,GAAOA,EAAM,CAAC,EAG7CI,EAAOL,GAAQF,EAAOY,EAAMN,EAAOF,SACjBM,IAATN,IACTG,EAAOL,GAAQE,IAMvB,OAAOG,CACT,CC1JA,IAIMS,EAAM,CACV,WACA,aACA,eACA,QACA,cACA,aACA,aACA,eACA,gBACA,aACA,UACA,OACA,UACA,aACA,eACA,aACA,aACA,WACA,OACA,aACA,SACA,eACA,aACA,WACA,cACA,WACA,aACA,WACA,WACA,gBACA,SACA,cACA,cACA,cACA,eACA,QACA,eACA,YACA,WACA,YACA,SACA,OACA,eACA,WACA,aACA,YACA,YACA,aACA,WACA,cACA,YACA,eACA,aACA,YACA,cACA,cACA,aACA,cACA,SACA,SACA,cACA,SACA,eACA,QACA,aACA,cACA,YACA,UACA,QACA,SACA,eACA,cACA,eACA,aACA,cACA,gBAGIC,EAAMD,EAAIE,OAAO,CACrB,eACA,YACA,cACA,eACA,aACA,WACA,WACA,SACA,cACA,WACA,QACA,WACA,YACA,eACA,YACA,WACA,YACA,QACA,aACA,cACA,eACA,cACA,cACA,YACA,WACA,YACA,aACA,cACA,aACA,UACA,WACA,UACA,UACA,SACA,aACA,aACA,SACA,aACA,eACA,cACA,aACA,QACA,YACA,cACA,aACA,eACA,aACA,cACA,UACA,aAGIC,EAAKF,EAAIC,OAAO,CACpB,WACA,YACA,WACA,cACA,YACA,UACA,cACA,eACA,UACA,SACA,cACA,WACA,WACA,cACA,aACA,cACA,YACA,eACA,QACA,QACA,aACA,QACA,WACA,aACA,eACA,YACA,UACA,cACA,aACA,YACA,aACA,cACA,YACA,WACA,cACA,aACA,UACA,eACA,aACA,cACA,aAGIE,EAAKD,EAAGD,OAAO,CACnB,WACA,aACA,aACA,cACA,cACA,cACA,YACA,eACA,gBACA,aACA,cACA,WACA,aACA,QACA,aACA,WACA,gBACA,gBACA,WACA,iBACA,UACA,cACA,gBACA,aACA,aACA,YACA,gBAGIG,EAAKD,EAAGF,OAAO,CACnB,UACA,cACA,cACA,UACA,WACA,YACA,SACA,WACA,WACA,iBACA,iBACA,SACA,kBACA,YACA,eACA,cACA,eACA,aACA,YACA,cACA,aACA,kBACA,mBACA,cACA,gBACA,kBACA,aACA,WACA,YACA,gBACA,eACA,aACA,UACA,WACA,cACA,aACA,eACA,gBACA,SACA,eACA,mBACA,aAGII,EAAKD,EAAGH,OAAO,CACnB,qBACA,qBACA,aACA,iBACA,cACA,mBACA,mBACA,eACA,kBACA,aACA,eACA,gBACA,WACA,aACA,iBACA,SACA,UACA,eACA,mBACA,cACA,cACA,aACA,iBACA,YACA,aACA,QACA,YACA,iBACA,WACA,eACA,gBACA,aACA,cACA,qBAGIK,EAAKD,EAAGJ,OAAO,CACnB,cACA,aACA,gBACA,YACA,SACA,WACA,cACA,mBACA,8BACA,8BACA,uBACA,6BACA,eACA,YACA,gBACA,cACA,kBACA,aACA,iBACA,cACA,mBACA,mBACA,iBACA,iBACA,cACA,gBACA,aACA,YACA,mBACA,mBACA,gBACA,kBACA,aACA,aACA,gBACA,mBACA,cACA,eACA,iBACA,kBACA,aACA,aACA,iBAGWM,EAAY,CAAC,GAlVJ,GAEA,GAgVkBR,EAAKC,EAAKE,EAAIC,EAAIC,EAAIC,EAAIC,GAAIE,EAalEC,OAAOC,SAqBX,IAhCO,I,EAAMC,EAAS,WAGpB,SAAAA,EAAYC,IAAsBC,EAAAA,EAAAA,GAAA,KAAAF,GAAA,KAFjBC,SAAG,EAGlBhB,KAAKgB,IAAMA,CACb,CAUC,OAVAE,EAAAA,EAAAA,GAAAH,EAAA,EAAA/C,IAAA,MAAAmD,MAED,SAAIC,GACF,OAAOC,EAAgBrB,KAAKgB,KAAKI,EACnC,GAAC,CAAApD,IAAA4C,EAAAO,OAAAG,EAAAA,EAAAA,KAAAC,MAED,SAAAJ,IAAA,IAAAK,EAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,EAAAG,IAAAP,EAAAA,EAAAA,KAAAQ,KACmBT,EAAgBrB,KAAKgB,MAAI,WAAAU,EAAAK,GAAAL,EAAAG,MAAAG,KAAC,CAADN,EAAAE,KAAA,QACxC,OADSR,EAAEM,EAAAK,GAAAZ,MAAAO,EAAAE,KAAA,EACL5B,KAAKiC,IAAIb,GAAY,OAAAM,EAAAE,KAAA,gCAAAF,EAAAQ,OAAA,GAAAf,EAAA,YAE9BJ,CAAA,CAfmB,GAkBhBoB,GAAOjB,EAAAA,EAAAA,IAKX,SAAAiB,EAAY9C,IAAc4B,EAAAA,EAAAA,GAAA,KAAAkB,GAAA,KAJjBC,UAAI,OACJhB,QAAE,OACF/B,UAAI,EAGXW,KAAKoC,KAAO,UACZpC,KAAKoB,GAAKlE,EAAKmC,GACfW,KAAKX,KAAOA,CACd,IAGIgC,EAAkD,GAExDgB,EAAA,EAAAC,EAAwB3B,EAAS0B,EAAAC,EAAA1C,OAAAyC,IAAE,CAA9B,IAE4BE,EAFtBC,EAASF,EAAAD,GACZI,EAA+B,CAAC,EAAEC,GAAAC,EAAAA,EAAAA,GAClBH,GAAS,IAA/B,IAAAE,EAAAE,MAAAL,EAAAG,EAAAG,KAAAb,MAAiC,CAAC,IAC1BnE,EAAI,IAAIsE,EADEI,EAAApB,OAEhBsB,EAAI5E,EAAEuD,IAAMvD,CACd,CAAC,OAAAN,IAAAmF,EAAAxD,EAAA3B,GAAA,SAAAmF,EAAAI,GAAA,CACDzB,EAAgB0B,KAAKN,EACvB,CC3XA,IAEMO,EAAM,CAKV,aACA,gBACA,gBAEA,WACA,cACA,eACA,YACA,aACA,aACA,cAEA,aACA,aACA,aAEA,cACA,aACA,YACA,aACA,aACA,YAEA,YACA,SAEA,cACA,aAIA,eACA,YACA,aAEA,eACA,iBACA,SAEA,cAEA,WAIA,aACA,cACA,aACA,aACA,gBACA,YACA,YACA,aAEA,YAEA,gBACA,gBACA,aAEA,eAoBI7C,EAAM6C,EAAI3C,OAAO,CACrB,cACA,eACA,eACA,cACA,aACA,cACA,eACA,cAEA,cAGA,YAEA,cACA,eACA,aACA,eACA,cAEA,eACA,eACA,eACA,eACA,cACA,cACA,eACA,YACA,cAEA,aACA,eACA,cACA,cACA,YACA,WACA,cAEA,aACA,eACA,cACA,eACA,eAEA,cACA,eACA,eAEA,cACA,aACA,cAEA,cACA,cACA,aACA,aACA,eACA,WACA,eACA,cACA,eACA,aACA,eACA,eACA,aACA,eAGID,EAAMD,EAAIE,OAAO,CACrB,cAEA,eACA,WACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,aACA,eACA,eACA,YACA,aACA,eACA,cACA,cACA,eACA,YACA,aACA,cACA,cACA,cACA,aACA,YACA,cACA,aACA,eACA,YACA,eACA,cACA,YACA,YACA,eACA,WACA,eACA,YACA,aACA,eACA,cACA,cACA,eACA,WACA,aACA,eACA,aACA,eACA,YACA,cACA,aACA,cACA,aACA,cACA,aACA,YACA,eACA,eACA,eACA,aACA,aACA,eACA,aACA,aACA,eACA,YACA,aAEA,YACA,aACA,aACA,eACA,cACA,eACA,eACA,cACA,aACA,cACA,cAEA,YACA,cACA,eACA,eACA,cACA,cACA,cACA,YACA,cACA,cACA,eACA,YACA,eACA,cACA,YACA,cAGIC,EAAKF,EAAIC,OAAO,CACpB,cACA,cACA,eACA,aAGA,eAMA,aACA,eAEA,WAGA,cAMA,aAGA,cAEA,WACA,cAEA,iBAMW4C,EAA2C,CACtDC,SAAU,QACVC,UAAW,YACXC,cAAe,aACfC,UAAW,SACXC,UAAW,WACXC,YAAa,UACbC,YAAa,WACbC,SAAU,SACVC,UAAW,UACXC,YAAa,WACbC,cAAe,YACfC,YAAa,WACbC,YAAa,WACb,iBAAkB,YAClB,iBAAkB,YAClBC,aAAc,aACdC,SAAU,UACVC,UAAW,UACXC,YAAa,WACbC,aAAc,YACdC,UAAW,SACXC,UAAW,SACXC,YAAa,WACbC,YAAa,YACbC,cAAe,WACfC,cAAe,aAC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ACL,IAAK,eACH,MAAO,QACT,IAAK,eACL,IAAK,YACH,MAAO,QACT,IAAK,cACL,IAAK,eACL,IAAK,aACH,MAAO,OACT,IAAK,cACL,IAAK,cACH,MAAO,SACT,IAAK,YACL,IAAK,SACH,MAAO,WACT,IAAK,aACL,IAAK,WACL,IAAK,eACH,MAAO,SACT,QACE,OAEJ,CAEO,SAASC,GAAmB1oC,GACjC,OAAQA,GACR,IAAK,eACH,MAAO,SACT,IAAK,aACH,MAAO,OACT,IAAK,eACH,MAAO,QACT,IAAK,cACH,MAAO,WACT,IAAK,cACH,MAAO,QACT,IAAK,cACH,MAAO,MACT,IAAK,eACH,MAAO,WACT,IAAK,cACH,MAAO,SACT,IAAK,cACH,MAAO,SACT,IAAK,aACH,MAAO,SACT,IAAK,eACH,MAAO,UACT,IAAK,cACH,MAAO,MACT,IAAK,eACH,MAAO,OACT,IAAK,cACH,MAAO,QACT,IAAK,cACH,MAAO,SACT,IAAK,eACH,MAAO,OACT,IAAK,eACH,MAAO,QACT,IAAK,eACH,MAAO,QACT,QACE,OAEJ,CAEA,IAAM2oC,GAAY,IAAIr2B,IAAI,CACxB,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,SAGIs2B,GAAY,IAAIt2B,IAAI,CACxB,aACA,eACA,cACA,cACA,eACA,YACA,cACA,eACA,YACA,kBACA,kBACA,mBACA,kBACA,eACA,aACA,eACA,cACA,YACA,eACA,OACA,OACA,SAGIu2B,GAAW,IAAIv2B,IAAI,CACvB,iBACA,aACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,SAGIw2B,GAAW,IAAIx2B,IAAI,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,SAE5Dy2B,GAAW,IAAIz2B,IAAI,CACvB,eACA,iBACA,cACA,cACA,mBACA,kBACA,aACA,aACA,aACA,cACA,aACA,aACA,YACA,SACA,gBACA,aACA,cACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,SAGI02B,GAAW,IAAI12B,IAAI,CACvB,cACA,cACA,eACA,aACA,aACA,eACA,aACA,iBAGI22B,GAAW,IAAI32B,IAAI,CACvB,cACA,YACA,YACA,OACA,eACA,cACA,eACA,QACA,mBACA,qBAEI42B,GAAW,IAAI52B,IAAI,CACvB,cACA,aACA,eACA,gBACA,eACA,WACA,iBACA,YACA,cACA,WACA,aACA,aACA,SACA,aACA,eACA,eACA,iBACA,aACA,aACA,WACA,YACA,cACA,aACA,eACA,YACA,gBACA,eACA,gBACA,aACA,aACA,aACA,YACA,gBACA,WACA,cACA,cACA,eACA,cACA,YACA,kBACA,gBACA,eACA,WACA,eAEI62B,GAAW,IAAI72B,IAAI,CACvB,cACA,cACA,cACA,eACA,eACA,eACA,eACA,gBACA,cACA,eACA,aACA,aACA,eACA,cACA,eACA,cACA,YACA,aACA,cACA,eACA,aACA,gBACA,aACA,cACA,aACA,eACA,cACA,eACA,eACA,WACA,eACA,cACA,eACA,eACA,cACA,aACA,aACA,gBACA,cACA,YACA,cACA,aACA,mBACA,eACA,aACA,YACA,eACA,YACA,gBACA,aACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,SAIK,SAAS82B,GAAcX,GAC5B,OAAKA,EACD,CAAC,aAAc,YAAa,OAAQ,QAAQ3I,SAAS2I,GAAc,IACnEE,GAAUjxC,IAAI+wC,GAAc,GAC5B,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QAAQ3I,SAAS2I,GAAc,IAChEG,GAAUlxC,IAAI+wC,GAAc,IAC5B,CAAC,OAAQ,OAAQ,OAAQ,QAAQ3I,SAAS2I,GAAc,GACxDA,EAAK3I,SAAS,UAAY+I,GAASnxC,IAAI+wC,GAAc,GACrDK,GAASpxC,IAAI+wC,GAAc,GAC3BM,GAASrxC,IAAI+wC,GAAc,GAC3BO,GAAStxC,IAAI+wC,GAAc,GAC3BQ,GAASvxC,IAAI+wC,GAAc,GAC3B,CAAC,aAAc,aAAc,gBAAgB3I,SAAS2I,GAAc,GACpE,CAAC,WAAY,WAAY,eAAe3I,SAAS2I,GAAc,GAC/DS,GAASxxC,IAAI+wC,GAAc,GAClB,SAATA,EAAwB,GACxBA,EAAK3I,SAAS,UAAYqJ,GAASzxC,IAAI+wC,GAAc,GAClD,EAhBW,CAiBpB,CAEO,SAASY,GAAehvC,EAAiBouC,GAAe,IAADa,EACtDC,EAAgC,QAA5BD,EAAGjvC,EAAI+F,MAAM9E,IAAI/E,EAAKkyC,WAAM,IAAAa,OAAA,EAAzBA,EAA2BvpC,YACxC,OAAOwpC,EAAO,CAACjqC,EAAGiqC,EAAKrpC,KAAMX,EAAGgqC,EAAKtpC,WAAa,CAACX,EAAG,SAAsBC,EAAG,EACjF,CAEO,SAASiqC,GAAef,GAC7B,OAAQA,GACR,IAAK,aACH,MAAO,OACT,IAAK,cACH,MAAO,MACT,IAAK,cACH,MAAO,QACT,IAAK,cACH,MAAO,WACT,QACE,OAEJ,CC5ZA,IAeMgB,GAAW,CACf,WAAY,SAAU,SAAU,SAAU,OAAQ,MAAO,QAAS,QAClE,OAAQ,QAAS,QAAS,WAAY,UAAW,MAAO,SAAU,QAG9DC,GAAmF,CACvF9I,IAAK,CAAC+I,IAAK,CAAC7+B,IAAK,GAAIC,IAAK,GAAI60B,IAAK,IAAKgK,IAAK,CAAC9+B,IAAK,GAAIC,IAAK,KAC5Do2B,KAAM,CAACwI,IAAK,CAAC,EAAGC,IAAK,CAAC,GACtB1I,OAAQ,CAACyI,IAAK,CAAC7+B,IAAK,IAAK8+B,IAAK,CAAC7+B,IAAK,KACpC01B,SAAU,CAACkJ,IAAK,CAACngC,IAAK,IAAKogC,IAAK,CAAC9+B,IAAK,KACtCk2B,SAAU,CAAC2I,IAAK,CAAC5+B,IAAK,GAAIvB,IAAK,GAAIo2B,IAAK,GAAIC,IAAK,IAAK+J,IAAK,CAAC9+B,IAAK,GAAIC,IAAK,KAC1Ew1B,KAAM,CAACoJ,IAAK,CAAC7+B,IAAK,GAAItB,IAAK,GAAIq2B,IAAK,IAAK+J,IAAK,CAAC9+B,IAAK,GAAIC,IAAK,KAC7D41B,OAAQ,CAACgJ,IAAK,CAAC52B,GAAI,GAAIjI,IAAK,GAAIC,IAAK,GAAIvB,IAAK,GAAIo2B,IAAK,IAAKgK,IAAK,CAAC9+B,IAAK,GAAIC,IAAK,KAChFk2B,MAAO,CAAC0I,IAAK,CAAC5+B,IAAK,GAAI60B,IAAK,IAAKgK,IAAK,CAAC9+B,IAAK,GAAIC,IAAK,KACrDu1B,MAAO,CAACqJ,IAAK,CAAC7+B,IAAK,GAAItB,IAAK,IAAKogC,IAAK,CAAC9+B,IAAK,GAAIC,IAAK,KACrD+1B,OAAQ,CAAC6I,IAAK,CAACngC,IAAK,GAAIo2B,IAAK,IAAKgK,IAAK,CAAC9+B,IAAK,KAC7C41B,IAAK,CAACiJ,IAAK,CAAC7+B,IAAK,GAAIC,IAAK,IAAK6+B,IAAK,CAAC7+B,IAAK,KAC1C81B,OAAQ,CAAC8I,IAAK,CAAC5+B,IAAK,GAAIvB,IAAK,GAAIo2B,IAAK,IAAKgK,IAAK,CAAC9+B,IAAK,GAAIC,IAAK,KAC/DpI,QAAS,CAACgnC,IAAK,CAAC7+B,IAAK,GAAI+0B,IAAK,IAAK+J,IAAK,CAAC7+B,IAAK,KAC9Cg2B,KAAM,CAAC4I,IAAK,CAAC5+B,IAAK,GAAI60B,IAAK,GAAIC,IAAK,IAAK+J,IAAK,CAAC9+B,IAAK,GAAIC,IAAK,KAC7Dq2B,MAAO,CAACuI,IAAK,CAAC/J,IAAK,IAAKgK,IAAK,CAAC9+B,IAAK,KACnC01B,MAAO,CAACmJ,IAAK,CAAC7+B,IAAK,GAAIC,IAAK,GAAIvB,IAAK,IAAKogC,IAAK,CAAC9+B,IAAK,GAAIC,IAAK,MAGnD8+B,GAAQ,wBAAA1F,KAAA7pC,EAAAA,EAAAA,GAAA,KAAA6pC,EAAA,CAyKlB,OAzKkB5pC,EAAAA,EAAAA,GAAA4pC,EAAA,EAAA9sC,IAAA,cAAAmD,MACnB,SAAYsvC,GACV,OAAQA,GACR,IAAK,KACH,MAAO,KACT,IAAK,MACH,MAAO,MACT,IAAK,MACH,MAAO,MACT,IAAK,MACH,MAAO,MACT,IAAK,MACH,MAAO,MACT,IAAK,MACH,MAAO,MACT,IAAK,MACH,MAAO,MACT,QACE,MAAM,IAAIhzC,MAAM,gBAAD4C,OAAiBowC,IAEpC,GAAC,CAAAzyC,IAAA,YAAAmD,MAED,SAAUsvC,GACR,OAAQA,GACR,IAAK,KACH,MAAO,KACT,IAAK,MACH,MAAO,KACT,IAAK,MACH,MAAO,KACT,IAAK,MACH,MAAO,KACT,IAAK,MACH,MAAO,KACT,IAAK,MACH,MAAO,KACT,IAAK,MACH,MAAO,KAEX,GAAC,CAAAzyC,IAAA,UAAAmD,MAED,SAAQmvC,GACN,OACGtwC,KAAK0wC,OAAOJ,EAAI7+B,KAAO,EAAK,EAC5BzR,KAAK0wC,OAAOJ,EAAI5+B,KAAO,EAAK,EAC5B1R,KAAK0wC,OAAOJ,EAAI9J,KAAO,EAAK,EAC5BxmC,KAAK0wC,OAAOJ,EAAIK,KAAO,CAE5B,GAAC,CAAA3yC,IAAA,SAAAmD,MAED,SAAOyvC,GACL,OAAOC,KAAKC,MAAMF,EAAK,EACzB,GAAC,CAAA5yC,IAAA,SAAAmD,MAED,SAAO4vC,GACL,OAAY,EAALA,CACT,GAAC,CAAA/yC,IAAA,WAAAmD,MAED,SAASovC,GACP,IACIQ,EADET,EAA2B,CAAC,EAElC,IAAKS,KAAMR,EACTD,EAAIS,GAAMP,GAAMQ,OAAOT,EAAIQ,IAE7B,OAAOT,CACT,GAAC,CAAAtyC,IAAA,WAAAmD,MAED,SACEH,EACAyvC,EACAQ,EACAL,EACAM,EACAC,EACAvG,GAEA,GAAI5pC,EAAIgqC,IAAM,GAAKhqC,EAAIgqC,IAAM,EAAG,MAAM,IAAIvtC,MAAM,sBAAD4C,OAAuBW,EAAIgqC,MAC1E,OAAIhqC,EAAIgqC,IAAM,EAAUhrC,KAAKoxC,YAAYX,EAAMQ,EAAML,EAAIO,GAClDnxC,KAAKqxC,YAAYrwC,EAAIiqC,QAASwF,EAAMQ,EAAML,EAAIM,EAAIC,EAAOvG,EAClE,GAAC,CAAA5sC,IAAA,cAAAmD,MAED,SACE8pC,EACAwF,EACAQ,EACAL,EACAM,EACAC,EACAvG,GAEA,GAAa,OAAT6F,EACF,OAAgB,IAATQ,EACHA,EACAJ,KAAKC,OAAe,EAAPG,EAAWL,EAAKC,KAAKC,MAAMI,EAAK,IAAMC,EAAS,KAAOA,EAAQ,GAE/E,IAAIG,EAA2B,MAACzxC,OAAWA,GAC3C,GAAI+qC,EAAQ,CACV,IAAM2G,EAAMtG,EAAQhpC,IAAI/E,EAAK0tC,IAC7B0G,EAAO,CAAI,OAAHC,QAAG,IAAHA,OAAG,EAAHA,EAAK7G,KAAS,OAAH6G,QAAG,IAAHA,OAAG,EAAHA,EAAK5G,MAC1B,CACA,IAAM9nC,EACJyuC,EAAK,KAAOb,GAAQa,EAAK,KAAOb,EAC5B,EACAa,EAAK,KAAOb,EACV,IACAa,EAAK,KAAOb,EACV,GACA,EAEV,OAAOI,KAAKC,OAAOD,KAAKC,OAAe,EAAPG,EAAWL,EAAKC,KAAKC,MAAMI,EAAK,IAAMC,EAAS,KAAO,GAAKtuC,EAE/F,GAAC,CAAA7E,IAAA,cAAAmD,MAED,SAAYsvC,EAAcQ,EAAcL,EAAYO,GAClD,OAAOnxC,KAAKwxC,kBAAkBf,EAAMQ,EAAMjxC,KAAK0wC,OAAOE,GAAKO,EAC7D,GAAC,CAAAnzC,IAAA,oBAAAmD,MAED,SAAkBsvC,EAAcQ,EAAcF,EAAYI,GACxD,MAAa,OAATV,EACKI,KAAKC,OAAsB,GAAbG,EAAOF,GAAU,IAAMI,EAAS,KAAOA,EAAQ,GAE7DN,KAAKC,OAAsB,GAAbG,EAAOF,GAAU,IAAMI,EAAS,KAAO,CAEhE,GAAC,CAAAnzC,IAAA,oBAAAmD,MAED,SAAkBH,EAAiBywC,GACjC,IAAM/3B,EAAK22B,GAAGoB,GACd,GAAK/3B,EACL,OAAmB,IAAZ1Y,EAAIgqC,IAAYwF,GAAMkB,SAASh4B,EAAG62B,KAAO72B,EAAG42B,GACrD,GAAC,CAAAtyC,IAAA,iBAAAmD,MAED,SAAeH,EAAiBsvC,GAC9B,IAAMqB,EAAK,SAAC3G,GAA2B,IAAd4G,EAAIjyC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAC9B,OAAIiyC,GAAc5G,IAAQ,GAAC6F,KAAAgB,IAAK,EAAKD,GAC9B5G,IAAQ,CACjB,EAEA,GAAIhqC,EAAIgqC,KAAO,EAAG,CAEhB,IAAM8G,EAAQH,EAAGrB,EAAI7+B,IAAM,GACrBsgC,EAAQJ,EAAGrB,EAAI5+B,IAAM,GACrBsgC,EAAQL,EAAGrB,EAAI9J,IAAM,GACrByL,EAAQN,EAAGrB,EAAIngC,IAAM,GAC3B,MAAO,CACLtJ,KAAMupC,GAAc0B,EAAQ,EAAb,EAAmBC,EAAQ,GAC1CG,MAAOP,GACJ,IAAMM,GAAS,GACb,GAAKD,GAAS,GACd,GAAKD,GAAS,GACd,GAAKD,GAAS,IACdG,EAAQ,GAAM,EAAI,IAG3B,CAEE,IAAIE,EAAU,EACVC,EAAW,EACXtyC,EAAI,EACR,IAAK,IAAM8C,IAtBC,CAAC8W,GAAI,GAAIjI,IAAK,GAAIC,IAAK,GAAI80B,IAAK,GAAIr2B,IAAK,GAAIo2B,IAAK,IAuB5D4L,GAAWryC,GAAKwwC,EAAI1tC,GAAgB,GACpCwvC,GAAYtyC,GAAK6xC,EAAGrB,EAAI1tC,GAAgB,GAAK,GAC7C9C,GAAK,EAEP,MAAO,CACL+G,KAAMupC,GAASuB,EAAa,GAAVQ,EAAe,KAEjCD,MAAQlxC,EAAIgqC,KAAOhqC,EAAIgqC,IAAM,EAAK2G,EAAc,GAAXS,EAAgB,IAAM,GAAK,GAGtE,KAACtH,CAAA,CAzKqB,ICvBlBuH,GAAW,CACf,cACA,eACA,aACA,aACA,eACA,aACA,gBAGK,SAASC,GAAWC,EAAkBpH,GAC3C,OAAQA,EAAMQ,WAAa4G,EAAQC,QAAQ,cAAgBD,EAAQE,WAAaF,EAAQG,cACpFH,EAAQI,QAAQ,YACfJ,EAAQK,WAAW,cACnBL,EAAQC,QAAQ,cACvB,CAEO,SAASK,GAAgBpC,EAAcqC,EAAa9xC,GACzD,GAAIA,GAAOA,EAAIgqC,IAAM,EAAG,CACtB,GAAI8H,GAAO,EAAG,CAEZrC,EAAOI,KAAKC,MAAML,EADQ,CAAC,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,GACRqC,GAC7C,KAAO,CAELrC,EAAOI,KAAKC,MAAOL,EADA,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,KACPqC,GAAQ,IAChD,CACA,OAAOjC,KAAKkC,IAAI,IAAKlC,KAAKmC,IAAI,EAAGvC,GACnC,CAEA,IAEMwC,EAAsB,CAC1B,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAKN,OAHAxC,EAAOyC,GAAKzC,EAAOwC,EAAoB,EAAIH,GAjBzB,IAkBlBrC,EAAOI,KAAKC,MAAML,EAAOwC,EAAoB,EAAIH,GAjB7B,GAoBtB,CAEO,SAASK,GACdnyC,EACAoyC,EACAC,EACAlI,GAImE,IADnE,IAAMmI,EACJ,CAAC,CAACF,EAAUjI,EAAMmB,cAAe,CAAC+G,EAAUlI,EAAMoB,eAAeE,EAAA9sC,UAAAC,OAHhE2zC,EAAK,IAAAtzC,MAAAwsC,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAL4G,EAAK5G,EAAA,GAAAhtC,UAAAgtC,GAIR,QAAAtqC,EAAA,EAAAmxC,EAA8BF,EAAKjxC,EAAAmxC,EAAA5zC,OAAAyC,IAAE,CAAhC,IACqBE,EADrBkxC,GAAAhJ,EAAAA,GAAAA,GAAA+I,EAAAnxC,GAAA,GAAOkwC,EAAOkB,EAAA,GAAE1G,EAAI0G,EAAA,GAAC/wC,GAAAC,EAAAA,EAAAA,GACL4wC,GAAK,IAAxB,IAAA7wC,EAAAE,MAAAL,EAAAG,EAAAG,KAAAb,MAA0B,CAAC,IAAhByuC,EAAIluC,EAAApB,MACA,QAATsvC,EACF8B,EAAQgB,MAAM/M,IAAMkN,GAAc1yC,EAAKuxC,EAASpH,EAAO4B,GAEvDwF,EAAQgB,MAAM9C,GAAQoC,GAAgBN,EAAQoB,SAASlD,GAAQ8B,EAAQriC,OAAOugC,GAAQzvC,EAE1F,CAAC,OAAAzD,IAAAmF,EAAAxD,EAAA3B,GAAA,SAAAmF,EAAAI,GAAA,CACH,CACF,CAEO,SAAS4wC,GAAc1yC,EAAiBuxC,EAAkBpH,EAAc4B,GAC7E,IAAM1B,EAAUF,EAAMiB,YAAc,GAAKjB,EAAME,SAAW,GACpDE,EAAUJ,EAAMkB,eAAiB,GAAKlB,EAAMI,QAC9CqI,EAAQf,GAAgBN,EAAQoB,SAASnN,IAAK+L,EAAQriC,OAAOs2B,IAAKxlC,GAChE6yC,EAAY,GAoClB,OAlCI9G,EAAKgB,YAAY8F,EAAU9wC,KAAK,MAI/BwvC,EAAQK,WAAW,aAAeL,EAAQuB,WAC1CvB,EAAQK,WAAW,gBAAkBvH,EAAQ5E,SAAS,QACtD8L,EAAQK,WAAW,cAA4B,SAAZvH,GACnCkH,EAAQK,WAAW,eAAiBvH,EAAQ5E,SAAS,SACrD8L,EAAQK,WAAW,eAAiB,CAAC,OAAQ,QAAQnM,SAAS4E,IAC9DkH,EAAQK,WAAW,iBAA+B,aAAZrH,EAEzCsI,EAAU9wC,KAAK,MACNwvC,EAAQK,WAAW,eAAiBL,EAAQwB,OACrDF,EAAU9wC,KAAK,MACNwvC,EAAQK,WAAW,eAAiBL,EAAQuB,UACrDD,EAAU9wC,KAAK,MACNixC,GAAWzB,EAASpH,IAA6C,QAAnC8I,GAAiB1B,EAASvxC,IACjE6yC,EAAU9wC,KAAK,MAGbwvC,EAAQC,QAAQ,gBAClBqB,EAAU9wC,KAAK,MACNwvC,EAAQC,QAAO0B,MAAf3B,EAAO,CAAS,aAAWlyC,OAAKgyC,KACzCwB,EAAU9wC,KAAK,MACNwvC,EAAQC,QAAQ,iBAAmBD,EAAQ4B,MAAM,UAC1DN,EAAU9wC,KAAK,MAGjB6wC,EAAQQ,GAAKC,GAAWT,EAAQU,GAAUT,EAAW,IAAK,QAAW,OACjEtB,EAAQgC,UAAU,SAAWhC,EAAQK,WAAW,gBAClDgB,EAAQ/C,KAAKC,MAAMsD,GAAKR,GAAS5yC,EAAIgqC,IAAM,EAAI,GAAK,KAAO,MAG7D4I,EAAQ/C,KAAKkC,IAAI/xC,EAAIgqC,KAAO,EAAI,IAAM,IAAO4I,GACtC/C,KAAKmC,IAAI,EAAGY,EACrB,CAEO,SAASY,GACdxzC,EACAqY,EACAxS,EACA4tC,EACA9I,EACA+I,GAEA,OAAKA,GAAgBD,IAA6B,UAAT5tC,GAAoBwS,EAAKs5B,QAAQ,SAAU,cAExE+B,GAAgB/I,IAAuB,WAAT9kC,GAAqBwS,EAAKs5B,QAAQ,UADnE,EAGEt5B,EAAK86B,MAAM,eAA0B,UAATttC,EAC9B,EACEwS,EAAK86B,MAAM,gBAElBnzC,EAAIwY,MAAMvX,IAAI,YAAmBqmC,cAAczhC,GAC/C7F,EAAIwY,MAAMvX,IAAI,UAAiBqmC,cAAczhC,GAGxC7F,EAAIwY,MAAMvX,IAAI/E,EAAKmc,EAAKxS,OAAQyhC,cAAczhC,EAEzD,CAEO,SAAS8tC,GAAapC,EAAkBpH,GACzCoH,EAAQK,WAAW,WAAY,gBACjCzH,EAAME,aAAUxrC,EAEpB,CAEO,SAAS+0C,GAAkBrC,EAAkBpH,GAC9CoH,EAAQK,WAAW,kBAAoBL,EAAQuB,YACjD3I,EAAME,aAAUxrC,EAChBsrC,EAAMI,aAAU1rC,EAEpB,CAEO,SAASg1C,GAActC,EAAkBlH,GAC9C,GAAIkH,EAAQK,WAAW,aAAeL,EAAQ4B,MAAM,YAClD,OAAQ9I,GACR,IAAK,MACL,IAAK,iBACHkH,EAAQ/4B,MAAQ,CAAC,QACjB,MACF,IAAK,OACL,IAAK,aACH+4B,EAAQ/4B,MAAQ,CAAC,SACjB,MACF,IAAK,OACL,IAAK,OACH+4B,EAAQ/4B,MAAQ,CAAC,OACjB,MACF,QACE+4B,EAAQ/4B,MAAQ,CAAC,UAGvB,CAEO,SAASs7B,GAAUvC,EAAkBwC,IAExCxC,EAAQK,WAAW,WAAaP,GAAS5L,SAAS8L,EAAQnD,OACxD2F,KAEFxC,EAAQnD,KAAO,GAEnB,CAEO,SAAS4F,GAAgBzC,EAAkB0C,GAChD,GAAIA,EAAkB,CAAC,IAAD1K,EAC2B,CAACgI,EAAQoB,SAASpN,IAAKgM,EAAQoB,SAASjiC,KAAtF6gC,EAAQoB,SAASjiC,IAAG64B,EAAA,GAAEgI,EAAQoB,SAASpN,IAAGgE,EAAA,EAC7C,CACF,CAEO,SAAS2K,GAAgBl0C,EAAiBm0C,EAAiBz1C,GAChE,IAAM01C,EACJ11C,EAAOkzC,WAAW,aAAc,cAAe,eAAgB,oBAE9D5xC,EAAIgqC,KAAO,GAAKtrC,EAAOkzC,WAAW,cAAe,YAAa,YAAa,YAC5ElzC,EAAO8yC,QAAQ,gBACb2C,EAAOvC,WAAW,eAAiBuC,EAAOrB,YAAcsB,IACtD11C,EAAOkzC,WAAW,WAAY,UAAW,aAC3ClzC,EAAOwQ,OAAOuB,IAAMo/B,KAAKkC,IAAI,EAAGrzC,EAAOwQ,OAAOuB,IAAM,GAC3C/R,EAAOkzC,WAAW,UAC3BlzC,EAAOwQ,OAAOuB,IAAMo/B,KAAKmC,KAAK,EAAGtzC,EAAOwQ,OAAOuB,IAAM,GAErD/R,EAAOwQ,OAAOuB,IAAMo/B,KAAKmC,KAAK,EAAGtzC,EAAOwQ,OAAOuB,IAAM,GAEnD/R,EAAOkzC,WAAW,iBACpBlzC,EAAOwQ,OAAOC,IAAM0gC,KAAKkC,IAAI,EAAGrzC,EAAOwQ,OAAOC,IAAM,IAG1D,CAEO,SAASklC,GAAcF,EAAiBz1C,EAAiBu1C,GAC9D,GAAIE,EAAOvC,WAAW,YAAa,CACjC,IAAIlhC,EAAMhS,EAAO6zC,MAAM7hC,IACnB60B,EAAM7mC,EAAO6zC,MAAMhN,IAEvB,GAAI0O,EAAiB,CAAD,IAAAzK,EAAe,CAACjE,EAAK70B,GAAlBA,EAAG84B,EAAA,GAAEjE,EAAGiE,EAAA,GAC3BjE,GAAO70B,EACTyjC,EAAOjlC,OAAOC,IAAM0gC,KAAKkC,IAAI,EAAGoC,EAAOjlC,OAAOC,IAAM,GAEpDglC,EAAOjlC,OAAOuB,IAAMo/B,KAAKkC,IAAI,EAAGoC,EAAOjlC,OAAOuB,IAAM,EAExD,CACF,CAgCO,SAAS6jC,GAAiB/C,EAAkBgD,GAC7ChD,EAAQK,WAAW,iBACrB2C,EAAahI,UAAY,EACzBgI,EAAa/H,cAAgB,EAC7B+H,EAAajH,aAAe,EAEhC,CAEO,SAASkH,GAAejD,EAAkBpH,GAC/C,GAAKoH,EAAQnD,MACTjE,EAAMI,SAAWgH,EAAQnD,KAAK3I,SAAS,QAAS,CAClD,IAAMgP,EAAclD,EAAQnD,KAAKsG,UAAU,EAAGnD,EAAQnD,KAAKuG,QAAQ,MAC/DxK,EAAMyK,WAAWH,KACC,WAAhBA,GAA4C,aAAhBA,EAC9BlD,EAAQriC,OAAOwB,IAAM6gC,EAAQK,WAAW,YACpC/B,KAAKmC,KAAK,EAAGT,EAAQriC,OAAOwB,IAAM,GAClCm/B,KAAKkC,IAAI,EAAGR,EAAQriC,OAAOwB,IAAM,GAErC6gC,EAAQriC,OAAOq2B,IAAMgM,EAAQK,WAAW,YACpC/B,KAAKmC,KAAK,EAAGT,EAAQriC,OAAOq2B,IAAM,GAClCsK,KAAKkC,IAAI,EAAGR,EAAQriC,OAAOq2B,IAAM,GAG3C,CACF,CAGO,SAASsP,GACd70C,EACAoyC,EACAC,EACAh6B,EACA8xB,EACA2K,GAEC,IADDC,EAAap2C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAGT0Z,EAAK86B,MAAM,YAAa,iBAAmBd,EAAST,WAAW,QAAS,iBAGtEQ,EAASZ,QAAQ,gBAAkBuD,GACrCD,EAAKE,aAAe5C,EAAShE,KAC7B2G,GAAgB,IAEhB3C,EAASljC,OAAOs2B,IAAMqK,KAAKmC,IAAII,EAASljC,OAAOs2B,IAAM,GAAI,GACzD4M,EAASG,MAAM/M,IAAMkN,GAAc1yC,EAAKoyC,EAAUjI,EAAOA,EAAMmB,cAC/DwJ,EAAKG,gBAAkB5C,EAAS6C,SAIzB78B,EAAK86B,MAAM,oBACpBf,EAASljC,OAAOuB,IAAMo/B,KAAKkC,IAAIK,EAASljC,OAAOuB,IAAM,EAAG,GACxD2hC,EAASG,MAAM9hC,IAAMohC,GAAgBO,EAASO,SAASliC,IAAK2hC,EAASljC,OAAOuB,IAAKzQ,IAG/EqyC,EAAST,WAAW,WAClBQ,EAASR,WAAW,WACtBkD,EAAKK,gBAAkB/C,EAAS8C,SAEhC7C,EAASnjC,OAAOwB,IAAMm/B,KAAKkC,IAAIM,EAASnjC,OAAOwB,IAAM,EAAG,GACxD2hC,EAASE,MAAM7hC,IAAMmhC,GAAgBQ,EAASM,SAASjiC,IAAK2hC,EAASnjC,OAAOwB,IAAK1Q,GACjF80C,EAAKG,gBAAkB5C,EAAS6C,SAEzB7C,EAAST,WAAW,gBACzBQ,EAASR,WAAW,WACtBkD,EAAKK,gBAAkB/C,EAAS8C,QAE5B7C,EAASb,QAAQ,gBAAkBuD,GACrCD,EAAKM,aAAe/C,EAASjE,KAC7B2G,GAAgB,IAEhB1C,EAASnjC,OAAOwB,IAAMm/B,KAAKmC,IAAIK,EAASnjC,OAAOwB,IAAM,GAAI,GACzD2hC,EAASE,MAAM7hC,IAAMmhC,GAAgBQ,EAASM,SAASjiC,IAAK2hC,EAASnjC,OAAOwB,IAAK1Q,IAGrFqyC,EAASnjC,OAAOs2B,IAAMqK,KAAKkC,IAAIM,EAASnjC,OAAOs2B,IAAM,EAAG,GACxD6M,EAASE,MAAM/M,IAAMkN,GAAc1yC,EAAKqyC,EAAUlI,EAAOA,EAAMoB,cAC/DuJ,EAAKG,gBAAkB5C,EAAS6C,SAGlC,IAAMG,EAASjD,EAASR,WAAW,UAAY,EAAI,EACnD,GAAIv5B,EAAKi9B,WACP,GAAIlD,EAASR,WAAW,WACtBkD,EAAKK,gBAAkB/C,EAAS8C,YAC3B,CAEL,IAAMzF,EAAyB,YAAlBp3B,EAAKnS,SAAyB,MAAQ,MAE/CgJ,EAASkjC,EAASljC,OAAOugC,GACzB2C,EAASR,WAAW,aACtB1iC,EAAS2gC,KAAKkC,IAAI,EAAG7iC,EAASmJ,EAAKi9B,YACnCR,EAAKK,gBAAkB/C,EAAS8C,UAEhChmC,EAAS2gC,KAAKmC,KAAK,EAAG9iC,EAASmJ,EAAKi9B,WAAaD,GAC7CA,EAAS,IAAGP,EAAKK,gBAAkB/C,EAAS8C,UAG9C9C,EAASZ,QAAQ,eAAiBY,EAASljC,OAAOugC,GAAQ,IAAMsF,IAClE7lC,GAAUmJ,EAAKi9B,WAAaD,EAC5BP,EAAKE,aAAe5C,EAAShE,KAC7B2G,GAAgB,GAGlB3C,EAASljC,OAAOugC,GAAQvgC,EACxBkjC,EAASG,MAAM9C,GAAQoC,GAAgBO,EAASO,SAASlD,GAAO4C,EAASnjC,OAAOugC,GAAOzvC,EACzF,CAGF,OAAO+0C,CACT,CAEO,SAASzB,GAAUhD,EAAgBiF,EAAoBC,GAC5D,IACsBC,EADlBC,EAAI,KAAKC,GAAAh0C,EAAAA,EAAAA,GACK2uC,GAAI,IAAtB,IAAAqF,EAAA/zC,MAAA6zC,EAAAE,EAAA9zC,KAAAb,MAAwB,CAAC,IAAd8wC,EAAG2D,EAAAt1C,MACA,OAAR2xC,IACF4D,EAAKA,EAAI5D,EAAM,MAAS,GAE5B,CAAC,OAAAv1C,IAAAo5C,EAAAz3C,EAAA3B,GAAA,SAAAo5C,EAAA7zC,GAAA,CACD,OAAO+tC,KAAKmC,IAAInC,KAAKkC,IAAI2D,EAAGF,GAAaD,EAC3C,CAEO,SAASK,GAAczF,EAAevqC,EAAmBiwC,EAAgBC,GAC9E,OAAOjG,KAAKC,MACVsD,GACEvD,KAAKC,MACHsD,GAAKA,GAAKvD,KAAKC,MAAO,EAAIK,EAAS,EAAI,GAAKvqC,GAAaiwC,GAAUC,GACjE,GAAK,GAGf,CAYO,SAAS7C,GACd1B,EACAvxC,GAEA,GAAIuxC,EAAQwE,aAAuC,SAAxBxE,EAAQwE,YACjC,OAAOxE,EAAQwE,YAGjB,IADA,IAAIC,EAAmB,MACvB99B,EAAA,EAAA+9B,EAAmB,CAAC,MAAO,MAAO,MAAO,OAAM/9B,EAAA+9B,EAAAr3C,OAAAsZ,IAAc,CAAxD,IAAMu3B,EAAIwG,EAAA/9B,GAGX25B,GAAgBN,EAAQoB,SAASlD,GAAQ8B,EAAQriC,OAAOugC,GAAQzvC,GAChE6xC,GAAgBN,EAAQoB,SAASqD,GAAYzE,EAAQriC,OAAO8mC,GAAYh2C,KAExEg2C,EAAWvG,EAEf,CACA,OAAOuG,CACT,CAEO,SAAShD,GACdzB,EACApH,GAEA,SAAMoH,EAAQwE,cAAexE,EAAQuB,UAiBvC,CAEO,SAASoD,GACdC,EACAr3C,EACAwoC,EACA8O,EACAC,EACAC,EACAC,GAEA,IAAIC,EAAe3G,KAAKC,MAAMsD,GAAK+C,GAAc,GAAKr3C,IAAM,KAQ5D,OALgB,OAAZu3C,IAAkBG,EAAepD,GAAKoD,EAAeH,GAAW,MACpEG,EAAe3G,KAAKC,MAAMsD,GAAKC,GAAUmD,GAAgBlP,IAErD8O,IAAUI,EAAe3G,KAAKC,MAAM0G,EAAe,IACnDD,IAASC,EAAenD,GAAUD,GAAoB,KAAfoD,GAAuB,OAC3DtE,GAAKmB,GAAUxD,KAAKmC,IAAI,EAAGoB,GAAKoD,EAAeF,GAAY,OACpE,CAiBO,SAASG,GAAwBtC,EAAiBz1C,GAGvD,OAFuBy1C,EAAO5B,MAAM9hC,IAAM/R,EAAO6zC,MAAM7hC,IACjCyjC,EAAO5B,MAAMpjC,IAAMzQ,EAAO6zC,MAAMhN,IACd,WAAa,SACvD,CAEO,SAASmR,GAAgBnF,GAC9B,OAAOA,EAAQK,WAAW,eAAiB,EACtCL,EAAQK,WAAW,gBAAkBL,EAAQC,QAAQ,eAAkB,GAAM,CACpF,CAEO,SAASmF,GAAY32C,EAAiBkP,GAQ3C,IAR0F,IAA3B0nC,EAAoBj4C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAClFk4C,EAAM,EAOVC,EAAA,EAAAC,EALoC,IAAZ/2C,EAAIgqC,IACxB,CAAC,MAAO,MAAO,MAAO,OACV,IAAZhqC,EAAIgqC,IAAY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3D,CAAC,MAAO,MAAO,MAAO,MAAO,OAET8M,EAAAC,EAAAn4C,OAAAk4C,IAAE,CAArB,IAEGE,EAAQ9nC,EAFD6nC,EAAAD,IAGTE,GAASA,EAAQ,IAAGH,GAAOG,EACjC,CACA,OAAOH,EAAMhH,KAAKmC,IAAI,EAAG4E,EAC3B,CAEO,SAASK,GACdj3C,EACAuxC,EACA9B,EACAyH,GAEA,IAAMtN,EAAS5pC,EAAIiqC,QAAQhpC,IAAI/E,EAAKg7C,IACpC,OAAQ3F,EAAQ4F,IAAI1H,IACjB7F,EAAOF,OAASE,EAAOD,MAAQ,GAC9BC,EAAOF,OAAS+F,EAAO,IACvB7F,EAAOD,QAAU8F,EAAO,IACxB,IAAM,IACPD,GAAM4H,YAAY3H,EACvB,CAEO,SAAS4H,GAAuBjF,EAAmB/5B,GACxD,OAAIA,EAAK86B,MAAM,eAAgB,eACtBf,EAASjC,MACP93B,EAAK86B,MAAM,eACb,GACE96B,EAAK86B,MAAM,cACb,GAEF,CACT,CAGO,SAASE,GAAUrJ,GACxB,OAAOA,EAAM,EAAI,GAAM6F,KAAKyH,KAAKtN,GAAO6F,KAAKC,MAAM9F,EACrD,CAGO,SAASkI,GAAKrwC,GACnB,OAAOA,EAAI,MAAQA,EAAI,MAAQA,CACjC,CAGO,SAASuxC,GAAKvxC,GACnB,OAAOA,EAAI,WAAaA,EAAI,WAAaA,CAC3C,CC7eO,SAAS01C,GACdv3C,EACAoyC,EACAC,EACAh6B,EACA8xB,EACAqN,EACAC,GAGC,IAFDC,EAAQ/4C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IACXpC,IAAGoC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAEHg5C,EAA+BC,GAAYJ,GAAOK,GAAApO,EAAAA,GAAAA,GAAAkO,EAAA,GAA3CG,EAASD,EAAA,GAAEE,EAASF,EAAA,GACrB9F,GAA4B,kBAAd+F,EAAyBA,EAAYA,EAAU,GAAKA,EAAU,IAAMz/B,EAAK2/B,KACvFhG,GAA4B,kBAAd+F,EAAyBA,EAAYA,EAAU,GAAKA,EAAU,IAAM1/B,EAAK2/B,KAEvFC,EAAaC,GAAUR,EAAU3F,EAAKM,EAAS8F,SAC/CC,EAAaF,GAAUR,EAAU1F,EAAKK,EAAS8F,SAE/CrD,EAixBR,SAA0BuD,EAAsBjG,EAAmBC,GACjE,IAAAiG,EAuKF,SAA8BlG,EAAmBC,GAC/C,GAAID,EAASjC,QAAUkC,EAASlC,MAC9B,MAAO,CACc,MAAnBiC,EAASjC,MAAgB,GAAE,OAAA9wC,OAAU+yC,EAASjC,OAC3B,MAAnBkC,EAASlC,MAAgB,GAAE,OAAA9wC,OAAUgzC,EAASlC,QAKlD,IAAMoI,EAAQ,CAAC,IAAK,GAAI,GAAG9S,SAAS2M,EAASjC,OACvCA,EAAQoI,EAAQ,GAAE,OAAAl5C,OAAU+yC,EAASjC,OAC3C,MAAO,CAACA,EAAOA,EACjB,CAnLyCqI,CAAqBpG,EAAUC,GAASoG,GAAAhP,EAAAA,GAAAA,GAAA6O,EAAA,GAAxEI,EAAaD,EAAA,GAAEE,EAAaF,EAAA,GAC/BG,EAAS,GACTP,EAAYQ,cACVR,EAAYQ,YAAc,IAC5BD,GAAU,KAEZA,GAAUP,EAAYQ,YAAc,KAEtCD,EAASE,GAAYF,EAAQF,GAC7BE,EAASE,GAAYF,EAAQP,EAAYU,WACzCH,EAASE,GAAYF,EAAQP,EAAYrD,cACzC4D,EAASE,GAAYF,EAAQP,EAAYlD,iBACzCyD,EAASE,GAAYF,EAAQP,EAAYW,SACrCX,EAAYjC,WACdwC,GAAU,WAERP,EAAYY,eACdL,GAAU,WAAa/I,KAAKkC,IAAI,EAAGsG,EAAYY,eACf,IAA7BZ,EAAYY,aAAqB,QAAU,WAE5CZ,EAAYa,eACdN,GAAM,QAAAv5C,OAAYg5C,EAAYa,aAAY,MAExCb,EAAYtN,gBACd6N,GAAU,kBAERP,EAAYrN,gBACd4N,GAAU,kBAEZA,GAAUP,EAAYc,aAAe,IACjCd,EAAYrL,gBACd4L,GAAU,iBAERP,EAAYpL,eACVoL,EAAYpL,aAAe,EAC7B2L,GAAU,kBAAiBP,EAAYpL,aAAe,KAEtD2L,GAAU,cAGVP,EAAYe,wBACVf,EAAYe,sBAAwB,EACtCR,GAAU,kBAAiBP,EAAYe,sBAAwB,KAE/DR,GAAU,cAGVP,EAAYgB,uBACdT,GAAU,gCAERP,EAAY9K,YACdqL,GAAU,qBAERP,EAAY7K,YACdoL,GAAU,SAAWP,EAAY7K,UAAY,aAAyC,IAA1B6K,EAAY7K,UAAkB,QAAU,UAAY,KAE9G6K,EAAY5K,cACdmL,GAAU,wBAETP,EAAY3K,aACbkL,GAAM,QAAAv5C,OAAYg5C,EAAY3K,WAAU,gBAAAruC,OAA0C,IAA3Bg5C,EAAY3K,WAAmB,QAAU,SAAQ,MAEvG2K,EAAY1K,gBACbiL,GAAM,QAAAv5C,OAAYg5C,EAAY1K,eAAatuC,OAAG+yC,EAASR,WAAW,iBAAmB,SAAW,GAAE,kBAAAvyC,OAA+C,IAA9Bg5C,EAAY1K,cAAsB,IAAM,OAEzJ0K,EAAYzK,cACdgL,GAAU,uBAERP,EAAYxK,YACd+K,GAAU,aAEZA,GAAUP,EAAYiB,SAAW,IAC7BjB,EAAYkB,QAAUlB,EAAYmB,SACpCZ,GAAU,IAAMP,EAAYkB,OAAS,OAASlB,EAAYmB,SAAW,KAC5DnB,EAAYkB,OACrBX,GAAU,IAAMP,EAAYkB,OAAS,QAC5BlB,EAAYmB,WACrBZ,GAAU,IAAMP,EAAYmB,SAAW,MAErCnB,EAAYL,OACdY,GAAU,IAAMP,EAAYL,KAAO,WAErCY,EAASE,GAAYF,EAAQP,EAAYoB,WACzCb,GAAU,OACNP,EAAYqB,eACVrB,EAAYqB,aAAe,IAC7Bd,GAAU,KAEZA,GAAUP,EAAYqB,aAAe,KAEvCd,EAASE,GAAYF,EAAQD,GAC7BC,EAASE,GAAYF,EAAQP,EAAYsB,OACrCtB,EAAYuB,aACdhB,GAAU,KAAOP,EAAYuB,WAAa,KAE5ChB,EAASE,GAAYF,EAAQP,EAAYjD,cACzCwD,EAASE,GAAYF,EAAQP,EAAYpD,iBACrCoD,EAAYpN,kBACd2N,GAAU,oBAERP,EAAYnN,iBACd0N,GAAU,mBAERP,EAAY3L,cACdkM,GAAU,cAERP,EAAYwB,sBACdjB,GAAU,YAERP,EAAYyB,eACdlB,GAAM,QAAAv5C,OAAYg5C,EAAYyB,aAAY,MAE5ClB,GAAUP,EAAY0B,aAClB1B,EAAYhO,SAAWgO,EAAY9N,UAE5B8N,EAAYhO,QACrBuO,GAAU,OAASP,EAAYhO,QACtBgO,EAAY9N,UACrBqO,GAAU,OAASP,EAAY9N,QAAU,aAEvC8N,EAAY9L,UACdqM,GAAU,mBACDP,EAAY7L,gBACrBoM,GAAU,yBAERP,EAAY5L,eACX4L,EAAY9L,WAAa8L,EAAY7L,cAClC6L,EAAY5L,aAAe,EAC7BmM,GAAU,uBAAsBP,EAAY5L,aAAe,IAE3DmM,GAAU,iBAGRP,EAAY5L,aAAe,EAC7BmM,GAAU,2BAA0BP,EAAY5L,aAAe,IAE/DmM,GAAU,sBAIZP,EAAY2B,uBACdpB,GAAU,+BAERP,EAAYjL,gBACdwL,GAAU,gCAERP,EAAYhL,eACduL,GAAM,SAAAv5C,OAAag5C,EAAYhL,aAAY,KAAAhuC,OAAIg5C,EAAYhL,aAAe,EAAI,UAAY,SAAQ,iBAAAhuC,OAA8C,IAA9Bg5C,EAAY1K,cAAsB,GAAK,MAEvJ0K,EAAY/K,eACdsL,GAAU,+BAERP,EAAY4B,aACdrB,GAAU,sBAERP,EAAY6B,WACdtB,GAAU,uBAERP,EAAY3N,eACdkO,GAAU,mBAERP,EAAY8B,eACdvB,GAAU,6BAEZ,OAAOA,CACT,CAv7BewB,CAAiB3C,EAASrF,EAAUC,GAC3CgI,EAAU,GAAAh7C,OAAM0yC,EAAG,KAAA1yC,OAAI2yC,EAAG,MAAA3yC,OAAK44C,EAAU,OAAA54C,OAAM+4C,GAAU/4C,OAAGq4C,GAAQr4C,OA4W5E,SAA+BgzC,GAC3B,GAAGA,EAASiI,eAAiB,IACzB,MAAM,OAANj7C,QAKqBc,EALYkyC,EAASiI,eAAe,IAKvBC,EAL4B,GAM1DC,WAAWr6C,GAAOs6C,QAASF,IANiC,aAKxE,IAA6Bp6C,EAAao6C,EAHtC,MAAO,EACX,CAjX+EG,CAAsBrI,GAAS,KAE5G,GAAsB,WAAlBh6B,EAAKnS,WAA0BmS,EAAK86B,MAAM,gBAAiB,MAAM,GAAN9zC,OAAUy1C,EAAI,MAAAz1C,OAAKg7C,GAClF,IAAMM,EAAeC,GAAY56C,EAAKoyC,EAAUC,EAAUh6B,EAAM8xB,EAAOqN,EAAQj7C,GAAKJ,KACpF,OAAOw+C,EAAY,GAAAt7C,OAAMy1C,EAAI,MAAAz1C,OAAKg7C,EAAU,QAAAh7C,OAAOs7C,GAAY,GAAAt7C,OAAQy1C,EAAI,MAAAz1C,OAAKg7C,EAClF,CAwBO,SAASQ,GACd76C,EACAoyC,EACAC,EACAh6B,EACAm/B,GAEC,IADDE,EAAQ/4C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAEXm8C,EAA+BlD,GAAYJ,GAAOuD,GAAAtR,EAAAA,GAAAA,GAAAqR,EAAA,GAA3ChD,EAASiD,EAAA,GAAEhD,EAASgD,EAAA,GACrBC,EAA4B,kBAAdlD,EAAyB,CAACA,GAAaA,EACrDmD,EAA4B,kBAAdlD,EAAyB,CAACA,GAAaA,EAErDmD,EAAW,CAAC,EAAG,GACjB/+C,EAAO,GAELg/C,EACQ,IAAZn7C,EAAIgqC,KAAa3xB,EAAK86B,MAAM,cAAe,gBAC7C,GAAIf,EAASZ,QAAQ,gBAAkB2J,EAErC,IADA,IAAMnJ,EAAMnC,KAAKuL,MAAM/I,EAAS8F,QAAU,GACjCr5C,EAAI,EAAGA,EAAIk8C,EAAKp8C,OAAQE,IAC/Bo8C,EAAS,IAAMrL,KAAKkC,IAAIlC,KAAKuL,MAAMJ,EAAKl8C,GAAKuZ,EAAK2/B,KAAO,GAAIhG,GAC7DkJ,EAAS,IAAMrL,KAAKkC,IAAIlC,KAAKuL,MAAMH,EAAKn8C,GAAKuZ,EAAK2/B,KAAO,GAAIhG,GAQjE,GAJI35B,EAAK86B,MAAM,kBACb+H,EAAS,GAAKA,EAAS,GAAKrL,KAAKuL,MAAMhJ,EAAS+F,QAAU,IAGxD9/B,EAAKjS,MAGP,IAFA,IAAMi1C,EAAgBhjC,EAAKjS,MAAM,GAAKiS,EAAKjS,MAAM,GAC3C4rC,EAAMnC,KAAKuL,MAAM/I,EAAS8F,QAAUkD,GACjCv8C,EAAI,EAAGA,EAAIk8C,EAAKp8C,OAAQE,IAAK,CACpC,IAAMw8C,EAAQ,CAACN,EAAKl8C,GAAIm8C,EAAKn8C,IAC7B,IAAK,IAAMy8C,KAAKL,EAAU,CACxB,IAAIM,EAAU3L,KAAKuL,MAAME,EAAMC,GAAKF,GAChCjJ,EAASZ,QAAQ,cAAagK,EAAU3L,KAAK4L,MAAgB,KAAVD,EAAiB,OACxEN,EAASK,IAAM1L,KAAKkC,IAAIyJ,EAAUnjC,EAAK2/B,KAAMhG,EAC/C,CACF,CAGF,GAAoB,IAAhBkJ,EAAS,GAAU,MAAO,CAACA,SAAAA,EAAU/+C,KAAAA,GAEzC,IAAMu/C,EAAqBxD,GAAUR,EAAUwD,EAAS,GAAI9I,EAAS+F,SAC/DwD,EAAqBzD,GAAUR,EAAUwD,EAAS,GAAI9I,EAAS+F,SAGrE,MAAO,CAAC+C,SAAAA,EAAU/+C,KADlBA,EAAI,GAAAkD,OAAMq8C,EAAkB,OAAAr8C,OAAMs8C,GAAkBt8C,OAAGq4C,EAAQ,cAEjE,CAGO,SAASkE,GACd57C,EACAoyC,EACAC,EACAh6B,EACAm/B,GAEC,IADDE,EAAQ/4C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAEXk9C,EAA+BjE,GAAYJ,GAAOsE,GAAArS,EAAAA,GAAAA,GAAAoS,EAAA,GAA3C/D,EAASgE,EAAA,GAAE/D,EAAS+D,EAAA,GACrB/J,GAA4B,kBAAd+F,EAAyBA,EAAYA,EAAU,GAAKA,EAAU,IAAMz/B,EAAK2/B,KACvFhG,GAA4B,kBAAd+F,EAAyBA,EAAYA,EAAU,GAAKA,EAAU,IAAM1/B,EAAK2/B,KAEzFzwC,EAAoC,CAAC,EAAG,GACxCpL,EAAO,GAEL4/C,EAAiBjE,EAAsBzF,EAAS2J,SAAWjE,EAAsB1F,EAAS2J,QAChG,GAAI3jC,EAAK9Q,OAAQ,CACf,IACI00C,EAAiBC,EADfpK,EAAOz5B,EAAK9Q,OAAO,GAAK8Q,EAAK9Q,OAAO,GAAM,IAE5Cw0C,GACFE,EACE/D,GAAUR,EAAUrF,EAAS2J,QAAUlK,EAAKM,EAAS+F,QAAS,KAChE+D,EACEhE,GAAUR,EAAUrF,EAAS2J,QAAUlK,EAAKM,EAAS+F,QAAS,OAEhE8D,EAAkB/D,GAChBR,EAAU7H,KAAKkC,IAAIA,EAAKM,EAAS2J,SAAWlK,EAAKM,EAAS+F,QAAS,KAErE+D,EAAkBhE,GAChBR,EAAU7H,KAAKkC,IAAIC,EAAKK,EAAS2J,SAAWlK,EAAKM,EAAS+F,QAAS,MAGlE/F,EAASR,WAAW,eACvBrqC,EAAS,CAAC00C,EAAiBC,GAC3B//C,EAAI,GAAAkD,OAAM48C,EAAe,OAAA58C,OAAM68C,GAAe78C,OAAGq4C,EAAQ,kBAE7D,MAAO,GAAIr/B,EAAKpQ,eAAgB,CAC9B,IAEIg0C,EAAiBC,EAFfC,EAA4B,IAAZn8C,EAAIgqC,IAAY,KAAOhqC,EAAIgqC,KAAO,EAAI,GAAK,EAkBjE,OAfI+R,GAA8B,IAAZ/7C,EAAIgqC,KACxBiS,EACE/D,GAAUR,EAAUrF,EAAS2J,QAAUG,EAAe/J,EAAS+F,QAAS,KAC1E+D,EACEhE,GAAUR,EAAUrF,EAAS2J,QAAUG,EAAe/J,EAAS+F,QAAS,OAE1E8D,EAAkB/D,GAChBR,EAAU7H,KAAKkC,IAAIA,EAAKM,EAAS8F,SAAWgE,EAAe/J,EAAS+F,QAAS,KAE/E+D,EAAkBhE,GAChBR,EAAU7H,KAAKkC,IAAIC,EAAKK,EAAS8F,SAAWgE,EAAe/J,EAAS+F,QAAS,MAIjF5wC,EAAS,CAAC00C,EAAiBC,GACnBl8C,EAAIgqC,KACZ,KAAK,EACHziC,EAAS2wC,GAAUR,EAAU,EAAGtF,EAAS+F,SACzCh8C,EAAO,qBACP,MACF,KAAK,EAAG,KAAK,EAAG,KAAK,EACnB,GAAIk2C,EAASV,QAAQ,SACnB,GAAgB,IAAZ3xC,EAAIgqC,IAAW,CACjB,IAAMoS,EAAkBvM,KAAKC,MAA2B,GAAnBuC,EAAS8F,QAAiB/F,EAAS+F,QAAW,KACnF5wC,EAAsB,MAAbmwC,EAAmB0E,EAAkBvM,KAAKC,MAAOsM,EAAkB,IAAO,IACnFjgD,EAAI,GAAAkD,OAAM+8C,EAAe,iBAC3B,MACE70C,EAAS,EACTpL,EAAO,sCAGTA,EAAI,GAAAkD,OAAM48C,EAAe,OAAA58C,OAAM68C,GAAe78C,OAAGq4C,EAAQ,yBAE3D,MACF,QACEnwC,EAAsB,MAAbmwC,EAAmB,GAAK,GACjCv7C,EAAO,mBAEX,MAAWkc,EAAKxH,gBACdtJ,EAAsB,MAAbmwC,EAAmB,GAAK,GACjCv7C,EAAO,sBAGS,IAAZ6D,EAAIgqC,MAAW7tC,GAAQ,oBAClBkc,EAAKnD,kBACd3N,EAAsB,MAAbmwC,EAAmB,GAAK,GACjCv7C,EAAO,qBAGT,MAAO,CAACoL,OAAAA,EAAQpL,KAAAA,EAClB,CAEO,SAASy+C,GACd56C,EACAoyC,EACAC,EACAh6B,EACA8xB,EACAqN,GAEC,IADDj7C,IAAGoC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAGH,GADA64C,EA0JF,SAAiBA,GAEf,GAAsB,kBAAXA,EAAqB,MAAO,CAACA,GAExC,GAAIA,EAAO54C,OAAS,EAElB,OADI44C,EAAO,GAAKA,EAAOA,EAAO54C,OAAS,KAAI44C,EAASA,EAAO6E,QAAQv3C,QAC5D0yC,EAGT,GAAyB,kBAAdA,EAAO,IAAwC,kBAAdA,EAAO,GACjD,MAAO,CAACA,EAAO,GAAKA,EAAO,IAK7B,IAFA,IAAM8E,EAAI9E,EACJ+E,EAAW,GACRz9C,EAAI,EAAGA,EAAIw9C,EAAE,GAAG19C,OAAQE,IAC/B,IAAK,IAAIy8C,EAAI,EAAGA,EAAIe,EAAE,GAAG19C,OAAQ28C,IAC/BgB,EAASx6C,KAAKu6C,EAAE,GAAGx9C,GAAKw9C,EAAE,GAAGf,IAGjC,OAAOgB,EAASz3C,MAClB,CA/KW03C,CAAQhF,GACbiF,MAAMjF,EAAO,IAEf,OADAl7C,EAAMC,EAAK,+BACJ,CAACmgD,OAAQ,EAAG76C,EAAG,EAAG1F,KAAM,IAEjC,GAAkC,IAA9Bq7C,EAAOA,EAAO54C,OAAS,GAEzB,OADAtC,EAAMC,EAAK,oCACJ,CAACmgD,OAAQ,EAAG76C,EAAG,EAAG1F,KAAM,IAOjC,QAHuB0C,IAAnBwZ,EAAKskC,YAAyBtkC,EAAKskC,UAAY,QACf99C,IAAhCwZ,EAAKukC,yBAAsCvkC,EAAKukC,uBAAyB,GAEzEpF,EAAO,IAAMnF,EAAS8F,SAA8B,IAAnB9/B,EAAKskC,WAAmD,IAAhCtkC,EAAKukC,uBAChE,MAAO,CAACF,OAAQ,EAAG76C,EAAG,EAAG1F,KAAM,mBAGjC,IAAM0gD,EA+KR,SAAoB78C,EAAiBqyC,EAAmB9G,GACtD,IAAIiM,EAAS,EACPsF,EAAkB,GAExB,GAAIzK,EAASb,QAAQ,oBACnB,MAAO,CAACgG,OAAAA,EAAQsF,MAAAA,GAElB,GAAIvR,EAAae,OAAS+F,EAAST,WAAW,cAAe,eAAgB,CAC3E,IAAMmL,EAAW/8C,EAAIwY,MAAMvX,IAAI,QACzBqmC,EACJyV,EAASzV,cAAc+K,EAAS75B,MAAM,KACrC65B,EAAS75B,MAAM,GAAKukC,EAASzV,cAAc+K,EAAS75B,MAAM,IAAO,GACpEg/B,GAAU3H,KAAKmC,IAAI,EAAGnC,KAAKC,MAAOxI,EAAgB+K,EAAS8F,QAAW,IACtE2E,EAAM/6C,KAAK,eACb,CACA,GAAIwpC,EAAaU,aAAeoG,EAAST,WAAW,cAAe,eAAgB,CACjF,IAAMoL,EAAYh9C,EAAIwY,MAAMvX,IAAI,SAC1BqmC,EACJ0V,EAAU1V,cAAc+K,EAAS75B,MAAM,KACtC65B,EAAS75B,MAAM,GAAKwkC,EAAU1V,cAAc+K,EAAS75B,MAAM,IAAO,GACrEg/B,GAAU3H,KAAKmC,IAAI,EAAGnC,KAAKC,MAAOxI,EAAgB+K,EAAS8F,QAAW,IACtE2E,EAAM/6C,KAAK,aACb,CAEKswC,EAASV,QAAQ,WACjBU,EAAST,WAAW,cAAe,aACnCS,EAASb,QAAQ,iBAEQ,IAAxBjG,EAAaS,QACfwL,GAAU3H,KAAKmC,IAAI,EAAGnC,KAAKC,MAAMuC,EAAS8F,QAAU,IACpC,IAAZn4C,EAAIgqC,IACN8S,EAAM/6C,KAAK,UAEX+6C,EAAM/6C,KAAK,sBAEoB,IAAxBwpC,EAAaS,QACtBwL,GAAU3H,KAAKmC,IAAI,EAAGnC,KAAKC,MAAMuC,EAAS8F,QAAU,IACpD2E,EAAM/6C,KAAK,uBACsB,IAAxBwpC,EAAaS,SACtBwL,GAAU3H,KAAKmC,IAAI,EAAGnC,KAAKC,MAAMuC,EAAS8F,QAAU,IACpD2E,EAAM/6C,KAAK,wBAIX06C,MAAMjF,KACRA,EAAS,GAGX,MAAO,CAACA,OAAAA,EAAQsF,MAAAA,EAClB,CAhOkBG,CAAWj9C,EAAKqyC,EAAUlI,EAAMoB,cAC1C2R,EAAMC,GAAan9C,EAAKoyC,EAAUC,EAAUh6B,EAAM8xB,GAClDiT,EACH/K,EAASkB,UAAU,SAAWlB,EAAST,WAAW,eAAiBS,EAAS+K,aAAe,EAI1FC,EAAY,GACZhlC,EAAK2/B,KAAO,IACdqF,EAAY,WACZ7F,EAkdJ,SAAwBx3C,EAAiBs8C,EAAatE,GAA2B,IAAbz7C,IAAGoC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACrE,GAAiB,IAAb29C,EAAE19C,OACJ,MAAO,CAAC09C,EAAE,GAAKtE,GACV,GAAgB,IAAZh4C,EAAIgqC,IAAW,CAExB,IADA,IAAMsT,EAAI,GACDx+C,EAAI,EAAGA,EAAIw9C,EAAE19C,OAAQE,IAC5Bw+C,EAAEx+C,GAAKw9C,EAAEx9C,GAAKk5C,EAEhB,OAAOsF,CACT,CAAO,GAAiB,KAAbhB,EAAE19C,OACX,OAAQo5C,GACR,KAAK,EACH,MAAO,CACL,EAAIsE,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GACvEA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,IAC1EA,EAAE,IAAMA,EAAE,IAAKA,EAAE,IAAMA,EAAE,IAAKA,EAAE,IAAMA,EAAE,IAAK,EAAIA,EAAE,KAEvD,KAAK,EACH,MAAO,CACL,EAAIA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAClEA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAC5EA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAC5EA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAK,EAAIA,EAAE,KAE9E,KAAK,EACH,MAAO,CACL,EAAIA,EAAE,GAAI,EAAIA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GACtE,EAAIA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAI,EAAIA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GACtEA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAI,EAAIA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAI,EAAIA,EAAE,GACtEA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,KAEjF,KAAK,EACH,MAAO,CACL,EAAIA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAC1EA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAChEA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAI,EAAIA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAC1EA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAI,EAAIA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAC1EA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAIA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChEA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAK,EAAIA,EAAE,KAEvF,KAAK,GACH,MAAO,CACL,GAAKA,EAAE,GAAI,GAAKA,EAAE,GAAI,EAAIA,EAAE,GAAK,EAAIA,EAAE,GAAI,EAAIA,EAAE,GAAK,EAAIA,EAAE,GAAI,GAAKA,EAAE,GACvE,EAAIA,EAAE,GAAK,EAAIA,EAAE,GAAI,GAAKA,EAAE,GAAI,EAAIA,EAAE,GAAK,EAAIA,EAAE,GAAI,EAAIA,EAAE,GAAK,EAAIA,EAAE,GAAI,GAAKA,EAAE,GACjF,EAAIA,EAAE,GAAK,EAAIA,EAAE,GAAI,EAAIA,EAAE,GAAI,EAAIA,EAAE,GAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAM,EAAIA,EAAE,IAAK,GAAKA,EAAE,IACnF,GAAKA,EAAE,KAEX,QAEE,OADAhgD,EAAMC,EAAI,yBAAD8C,OAA2B24C,IAC7BsE,MAEJ,IAAiB,KAAbA,EAAE19C,OAqCN,IAAiB,MAAb09C,EAAE19C,OAAgB,CACvBo5C,EAAO,GACT17C,EAAMC,EAAI,2CAAD8C,OAA6C24C,IAIxD,IADA,IAAMsF,EAAc,GACXx+C,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAE3B,IADA,IAAIy+C,EAAM,EACDhC,EAAI,EAAGA,EAAI,GAAIA,IACtBgC,GAAOjB,EAAEx9C,EAAIy8C,GAEf+B,EAAEx+C,GAAK+wC,KAAKuL,MAAMmC,EAAM,GAC1B,CACA,OAAOD,CACT,CAEE,OADAhhD,EAAMC,EAAI,2CAAD8C,OAA6Ci9C,EAAE19C,SACjD09C,CACT,CArDE,OAAQtE,GACR,KAAK,EACH,MAAO,CACL,EAAIsE,EAAE,GAAI,EAAIA,EAAE,GAAI,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAKA,EAAE,IAAMA,EAAE,IAC/D,EAAIA,EAAE,IAAKA,EAAE,IAAMA,EAAE,IAAKA,EAAE,IAAMA,EAAE,IAAK,EAAIA,EAAE,IAAKA,EAAE,IAAMA,EAAE,IAC9D,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,KAEtD,KAAK,EACH,MAAO,CACL,EAAIA,EAAE,GAAI,EAAIA,EAAE,GAAI,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAC3D,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAC7D,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,KAE3C,KAAK,EACH,MAAO,CACL,EAAIA,EAAE,GAAI,EAAIA,EAAE,IAAM,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAM,EAAIA,EAAE,IACzE,EAAIA,EAAE,IAAM,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAM,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAM,EAAIA,EAAE,IAChE,EAAIA,EAAE,IAAM,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAM,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAM,EAAIA,EAAE,IAChE,EAAIA,EAAE,IAAM,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAM,EAAIA,EAAE,IAAK,EAAIA,EAAE,KAE9E,KAAK,EACH,MAAO,CACL,EAAIA,EAAE,GAAI,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAC5D,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAC7D,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,IAAK,EAAIA,EAAE,KAE3C,KAAK,GACH,MAAO,CACL,GAAKA,EAAE,GAAI,GAAKA,EAAE,IAAK,GAAKA,EAAE,IAAK,GAAKA,EAAE,IAAK,GAAKA,EAAE,IAAK,GAAKA,EAAE,IAClE,GAAKA,EAAE,IAAK,GAAKA,EAAE,IAAK,GAAKA,EAAE,IAAK,GAAKA,EAAE,IAAK,GAAKA,EAAE,IAAK,GAAKA,EAAE,IACnE,GAAKA,EAAE,IAAK,GAAKA,EAAE,IAAK,GAAKA,EAAE,IAAK,GAAKA,EAAE,KAE/C,QAEE,OADAhgD,EAAMC,EAAI,yBAAD8C,OAA2B24C,IAC7BsE,EAmBX,CACF,CA5jBakB,CAAex9C,EAAKw3C,EAAQn/B,EAAK2/B,KAAMz7C,IAGlD,IAAMkhD,EAAcZ,EAAQC,MAAMl+C,OAAS,EACvC,UAAY8+C,GAAcb,EAAQC,OAClC,GACEa,EACJd,EAAQC,MAAMl+C,OAAS,GAAKs+C,EAAIJ,MAAMl+C,OAAS,EAC3C,UAAY8+C,GAAcb,EAAQC,MAAMz9C,OAAO69C,EAAIJ,QACnD,GAEN,KAAwB,IAAnBzkC,EAAKskC,WAAmD,IAAhCtkC,EAAKukC,wBAAiCvkC,EAAKtD,KAoDjE,CACL,IAAM2nC,EAASkB,GACbpG,EAAQnF,EAAS8F,QAAU0E,EAAQrF,OACnC0F,EAAI1F,OACJn/B,EAAK2/B,MAAQ,EACb3/B,EAAKskC,WAAa,EAClBtK,EAAS8F,QACTiF,GAEF,OAAe,IAAXV,EACK,CACLA,OAAAA,EACA76C,EAAGwW,EAAKskC,UACRxgD,KAAK,GAADkD,OAAKg+C,GAAa,cAAa,UAAAh+C,OAASgZ,EAAKskC,UAAS,UAAAt9C,OAASs+C,IAE5DjB,EAAS,EACX,CACLA,OAAAA,EACA76C,EAAGwW,EAAKskC,UACRxgD,KACEkhD,EACAxN,KAAKuL,MAAe,IAATsB,GAAiB,GAAE,eAAAr9C,OACfgZ,EAAKskC,UAAS,OAAAt9C,OAAMs+C,IAIrCE,GACFrG,EAAO,GACP0F,EAAI1F,OACJn/B,EAAK2/B,KACL3/B,EAAKskC,UACLS,EACA/K,EAAS8F,UAET9F,EAAS2J,QAAUa,EAAQrF,OAEpB,CACLkF,OAAQ,EACR76C,EAAGwW,EAAKskC,UACRxgD,KAAK,GAADkD,OAAKg+C,GAAa,cAAa,UAAAh+C,OAASgZ,EAAKskC,UAAS,UAAAt9C,OAASs+C,IAGrEE,GACErG,EAAOA,EAAO54C,OAAS,GACvBs+C,EAAI1F,OACJn/B,EAAK2/B,KACL3/B,EAAKskC,UACLS,EACA/K,EAAS8F,UAEX9F,EAAS2J,QAAUa,EAAQrF,OAEpB,CACL31C,EAAGwW,EAAKskC,UACRxgD,KAAMkhD,EAAS,kBAAAh+C,OAAqBgZ,EAAKskC,UAAS,UAAAt9C,OAASs+C,IAGxD,CAAC97C,EAAGwW,EAAKskC,UAAWxgD,KAAMkhD,EAAY,WAC/C,CA7GE,IAAMX,EAASkB,GACbpG,EAAQnF,EAAS2J,QAAUa,EAAQrF,OAAQ,EAAG,EAAG,EAAGnF,EAAS8F,QAASiF,GAExE,GAAe,IAAXV,EACF,MAAO,CAACA,OAAAA,EAAQ76C,EAAG,EAAG1F,KAAK,kBAADkD,OAAoBo+C,IACzC,GAAIf,EAAS,EAElB,MAAO,CACLA,OAAAA,EACA76C,EAAG,EACH1F,KAAMkhD,EAAYxN,KAAKuL,MAAe,IAATsB,GAAiB,GAAE,mBAAAr9C,OAAsBo+C,IAQpD,MAAlBjG,EAAO54C,SACTy+C,EAAY,YAId,IAAK,IAAIv+C,EAAI,EAAGA,GAAK,EAAGA,IAAK,CAC3B,IAAM49C,EAASkB,GACbpG,EAAQnF,EAAS2J,QAAUa,EAAQrF,OAAQ0F,EAAI1F,OAAQ14C,EAAG,EAAGuzC,EAAS8F,QAASiF,GAEjF,GAAe,IAAXV,EACF,MAAO,CAACA,OAAAA,EAAQ76C,EAAG/C,EAAG3C,KAAK,GAADkD,OAAKg+C,GAAa,eAAah+C,OAAGP,EAAC,OAAAO,OAAMs+C,IAC9D,GAAIjB,EAAS,EAClB,MAAO,CACLA,OAAAA,EACA76C,EAAG/C,EACH3C,KAAMkhD,EAAYxN,KAAKuL,MAAe,IAATsB,GAAiB,GAAE,eAAAr9C,OAAkBP,EAAC,OAAAO,OAAMs+C,GAG/E,CAEA,IAAK,IAAI7+C,EAAI,EAAGA,GAAK,EAAGA,IAAK,CAC3B,GACE++C,GAAarG,EAAO,GAAI0F,EAAI1F,OAAQ14C,EAAG,EAAGs+C,EAAc/K,EAAS8F,UACjE9F,EAAS2J,QAAUa,EAAQrF,OAE3B,MAAO,CAACkF,OAAQ,EAAG76C,EAAG/C,EAAG3C,KAAK,GAADkD,OAAKg+C,GAAa,eAAah+C,OAAGP,EAAC,OAAAO,OAAMs+C,IACjE,GACLE,GAAarG,EAAOA,EAAO54C,OAAS,GAAIs+C,EAAI1F,OAAQ14C,EAAG,EAAGs+C,EAAc/K,EAAS8F,UACjF9F,EAAS2J,QAAUa,EAAQrF,OAE3B,MAAO,CAAC31C,EAAG/C,EAAG3C,KAAMkhD,EAAS,YAAAh+C,OAAeP,EAAC,OAAAO,OAAMs+C,GAEvD,CA6DF,MAAO,CAACjB,OAAQ,EAAG76C,EAAG,EAAG1F,KAAM,GACjC,CAyBA,IAAM2hD,GAAW,CACf,OAAQ,QAAS,YAAa,cAAe,cAAe,YAC5D,eAAgB,YAAa,OAAQ,kBAAmB,oBAiEnD,SAASX,GACdn9C,EACAoyC,EACAC,EACAh6B,EACA8xB,GAEA,IAAIqN,EAAS,EACPsF,EAAQ,GAEV3S,EAAM4T,WAAW,MAAO,kBACtB1L,EAAST,WAAW,WAAY,iBAClC4F,GAAU3H,KAAKmC,IAAI,EAAGnC,KAAKC,MAAMuC,EAAS8F,QAAU,IACpD2E,EAAM/6C,KAAKswC,EAAS6C,QAAU,YAEvB/K,EAAM4T,WAAW,OAAQ,cAC9B1L,EAAST,WAAW,aACtB4F,GAAU3H,KAAKmC,IAAI,EAAGnC,KAAKC,MAAMuC,EAAS8F,QAAU,IACpD2E,EAAM/6C,KAAK,sBACFswC,EAAST,WAAW,eAC7B4F,GAAU3H,KAAKmC,IAAI,EAAGnC,KAAKC,MAAMuC,EAAS8F,QAAU,KACpD2E,EAAM/6C,KAAK,uBAEJooC,EAAM4T,WAAW,QAEvB1L,EAASV,QAAQ,OAAQ,SAAU,UACnCU,EAAST,WAAW,cAAe,WAAY,aAAc,YAAa,cAC1ES,EAASb,QAAQ,oBAElBgG,GAAU3H,KAAKmC,IAAI,EAAGnC,KAAKC,MAAMuC,EAAS8F,SAAuB,IAAZn4C,EAAIgqC,IAAY,EAAI,MACzE8S,EAAM/6C,KAAK,qBAEJooC,EAAM4T,WAAW,OAAQ,UAC9B1L,EAAST,WAAW,aACtB4F,GAAU3H,KAAKmC,IAAI,EAAGnC,KAAKC,MAAMuC,EAAS8F,QAAU,KACpD2E,EAAM/6C,KAAK,sBAEVswC,EAASV,QAAQ,QACjBU,EAAST,WAAW,cAAe,WAAY,eAC/CS,EAASb,QAAQ,oBAClBrH,EAAM4T,WAAW,UAEjBvG,GAAU3H,KAAKmC,IAAI,EAAGnC,KAAKC,MAAMuC,EAAS8F,QAAU,KACpD2E,EAAM/6C,KAAK,iBAIf,IAAMi8C,EAAW3lC,EAAK86B,MAAM,eAAiBd,EAAST,WAAW,eAyBjE,GAxBIS,EAASb,QAAQ,eAAiBwM,GACpCxG,GAAU3H,KAAKmC,IAAI,EAAGnC,KAAKC,MAAMuC,EAAS8F,QAAU,KACpD2E,EAAM/6C,KAAK,uBACFswC,EAASb,QAAQ,kBAAoBwM,EAC1C3L,EAASV,QAAQ,WACnB6F,GAAU3H,KAAKmC,IAAI,EAAGnC,KAAKC,MAAMuC,EAAS8F,QAAU,KACpD2E,EAAM/6C,KAAK,0BACDswC,EAAST,WAAW,cAAe,WAC7C4F,GAAU3H,KAAKmC,IAAI,EAAGnC,KAAKC,MAAMuC,EAAS8F,QAAU,IACpD2E,EAAM/6C,KAAK,wBAEJswC,EAASb,QAAQ,iBAC1BgG,GAAU3H,KAAKmC,IAAI,EAAGnC,KAAKC,MAAMuC,EAAS8F,QAAU,IACpD2E,EAAM/6C,KAAK,uBAGTooC,EAAMoB,aAAasB,WAChBwF,EAAST,WAAW,iBAEvB4F,GAAU3H,KAAKmC,IAAI,EAAGnC,KAAKC,MAAMuC,EAAS8F,SAAWn4C,EAAIgqC,KAAO,EAAI,EAAI,MACxE8S,EAAM/6C,KAAK,uBAIXooC,EAAMmB,aAAauB,WAAauF,EAASR,WAAW,eAAgB,CACtE,IAAIsJ,EAAWrL,KAAKmC,IAAI,EAAGnC,KAAKC,MAAMsC,EAAS+F,SAAWn4C,EAAIgqC,KAAO,EAAI,EAAI,MACzEqI,EAASb,QAAQ,cAAa0J,EAAWrL,KAAK4L,MAAiB,KAAXP,EAAkB,OACtE9I,EAASR,WAAW,gBACtB4F,GAAU0D,EACV4B,EAAM/6C,KAAK,wBAEXy1C,GAAU0D,EACV4B,EAAM/6C,KAAK,uBAEf,CAkDA,GAhDIooC,EAAMyK,WAAW,WACftD,GAAWe,EAAUlI,KACvBqN,GAAU3H,KAAKmC,IAAI,EAAGnC,KAAKC,MAAMuC,EAAS8F,QAAU,KACpD2E,EAAM/6C,KAAK,4BAIXswC,EAASkB,UAAU,OACjBlB,EAAST,WAAW,gBACtB4F,GAAU3H,KAAKmC,IAAI,EAAGnC,KAAKC,MAAMuC,EAAS8F,QAAU,IACpD2E,EAAM/6C,KAAK,gBACDswC,EAAST,WAAW,iBAC9B4F,GAAU3H,KAAKmC,IAAI,EAAGnC,KAAKC,MAAMuC,EAAS8F,SAAuB,IAAZn4C,EAAIgqC,IAAY,GAAK,KAC1E8S,EAAM/6C,KAAK,kBAEJswC,EAASkB,UAAU,OACxBlB,EAAST,WAAW,gBACtB4F,GAAU3H,KAAKmC,IAAI,EAAGnC,KAAKC,MAAMuC,EAAS8F,QAAU,IACpD2E,EAAM/6C,KAAK,gBACDswC,EAAST,WAAW,gBAC9BkL,EAAM/6C,KAAK,gBAEJswC,EAASkB,UAAU,OACxBlB,EAAST,WAAW,cACtB4F,GAAU3H,KAAKmC,IAAI,EAAGnC,KAAKC,MAAMuC,EAAS8F,SAAWn4C,EAAIgqC,IAAM,EAAI,GAAK,MACxE8S,EAAM/6C,KAAK,wBACDswC,EAAST,WAAW,iBAC9B4F,GAAU3H,KAAKmC,IAAI,EAAEnC,KAAKC,MAAMuC,EAAS8F,SAAuB,IAAZn4C,EAAIgqC,KAAahqC,EAAIgqC,IAAM,EAAI,GAAK,KACxF8S,EAAM/6C,KAAK,iBAGZswC,EAASkB,UAAU,QAAUlB,EAAST,WAAW,cAClDQ,EAASR,WAAW,iBACnBS,EAAST,WAAW,iBAErB4F,GAAU3H,KAAKmC,IAAI,EAAGnC,KAAKC,MAAMuC,EAAS8F,QAAU,IACpD2E,EAAM/6C,KAAK,gBAGRswC,EAAST,WAAW,gBAAkBkM,GAASrY,SAASptB,EAAKha,QAC5D+zC,EAASZ,QAAQ,iBACnBgG,GAAU3H,KAAKmC,IAAI,EAAGhyC,EAAIgqC,IAAM,EAAI6F,KAAKC,MAAMuC,EAAS8F,QAAU,GAAKtI,KAAKC,MAAMuC,EAAS8F,QAAU,IACrG2E,EAAM/6C,KAAK,qBAEXy1C,GAAU3H,KAAKmC,IAAI,EAAGhyC,EAAIgqC,IAAM,EAAI6F,KAAKC,MAAMuC,EAAS8F,QAAU,GAAKtI,KAAKC,MAAMuC,EAAS8F,QAAU,KACrG2E,EAAM/6C,KAAK,qBAGXswC,EAAS4L,aAAe5L,EAAST,WAAW,eAAgB,CAC9D,IAAMsM,EAAiB7L,EAASV,QAAQ,QAAS,UAC9CU,EAAS8L,UAAY,CAAC,QAAS,SAAS1Y,SAAS4M,EAAS8L,UAC7D3G,GAAU3H,KAAKmC,IAAI,EAAGnC,KAAKC,MAAMuC,EAAS8F,SAAW+F,EAAiB,EAAI,KAC1EpB,EAAM/6C,KAAK,YACb,CAoCA,OAnCKswC,EAASV,QAAQ,SAAYU,EAAST,WAAW,iBACjDv5B,EAAK86B,MAAM,qCAAsC,wCACpDqE,GAAU3H,KAAKmC,IAAI,EAAGnC,KAAKC,MAAMuC,EAAS8F,QAAU,IACpD2E,EAAM/6C,KAAK,uBAGRswC,EAAST,WAAW,gBAAmBS,EAASV,QAAQ,WACxDxH,EAAMoB,aAAaW,WAAY7zB,EAAK86B,MAAM,qBAC7CqE,GAAU3H,KAAKmC,IAAI,EAAGnC,KAAKC,MAAMuC,EAAS8F,QAAU,IACpD2E,EAAM/6C,KAAK,qBAGRswC,EAAST,WAAW,gBAAmBS,EAASV,QAAQ,UACxDxH,EAAMoB,aAAaY,WAAY9zB,EAAK86B,MAAM,oBAC7CqE,GAAU3H,KAAKmC,IAAI,EAAGnC,KAAKC,MAAMuC,EAAS8F,QAAU,IACpD2E,EAAM/6C,KAAK,oBAGRswC,EAAST,WAAW,gBAAmBS,EAASV,QAAQ,WACxDxH,EAAMoB,aAAaa,YAAa/zB,EAAK86B,MAAM,qBAC9CqE,GAAU3H,KAAKmC,IAAI,EAAGnC,KAAKC,MAAMuC,EAAS8F,QAAU,IACpD2E,EAAM/6C,KAAK,qBAGRswC,EAAST,WAAW,gBAAmBS,EAASV,QAAQ,UACxDxH,EAAMoB,aAAac,YAAah0B,EAAK86B,MAAM,qBAC9CqE,GAAU3H,KAAKmC,IAAI,EAAGnC,KAAKC,MAAMuC,EAAS8F,QAAU,IACpD2E,EAAM/6C,KAAK,qBAGTswC,EAASZ,YACX+F,GAAU3H,KAAKmC,IAAI,EAAGnC,KAAKC,MAAMuC,EAAS8F,SAA6B,aAAlB9F,EAASjE,KAAsB,IAAI,GAAK,EAAE,MAC/F0O,EAAM/6C,KAAK,qBAGN,CAACy1C,OAAAA,EAAQsF,MAAAA,EAClB,CAEA,SAASc,GACPpG,EACA9+B,EACAwkC,EACAlF,EACA2E,EACAxE,EACAiF,GAEA,IAAMv7C,EAAI21C,EAAO54C,OACjB,GAAa,IAATo5C,EACF,IAAK,IAAIl5C,EAAI,EAAGA,EAAI+C,EAAG/C,IAAK,CAC1B,GAAI04C,EAAO31C,EAAI,GAAK6W,EAAI,OAAO,EAC/B,GAAI8+B,EAAO14C,IAAM4Z,EACf,OAAQ7W,EAAI/C,GAAK+C,CAErB,CAEF,IAAIu8C,EAAc,EACdhB,EAAe,IACjBgB,EAAcvO,KAAKmC,IAAI,EAAGnC,KAAKC,MAAOsN,EAAejF,EAAS,KAC9DiF,KAIF,IAFA,IAAIvG,EAAM,EACNwH,EAAQ,EACHv/C,EAAI,EAAGA,EAAI+C,EAAG/C,IAAK,CAC1B,IAAIw/C,OAAC,EAcL,GAAU,KAZRA,EADQ,IAANx/C,GAAW04C,EAAO14C,KAAO04C,EAAO14C,EAAI,GAClC8+C,GACFpG,EACA9+B,EAAK8+B,EAAO14C,GAAKo+C,EAAMkB,EACvBlB,EACAlF,EAAO,EACP2E,EACAxE,EACAiF,GAGEiB,GAEO,CACXxH,GAAOh1C,EAAI/C,EACX,KACF,CACE+3C,GAAOyH,EAETD,EAAQC,CACV,CACA,OAAOzH,EAAMh1C,CACf,CAEA,SAASg8C,GACPrG,EACA0F,EACAlF,EACA2E,EACAS,EACAjF,GAEA,IAAIiG,EAAc,EAClB,GAAIhB,EAAe,EACjB,IAAK,IAAIt+C,EAAI,EAAGA,EAAIk5C,EAAO,EAAGl5C,IAC5Bs/C,GAAevO,KAAKmC,IAAI,EAAGnC,KAAKC,OAAQsN,EAAet+C,GAAKq5C,EAAS,KASzE,OALIH,EAAO,GAAmB,IAAd2E,EACNnF,EAASQ,EAAOkF,GAAOlF,EAAO,GAAKoG,EAEnC5G,EAAS0F,GAAOlF,EAAO,GAAKoG,CAGxC,CAoSA,SAASV,GAAca,GACrB,GAAmB,IAAfA,EAAI3/C,OACN,MAAO,GACF,GAAmB,IAAf2/C,EAAI3/C,OACb,OAAO2/C,EAAI,GACN,GAAmB,IAAfA,EAAI3/C,OACb,OAAO2/C,EAAI,GAAK,QAAUA,EAAI,GAG9B,IADA,IAAIpiD,EAAO,GACF2C,EAAI,EAAGA,EAAIy/C,EAAI3/C,OAAS,EAAGE,IAClC3C,GAAQoiD,EAAIz/C,GAAK,KAEnB,OAAO3C,EAAO,OAASoiD,EAAIA,EAAI3/C,OAAS,EAE5C,CAEA,SAASk6C,GAAY0F,EAAaC,GAChC,OAAOA,EAAQ,GAAAp/C,OAAMm/C,GAAGn/C,OAAGo/C,EAAQ,KAAMD,CAC3C,CAEA,SAAStG,GAAUR,EAAkB76C,EAAWC,GAAmB,IAARgF,EAACnD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAC7D,MAAoB,MAAb+4C,EAAmB7H,KAAKC,MAAOjzC,GAAK,IAAOiF,GAAMhF,GAAK,GAAK+yC,KAAKC,MAAOjzC,GAAK,GAAKiF,GAAMhF,EAChG,CCtiCO,IAAM4hD,GAAM,WASjB,SAAAA,EACE1+C,EACAoyC,EACAC,EACAh6B,EACA8xB,EACAqN,EACAC,IACAx3C,EAAAA,EAAAA,GAAA,KAAAy+C,GAAA,KAhBF1+C,SAAG,OACHoyC,cAAQ,OACRC,cAAQ,OACRh6B,UAAI,OACJ8xB,WAAK,OACLqN,YAAM,OACNC,aAAO,EAWLz4C,KAAKgB,IAAMA,EACXhB,KAAKozC,SAAWA,EAChBpzC,KAAKqzC,SAAWA,EAChBrzC,KAAKqZ,KAAOA,EACZrZ,KAAKmrC,MAAQA,EACbnrC,KAAKw4C,OAASA,EACdx4C,KAAKy4C,QAAUA,CACjB,CAiDC,OA/CDv3C,EAAAA,EAAAA,GAAAw+C,EAAA,EAAA1hD,IAAA,OAAAmD,MAAU,WACR,OAAOnB,KAAK2/C,UACd,GAAC,CAAA3hD,IAAA,QAAAmD,MAED,WACE,IAAMm7C,EAAQ1D,GAAY54C,KAAKw4C,QAC/B,GAAwB,kBAAb8D,EAAM,GAAiB,OAAOA,EACzC,IAAMgB,EAAIhB,EACV,MAAO,CAACgB,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAIA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAC5C,GAAC,CAAAt/C,IAAA,WAAAmD,MAED,WAAsC,IAA7Bu3C,EAAQ/4C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAAKpC,IAAGoC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAC1B,OAAO44C,GACLv4C,KAAKgB,IACLhB,KAAKozC,SACLpzC,KAAKqzC,SACLrzC,KAAKqZ,KACLrZ,KAAKmrC,MACLnrC,KAAKw4C,OACLx4C,KAAKy4C,QACLC,EACAn7C,EAEJ,GAAC,CAAAS,IAAA,WAAAmD,MAED,WAA0B,IAAjBu3C,EAAQ/4C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAClB,OD4BG,SACLqB,EACAoyC,EACAC,EACAh6B,EACAm/B,GAEC,IADDE,EAAQ/4C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAEXigD,EAA+BhH,GAAYJ,GAAOqH,GAAApV,EAAAA,GAAAA,GAAAmV,EAAA,GAA3C9G,EAAS+G,EAAA,GAAE9G,EAAS8G,EAAA,GACrB9M,GAA4B,kBAAd+F,EAAyBA,EAAYA,EAAU,GAAKA,EAAU,IAAMz/B,EAAK2/B,KACvFhG,GAA4B,kBAAd+F,EAAyBA,EAAYA,EAAU,GAAKA,EAAU,IAAM1/B,EAAK2/B,KAEvFC,EAAaC,GAAUR,EAAU3F,EAAKM,EAAS8F,SAC/CC,EAAaF,GAAUR,EAAU1F,EAAKK,EAAS8F,SAE/C2G,EAAejE,GAAY76C,EAAKoyC,EAAUC,EAAUh6B,EAAMm/B,EAAQE,GAAUv7C,KAC5E4iD,EAAanD,GAAU57C,EAAKoyC,EAAUC,EAAUh6B,EAAMm/B,EAAQE,GAAUv7C,KAE9E,MAAM,GAANkD,OAAU44C,EAAU,OAAA54C,OAAM+4C,GAAU/4C,OAAGq4C,GAAQr4C,OAAGy/C,GAAY,KAAAz/C,OACvDy/C,EAAY,MAAGz/C,OAAG0/C,GAAU,KAAA1/C,OAAS0/C,EAAU,KACxD,CChDWC,CAAYhgD,KAAKgB,IAAKhB,KAAKozC,SAAUpzC,KAAKqzC,SAAUrzC,KAAKqZ,KAAMrZ,KAAKw4C,OAAQE,EACrF,GAAC,CAAA16C,IAAA,WAAAmD,MAED,WAA0B,IAAjBu3C,EAAQ/4C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAClB,OAAOk8C,GAAY77C,KAAKgB,IAAKhB,KAAKozC,SAAUpzC,KAAKqzC,SAAUrzC,KAAKqZ,KAAMrZ,KAAKw4C,OAAQE,EACrF,GAAC,CAAA16C,IAAA,SAAAmD,MAED,WAAwB,IAAjBu3C,EAAQ/4C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAChB,OAAOi9C,GAAU58C,KAAKgB,IAAKhB,KAAKozC,SAAUpzC,KAAKqzC,SAAUrzC,KAAKqZ,KAAMrZ,KAAKw4C,OAAQE,EACnF,GAAC,CAAA16C,IAAA,WAAAmD,MAED,WAAsB,IAAb5D,IAAGoC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACV,OAAOi8C,GACL57C,KAAKgB,IACLhB,KAAKozC,SACLpzC,KAAKqzC,SACLrzC,KAAKqZ,KACLrZ,KAAKmrC,MACLnrC,KAAKw4C,OACLj7C,EAEJ,KAACmiD,CAAA,CA1EgB,GA6EZ,SAAS9G,GACdJ,GAGA,GAAsB,kBAAXA,EAAqB,MAAO,CAACA,EAAQA,GAEhD,GAAIA,EAAO54C,OAAS,EAAG,CACrB,IAAM09C,EAAI9E,EACV,OAAI8E,EAAE,GAAKA,EAAEA,EAAE19C,OAAS,GAAW,CAACixC,KAAKkC,IAAGmB,MAARrD,MAAIlK,EAAAA,GAAAA,GAAQ2W,IAAIzM,KAAKmC,IAAGkB,MAARrD,MAAIlK,EAAAA,GAAAA,GAAQ2W,KACzD,CAACA,EAAE,GAAIA,EAAEA,EAAE19C,OAAS,GAC7B,CAEA,GAAyB,kBAAd44C,EAAO,IAAwC,kBAAdA,EAAO,GACjD,MAAO,CAAC,CAACA,EAAO,GAAIA,EAAO,IAAK,CAACA,EAAO,GAAIA,EAAO,KAGrD,IAAM8E,EAAI9E,EAGV,OAFI8E,EAAE,GAAG,GAAKA,EAAE,GAAGA,EAAE,GAAG19C,OAAS,KAAI09C,EAAE,GAAKA,EAAE,GAAGD,QAAQv3C,QACrDw3C,EAAE,GAAG,GAAKA,EAAE,GAAGA,EAAE,GAAG19C,OAAS,KAAI09C,EAAE,GAAKA,EAAE,GAAGD,QAAQv3C,QAClD,CAAC,CAACw3C,EAAE,GAAG,GAAIA,EAAE,GAAG,IAAK,CAACA,EAAE,GAAGA,EAAE,GAAG19C,OAAS,GAAI09C,EAAE,GAAGA,EAAE,GAAG19C,OAAS,IACzE,CChGO,SAASqgD,GACdj/C,EACAoyC,EACAC,EACAh6B,EACA8xB,GAEAgI,GAAkBnyC,EAAKoyC,EAAUC,EAAUlI,EAAO,MAAO,MAAO,MAAO,MAAO,OAE9E,IAAM2K,EAAgB,CACpBqE,aAAc/G,EAAS/zC,KACvBi7C,SAAUjhC,EAAKha,KACf07C,aAAc1H,EAASh0C,MAGnB6gD,EAAS,IAAIR,GAAO1+C,EAAKoyC,EAAUC,EAAUh6B,EAAM8xB,EAAO,EAAG2K,GAEnE,GAAsB,WAAlBz8B,EAAKnS,SACP,OAAOg5C,EAGT,GAAI/U,EAAMoB,aAAamB,YAErB,OADAoI,EAAKpI,aAAc,EACZwS,EAIT,GAAgB,IAAZl/C,EAAIgqC,IAAW,CACjB,IAAMmV,EAAc9H,GAAuBjF,EAAU/5B,GACrD,GAAI8mC,EAEF,OADAD,EAAO1H,OAAS2H,EACTD,CAEX,CAEA,IAAME,EAAmC,CACvC,SACA,OACA,QACA,WACA,QACA,MACA,WACA,SACA,SACA,SACA,UACA,MACA,OACA,QACA,SACA,OACA,SAGEC,EAAoBhN,EAAS75B,MAAM,GACnC8mC,EAAqBjN,EAAS75B,MAAM,GAExC,GAAI8mC,GAAsBD,IAAsBC,GAAkC,IAAZt/C,EAAIgqC,KAC5CoV,EAAiCzK,QAAQ0K,GACxCD,EAAiCzK,QAAQ2K,GAEtB,CAAC,IAAD/V,EACJ,CAAC+V,EAAoBD,GAA9DA,EAAiB9V,EAAA,GAAE+V,EAAkB/V,EAAA,EACxC,CAIF,IAAMgW,EACJ/L,GAAqBxzC,EAAKqY,EAAMgnC,EAAmBlV,EAAMoB,aAAauB,aAClE0S,EAAqBF,EACvB9L,GAAqBxzC,EAAKqY,EAAMinC,EAAoBnV,EAAMoB,aAAauB,aACvE,EACE2S,EAAoBF,EAAqBC,EAE/C,GAA0B,IAAtBC,EACF,OAAOP,EAGT,GAAgB,IAAZl/C,EAAIgqC,IAAW,CACjB,IAAMmV,EAAc9H,GAAuBjF,EAAU/5B,GACrD,GAAI8mC,EAEF,OADAD,EAAO1H,OAAS2H,EACTD,CAEX,CAOA,GALI7mC,EAAK2/B,KAAO,IACdlD,EAAKkD,KAAO3/B,EAAK2/B,MAIf3/B,EAAK86B,MAAM,QAAS,YAAa,CACnC96B,EAAKqnC,QAAS,EACd,IAAMx6C,EAAI2qC,KAAKC,MAAO,GAAKsC,EAAS4J,QAAW5J,EAAS+F,SACxD9/B,EAAKpS,GAAKf,GAAK,EAAI,IAAMA,GAAK,EAAI,IAAMA,GAAK,EAAI,IAAMA,GAAK,GAAK,GAAKA,GAAK,GAAK,GAAK,GACrF4vC,EAAKyE,OAASlhC,EAAKpS,EACrB,MAAWoS,EAAK86B,MAAM,aAAe96B,EAAKpS,KAGxCoS,EAAKpS,GAAK,IAGZ,GAAgB,IAAZoS,EAAKpS,GACP,OAAOi5C,EAGT,IAAMS,EAA+B,aAAlBtnC,EAAKnS,SAClB05C,EAAaD,EAAa,MAAQ,MAClCE,EAAcF,EAAa,MAAQ,MACrChnC,EAAKy5B,EAASG,MAAMqN,GACpBhnC,EAAKy5B,EAASE,MAAMsN,GAIlBC,EAAaznC,EAAKqnC,SACT,IAAZ1/C,EAAIgqC,KACQ,IAAZhqC,EAAIgqC,KAAaoI,EAASljC,OAAO0wC,IAAgBvN,EAASnjC,OAAO2wC,IAEhEE,EAAK3N,EAASjC,MA4ClB,GA3CI2P,GACFnnC,EAAKy5B,EAASO,SAASiN,GACvBhnC,EAAKy5B,EAASM,SAASkN,GACP,IAAZ7/C,EAAIgqC,MACN+V,GAAM,EACNjL,EAAKmF,YAAa,KAGgB,IAAhC7H,EAASljC,OAAO0wC,KAAmB9K,EAAK+D,YAAczG,EAASljC,OAAO0wC,IACrC,IAAjCvN,EAASnjC,OAAO2wC,KAAoB/K,EAAK4E,aAAerH,EAASnjC,OAAO2wC,IACxEF,GAAcvN,EAASmB,UAAU,SACnC56B,EAAKk3B,KAAKC,MAAMn3B,EAAK,GACrBm8B,EAAKsB,UAAW,IAIhB/9B,EAAK86B,MAAM,YAAa,mBAC1Bv6B,EAAKi3B,KAAKC,MAAMl3B,EAAK,IAGlBknC,IACCH,GAAcxV,EAAMoB,aAAagB,WACnC3zB,GAAM,EACNk8B,EAAKvI,WAAY,IACPoT,GAAcxV,EAAMoB,aAAaiB,gBAC3C5zB,GAAM,EACNk8B,EAAKtI,eAAgB,KAIpB4F,EAASe,MAAM,YAAcf,EAASZ,QAAQ,gBAAkBmO,GAChEvN,EAASe,MAAM,SAAU,YAAcf,EAASZ,QAAQ,eAAiBmO,KAC5EhnC,GAAM,EACNm8B,EAAKE,aAAe5C,EAAShE,OAG3Bz1B,EAAK,KAAOC,EAAK,OACnBD,EAAKk3B,KAAKC,MAAMn3B,EAAK,GAAK,IAC1BC,EAAKi3B,KAAKC,MAAMl3B,EAAK,GAAK,KAKxBP,EAAK86B,MAAM,WAAY,CACzB,IAAM6M,EAAiC,CACrCha,OAAQ,EAAGW,SAAU,EAAGL,OAAQ,EAAGE,OAAQ,EAAGC,OAAQ,EAAGC,KAAM,EAAGH,IAAK,EACvEK,MAAO,EAAGG,MAAO,EAAG,MAAO,GAAIb,KAAM,GAAIC,MAAO,GAAIF,MAAO,GAAIG,SAAU,GACzE99B,QAAS,GAAI+9B,IAAK,GAAIQ,OAAQ,GAAIC,KAAM,IAG1CnuB,EAAK,GACLC,EAAKi3B,KAAKmC,IAAIgO,EAAO5N,EAAS55B,MAAM,GAAK45B,EAAS55B,MAAM,GAAK45B,EAAS55B,MAAM,IAAK,GACjFunC,EAAKlQ,KAAKmC,IAAIgO,EAAO3N,EAAS75B,MAAM,GAAK65B,EAAS75B,MAAM,GAAK65B,EAAS75B,MAAM,IAAK,EACnF,CAEI65B,EAASc,MAAM,UAAYd,EAASb,QAAQ,kBAC9C54B,EAAKi3B,KAAKC,MAAW,IAALl3B,GAChBk8B,EAAKM,aAAe/C,EAASjE,MAG/B,IAAI6R,EAAapQ,KAAKC,MACpBD,KAAKC,MAAOD,KAAKC,MAAO,EAAIiQ,EAAM,EAAI,GAAKlQ,KAAKmC,IAAI,EAAGr5B,GAAMN,EAAKpS,GAAM4pC,KAAKmC,IAAI,EAAGp5B,IAAO,IAI7E,IAAZ5Y,EAAIgqC,KAAa3xB,EAAKqnC,SACxBO,GAAc,EACdnL,EAAKmF,YAAa,GAGhB5hC,EAAK86B,MAAM,YAAiD,QAAnChJ,EAAMoB,aAAaqC,cAC9CqS,EAAapQ,KAAKC,MAAmB,EAAbmQ,GACxBnL,EAAKlH,YAAc,OAIrB,IAAMsS,EACJ9N,EAASZ,QAAQ,oBACb3yC,EACAsvC,GAAiBiE,EAASZ,QAAQ,gBAAkB,cAAgBY,EAAShE,MAiCnF,GA/BI/1B,EAAKs5B,QAAQuO,KACfD,EAAapQ,KAAKC,MAAmB,IAAbmQ,GACxBnL,EAAKE,aAAe5C,EAAShE,MAG/B6R,EAAapQ,KAAKkC,IAAI,IAAKkO,GAAc,EAEpC9V,EAAM4T,WAAW,QAAU1lC,EAAKs5B,QAAQ,SACxCxH,EAAM4T,WAAW,SAAW1lC,EAAKs5B,QAAQ,UAC5CsO,EAAapQ,KAAKC,MAAmB,IAAbmQ,GACxBnL,EAAKzK,QAAUF,EAAME,UAEpBF,EAAM4T,WAAW,QAAU1lC,EAAKs5B,QAAQ,UACxCxH,EAAM4T,WAAW,UAAY1lC,EAAKs5B,QAAQ,SAAWt5B,EAAK86B,MAAM,kBAEjE8M,EAAapQ,KAAKC,MAAMmQ,EAAa,GACrCnL,EAAKzK,QAAUF,EAAME,SAGnBhyB,EAAKs5B,QAAOuB,MAAZ76B,GAAIstB,EAAAA,GAAAA,GAAYyM,EAAS55B,UAC3BynC,EAAapQ,KAAKC,MAAmB,IAAbmQ,IAGV,IAAZjgD,EAAIgqC,KACNiW,EAAapQ,KAAKC,MAAMmQ,EAAaV,GACrCU,EAAapQ,KAAKC,MAAMmQ,EAAaT,IAErCS,EAAapQ,KAAKC,MAAMmQ,EAAaR,GAInCpnC,EAAK86B,MAAM,QAAS,YAEtB,OADA+L,EAAO1H,OAASyI,EACTf,EAGTA,EAAO1H,OAAS,GAChB,IAAK,IAAI14C,EAAI,IAAKA,GAAK,IAAKA,IACV,IAAZkB,EAAIgqC,IACNkV,EAAO1H,OAAO14C,EAAI,KAAO+wC,KAAKmC,IAAI,EAAGnC,KAAKC,MAAOmQ,EAAanhD,EAAK,MAGjEogD,EAAO1H,OAAO14C,EAAI,KADD,IAAfmhD,EACuB,EAEApQ,KAAKC,MAAOmQ,EAAanhD,EAAK,KAK7D,OAAOogD,CACT,CCySA,SAASiB,GAAsB1Q,EAAcqC,GAC3C,IAAMsO,EAAYvQ,KAAKkC,IAAI,EAAGlC,KAAKmC,KAAK,EAAS,EAANF,IAC3C,OAAOsO,EAAY,EACfvQ,KAAKC,MAAOL,GAAQ,EAAI2Q,GAAc,GACtCA,EAAY,EAAIvQ,KAAKC,MAAc,EAAPL,GAAa,EAAI2Q,IAAc3Q,CACjE,CC3gBO,SAAS4Q,GACdrgD,EACAoyC,EACAC,EACAh6B,EACA8xB,GACC,IAADmW,EAGA3M,GAAavB,EAAUjI,GACvBwJ,GAAatB,EAAUlI,GACvB0J,GAAczB,EAAUjI,EAAME,SAC9BwJ,GAAcxB,EAAUlI,EAAME,SAC9ByJ,GAAU1B,EAAUjI,EAAMM,aAC1BqJ,GAAUzB,EAAUlI,EAAMM,aAC1BuJ,GAAgB5B,EAAUjI,EAAMO,cAChCsJ,GAAgB3B,EAAUlI,EAAMO,cAChC8J,GAAepC,EAAUjI,GACzBqK,GAAenC,EAAUlI,GAEzBgI,GAAkBnyC,EAAKoyC,EAAUC,EAAUlI,EAAO,MAAO,MAAO,OAEhE+J,GAAgBl0C,EAAKoyC,EAAUC,GAC/B6B,GAAgBl0C,EAAKqyC,EAAUD,GAC/BiC,GAAcjC,EAAUC,EAAUlI,EAAMO,cACxC2J,GAAchC,EAAUD,EAAUjI,EAAMO,cAExCyH,GAAkBnyC,EAAKoyC,EAAUC,EAAUlI,EAAO,MAAO,OAEzDmK,GAAiBlC,EAAUjI,EAAMoB,cACjC+I,GAAiBjC,EAAUlI,EAAMmB,cAEjC,IAAMwJ,EAAgB,CACpBqE,aAAc/G,EAAS/zC,KACvBi7C,SAAUjhC,EAAKha,KACf07C,aAAc1H,EAASh0C,KACvBqsC,aAAcP,EAAMO,cAGhBwU,EAAS,IAAIR,GAAO1+C,EAAKoyC,EAAUC,EAAUh6B,EAAM8xB,EAAO,EAAG2K,GAEnE,GAAsB,WAAlBz8B,EAAKnS,WAA0BmS,EAAK86B,MAAM,gBAC5C,OAAO+L,EAGT,GAAI/U,EAAMoB,aAAamB,cAAgBr0B,EAAK9G,cAE1C,OADAujC,EAAKpI,aAAc,EACZwS,EAGL9M,EAASR,WAAW,eAAgB,WAAY,gBAClDS,EAAS6C,QAAU,GACnBJ,EAAKK,gBAAkB/C,EAAS8C,SAGlC,IAAM+E,EACJ5hC,EAAKqnC,SAAWrN,EAAST,WAAW,eAAgB,gBAAqC,IAAnBv5B,EAAKskC,UAE7E,GAAItkC,EAAK86B,MAAM,gBACb96B,EAAKxS,KACHskC,EAAM4T,WAAW,MAAO,kBAAoB,OAC1C5T,EAAM4T,WAAW,OAAQ,cAAgB,QACzC5T,EAAM4T,WAAW,QAAU,OAC3B5T,EAAM4T,WAAW,QAAU,MAC3B,SACJjJ,EAAKzK,QAAUF,EAAME,QACrByK,EAAK0E,SAAWnhC,EAAKxS,UAChB,GAAIwS,EAAK86B,MAAM,aAAef,EAAShE,MAAQgE,EAAShE,KAAK3I,SAAS,SAC3EptB,EAAKxS,KAAOsoC,GAAiBiE,EAAShE,WACjC,GAAI/1B,EAAK86B,MAAM,iBAAmBf,EAAShE,MAAQgE,EAAShE,KAAK3I,SAAS,SAC/EptB,EAAKxS,KAAOspC,GAAeiD,EAAShE,WAC/B,GAAI/1B,EAAK86B,MAAM,iBAAmBf,EAAShE,MAAQgE,EAAShE,KAAK3I,SAAS,SAAU,CACzF,IAAMyJ,EAAOF,GAAehvC,EAAKoyC,EAAShE,MAC1C/1B,EAAKxS,KAAOqpC,EAAKjqC,EACjBoT,EAAKpS,GAAKipC,EAAKhqC,EACf4vC,EAAKE,aAAe5C,EAAShE,KAC7B0G,EAAKyE,OAASlhC,EAAKpS,GACnB6uC,EAAK0E,SAAWnhC,EAAKxS,IACvB,MAAWwS,EAAK86B,MAAM,kBACJ,IAAZnzC,EAAIgqC,IACN3xB,EAAKxS,KAAO,SAEZwS,EAAKxS,KACHskC,EAAMyK,WAAW,YAAc,WAC7BzK,EAAMyK,WAAW,UAAY,QAC7BzK,EAAMyK,WAAW,SAAW,QAC5B,UAIR,IAAI2L,GAAa,EACbC,GAAa,EACbC,GAAgB,EAChBC,GAAc,EACZC,EACJtoC,EAAK86B,MAAM,WAAY,eAAgB,cAAe,eAAgB,gBAExE,IAAK96B,EAAKtD,MAAQ4rC,EAAc,CAC9B,IAAMC,EAASvoC,EAAKs5B,QAAQ,WACvB4O,EAAanO,EAASR,WAAW,aAAegP,GACnDvoC,EAAKxS,KAAO,UACF26C,EAAapO,EAASR,WAAW,aAAegP,GAC1DvoC,EAAKxS,KAAO,SACF46C,EAAgBrO,EAASR,WAAW,gBAAkBgP,GAChEvoC,EAAKxS,KAAO,OACF66C,EAActO,EAASR,WAAW,gBAC5Cv5B,EAAKxS,KAAO,WAEV26C,GAAcC,GAAiBF,GAAcG,KAC/C5L,EAAKK,gBAAkB/C,EAAS8C,QAEpC,CAEI9C,EAASR,WAAW,eAAiBv5B,EAAKs5B,QAAQ,YACpDt5B,EAAK7M,SAAW,EAChBspC,EAAKK,gBAAkB/C,EAAS8C,SAGlC,IAAMzB,EAAkBrB,EAASR,WAAW,YAAczH,EAAMoB,aAAauB,YACvEyS,EACJ/L,GAAqBxzC,EAAKqY,EAAMg6B,EAAS75B,MAAM,GAAIi7B,EAAiBtJ,EAAMQ,WACtE6U,EAAqBnN,EAAS75B,MAAM,GACtCg7B,GAAqBxzC,EAAKqY,EAAMg6B,EAAS75B,MAAM,GAAIi7B,EAAiBtJ,EAAMQ,WAC1E,EACA8U,EAAoBF,EAAqBC,EAEzCqB,GACDxO,EAASjE,MACTiE,EAASc,MAAM,oBAAsBd,EAASb,QAAQ,iBACtDa,EAASh0C,KAAKonC,SAAS,WAAa4M,EAASjE,KAAK3I,SAAS,UAC3D4M,EAASh0C,KAAKonC,SAAS,aAAe4M,EAASjE,KAAK3I,SAAS,UAC7D4M,EAASc,MAAM,UAAW,mBAAqBd,EAASb,QAAQ,YAChEa,EAASc,MAAM,SAAU,kBAAoBd,EAASb,QAAQ,YAIjE,IAAKqP,GAA0BxO,EAASjE,KAAM,CAC5C,IAAMA,EAAOpuC,EAAI+F,MAAM9E,IAAI/E,EAAKm2C,EAASjE,OACzCyS,KAA4BzS,EAAK5oC,cAAe6sC,EAASh0C,KAAKonC,SAAS2I,EAAK5oC,aAC9E,CAEA,GAA0B,IAAtBi6C,GAA2BpnC,EAAK86B,MAAM,mBACxCsM,EAAoB,OACf,GAA0B,IAAtBA,GAA2BpnC,EAAKs5B,QAAQ,WACjDU,EAASb,QAAQ,eAAiBa,EAAST,WAAW,SACtD6N,EAAoB,OACf,GAA0B,IAAtBA,GAA2BpN,EAASb,QAAQ,eAAgB,CACrE,IAAMlK,EAAgBtnC,EAAIwY,MAAMvX,IAAI/E,EAAKmc,EAAKxS,OAAQyhC,cACZ,IAAtCA,EAAc+K,EAAS75B,MAAM,IAC/BinC,EAAoBD,EACXnN,EAAS75B,MAAM,IAA4C,IAAtC8uB,EAAc+K,EAAS75B,MAAM,MAC3DinC,EAAoBF,EAExB,CAEA,GAA0B,IAAtBE,EACF,OAAOP,EAGT,GAAK7mC,EAAK86B,MAAM,cACTd,EAASV,QAAQ,WAAaU,EAASt5B,UAAY,KAAOoxB,EAAMQ,YAClEtyB,EAAK86B,MAAM,kBAAoBd,EAASV,QAAQS,EAAS55B,MAAM,OAC5D45B,EAAS55B,MAAM,KAAO65B,EAASV,QAAQS,EAAS55B,MAAM,MACzDH,EAAK86B,MAAM,iBAAmBd,EAASkB,UAAU,OAEpD,OAAO2L,EAGT,GACG/U,EAAM4T,WAAW,mBAAqB1lC,EAAKs5B,QAAQ,UACnDxH,EAAM4T,WAAW,eAAiB1lC,EAAKs5B,QAAQ,QAGhD,OADAmD,EAAKzK,QAAUF,EAAME,QACd6U,EAST,GANI/U,EAAM4T,WAAW,iBAAmB1L,EAASV,QAAQ,WACrD3xC,EAAIwY,MAAMvX,IAAI/E,EAAKmc,EAAKxS,OAAQyhC,cAAsB,OAAK,IAC7DmY,GAAqB,EACrB3K,EAAKzK,QAAUF,EAAME,SAGlBgI,EAAST,WAAW,iBAAmB6N,GAAqB,GAC5DpnC,EAAKs5B,QAAQ,UAAYU,EAAST,WAAW,eAC7Cv5B,EAAKs5B,QAAQ,SAAWU,EAAST,WAAW,eAC5Cv5B,EAAKs5B,QAAQ,UAAYU,EAAST,WAAW,WAAY,cAAe,iBACxEv5B,EAAKs5B,QAAQ,aACZU,EAAST,WAAW,gBAAiB,cAAe,gBACrDv5B,EAAKs5B,QAAQ,YACXxH,EAAMQ,YAActyB,EAAK86B,MAAM,qBAC/Bd,EAASb,QAAQ,cAAgBa,EAAST,WAAW,aACvDv5B,EAAKjB,MAAMO,QAAU06B,EAAST,WAAW,gBACzCv5B,EAAKjB,MAAMQ,OAASy6B,EAAST,WAAW,cAG3C,OADAkD,EAAKG,gBAAkB5C,EAAS6C,QACzBgK,EAGT,GAAI7mC,EAAKs5B,QAAQ,YAAct5B,EAAK86B,MAAM,qBACrChJ,EAAMQ,WAAa0H,EAASb,QAAQ,eAEvC,OADAsD,EAAKM,aAAe/C,EAASjE,KACtB8Q,EAGT,GAAI7mC,EAAK7M,SAAW,GAAK2+B,EAAMyK,WAAW,YAActD,GAAWe,EAAUlI,GAE3E,OADA2K,EAAKvK,QAAUJ,EAAMI,QACd2U,EAGTpK,EAAK6E,MAAK,GAAAt6C,OAAMgzC,EAAS8E,IAAIz+B,GAAE,OAE/B,IAAMymC,EAAc9H,GAAuBjF,EAAU/5B,GACrD,GAAI8mC,EAOF,OANI/M,EAASR,WAAW,kBACtBsN,EAAO1H,OAAS,CAAC2H,EAAaA,GAC9BrK,EAAKK,gBAAkB/C,EAAS8C,SAEhCgK,EAAO1H,OAAS2H,EAEXD,EAGT,GAAI7mC,EAAK86B,MAAM,gBAEb,OADA+L,EAAO1H,OAASpF,EAAS4J,QAClBkD,EAGL7mC,EAAK2/B,KAAO,IACdlD,EAAKkD,KAAO3/B,EAAK2/B,MAGnB,IAKIpyC,EALEk7C,EAAY1O,EAASG,MAAM/M,IAAM6M,EAASE,MAAM/M,IAAM,QAAU,OAOtE,OAAQntB,EAAKha,MACb,IAAK,UACHuH,EAAYyS,EAAKpS,IAAoB,SAAd66C,EAAuB,EAAI,GAClDhM,EAAKyE,OAAS3zC,EACd,MACF,IAAK,UACH,IAAMm7C,EAA+C,QAAnC5W,EAAMoB,aAAaqC,YACrChoC,EAAYyS,EAAKpS,IAAM86C,EAAY,EAAI,GACnCA,IAAWjM,EAAKlH,YAAc,OAClCkH,EAAKyE,OAAS3zC,EACd,MACF,IAAK,eACwB,IAAvBysC,EAASE,MAAM/M,MAAW6M,EAASE,MAAM/M,IAAM,GACnD,IAAM8X,EAAIzN,KAAKC,MAAMsC,EAASG,MAAM/M,IAAM6M,EAASE,MAAM/M,KACzD5/B,EAAY03C,GAAK,EAAI,IAAMA,GAAK,EAAI,IAAMA,GAAK,EAAI,GAAKA,GAAK,EAAI,GAAK,GACtExI,EAAKyE,OAAS3zC,EACd,MACF,IAAK,YACwB,IAAvBwsC,EAASG,MAAM/M,MAAW4M,EAASG,MAAM/M,IAAM,GACnD5/B,EAAYiqC,KAAKkC,IAAI,IAAKlC,KAAKC,MAAO,GAAKuC,EAASE,MAAM/M,IAAO4M,EAASG,MAAM/M,KAAO,GACvFsP,EAAKyE,OAAS3zC,EACd,MACF,IAAK,aACHA,EAAYiqC,KAAKkC,IAAI,IAAK,GAAK,GAAK4E,GAAY32C,EAAKqyC,EAASnjC,SAC9D4lC,EAAKyE,OAAS3zC,EACd,MACF,IAAK,WACL,IAAK,aACH,IAAMo7C,EAAI3O,EAASt5B,SAAW29B,GAAgBrE,GAC9CzsC,EAAYo7C,GAAK,IAAM,IAAMA,GAAK,IAAM,IAAMA,GAAK,GAAK,GAAKA,GAAK,GAAK,GAAKA,GAAK,GAAK,GAAK,GAC3FlM,EAAKyE,OAAS3zC,EACd,MACF,IAAK,MACHA,EAAYyS,EAAKpS,IAAMosC,EAASU,OAAS,EAAI,GAC7C+B,EAAKyE,OAAS3zC,EACd,MACF,IAAK,aACL,IAAK,aACH,IAAMq7C,EACD7O,EAASr5B,SAAW29B,GAAgBtE,IACpCC,EAASt5B,SAAW29B,GAAgBrE,IACzCzsC,EAAYq7C,GAAM,EAAI,IAAMA,GAAM,EAAI,IAAMA,GAAM,EAAI,GAAKA,GAAM,EAAI,GAAK,GAC1EnM,EAAKyE,OAAS3zC,EACd,MACF,IAAK,eACL,IAAK,aACHA,EAAY,GAAK,GAAK+wC,GAAY32C,EAAKoyC,EAASljC,QAChD4lC,EAAKyE,OAAS3zC,EACd,MACF,IAAK,aACHA,EAAYyS,EAAKpS,IAAMmsC,EAASZ,QAAQ,gBAAkBY,EAAShE,KAAO,EAAI,GAC9E0G,EAAKyE,OAAS3zC,EACd,MACF,IAAK,YACHA,EAAYyS,EAAKpS,IAAMosC,EAAST,WAAW,yBAA2B,EAAI,GAE1E,MACF,IAAK,eACHhsC,EAAYyS,EAAKpS,IAAMosC,EAASkB,UAAU,OAAS,EAAI,GACvDuB,EAAKyE,OAAS3zC,EACd,MACF,IAAK,iBACHA,EAAYyS,EAAKpS,IAAMosC,EAASkB,UAAU,OAAS,EAAI,GACvDuB,EAAKyE,OAAS3zC,EACd,MACF,IAAK,eACHA,EAAYyS,EAAKpS,IAAMkkC,EAAME,UAAYF,EAAM4T,WAAW,gBAAkB,EAAI,GAChFjJ,EAAKyE,OAAS3zC,EACd,MACF,IAAK,QACHA,EAAYmpC,GAAcqD,EAAShE,MACnC0G,EAAKyE,OAAS3zC,EACdkvC,EAAKE,aAAe5C,EAAShE,KAC7B,MACF,IAAK,WACL,IAAK,cACHxoC,EAAYiqC,KAAKmC,IAAI,EAAGnC,KAAKC,MAAO,IAAMsC,EAAS4J,QAAW5J,EAAS+F,UACvErD,EAAKyE,OAAS3zC,EACd,MACF,IAAK,QACL,IAAK,WACH,IAAMV,EAAI2qC,KAAKC,MAAO,GAAKsC,EAAS4J,QAAW5J,EAAS+F,SACxDvyC,EAAYV,GAAK,EAAI,IAAMA,GAAK,EAAI,IAAMA,GAAK,EAAI,IAAMA,GAAK,GAAK,GAAKA,GAAK,GAAK,GAAK,GACvF4vC,EAAKyE,OAAS3zC,EACd,MACF,IAAK,eACH,GAAgB,IAAZ5F,EAAIgqC,IACN3xB,EAAKnS,SAAW,WAChBmS,EAAK3Z,OAAS,cACdkH,EAAY,IACZkvC,EAAKwE,SAAW,kBAIhB,OAFAjhC,EAAKnS,SAAW,UAChBmS,EAAKjG,aAAc,EACX+3B,EAAMI,SACd,IAAK,WACH3kC,EAAY,GACZkvC,EAAKwE,SAAW,cAChB,MACF,IAAK,SACH1zC,EAAY,GACZkvC,EAAKwE,SAAW,cAChB,MACF,IAAK,QACH1zC,EAAY,GACZkvC,EAAKwE,SAAW,YAChB,MACF,QACE1zC,EAAY,GACZkvC,EAAKwE,SAAW,aAGpB,MAEF,IAAK,cACH1zC,EAA0B,IAAdyS,EAAK2/B,KAAa,GAAmB,IAAd3/B,EAAK2/B,KAAa,GAAK,GAC1DlD,EAAKyE,OAAS3zC,EACd,MACF,IAAK,aACL,IAAK,YACHA,EAAY,IAAMiqC,KAAKC,MAA0B,KAAnBuC,EAAS2J,QAAkB3J,EAAS8F,SAClEvyC,EAAYiqC,KAAKC,MAAMD,KAAKC,OAAO,IAAMlqC,EAAY,KAAO,GAAK,MAAQ,MAAQ,EACjFkvC,EAAKyE,OAAS3zC,EACd,MACF,QACEA,EAAYyS,EAAKpS,GAGnB,GAAkB,IAAdL,EACF,OAAOs5C,EAGT,IAAMgC,EAAS,GAGV9O,EAASR,WAAW,eAAiBhsC,GAAa,IAClDwsC,EAASR,WAAW,gBACpBQ,EAASmB,UAAU,QAA4B,YAAlBl7B,EAAKnS,UAClCksC,EAASR,WAAW,gBACpBQ,EAASmB,UAAU,MAAO,QAA4B,aAAlBl7B,EAAKnS,UAE5Cg7C,EAAOn/C,KAAK,MACZ+yC,EAAKK,gBAAkB/C,EAAS8C,SACvB9C,EAASR,WAAW,aAA6B,UAAdkP,GAC5CI,EAAOn/C,KAAK,MACZ+yC,EAAKK,gBAAkB/C,EAAS8C,SAEhC9C,EAASR,WAAW,eACpBzH,EAAM4T,WAAW,SACjB1lC,EAAKs5B,QAAQ,OAAQ,SAAU,UAE/BuP,EAAOn/C,KAAK,MACZ+yC,EAAKK,gBAAkB/C,EAAS8C,QAChCJ,EAAKzK,QAAUF,EAAME,UAEpB+H,EAASR,WAAW,cAAgBv5B,EAAK9Q,QAAU8Q,EAAKpQ,iBACxDmqC,EAASR,WAAW,cAAgBv5B,EAAKjB,MAAMK,SAEhDypC,EAAOn/C,KAAK,MACZ+yC,EAAKK,gBAAkB/C,EAAS8C,SAG9B7C,EAAST,WAAW,cAAgBv5B,EAAKs5B,QAAQ,SACnDuP,EAAOn/C,KAAK,MACZ+yC,EAAKG,gBAAkB5C,EAAS6C,SACvB7C,EAAST,WAAW,aAAev5B,EAAKs5B,QAAQ,UACzDuP,EAAOn/C,KAAK,MACZ+yC,EAAKG,gBAAkB5C,EAAS6C,SAG9B9C,EAASR,WAAW,gBAAkBv5B,EAAKjG,cAC7C8uC,EAAOn/C,KAAK,MACZ+yC,EAAKK,gBAAkB/C,EAAS8C,SAG9B9C,EAASR,WAAW,aAAe,CAACQ,EAAS74B,OAAQ84B,EAAS94B,QAAQksB,SAAS,OAC7E2M,EAAS74B,SAAW84B,EAAS94B,QAC/B2nC,EAAOn/C,KAAK,MACZ+yC,EAAKkE,QAAU,WAEfkI,EAAOn/C,KAAK,MACZ+yC,EAAKkE,QAAU,UAEjBlE,EAAKK,gBAAkB/C,EAAS8C,SAG9B9C,EAAShE,MAAQD,GAAiBiE,EAAShE,QAAU/1B,EAAKxS,MAC5Dq7C,EAAOn/C,KAAK,MACZ+yC,EAAKE,aAAe5C,EAAShE,MAE5BgE,EAASZ,QAAQ,gBAAoC,aAAlBn5B,EAAKnS,UACxCksC,EAASZ,QAAQ,iBAAqC,YAAlBn5B,EAAKnS,UAE1Cg7C,EAAOn/C,KAAK,MACZ+yC,EAAKE,aAAe5C,EAAShE,MAE5BgE,EAASZ,QAAQ,gBACjBY,EAASe,MAAM,WACf96B,EAAKs5B,QAAQ,QAAS,WACtBS,EAASZ,QAAQ,iBACjBY,EAASe,MAAM,WACf96B,EAAKs5B,QAAQ,QAAS,WACtBS,EAASZ,QAAQ,iBACjBY,EAASe,MAAM,oBACf96B,EAAKs5B,QAAQ,QAAS,WAEvBuP,EAAOn/C,KAAK,MACZ+yC,EAAKE,aAAe5C,EAAShE,MACpBgE,EAASZ,QAAQ,GAADnyC,OAAIgZ,EAAKxS,KAAI,WACtCq7C,EAAOn/C,KAAK/B,EAAIgqC,IAAM,EAAI,KAAO,MACjC8K,EAAKE,aAAe5C,EAAShE,MAG1B/1B,EAAK86B,MAAM,WAAaf,EAASmB,UAAU,MAAO,MAAO,MAAO,QAChEl7B,EAAK86B,MAAM,UAAYd,EAAS2J,SAAW3J,EAAS8F,QAAU,GAC9D9/B,EAAK86B,MAAM,cAAgBd,EAASkB,UAAU,MAAO,QACxD2N,EAAOn/C,KAAK,MACZ+yC,EAAKyE,OAAqB,EAAZ3zC,GACL5F,EAAIgqC,IAAM,GAAK3xB,EAAK86B,MAAM,eAAiB0N,GACpDK,EAAOn/C,KAAK,MACZ+yC,EAAKyE,OAAqB,IAAZ3zC,GACLyS,EAAK86B,MAAM,eAAiBhJ,EAAM4T,WAAW,OAAQ,aAAc,OAAQ,UACpFmD,EAAOn/C,KAAK,MACZ+yC,EAAKyE,OAAS3zC,EAAY,EAC1BkvC,EAAKzK,QAAUF,EAAME,SAGnBF,EAAMmB,aAAa0B,gBACrBkU,EAAOn/C,KAAK,MACZ+yC,EAAK9H,eAAgB,GAGnBuT,GAAcC,GAAcC,GAAiBC,GAC/CQ,EAAOn/C,KAAK,MACZ+yC,EAAKK,gBAAkB/C,EAAS8C,SAE/B9C,EAASR,WAAW,kBAAoBv5B,EAAKjB,MAAMS,OACnDu6B,EAASR,WAAW,eAAiBv5B,EAAKjB,MAAMM,MAEjDwpC,EAAOn/C,KAAK,MACZ+yC,EAAKK,gBAAkB/C,EAAS8C,SACvB9C,EAASR,WAAW,gBAAkBv5B,EAAKjB,MAAMI,UAC1D0pC,EAAOn/C,KAAK,MACZ+yC,EAAKK,gBAAkB/C,EAAS8C,SAGlC,IA6CIW,EA7CEsL,EAAI,GAAA9hD,OAAMgZ,EAAKxS,KAAI,SACnBu7C,EAAiBhP,EAASR,WAAWuP,GACrCE,EAAiBhP,EAAST,WAAWuP,GACrCG,EAAkBlP,EAASR,WAAW,eAAiBS,EAAST,WAAW,cAC3E2P,EAAmBpX,EAAMS,YACzB4W,EAAmBrX,EAAMU,aAA6B,UAAdxyB,EAAKxS,KAC7C47C,EAAkBtX,EAAMW,YAA4B,SAAdzyB,EAAKxS,MAC9Bu7C,GAAkBC,GAAkBG,GAAoBC,KACzDF,GAAoBD,GAGlCJ,EAAOn/C,KAAK,MACZ+yC,EAAKK,gBAAkB/C,EAAS8C,QAChCJ,EAAKG,gBAAkB5C,EAAS6C,UAEhCgM,EAAOn/C,KAAK,MACRq/C,IAAgBtM,EAAKK,gBAAkB/C,EAAS8C,SAChDmM,IAAgBvM,EAAKG,gBAAkB5C,EAAS6C,WAMpD5D,GAAWc,EAAUjI,KAClBA,EAAMyK,WAAW,aAAev8B,EAAKs5B,QAAQ,aAC7CxH,EAAMyK,WAAW,WAAav8B,EAAKs5B,QAAQ,YAE9CuP,EAAOn/C,KAAK,MACZ+yC,EAAKvK,QAAUJ,EAAMI,SAGrB+G,GAAWe,EAAUlI,KAClBA,EAAMyK,WAAW,UAAYv8B,EAAKs5B,QAAQ,WAC1CxH,EAAMyK,WAAW,WAAav8B,EAAK86B,MAAM,WAAY,iBAExD+N,EAAOn/C,KAAK,MACZ+yC,EAAKvK,QAAUJ,EAAMI,SAIzB3kC,EAAYssC,GAAKrC,KAAKmC,IAAI,EAAGqB,GAAWztC,EAAY0tC,GAAU4N,EAAQ,GAAI,SAAY,QAMtF,IAAMQ,EAAerpC,EAAK86B,MAAM,aAAed,EAAWD,EACpDwN,EAA+B,YAAlBvnC,EAAKnS,SAAyB,MAAQ,MACzD4uC,EAAKiE,UACH1gC,EAAK86B,MAAM,aACP8D,GAAqBj3C,EAAKqyC,EAAUuN,EAAYvN,EAASzI,QACzDqN,GAAqBj3C,EAAKoyC,EAAUwN,EAAYxN,EAASxI,QAEvB,IAApC8X,EAAaxyC,OAAO0wC,IACnB3F,GAAcyH,EAAaxyC,OAAO0wC,GAAc,EACnD/J,EAAS6L,EAAa/O,SAASiN,GACtBvN,EAAST,WAAW,YAC7BiE,EAAS6L,EAAa/O,SAASiN,GAC/B9K,EAAKG,gBAAkB5C,EAAS6C,UAEhCW,EAAS6L,EAAanP,MAAMqN,GAC5B9K,EAAK+D,YAAc6I,EAAaxyC,OAAO0wC,IAIrCxN,EAASR,WAAW,WAA+B,aAAlBv5B,EAAKnS,WACxC2vC,EAASxC,GAAoB,EAATwC,EAAc,GAClCf,EAAKK,gBAAkB/C,EAAS8C,SAGlC,IA2EIY,EA3EE6L,EAAS,GACXtP,EAAST,WAAW,cAAgBv5B,EAAKs5B,QAAQ,OAAQ,SAC3DgQ,EAAO5/C,KAAK,MACZ+yC,EAAKG,gBAAkB5C,EAAS6C,SAG7B9C,EAASR,WAAW,SAAWQ,EAASW,QAA4B,aAAlB16B,EAAKnS,UACvDksC,EAAS4J,SAAW5J,EAAS+F,QAAU,IACpC/F,EAASR,WAAW,aAAev5B,EAAKs5B,QAAQ,UAChDS,EAASR,WAAW,UAAYv5B,EAAKs5B,QAAQ,SAC7CS,EAASR,WAAW,YAAcv5B,EAAKs5B,QAAQ,UAC/CS,EAASR,WAAW,UAAYv5B,EAAKs5B,QAAQ,SAC9B,YAAlBt5B,EAAKnS,UAA0BksC,EAASU,WAAaV,EAASR,WAAW,OAAQ,UAEpF+P,EAAO5/C,KAAK,MACZ+yC,EAAKK,gBAAkB/C,EAAS8C,SACvB9C,EAASR,WAAW,eAAiBQ,EAASU,WAAaz6B,EAAKs5B,QAAQ,SACjFgQ,EAAO5/C,KAAK,MACZ+yC,EAAKK,gBAAkB,cAEtB/C,EAASR,WAAW,gBACpBzH,EAAM4T,WAAW,MAAO,mBACN,YAAlB1lC,EAAKnS,UACLksC,EAASe,MAAM,YACff,EAASR,WAAW,gBACpBzH,EAAM4T,WAAW,MAAO,mBACN,aAAlB1lC,EAAKnS,UAENy7C,EAAO5/C,KAAK,MACZ+yC,EAAKK,gBAAkB/C,EAAS8C,QAChCJ,EAAKzK,QAAUF,EAAME,SAErBF,EAAMmB,aAAa4B,cACnB/C,EAAM4T,WAAW,MAAO,mBACN,aAAlB1lC,EAAKnS,UACLy7C,EAAO5/C,KAAK,MACZ+yC,EAAKzK,QAAUF,EAAME,QACrByK,EAAKuE,sBAAuB,GAE3BjH,EAASR,WAAW,cAAgBQ,EAAS4J,SAAW5J,EAAS+F,QAAU,GAC3E/F,EAASR,WAAW,eAAiBQ,EAASU,WAA+B,aAAlBz6B,EAAKnS,UAEjEy7C,EAAO5/C,KAAK,MACZ+yC,EAAKK,gBAAkB/C,EAAS8C,SACvB9C,EAASR,WAAW,aAAc,eAAmC,aAAlBv5B,EAAKnS,WACjEy7C,EAAO5/C,KAAK,MACZ+yC,EAAKK,gBAAkB/C,EAAS8C,SAG7B9C,EAASZ,QAAQ,eACjBY,EAASe,MAAM,SAAU,UAAW,kBAClB,aAAlB96B,EAAKnS,UACLksC,EAASZ,QAAQ,mBACjBY,EAASe,MAAM,aACG,YAAlB96B,EAAKnS,UACLksC,EAASZ,QAAQ,eAAiBY,EAAS/zC,KAAKujD,WAAW,aAAevpC,EAAKtD,KAElF4sC,EAAO5/C,KAAK,MACZ+yC,EAAKE,aAAe5C,EAAShE,OAE5BgE,EAASZ,QAAQ,aAChBY,EAASe,MAAM,SAAU,SAAU,cAAe,gBAChC,YAAlB96B,EAAKnS,UACNksC,EAASZ,QAAQ,gBAAoC,aAAlBn5B,EAAKnS,UACxCksC,EAASZ,QAAQ,iBAAqC,YAAlBn5B,EAAKnS,YAE1Cy7C,EAAO5/C,KAAK,MACZ+yC,EAAKE,aAAe5C,EAAShE,MAG/ByH,EAAS3D,GAAKrC,KAAKmC,IAAI,EAAGqB,GAAWwC,EAASvC,GAAUqO,EAAQ,IAAK,QAAW,QAMhF,IAAM9B,EAAcxnC,EAAKxE,uBAA2C,aAAlBwE,EAAKnS,SAA0B,MAAQ,MACnF27C,EAA+B,QAAhBhC,EACrB/K,EAAK8E,WAAa3C,GAAqBj3C,EAAKqyC,EAAUwN,EAAaxN,EAASzI,QACvC,IAAjCyI,EAASnjC,OAAO2wC,IACjB5F,GAAc5H,EAASnjC,OAAO2wC,GAAe,GAC9CxnC,EAAKxF,gBACLijC,EAAUzD,EAASM,SAASkN,GACnBzN,EAASR,WAAW,YAC7BkE,EAAUzD,EAASM,SAASkN,GAC5B/K,EAAKK,gBAAkB/C,EAAS8C,UAEhCY,EAAUzD,EAASE,MAAMsN,GACzB/K,EAAK4E,aAAerH,EAASnjC,OAAO2wC,IAIlC1V,EAAM4T,WAAW,SAAW1L,EAASV,QAAQ,UAAYkQ,IAC3D/L,EAAUzC,GAAqB,EAAVyC,EAAe,GACpChB,EAAKzK,QAAUF,EAAME,SAGvB,IAAMyX,EAAS,GACXzP,EAAST,WAAW,iBAAmBS,EAASU,QAAU8O,GAC5DC,EAAO//C,KAAK,MACZ+yC,EAAKG,gBAAkB5C,EAAS6C,SAEhC7C,EAASc,MAAM,YACfd,EAAST,WAAW,gBACpBzH,EAAM4T,WAAW,MAAO,oBACvB8D,GAEDC,EAAO//C,KAAK,MACZ+yC,EAAKG,gBAAkB5C,EAAS6C,QAChCJ,EAAKzK,QAAUF,EAAME,SAErBF,EAAMoB,aAAa2B,cACnB/C,EAAM4T,WAAW,MAAO,oBACvB8D,IACDC,EAAO//C,KAAK,MACZ+yC,EAAKzK,QAAUF,EAAME,QACrByK,EAAKkF,sBAAuB,GAG1B7P,EAAMyK,WAAW,WAAavC,EAAST,WAAW,eAAiBiQ,IACrEC,EAAO//C,KAAK,MACZ+yC,EAAKG,gBAAkB5C,EAAS6C,WAG5B2M,GAAgBxP,EAASb,QAAQ,aAClCa,EAASc,MAAM,SAAU,SAAU,cAAe,gBAClDd,EAASb,QAAQ,aAAmD,QAAxC8O,EAAItgD,EAAI8lC,QAAQ7kC,IAAI/E,EAAKm2C,EAASh0C,cAAM,IAAAiiD,GAApCA,EAAsCnnC,MACrE0oC,GAAgBxP,EAASb,QAAQ,mBACrCsQ,EAAO//C,KAAK,MACZ+yC,EAAKM,aAAe/C,EAASjE,OAG1BiE,EAASb,QAAQ,iBAAmBa,EAASc,MAAM,UAAY0O,GAC/DxP,EAASb,QAAQ,mBAAqBa,EAASc,MAAM,cAAgB0O,KACxEC,EAAO//C,KAAK,MACZ+yC,EAAKM,aAAe/C,EAASjE,MAG3BiE,EAAST,WAAW,aAAeiQ,IACrCC,EAAO//C,KAAK,MACZ+yC,EAAKG,gBAAkB5C,EAAS6C,SAGlCY,EAAU5D,GAAKrC,KAAKmC,IAAI,EAAGqB,GAAWyC,EAAUxC,GAAUwO,EAAQ,IAAK,QAAW,QAKlF,IAAI7B,EAAarK,GAAcxD,EAASjC,MAAOvqC,EAAWiwC,EAAQC,GAE5DoE,EAA8B,YAAnB/P,EAAMC,UACrB,CAAC,cAAe,mBAAmB3E,SAASptB,EAAK3Z,QAC/Cw7C,IACF+F,EAAa5M,GAAUD,GAAkB,KAAb6M,GAAqB,OAG/C7N,EAASR,WAAW,2BACtBqO,EAAa5M,GAAUD,GAAkB,KAAb6M,GAAqB,OAG9C9V,EAAM4T,WAAW,MAAO,mBAAqB1lC,EAAKs5B,QAAQ,SAC1DxH,EAAM4T,WAAW,OAAQ,eAAiB1lC,EAAKs5B,QAAQ,UAC1DsO,EAAa5M,GAAUD,GAAkB,KAAb6M,GAAqB,MACjDnL,EAAKzK,QAAUF,EAAME,UAEpBF,EAAM4T,WAAW,QAAU1lC,EAAKs5B,QAAQ,UACxCxH,EAAM4T,WAAW,SAAW1lC,EAAKs5B,QAAQ,WAE1CsO,EAAa5M,GAAUD,GAAkB,KAAb6M,GAAqB,MACjDnL,EAAKzK,QAAUF,EAAME,SAGnB4P,IACFgG,EAAapQ,KAAKC,MAAMsD,GAAK6M,GAAcjgD,EAAIgqC,IAAM,EAAI,IAAM,KAC/D8K,EAAKmF,WAAaA,GAKpB,IAAI5D,EAAU,KACVjE,EAAST,QAAQt5B,EAAKxS,MACpBusC,EAASR,WAAW,iBACtByE,EAAU,KACVvB,EAAKK,gBAAkB/C,EAAS8C,SAEhCmB,EAAU,KAEHjE,EAASR,WAAW,aAC7ByE,EAAU,KACVvB,EAAKK,gBAAkB/C,EAAS8C,SAGlC,IAAM6M,EACJ3P,EAASmB,UAAU,QACD,aAAlBl7B,EAAKnS,WACJksC,EAASR,WAAW,WACnBv5B,EAAK86B,MAAM,WAAyB,IAAZnzC,EAAIgqC,KAChC8K,EAAKsB,SAAW2L,EAEhB,IAAMC,EAAY,GAqClB,GAnCI7X,EAAMoB,aAAagB,WAA+B,aAAlBl0B,EAAKnS,WAA4B+zC,GACnE+H,EAAUjgD,KAAwB,YAAnBooC,EAAMC,SAA0BpqC,EAAIgqC,IAAM,EAAI,KAAO,KAAQ,MAC5E8K,EAAKvI,WAAY,GACRpC,EAAMoB,aAAaiB,eAAmC,YAAlBn0B,EAAKnS,WAA2B+zC,IAC7E+H,EAAUjgD,KAAwB,YAAnBooC,EAAMC,SAA0BpqC,EAAIgqC,IAAM,EAAI,KAAO,KAAQ,MAC5E8K,EAAKtI,eAAgB,IAGnB6F,EAAST,WAAW,eAAiBS,EAAS2J,UAAY3J,EAAS8F,SAClEhO,EAAMoB,aAAae,MAAUnC,EAAMoB,aAAaS,SAAUqG,EAASV,QAAQ,WAC3ES,EAASR,WAAW,2BACvBoQ,EAAUjgD,KAAK,MACf+yC,EAAKG,gBAAkB5C,EAAS6C,SAG9B9C,EAASR,WAAW,gBAAkB6N,EAAoB,IAC5DuC,EAAUjgD,KAAK,MACf+yC,EAAKK,gBAAkB/C,EAAS8C,SAG9B/K,EAAMoB,aAAa6B,gBACrB4U,EAAUjgD,KAAK,MACf+yC,EAAK1H,eAAgB,GAGnBgF,EAASR,WAAW,WAAaqI,IACnC+H,EAAUjgD,KAAK,MACf+yC,EAAKK,gBAAkB/C,EAAS8C,SAG9B7C,EAAST,WAAW,aAAc,WAAa6N,EAAoB,IACrEuC,EAAUjgD,KAAK,MACf+yC,EAAKG,gBAAkB5C,EAAS6C,SAG9B9C,EAASZ,QAAQ,cAAgBn5B,EAAKukC,wBAA2B,EAAG,CACtE,IAAMA,EAAyB/M,KAAKC,MAAMz3B,EAAKukC,wBAC3CA,GAA0B,EAC5BoF,EAAUjgD,KAAK,KAAgC,IAAzB66C,GAEtBoF,EAAUjgD,KAAK,MAEjB+yC,EAAKE,aAAe5C,EAAShE,IAC/B,CAEIgE,EAASZ,QAAQ,gBAAkBiO,EAAoB,IAAMpnC,EAAKtD,KACpEitC,EAAUjgD,KAAK,MACf+yC,EAAKE,aAAe5C,EAAShE,MACpBgE,EAASZ,QAAQ,cAC1BwQ,EAAUjgD,KAAK,MACf+yC,EAAKE,aAAe5C,EAAShE,MAG3B/1B,EAAKs5B,QAAQtD,GAAmBgE,EAASjE,SACxCqR,EAAoB,GAAKpnC,EAAKs5B,QAAQ,aACtCS,EAASR,WAAW,aACvBoQ,EAAUjgD,KAAK,MACf+yC,EAAKM,aAAe/C,EAASjE,MAG3BjE,EAAMoB,aAAamB,aAAer0B,EAAKtD,KAAOq9B,EAAShE,MAAQgE,EAAShE,KAAK3I,SAAS,QACxFuc,EAAUjgD,KAAK,MACf+yC,EAAKpI,aAAc,GAGrB,IAEIuV,GAFE3L,GAAWhD,GAAU0O,EAAW,GAAI,QAG1C,GAAI5P,EAASR,WAAW,kBAAkC,IAAdv5B,EAAK2/B,OAAekC,EAAU,CACxE,IAAMgI,GAAQ9P,EAAS3zC,QACvByjD,GAAMhN,QAAU,wBAChBL,GAAmB70C,EAAKkiD,GAAO7P,EAAUh6B,EAAM8xB,EAAO2K,GACtDmN,GAAc5B,GAAcrgD,EAAKkiD,GAAO7P,EAAUh6B,EAAM8xB,GAAOqN,OAC/D1C,EAAKK,gBAAkB/C,EAAS8C,OAClC,CAGA,IADA,IAAIsC,GAAmB,GACd14C,GAAI,EAAGA,GAAI,GAAIA,KACtB04C,GAAO14C,IACLo3C,GAAe+J,EAAYnhD,GAAG2gD,EAAmBsC,EAAW1L,EAASC,IAGzE,GAAIj+B,EAAKi9B,aAAej9B,EAAKskC,WAAa,GAAK,EAAG,CAChD,IAAMwF,GAAmB/P,EAASR,WAAW,UAAY,EAAI,EAE7DkD,EAAK2E,UAAS,QAAAp6C,OAAWgZ,EAAKskC,UAAS,UAIvC,IAHA,IAAMyF,GAAehQ,EAASZ,QAAQ,cAClCuD,IAAgB,EAChBsN,GAAYjQ,EAASljC,OAAO0wC,GAAY0C,GAAA,SAAAC,GAE1C,IAAMC,EAAY3Q,GAAgBgE,EAAQwM,IACtCI,EAAmB,EACvBjL,GAASA,GAAO/1C,KAAI,SAAAihD,GAClB,GAAIH,EAAO,CACT,IACMI,EAAiBzM,GADDN,GAAcxD,EAASjC,MAAOvqC,EAAW48C,EAAW1M,GAGxE2M,EACAhD,EACAsC,EACA1L,EACAC,IAGF,OADAmM,IACOC,EAAiBC,CAC1B,CACA,OAAOD,CACT,IAEItQ,EAASR,WAAW,aACtByQ,GAAYxS,KAAKkC,IAAI,EAAGsQ,GAAYhqC,EAAKi9B,YACzCR,EAAKK,gBAAkB/C,EAAS8C,UAEhCmN,GAAYxS,KAAKmC,KAAK,EAAGqQ,GAAYhqC,EAAKi9B,WAAa6M,IACnD/P,EAASR,WAAW,YACtBkD,EAAKK,gBAAkB/C,EAAS8C,UAKhCkN,IAAgBhQ,EAASljC,OAAO0wC,GAAc,IAAM7K,KACtDsN,IAAahqC,EAAKi9B,WAAa6M,GAC/BpN,IAAgB,EAChBD,EAAKE,aAAe5C,EAAShE,KAEjC,EApCSmU,GAAQ,EAAGA,GAAQlqC,EAAKskC,UAAY4F,KAAOD,GAAAC,GAqCtD,CASA,OAPAzN,EAAK+D,YACHxgC,EAAK86B,MAAM,aAAed,EAASnjC,OAAO0wC,GAAcxN,EAASljC,OAAO0wC,GAE1EV,EAAO1H,OAASyK,GAAc,CAACzK,GAAQyK,IAAezK,GAI/C0H,CACT,CCl3BO,SAAS0D,GACd5iD,EACAoyC,EACAC,EACAh6B,EACA8xB,GAIAwJ,GAAavB,EAAUjI,GACvBwJ,GAAatB,EAAUlI,GACvByJ,GAAkBxB,EAAUjI,GAC5ByJ,GAAkBvB,EAAUlI,GAC5B0J,GAAczB,EAAUjI,EAAME,SAC9BwJ,GAAcxB,EAAUlI,EAAME,SAC9ByJ,GAAU1B,IAAYjI,EAAMM,aAC5BqJ,GAAUzB,IAAYlI,EAAMM,aAC5BuJ,GAAgB5B,IAAYjI,EAAMO,cAClCsJ,GAAgB3B,IAAYlI,EAAMO,cAQlCyH,GAAkBnyC,EAAKoyC,EAAUC,EAAUlI,EAAO,MAAO,MAAO,OAShEgI,GAAkBnyC,EAAKoyC,EAAUC,EAAUlI,EAAO,MAAO,OAEzDmK,GAAiBlC,EAAUjI,EAAMoB,cACjC+I,GAAiBjC,EAAUlI,EAAMmB,cAEjC,IAAMuX,EAAczQ,EAAS0Q,OAAS1Q,EAAS+L,cAAWt/C,EACpDkkD,EAAc1Q,EAASyQ,OAASzQ,EAAS8L,cAAWt/C,EAEpDi2C,EAAgB,CACpBqE,aAAc/G,EAAS/zC,KACvB66C,aAAc2J,EACdvJ,SAAUjhC,EAAKha,KACf07C,aAAc1H,EAASh0C,KACvBy7C,aAAciJ,EACdlJ,oBAAqBxH,EAAS2Q,YAC9BtY,eAAgBP,EAAMO,cAGlBwU,EAAS,IAAIR,GAAO1+C,EAAKoyC,EAAUC,EAAUh6B,EAAM8xB,EAAO,EAAG2K,GAEnE,GAAsB,WAAlBz8B,EAAKnS,WAA0BmS,EAAK86B,MAAM,gBAC5C,OAAO+L,EAGT,IAAM3tC,EAAgB8G,EAAK9G,eAAiB8G,EAAKtD,KAAOq9B,EAAS4Q,aAChE5Q,EAASR,WAAW,gBAAkBv5B,EAAKjB,MAAMI,QAElD,GAAI2yB,EAAMoB,aAAamB,cAAgBn7B,EAErC,OADAujC,EAAKpI,aAAc,EACZwS,EAGT,IAAM+D,EAAyB5Q,EAAST,WACtC,kBACA,mBACA,cACA,iBAGIsR,EAAyB9Q,EAASR,WAAW,eAAgB,WAAY,cACzEuR,EAAqB9qC,EAAK86B,MAC9B,kBACA,kBACA,mBACA,2BACA,8BACA,iBACA,gBACA,wBACA,mBAEG8P,GAA2B5Q,EAAST,WAAW,iBACjDsR,IAA0BC,IACvBD,IAAwBpO,EAAKK,gBAAkB/C,EAAS8C,SACxD7C,EAASb,QAAQ,kBACnBsD,EAAKM,aAAe/C,EAASjE,KAE7BiE,EAAS6C,QAAU,IAIvB,IAAMkO,GAAc/qC,EAAKjR,eAAiB,EAAI,IAAMgrC,EAASiR,UAAY,IAAMjR,EAASR,WAAW,cAAgB,EAAI,IAAMQ,EAASZ,QAAQ,aAAc,cAAgB,EAAI,GAG1KyI,GAAc5H,EAAST,WAAW,eAAgB,iBACpDv5B,EAAKqnC,QAAU0D,GAAc,GAAOhR,EAASR,WAAW,cAAgBS,EAASkB,UAAU,MAAO,SACjF,IAAnBl7B,EAAKskC,UAEH92C,EAAOwS,EAAKxS,KAChB,GAAIwS,EAAK86B,MAAM,gBAAiB,CAC9B,IAAMmQ,EAAkBlR,EAASZ,QAAQ,oBACzC3rC,EACEskC,EAAM4T,WAAW,MAAO,oBAAsBuF,EAAkB,OAC9DnZ,EAAM4T,WAAW,OAAQ,gBAAkBuF,EAAkB,QAC7DnZ,EAAM4T,WAAW,QAAU,OAC3B5T,EAAM4T,WAAW,OAAQ,QAAU,MACnC,SACJjJ,EAAKzK,QAAUF,EAAME,QACrByK,EAAK0E,SAAW3zC,CAClB,MAAO,GAAIwS,EAAK86B,MAAM,aAAef,EAAShE,MAAQgE,EAAShE,KAAK3I,SAAS,SAC3E5/B,EAAOsoC,GAAiBiE,EAAShE,WAC5B,GAAI/1B,EAAK86B,MAAM,iBAAmBf,EAAShE,MAAQgE,EAAShE,KAAK3I,SAAS,SAC/E5/B,EAAOspC,GAAeiD,EAAShE,WAC1B,GAAI/1B,EAAK86B,MAAM,iBAAmBf,EAAShE,MAAQgE,EAAShE,KAAK3I,SAAS,UAC/E5/B,ER0PG,SAAwBuoC,GAC7B,GAAIA,EAAK3I,SAAS,UAChB,OAAO2I,EAAKsG,UAAU,EAAGtG,EAAKuG,QAAQ,KAG1C,CQ/PW4O,CAAenR,EAAShE,WAC1B,GAAI/1B,EAAK86B,MAAM,iBAAmBf,EAAShE,MAAQgE,EAAShE,KAAK3I,SAAS,SAAU,CAEzF5/B,EADampC,GAAehvC,EAAKoyC,EAAShE,MAC9BnpC,EACZ6vC,EAAK0E,SAAW3zC,EAChBivC,EAAKE,aAAe5C,EAAShE,IAC/B,MACE/1B,EAAK86B,MAAM,iBACV96B,EAAK86B,MAAM,kBAAoB7B,GAAWc,EAAUjI,IAErDtkC,EACEskC,EAAMyK,WAAW,YAAc,WAC7BzK,EAAMyK,WAAW,UAAY,QAC7BzK,EAAMyK,WAAW,SAAW,QAC5BzK,EAAMyK,WAAW,WAAa,UAC9B,SACJE,EAAKvK,QAAUJ,EAAMI,QACrBuK,EAAK0E,SAAW3zC,GACPwS,EAAK86B,MAAM,oBACpBttC,EAAOusC,EAAS55B,MAAM,GACbH,EAAK86B,MAAM,cAChBf,EAASe,MAAM,WACjBttC,EAAO,WACEusC,EAASe,MAAM,oBACxBttC,EAAO,QAEAwS,EAAK86B,MAAM,eAChBf,EAASe,MAAM,wBACjBttC,EAAO,WACEusC,EAASe,MAAM,uBACxBttC,EAAO,OACEusC,EAASe,MAAM,wBACxBttC,EAAO,SAEAwS,EAAK86B,MAAM,gBAChBf,EAAS/zC,KAAKonC,SAAS,uBACzB5/B,EAAO,OACEusC,EAAS/zC,KAAKonC,SAAS,uBAChC5/B,EAAO,OACEusC,EAAS/zC,KAAKonC,SAAS,wBAChC5/B,EAAO,UAIX,IAAI29C,GAA0B,EAC1BjD,GAAa,EACbC,GAAa,EACbC,GAAgB,EAChBgD,GAAc,EACdC,GAAgB,EAChBhD,GAAc,EACZC,EAAetoC,EAAK86B,MACxB,mBACA,WACA,eACA,eACA,eACA,eACA,eACA,kBACI96B,EAAK86B,MAAM,eAAiB0P,EAElC,IAAKxqC,EAAKtD,MAAQ4rC,EAAc,CAC9B,IAAMC,EAASvoC,EAAKs5B,QAAQ,WACvB4O,EAAanO,EAASR,WAAW,aAAegP,GACnD/6C,EAAO,UACG49C,EAAcrR,EAASR,WAAW,cAAgBgP,GAC5D/6C,EAAO,YACG69C,EAAgBtR,EAASR,WAAW,mBAAqBv5B,EAAKjB,MAAMQ,OAC9E/R,EAAO,SACG26C,EAAapO,EAASR,WAAW,aAAegP,GAC1D/6C,EAAO,SACG46C,EAAgBrO,EAASR,WAAW,gBAAkBgP,GAChE/6C,EAAO,OACG66C,EAActO,EAASR,WAAW,gBAC5C/rC,EAAO,UAEL49C,GAAejD,GAAcC,GAAiBF,GAAcG,GAC9D5L,EAAKK,gBAAkB/C,EAAS8C,QAChCsO,GAA0B,GACjBE,IACT5O,EAAKK,gBAAkB/C,EAAS8C,QAEpC,CAEI78B,EAAK86B,MAAM,eAAiB0P,IAC9Bh9C,EAAOg9C,GAGTxqC,EAAKxS,KAAOA,GAGPusC,EAASR,WAAW,WAAav5B,EAAKjS,OACtCgsC,EAASR,WAAW,eACpBv5B,EAAKs5B,QAAQ,WACbS,EAAS4J,UAAY5J,EAAS+F,WACjC9/B,EAAK7M,SAAW,EAChBspC,EAAKK,gBAAkB/C,EAAS8C,SAGlC,IAAMzB,EACJrB,EAASR,WAAW,YAAcQ,EAASR,WAAW,eACpDzH,EAAMoB,aAAauB,YACjB4G,EACJrB,EAASb,QAAQ,iBAAmBa,EAAST,WAAW,SA6BtD6N,EA5BuBjM,GACzBxzC,EACAqY,EACAg6B,EAAS75B,MAAM,GACfi7B,EACAtJ,EAAMQ,UACN+I,IAEyBrB,EAAS75B,MAAM,GACtCg7B,GACAxzC,EACAqY,EACAg6B,EAAS75B,MAAM,GACfi7B,EACAtJ,EAAMQ,UACN+I,GAEA,IACuBrB,EAAS75B,MAAM,GACtCg7B,GACAxzC,EACAqY,EACAg6B,EAAS75B,MAAM,GACfi7B,EACAtJ,EAAMQ,UACN+I,GAEA,GAuBJ,GApBIqP,GAA+B,YAAhBA,IACjBtD,EAAoBjM,GAClBxzC,EACAqY,EACA0qC,EACAtP,EACAtJ,EAAMQ,UACN+I,IAIsB,IAAtB+L,GAA2BpnC,EAAKs5B,QAAQ,WAC1CU,EAASb,QAAQ,eAAiBa,EAAST,WAAW,WACtD6N,EAAoB,GAGI,IAAtBA,GAA2BpnC,EAAK86B,MAAM,qBACxCsM,EAAoB,GAGI,IAAtBA,EACF,OAAOP,EAGT,GAAK7mC,EAAK86B,MAAM,cACTd,EAASV,QAAQ,WAAaU,EAASt5B,UAAY,KAAOoxB,EAAMQ,YAClEtyB,EAAK86B,MAAM,kBAAoBd,EAASV,QAAQS,EAAS55B,MAAM,OAC5D45B,EAAS55B,MAAM,KAAO65B,EAASV,QAAQS,EAAS55B,MAAM,MACzDH,EAAK86B,MAAM,iBACPd,EAASkB,UAAU,SAAUlB,EAAST,WAAW,aACrDv5B,EAAK86B,MAAM,kBAAoBhJ,EAAMI,SACrClyB,EAAK86B,MAAM,iBAAmBd,EAASjE,KAE1C,OAAO8Q,EAGT,GACG/U,EAAM4T,WAAW,mBAAqB1lC,EAAKs5B,QAAQ,UACnDxH,EAAM4T,WAAW,eAAiB1lC,EAAKs5B,QAAQ,QAGhD,OADAmD,EAAKzK,QAAUF,EAAME,QACd6U,EAuBT,GApBI/U,EAAM4T,WAAW,iBAAmB1L,EAASV,QAAQ,WACrD3xC,EAAIwY,MAAMvX,IAAI/E,EAAKmc,EAAKxS,OAAQyhC,cAAsB,OAAK,IAC7DmY,GAAqB,EACrB3K,EAAKzK,QAAUF,EAAME,SAGL,YAAdhyB,EAAKxS,OACP45C,EAAqBsD,EAAkB,EAAJ,IAIjC1Q,EAAST,WAAW,eACvBS,EAAS2J,UAAY3J,EAAS8F,UAC5BhO,EAAMoB,aAAae,MAAUnC,EAAMoB,aAAaS,SAAUqG,EAASV,QAAQ,aAC7EU,EAASb,QAAQ,sBAEhBiO,EAAoB,GACpB3K,EAAKG,gBAAkB5C,EAAS6C,SAG7B7C,EAAST,WAAW,iBAAmB6N,GAAqB,GAC5DpnC,EAAKs5B,QAAQ,UAAYU,EAAST,WAAW,eAC7Cv5B,EAAKs5B,QAAQ,SAAWU,EAAST,WAAW,aAAc,oBAC1Dv5B,EAAKs5B,QAAQ,UAAYU,EAAST,WAAW,WAAY,cAAe,iBACxEv5B,EAAKs5B,QAAQ,aACZU,EAAST,WAAW,gBAAiB,cAAe,gBACrDv5B,EAAKs5B,QAAQ,YACXxH,EAAMQ,YAActyB,EAAK86B,MAAM,qBAC/Bd,EAASb,QAAQ,cAAgBa,EAAST,WAAW,aACvDv5B,EAAKjB,MAAMO,QAAU06B,EAAST,WAAW,gBACzCv5B,EAAKjB,MAAMQ,QAAUS,EAAK86B,MAAM,oBAAsBd,EAAST,WAAW,eAC1Ev5B,EAAK7M,SAAW,GAAK2+B,EAAMoB,aAAa4B,YAAekF,EAAST,WAAW,kBAAmB,WAAY,eAC1Gv5B,EAAKs5B,QAAQ,WAAaU,EAAST,WAAW,gBAC9Cv5B,EAAKjB,MAAMW,MAAQs6B,EAAST,WAAW,cAG1C,OADAkD,EAAKG,gBAAkB5C,EAAS6C,QACzBgK,EAGT,GAAI7mC,EAAKs5B,QAAQ,YAAct5B,EAAK86B,MAAM,qBACrChJ,EAAMQ,WAAa0H,EAASb,QAAQ,eAEvC,OADAsD,EAAKM,aAAe/C,EAASjE,KACtB8Q,EAGT,GAAI7mC,EAAK7M,SAAW,GAAK2+B,EAAMyK,WAAW,YAActD,GAAWe,EAAUlI,GAE3E,OADA2K,EAAKvK,QAAUJ,EAAMI,QACd2U,EAGT,IAAMyE,EAAkBtrC,EAAK86B,MAAM,aAAc,aAAc,WAAY,cAC3E,GAAId,EAAS2Q,aAAeW,EAC1B,OAAOzE,EAGTpK,EAAK6E,MAAK,GAAAt6C,OAAMgzC,EAAS8E,IAAIz+B,GAAE,OAE/B,IAgCM+2B,EAhCA0P,EAAc9H,GAAuBjF,EAAU/5B,GACrD,GAAI8mC,EAOF,OANI/M,EAASR,WAAW,kBACtBsN,EAAO1H,OAAS,CAAC2H,EAAaA,GAC9BrK,EAAKK,gBAAkB/C,EAAS8C,SAEhCgK,EAAO1H,OAAS2H,EAEXD,EAGT,GAAI7mC,EAAK86B,MAAM,gBAEb,OADA+L,EAAO1H,OAASpF,EAAS4J,QAClBkD,EAGT,GAAI7mC,EAAK86B,MAAM,qBAAsB,CACnC,IAAIyQ,EAAU/T,KAAKC,MAA0B,EAAnBuC,EAAS2J,QAAe,GAKlD,OAJI7R,EAAMoB,aAAamB,aAAe0F,EAAShE,MAAQgE,EAAShE,KAAK3I,SAAS,QAC5Eme,EAAU/T,KAAKyH,KAAKsM,EAAU,EAAI,KAEpC1E,EAAO1H,OAASoM,EACT1E,CACT,CAEA,GAAI7mC,EAAK86B,MAAM,oBAAsB,CACnC,IAAM0Q,EAAS1Z,EAAMoB,aAAamB,YAAc,EAAImD,KAAKC,MAAMuC,EAAS2J,QAAU,GAElF,OADAkD,EAAO1H,OAASqM,EACT3E,CACT,CAEA,GAAI7mC,EAAK86B,MAAM,kBAEb,IAAK1D,KAAQ4C,EAASnjC,OAChBmjC,EAASnjC,OAAOugC,KAClB2C,EAASljC,OAAOugC,IACd2C,EAASR,WAAW,aAAeS,EAASnjC,OAAOugC,GAAS4C,EAASnjC,OAAOugC,GAC1E2C,EAASljC,OAAOugC,KAAgB2C,EAASljC,OAAOugC,GAAQ,GACxD2C,EAASljC,OAAOugC,KAAiB2C,EAASljC,OAAOugC,IAAS,GAC9D2C,EAASG,MAAM9C,GAAQoC,GAAgBO,EAASO,SAASlD,GAAQ2C,EAASljC,OAAOugC,KAKnFp3B,EAAK2/B,KAAO,IACdlD,EAAKkD,KAAO3/B,EAAK2/B,MAQnB,IAAMpyC,EAuOD,SACL5F,EACAoyC,EACAC,EACAh6B,EACA8xB,EACAqZ,EACA1O,GACC,IAADgP,EAIIl+C,EAHAk7C,EAAY1O,EAASG,MAAM/M,IAAM6M,EAASE,MAAM/M,IAAM,QAAU,OACpEsb,EAAY3W,EAAMgB,YAA6B,UAAd2V,EAAwB,OAAS,QAAWA,EAG7E,IAAM+B,EAAczQ,EAAS0Q,OAAS1Q,EAAS+L,cAAWt/C,EAE1D,OAAQwZ,EAAKha,MACb,IAAK,UACHuH,EAAYyS,EAAKpS,IAAoB,SAAd66C,EAAuB,EAAI,GAClDhM,EAAKyE,OAAS3zC,EACd,MACF,IAAK,YACL,IAAK,gBACHA,EAAYyS,EAAKpS,IAAoB,SAAd66C,EAAuB,EAAI,GAClDhM,EAAKyE,OAAS3zC,EACd,MACF,IAAK,UACH,IAAMm7C,EAA+C,QAAnC5W,EAAMoB,aAAaqC,YACrChoC,EAAYyS,EAAKpS,IAAM86C,EAAY,EAAI,GACnCA,IAAWjM,EAAKlH,YAAc,OAClCkH,EAAKyE,OAAS3zC,EACd,MACF,IAAK,eACH,IAAM03C,EAAIzN,KAAKC,MAAMsC,EAASG,MAAM/M,IAAM6M,EAASE,MAAM/M,KACzD5/B,EAAY03C,GAAK,EAAI,IAAMA,GAAK,EAAI,IAAMA,GAAK,EAAI,GAAKA,GAAK,EAAI,GAAK,GAC3C,IAAvBjL,EAASE,MAAM/M,MAAW5/B,EAAY,IAC1CkvC,EAAKyE,OAAS3zC,EACd,MACF,IAAK,YACHA,EAAYiqC,KAAKkC,IAAI,IAAKlC,KAAKC,MAAO,GAAKuC,EAASE,MAAM/M,IAAO4M,EAASG,MAAM/M,KAAO,GAC5D,IAAvB4M,EAASG,MAAM/M,MAAW5/B,EAAY,GAC1CkvC,EAAKyE,OAAS3zC,EACd,MACF,IAAK,aACHA,EAAYiqC,KAAKkC,IAAI,IAAK,GAAK,GAAK4E,GAAY32C,EAAKqyC,EAASnjC,OAAQmjC,EAASuE,eAC/E9B,EAAKyE,OAAS3zC,EACd,MACF,IAAK,WACL,IAAK,aACH,IAAMo7C,EAAI3O,EAASt5B,SAAW29B,GAAgBrE,GAC9CzsC,EAAYo7C,GAAK,IAAM,IAAMA,GAAK,IAAM,IAAMA,GAAK,GAAK,GAAKA,GAAK,GAAK,GAAKA,GAAK,GAAK,GAAK,GAC3FlM,EAAKyE,OAAS3zC,EACd,MACF,IAAK,MACL,IAAK,kBAEHA,EAAYyS,EAAKpS,IAAMosC,EAASU,QAAUV,EAAST,WAAW,YAAc,EAAI,GAChFkD,EAAKyE,OAAS3zC,EACd,MACF,IAAK,eACHA,EAAYyS,EAAKpS,IAAMosC,EAASkB,UAAU,MAAO,OAAS,EAAI,GAC9DuB,EAAKyE,OAAS3zC,EACd,MACF,IAAK,aACL,IAAK,aACH,IAAMq7C,EACD7O,EAASr5B,SAAW29B,GAAgBtE,IACpCC,EAASt5B,SAAW29B,GAAgBrE,IACzCzsC,EAAYq7C,GAAM,EAAI,IAAMA,GAAM,EAAI,IAAMA,GAAM,EAAI,GAAKA,GAAM,EAAI,GAAK,GAC1EnM,EAAKyE,OAAS3zC,EACd,MACF,IAAK,eACL,IAAK,aACHA,EAAY,GAAK,GAAK+wC,GAAY32C,EAAKoyC,EAASljC,OAAQkjC,EAASwE,cACjE9B,EAAKyE,OAAS3zC,EACd,MACF,IAAK,UACHA,EAAY,IAAMwsC,EAAS2R,UAC3BjP,EAAKyE,OAAS3zC,EACd,MACF,IAAK,YACHA,EAAY,GAAK,GAAKiqC,KAAKkC,IAAI,EAAGK,EAAS4R,WAC3ClP,EAAKyE,OAAS3zC,EACd,MACF,IAAK,gBACHA,EAAY,GAAK,GAAKiqC,KAAKkC,IAAI,IAAKK,EAAS6G,cAC7CnE,EAAKyE,OAAS3zC,EACd,MACF,IAAK,aACHA,EAAYyS,EAAKpS,IAAMmsC,EAASZ,QAAQ,gBAAkBY,EAAShE,KAAO,EAAI,GAC9E0G,EAAKyE,OAAS3zC,EACd,MACF,IAAK,YACHA,EAAYyS,EAAKpS,IAAMosC,EAAST,WAAW,yBAA2B,EAAI,GAE1E,MACF,IAAK,eAEHhsC,EAAYyS,EAAKpS,IAAMosC,EAASkB,UAAU,QAAUlB,EAAST,WAAW,YAAc,EAAI,GAC1FkD,EAAKyE,OAAS3zC,EACd,MACF,IAAK,iBACHA,EAAYyS,EAAKpS,IAAMosC,EAASkB,UAAU,OAAS,EAAI,GACvDuB,EAAKyE,OAAS3zC,EACd,MACF,IAAK,eACHA,EAAYyS,EAAKpS,IAAMkkC,EAAME,UAAYF,EAAM4T,WAAW,gBAAkB,EAAI,GAC5E5T,EAAM4T,WAAW,MAAO,iBAAkB,OAAQ,eACpD3L,EAASZ,QAAQ,sBAAqB5rC,EAAYyS,EAAKpS,IACzD6uC,EAAKyE,OAAS3zC,EACd,MACF,IAAK,gBACHA,EAAYyS,EAAKpS,IAAMqrC,GAAWc,EAAUjI,IAAUA,EAAMI,QAAU,EAAI,GAC1EuK,EAAKyE,OAAS3zC,EACd,MACF,IAAK,iBACHA,EAAYyS,EAAKpS,IAAOqrC,GAAWe,EAAUlI,IAAUA,EAAMyK,WAAW,YAAe,EAAI,GAC3FE,EAAKyE,OAAS3zC,EACd,MACF,IAAK,WACHA,EAAYyS,EAAKpS,IAAMkkC,EAAMyK,WAAW,YAAc,IAAM,GACxDzK,EAAMyK,WAAW,cACnBE,EAAKyE,OAAS3zC,EACdkvC,EAAKvK,QAAUJ,EAAMI,SAEvB,MACF,IAAK,QACH3kC,EAAYmpC,GAAcqD,EAAShE,MACnC0G,EAAKyE,OAAS3zC,EACdkvC,EAAKE,aAAe5C,EAAShE,KAC7B,MACF,IAAK,gBACL,IAAK,WACL,IAAK,cACHxoC,EAAYiqC,KAAKmC,IAAI,EAAGnC,KAAKC,MAAO,IAAMsC,EAAS4J,QAAW5J,EAAS+F,UACvErD,EAAKyE,OAAS3zC,EACd,MACF,IAAK,QACL,IAAK,WACH,IAAMV,EAAI2qC,KAAKC,MAAO,GAAKsC,EAAS4J,QAAW5J,EAAS+F,SACxDvyC,EAAYV,GAAK,EAAI,IAAMA,GAAK,EAAI,IAAMA,GAAK,EAAI,IAAMA,GAAK,GAAK,GAAKA,GAAK,GAAK,GAAK,GACvF4vC,EAAKyE,OAAS3zC,EACd,MACF,IAAK,eACH,GAAiB,QAAjBk+C,EAAI1R,EAAShE,YAAI,IAAA0V,GAAbA,EAAere,SAAS,SAE1B7/B,EADaopC,GAAehvC,EAAKoyC,EAAShE,MACzBlpC,EACjB4vC,EAAKE,aAAe5C,EAAShE,KAC7B0G,EAAKyE,OAASlhC,EAAKpS,QAEnBL,EAAYyS,EAAKpS,GAEnB,MACF,IAAK,eAGH,OAFAoS,EAAKnS,SAAW,UAChBmS,EAAKjG,aAAc,EACX+3B,EAAMI,SACd,IAAK,WACH3kC,EAAY,GACZkvC,EAAKwE,SAAW,cAChB,MACF,IAAK,SACH1zC,EAAY,GACZkvC,EAAKwE,SAAW,cAChB,MACF,IAAK,QACH1zC,EAAY,GACZkvC,EAAKwE,SAAW,YAChB,MACF,IAAK,UACH1zC,EAAY,GACZkvC,EAAKwE,SAAW,UAChB,MACF,QACE1zC,EAAY,GACZkvC,EAAKwE,SAAW,aAElB,MACF,IAAK,iBACH1zC,EAAYwsC,EAASe,MAAM,iBAAmBf,EAASR,WAAW,eAAiB,GAAK,GACxFkD,EAAKyE,OAAS3zC,EACd,MAEF,IAAK,cACHA,EAA0B,IAAdyS,EAAK2/B,KAAa,GAAmB,IAAd3/B,EAAK2/B,KAAa,GAAK3/B,EAAKpS,GAC/D6uC,EAAKyE,OAAS3zC,EACd,MAEF,IAAK,cACHA,EAA0B,IAAdyS,EAAK2/B,KAAa,GAAmB,IAAd3/B,EAAK2/B,KAAa,GAAK3/B,EAAKpS,GAC/D6uC,EAAKyE,OAAS3zC,EACd,MACF,IAAK,aACL,IAAK,YACHA,EAAY,IAAMiqC,KAAKC,MAA0B,KAAnBuC,EAAS2J,QAAkB3J,EAAS8F,SAClEvyC,EAAYiqC,KAAKC,MAAMD,KAAKC,OAAO,IAAMlqC,EAAY,KAAO,GAAK,MAAQ,MAAQ,EACjFkvC,EAAKyE,OAAS3zC,EACd,MACF,IAAK,aACHA,EAAY,IAAMiqC,KAAKC,MAA0B,KAAnBuC,EAAS2J,QAAkB3J,EAAS8F,SAClEvyC,EAAYiqC,KAAKC,MAAMD,KAAKC,OAAO,IAAMlqC,EAAY,KAAO,GAAK,MAAQ,MAAQ,EACjFkvC,EAAKyE,OAAS3zC,EACd,MAQF,IAAK,aACHA,EAAkC,YAAtBwsC,EAAS+L,SAAyB,IAAM,GACpDrJ,EAAKyE,OAAS3zC,EACd,MACF,QACEA,EAAYyS,EAAKpS,GAEnB,GAAkB,IAAdL,EACF,OAAO,EAELyS,EAAK86B,MACP,kBAAmB,aAAc,oBAAqB,eAAgB,iBACtE,kBAAmB,uBAAwB,kBAAmB,gBAAiB,gBAC/E,oBAAqB,oBAAqB,mBAAoB,yBAC9D,oBAAqB,qBAAsB,kBAAmB,oBAG9D2B,EAAKyE,OAASlhC,EAAKpS,IAErB,IAAMi7C,EAwBD,SACLlhD,EACAoyC,EACAC,EACAh6B,EACA8xB,EACA2K,EACAlvC,EACA49C,EACA1C,GAEA,IAAMI,EAAS,GACT6B,EAAc1Q,EAASyQ,OAASzQ,EAAS8L,cAAWt/C,EAItDgiD,EACDzO,EAASkI,eAAiB,MAC1BjI,EAASjE,MACTiE,EAASc,MAAM,kBAAoBd,EAASb,QAAQ,oBACpDa,EAASc,MAAM,kBAAoBd,EAASb,QAAQ,mBAEpDa,EAASh0C,KAAKonC,SAAS,oBAAsB4M,EAASjE,KAAK3I,SAAS,aACpE4M,EAASh0C,KAAKonC,SAAS,WAAa4M,EAASjE,KAAK3I,SAAS,UAC3D4M,EAASh0C,KAAKonC,SAAS,aAAe4M,EAASjE,KAAK3I,SAAS,UAC7D4M,EAASc,MAAM,UAAW,mBAAqBd,EAASb,QAAQ,YAChEa,EAASc,MAAM,SAAU,kBAAoBd,EAASb,QAAQ,aAC9Da,EAASh0C,KAAKonC,SAAS,aAAe4M,EAASjE,KAAK3I,SAAS,WAC9D4M,EAASjE,KAAK3I,SAAS,OACtB4M,EAASc,MAAM,WAAad,EAASb,QAAQ,iBAC7Ca,EAASc,MAAM,cAAgBd,EAASb,QAAQ,kBAChDa,EAASh0C,KAAKonC,SAAS,wBAA0B4M,EAASb,QAAQ,qBAClEa,EAASh0C,KAAKonC,SAAS,wBAA0B4M,EAASb,QAAQ,qBAClEa,EAASh0C,KAAKonC,SAAS,uBAAyB4M,EAASb,QAAQ,oBACjEa,EAASc,MAAM,uBAAyBd,EAASb,QAAQ,aAI5D,IAAKqP,GAA0BxO,EAASjE,KAAM,CAC5C,IAAMA,EAAOpuC,EAAI+F,MAAM9E,IAAI/E,EAAKm2C,EAASjE,OACrCA,IACFyS,IAA2BzS,EAAK5oC,aAAe6sC,EAASh0C,KAAKonC,SAAS2I,EAAK5oC,aAE/E,CAEA,GAAK6S,EAAK86B,MAAM,WAAaf,EAASmB,UAAU,MAAO,MAAO,MAAO,QAClEl7B,EAAK86B,MAAM,UAAYd,EAAS2J,SAAW3J,EAAS8F,QAAU,GAC9D9/B,EAAK86B,MAAM,cAAgBd,EAASkB,UAAU,MAAO,QACrDl7B,EAAK86B,MAAM,aAAgBwD,GAAY32C,EAAKoyC,EAASljC,OAAQkjC,EAASwE,cAAgB,EAEvFsK,EAAOn/C,KAAK,MACZ+yC,EAAKyE,OAAqB,EAAZ3zC,OACT,GACLyS,EAAK86B,MAAM,oBAAsB7B,GAAWc,EAAUjI,IAAUA,EAAMyK,WAAW,WAEjFv8B,EAAK3Z,OAAS,kBACdwiD,EAAOn/C,KAAK,MACZ+yC,EAAKyE,OAAqB,IAAZ3zC,OACT,GAAIyS,EAAK86B,MAAM,mBAAuC,sBAAlBf,EAAS/zC,KAClDga,EAAK3Z,OAAS,kBACd2Z,EAAKxS,KAAO,eACP,GAAKwS,EAAK86B,MAAM,eAAiB0N,GACrCxoC,EAAK86B,MAAM,oBAAsB7B,GAAWc,EAAUjI,IAAUA,EAAMyK,WAAW,UACjFv8B,EAAK86B,MAAM,eAAiBhJ,EAAMQ,UAEnCuW,EAAOn/C,KAAK,MACZ+yC,EAAKyE,OAAqB,IAAZ3zC,OACT,GAAIyS,EAAK86B,MAAM,aAAc,gBAChChJ,EAAM4T,WAAW,OAAQ,aAAc,OAAQ,OAAQ,QACzDmD,EAAOn/C,KAAK,MACZ+yC,EAAKyE,OAAS3zC,EAAY,EAC1BkvC,EAAKzK,QAAUF,EAAME,aAChB,GAAIhyB,EAAK86B,MAAM,mBAAoB,iBAAkB,CAC1D,IAAMM,EACJrB,EAASR,WAAW,YAAczH,EAAMoB,aAAauB,YACjD4G,EACJrB,EAASb,QAAQ,iBAAmBa,EAAST,WAAW,SACpDp5B,EAAQuqC,EAAc,CAACA,GAAe1Q,EAAS75B,MAC1Bg7B,GACzBxzC,EACAqY,EACAG,EAAM,GACNi7B,EACAtJ,EAAMQ,UACN+I,IAEyBl7B,EAAM,GAAKg7B,GACpCxzC,EACAqY,EACAG,EAAM,GACNi7B,EACAtJ,EAAMQ,UACN+I,GACE,IACuBl7B,EAAM,GAAKg7B,GACpCxzC,EACAqY,EACAG,EAAM,GACNi7B,EACAtJ,EAAMQ,UACN+I,GACE,IACgE,IAClEwN,EAAOn/C,KAAK,MACZ+yC,EAAKyE,OAAS3zC,GAAa,KAAO,MAEtC,MAAWysC,EAAS4R,YAAc5rC,EAAK86B,MAAM,YAAa,QAAS,cAAe,aAAc,aAAc,kBAC5G+N,EAAOn/C,KAAK,MACZ+yC,EAAKyE,OAAqB,EAAZ3zC,GAGZukC,EAAMmB,aAAa0B,gBACrBkU,EAAOn/C,KAAK,MACZ+yC,EAAK9H,eAAgB,GAKvB,IAAMkX,EAAoBlkD,EAAIgqC,IAAM,EAAI,KAAO,KAC3CsH,GAAWc,EAAUjI,KAClBA,EAAMyK,WAAW,aAAev8B,EAAKs5B,QAAQ,aAC7CxH,EAAMyK,WAAW,WAAav8B,EAAKs5B,QAAQ,UAC3CxH,EAAMyK,WAAW,YAAcv8B,EAAKs5B,QAAQ,cAE/CuP,EAAOn/C,KAAKmiD,GACZpP,EAAKvK,QAAUJ,EAAMI,SAGrB+G,GAAWe,EAAUlI,KAClBA,EAAMyK,WAAW,UAAYv8B,EAAKs5B,QAAQ,WAC1CxH,EAAMyK,WAAW,WAAav8B,EAAK86B,MAAM,WAAY,iBAExD+N,EAAOn/C,KAAK,MACZ+yC,EAAKvK,QAAUJ,EAAMI,UAOpB6H,EAASR,WAAW,eAAiBhsC,GAAa,IACpDwsC,EAASR,WAAW,gBACnBQ,EAASmB,UAAU,QAA4B,YAAlBl7B,EAAKnS,UACnCksC,EAASR,WAAW,gBACnBQ,EAASmB,UAAU,MAAO,QAA4B,aAAlBl7B,EAAKnS,UAC1CksC,EAASR,WAAW,kBAAoBv5B,EAAKjB,MAAMS,OACnDu6B,EAASR,WAAW,eAAiBv5B,EAAKjB,MAAMM,MAChD06B,EAASR,WAAW,kBAAoBv5B,EAAKs5B,QAAQ,UACrDS,EAASR,WAAW,cAAgBv5B,EAAKjB,MAAMU,WAEhDopC,EAAOn/C,KAAK,MACZ+yC,EAAKK,gBAAkB/C,EAAS8C,SAIlC,GAAI/K,EAAMmB,aAAaqC,cAAgB,GAAKt1B,EAAKs5B,QAAQ,SAAS,CAChE,IAAI,IAAI7yC,EAAI,EAAGA,EAAIqrC,EAAMmB,aAAaqC,cAAe7uC,IACjDoiD,EAAOn/C,KAAK,MAEhB+yC,EAAKnH,cAAgBxD,EAAMmB,aAAaqC,aAC1C,CAEIxD,EAAMmB,aAAauC,WAAax1B,EAAKs5B,QAAQ,cAC/CuP,EAAOn/C,KAAK,MACZ+yC,EAAKjH,WAAY,GAGnB,IAAMsT,EAAI,GAAA9hD,OAAMgZ,EAAKxS,KAAI,SACnBu7C,EAAiBhP,EAASR,WAAWuP,GACrCE,EAAiBhP,EAAST,WAAWuP,GACrCG,EAAkBlP,EAASR,WAAW,eAAiBS,EAAST,WAAW,cAC3E2P,EAAmBpX,EAAMS,YACzB4W,EAAmBrX,EAAMU,aAA6B,UAAdxyB,EAAKxS,KAC7C47C,EAAkBtX,EAAMW,YAA4B,SAAdzyB,EAAKxS,KAE3Cs+C,EAAY5C,GAAoBD,GADnBF,GAAkBC,GAAkBG,GAAoBC,KAGrE0C,GACFjD,EAAOn/C,KAAK,MACZ+yC,EAAKK,gBAAkB/C,EAAS8C,QAChCJ,EAAKG,gBAAkB5C,EAAS6C,UAEhCgM,EAAOn/C,KAAK,MACRq/C,IAAgBtM,EAAKK,gBAAkB/C,EAAS8C,SAChDmM,IAAgBvM,EAAKG,gBAAkB5C,EAAS6C,YAMrD9C,EAASR,WAAW,iBAClBv5B,EAAKjG,aAAeiG,EAAK86B,MAAM,YAAa,eAAiB96B,EAAKxC,OACpEu8B,EAASR,WAAW,eACnBzH,EAAM4T,WAAW,SAAW1lC,EAAKs5B,QAAQ,OAAQ,SAAU,UAC5DS,EAASR,WAAW,cACJ,UAAdkP,GAA4D,QAAnC3W,EAAMoB,aAAaqC,cAC9CwE,EAASR,WAAW,gBAAkBv5B,EAAKjB,MAAMI,SACjD46B,EAASR,WAAW,cAAgBv5B,EAAKjB,MAAMQ,SAEhDspC,EAAOn/C,KAAK,MACZ+yC,EAAKK,gBAAkB/C,EAAS8C,SAG9B/K,EAAMmB,aAAaiC,WAA+B,YAAlBl1B,EAAKnS,WACvCg7C,EAAOn/C,KAAK,MACZ+yC,EAAKvH,WAAY,GAGnB,GAAIpD,EAAMmB,aAAakC,UAAY,GAAuB,YAAlBn1B,EAAKnS,SAAwB,CACnE,IAAI,IAAIk+C,EAAK,EAAGA,EAAKja,EAAMmB,aAAakC,UAAW4W,IAC/ClD,EAAOn/C,KAAK,MAEhB+yC,EAAKtH,UAAYrD,EAAMmB,aAAakC,SACtC,CAEIrD,EAAMmB,aAAamC,cACrByT,EAAOn/C,KAAK,MACZ+yC,EAAKrH,aAAc,GAGrB,GAAItD,EAAMmB,aAAaoC,WAAa,EAAE,CACpC,IAAI,IAAI2W,EAAM,EAAGA,EAAMla,EAAMmB,aAAaoC,WAAY2W,IAClDnD,EAAOn/C,KAAK,MAEhB+yC,EAAKpH,WAAavD,EAAMmB,aAAaoC,UACvC,CAGI0E,EAASR,WAAW,aAAe,CAACQ,EAAS74B,OAAQ84B,EAAS94B,QAAQksB,SAAS,OAC7E2M,EAAS74B,SAAW84B,EAAS94B,QAC/B2nC,EAAOn/C,KAAK,MACZ+yC,EAAKkE,QAAU,WAEfkI,EAAOn/C,KAAK,MACZ+yC,EAAKkE,QAAU,UAEjBlE,EAAKK,gBAAkB/C,EAAS8C,UAK7B78B,EAAKxC,OAAS2tC,GACjBtC,EAAOn/C,KAAK,OAGTqwC,EAASR,WAAW,cAAgBv5B,EAAK9Q,QAAU8Q,EAAKpQ,iBACxDmqC,EAASR,WAAW,cAAgBv5B,EAAKjB,MAAMK,SAElDypC,EAAOn/C,KAAK,MACZ+yC,EAAKK,gBAAkB/C,EAAS8C,SAG9B9C,EAASZ,QAAQ,mBAAqBn5B,EAAKjB,MAAMK,QACnDypC,EAAOn/C,KAAK,MACZ+yC,EAAKE,aAAe5C,EAAShE,MAG3BiE,EAAST,WAAW,cAAgBv5B,EAAKs5B,QAAQ,SACnDuP,EAAOn/C,KAAK,MACZ+yC,EAAKG,gBAAkB5C,EAAS6C,SACvB7C,EAAST,WAAW,aAAev5B,EAAKs5B,QAAQ,UACzDuP,EAAOn/C,KAAK,MACZ+yC,EAAKG,gBAAkB5C,EAAS6C,SAGlC,GAAI9C,EAASR,WAAW,qBAAuBQ,EAAS6G,aAAc,CACpE,IAAMqL,EAAS,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAC9CpD,EAAOn/C,KAAKuiD,EAAOzU,KAAKkC,IAAI,EAAGK,EAAS6G,gBACxCnE,EAAKK,gBAAkB/C,EAAS8C,QAChCJ,EAAKmE,aAAe7G,EAAS6G,YAC/B,CAII7G,EAASZ,QAAQ,GAADnyC,OAAIgZ,EAAKxS,KAAI,UAC/Bq7C,EAAOn/C,KAAK,MACZ+yC,EAAKE,aAAe5C,EAAShE,OAE1BgE,EAASZ,QAAQ,oBAAsBY,EAASe,MAAM,kBACtDf,EAASZ,QAAQ,gBAAkBY,EAASe,MAAM,YACpD96B,EAAKs5B,QAAQ,QAAS,YACpBS,EAASZ,QAAQ,iBACnBY,EAASe,MAAM,WACbf,EAASZ,QAAQ,mBAAqBY,EAASe,MAAM,mBACvD96B,EAAKs5B,QAAQ,QAAS,YACpBS,EAASZ,QAAQ,iBAAmBY,EAASZ,QAAQ,oBACtDY,EAASe,MAAM,oBAAsBf,EAASe,MAAM,cACrD96B,EAAKs5B,QAAQ,QAAS,WACtBS,EAASZ,QAAQ,cACjBY,EAASe,MAAM,uBACf96B,EAAKs5B,QAAQ,SAAU,WACvBS,EAASZ,QAAQ,aACjBY,EAASe,MAAM,SAAU,SAAU,cAAe,gBAClD96B,EAAKs5B,QAAQ,UAAW,WACxBS,EAAShE,MAAQ/1B,EAAKs5B,QAAQxD,GAAiBiE,EAAShE,QACxDgE,EAAS/zC,KAAKonC,SAAS,wBAA0B2M,EAASZ,QAAQ,qBAClEY,EAAS/zC,KAAKonC,SAAS,wBAA0B2M,EAASZ,QAAQ,qBAClEY,EAAS/zC,KAAKonC,SAAS,uBAAyB2M,EAASZ,QAAQ,oBAElE0P,EAAOn/C,KAAK,MACZ+yC,EAAKE,aAAe5C,EAAShE,OAE5BgE,EAASZ,QAAQ,gBAAoC,aAAlBn5B,EAAKnS,UACxCksC,EAASZ,QAAQ,iBAAqC,YAAlBn5B,EAAKnS,YAE1Cg7C,EAAOn/C,KAAK,MACZ+yC,EAAKE,aAAe5C,EAAShE,MAE/B,OAAO8S,CACT,CA7UiBqD,CACbvkD,EACAoyC,EACAC,EACAh6B,EACA8xB,EACA2K,EACAlvC,EACA49C,EACA1C,GAEFl7C,EAAYssC,GAAKrC,KAAKmC,IAAI,EAAGqB,GAAWztC,EAAY0tC,GAAU4N,EAAQ,GAAI,SAAY,QAEpF2B,GAAexqC,EAAKxS,OAASg9C,GAC7BzQ,EAAST,QAAQkR,IAA8B,IAAdxqC,EAAK2/B,MACtC3/B,EAAK7M,UAAY,GAAK6M,EAAKpS,GAAK,IAAMoS,EAAK86B,MAAM,gBAAiB,WAAY,gBAC9EvtC,EAAY,IAAM5F,EAAIgqC,KAAO,IAE7BpkC,EAAY,GACZkvC,EAAKyE,OAAS,IAEhB,OAAO3zC,CACT,CAjeoB4+C,CAChBxkD,EACAoyC,EACAC,EACAh6B,EACA8xB,EACAqZ,EACA1O,GAEF,GAAkB,IAAdlvC,EACF,OAAOs5C,EAKT,IAAMrJ,EA2wBD,SACL71C,EACAoyC,EACAC,EACAh6B,EACA8xB,EACA2K,GAEC,IACGe,EAFJoE,EAAUt7C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAGJ+iD,EAAerpC,EAAK86B,MAAM,aAAed,EAAWD,EACpDqS,EAAoB/C,EAAaoB,OAASpB,EAAavD,cAAWt/C,GACpEwZ,EAAK86B,MAAM,gBAAiB,6BAC3B96B,EAAK86B,MAAM,eAAiBsR,KAC/BpsC,EAAKnS,SAAWw7C,EAAanP,MAAM9hC,IAAMixC,EAAanP,MAAMpjC,IAAM,WAAa,WAEjF,IAAMywC,EACJvnC,EAAK86B,MAAM,mBACqC,aAAhDsD,GAAwBrE,EAAUC,GAC9B,MACAh6B,EAAK86B,MAAM,cACT,MACkB,YAAlB96B,EAAKnS,SACH,MACA,MACV4uC,EAAKiE,UACH1gC,EAAK86B,MAAM,aACP8D,GAAqBj3C,EAAKqyC,EAAUuN,EAAYvN,EAASzI,QACzDqN,GAAqBj3C,EAAKoyC,EAAUwN,EAAYxN,EAASxI,QAEvB,IAApC8X,EAAaxyC,OAAO0wC,IACnB3F,GAAcyH,EAAaxyC,OAAO0wC,GAAc,EACnD/J,EAAS6L,EAAa/O,SAASiN,GACtBvN,EAAST,WAAW,YAC7BiE,EAAS6L,EAAa/O,SAASiN,GAC/B9K,EAAKG,gBAAkB5C,EAAS6C,UAEhCW,EAAS6L,EAAanP,MAAMqN,GAC5B9K,EAAK+D,YAAc6I,EAAaxyC,OAAO0wC,IAIrCxN,EAASR,WAAW,WAA+B,aAAlBv5B,EAAKnS,WACxC2vC,EAASxC,GAAoB,EAATwC,EAAc,GAClCf,EAAKK,gBAAkB/C,EAAS8C,SAGlC,IAAMyM,EAKD,SACL3hD,EACAoyC,EACAC,EACAh6B,EACA8xB,EACA2K,GAEA,IAAM6M,EAAS,GAGVvP,EAASR,WAAW,eAAiBQ,EAASU,YAC3B,aAAlBz6B,EAAKnS,UAA8C,YAAlBmS,EAAKnS,UAA0BmS,EAAKtD,MACtEq9B,EAASR,WAAW,cAAgBQ,EAAS4J,SAAW5J,EAAS+F,QAAU,GAE9EwJ,EAAO5/C,KAAK,MACZ+yC,EAAKK,gBAAkB/C,EAAS8C,SAE/B9C,EAASR,WAAW,gBACpBzH,EAAM4T,WAAW,MAAO,mBACN,YAAlB1lC,EAAKnS,UACLksC,EAASe,MAAM,YACff,EAASR,WAAW,gBACpBzH,EAAM4T,WAAW,MAAO,mBACN,aAAlB1lC,EAAKnS,UAELksC,EAASR,WAAW,oBAAwC,aAAlBv5B,EAAKnS,WAC9CksC,EAAS4Q,aACXrB,EAAO5/C,KAAK,MACZ+yC,EAAKK,gBAAkB/C,EAAS8C,QAChCJ,EAAKzK,QAAUF,EAAME,SAErBF,EAAMmB,aAAa4B,cACnB/C,EAAM4T,WAAW,MAAO,mBACN,aAAlB1lC,EAAKnS,UACLy7C,EAAO5/C,KAAK,MACZ+yC,EAAKzK,QAAUF,EAAME,QACrByK,EAAKuE,sBAAuB,GAE3BjH,EAASR,WAAW,SAAWQ,EAASW,QAA4B,aAAlB16B,EAAKnS,UACvDksC,EAAS4J,SAAW5J,EAAS+F,QAAU,IACpC/F,EAASR,WAAW,aAAev5B,EAAKs5B,QAAQ,UAChDS,EAASR,WAAW,UAAYv5B,EAAKs5B,QAAQ,SAC7CS,EAASR,WAAW,YAAcv5B,EAAKs5B,QAAQ,UAC/CS,EAASR,WAAW,UAAYv5B,EAAKs5B,QAAQ,SAC9B,YAAlBt5B,EAAKnS,UAA0BksC,EAASU,WAAaV,EAASR,WAAW,OAAQ,UAElF+P,EAAO5/C,KAAK,MACZ+yC,EAAKK,gBAAkB/C,EAAS8C,SACvB9C,EAASR,WAAW,eAAiBQ,EAASU,WAAaz6B,EAAKs5B,QAAQ,SACjFgQ,EAAO5/C,KAAK,MACZ+yC,EAAKK,gBAAkB,cAEtB/C,EAASR,WAAW,gBAAkBv5B,EAAKs5B,QAAQ,UACnDS,EAASR,WAAW,iBAAoBv5B,EAAKs5B,QAAQ,WACrDS,EAASR,WAAW,kBAAoBv5B,EAAKs5B,QAAQ,SAEtDgQ,EAAO5/C,KAAK,MACZ+yC,EAAKK,gBAAkB/C,EAAS8C,SACvB9C,EAASR,WAAW,eAAiBv5B,EAAKs5B,QAAQ,aAC3DgQ,EAAO5/C,KAAK/B,EAAIgqC,KAAO,EAAI,KAAO,MAClC8K,EAAKK,gBAAkB/C,EAAS8C,UACvB9C,EAASR,WAAW,aAAeQ,EAASU,WAIpDV,EAASR,WAAW,iBAAmBv5B,EAAKs5B,QAAQ,UACpDS,EAASR,WAAW,aAAc,eAAmC,aAAlBv5B,EAAKnS,YAJzDy7C,EAAO5/C,KAAK,MACZ+yC,EAAKK,gBAAkB/C,EAAS8C,UAS7B7C,EAAST,WAAW,cAAgBv5B,EAAKs5B,QAAQ,OAAQ,QACzDU,EAAST,WAAW,iBAAmBv5B,EAAKs5B,QAAQ,SACrDU,EAAST,WAAW,mBAAqBv5B,EAAKs5B,QAAQ,YACxDgQ,EAAO5/C,KAAK,MACZ+yC,EAAKG,gBAAkB5C,EAAS6C,SAGlC,IAAMwP,GAAyBrS,EAAST,WAAW,oBAAsBzH,EAAMc,mBAAqBmH,EAASR,WAAW,mBAClH+S,GAAwBtS,EAAST,WAAW,mBAAqBzH,EAAMe,kBAAoBkH,EAASR,WAAW,mBAElH8S,GAA2C,aAAlBrsC,EAAKnS,UAC9By+C,GAA0C,YAAlBtsC,EAAKnS,YAE1BmsC,EAAST,WAAW,oBAAsBS,EAAST,WAAW,kBAChEkD,EAAKG,gBAAkB5C,EAAS6C,QAEhCJ,EAAuB,YAAlBz8B,EAAKnS,SAAyB,iBAAmB,oBAAqB,EAE7Ey7C,EAAO5/C,KAAK,OAIXixC,GAAWZ,KAGS,aAAlB/5B,EAAKnS,UAA0D,QAA/B+sC,GAAiBb,IAC/B,YAAlB/5B,EAAKnS,UAAyD,QAA/B+sC,GAAiBb,MAEjDuP,EAAO5/C,KAAK,MACZ+yC,EAAKK,gBAAkB/C,EAAS8C,UAKjC9C,EAASR,WAAW,kBAAsC,YAAlBv5B,EAAKnS,UAC5CikC,EAAMyK,WAAW,aAAetD,GAAWc,EAAUjI,IACtDiI,EAASR,WAAW,qBAAyC,aAAlBv5B,EAAKnS,UAC/CikC,EAAM4T,WAAW,MAAO,oBAAsB3L,EAASZ,QAAQ,uBAEjEmQ,EAAO5/C,KAAK,MACZ+yC,EAAKK,gBAAkB/C,EAAS8C,SAG7B9C,EAASZ,QAAQ,eACjBY,EAASe,MAAM,SAAU,UAAW,gBAAiB,wBACnC,aAAlB96B,EAAKnS,UACLksC,EAASZ,QAAQ,mBACjBY,EAASe,MAAM,aACG,YAAlB96B,EAAKnS,UACLksC,EAASZ,QAAQ,eAAiBY,EAAS/zC,KAAKonC,SAAS,aAAeptB,EAAKtD,KAEhF4sC,EAAO5/C,KAAK,MACZ+yC,EAAKE,aAAe5C,EAAShE,MAEnB/1B,EAAKtD,KAAQsD,EAAKxC,SAC1Bu8B,EAASZ,QAAQ,gBAAoC,aAAlBn5B,EAAKnS,UACvCksC,EAASZ,QAAQ,iBAAqC,YAAlBn5B,EAAKnS,YAE5Cy7C,EAAO5/C,KAAK,MACZ+yC,EAAKE,aAAe5C,EAAShE,MAG/B,IAAMwW,GAAyBza,EAAMmB,aAAa2B,aAAe,EAAI,GAAKmF,EAASyS,mBAC7EC,GAAyB3a,EAAMmB,aAAamB,aAAe,EAAI,GAAK2F,EAAS2S,mBAC7EC,GAAyB7a,EAAMoB,aAAa0B,aAAe,EAAI,GAAKoF,EAASwS,oBAE/ED,GAA0BvsC,EAAK86B,MAAM,eAAkB96B,EAAK86B,MAAM,eACpEwO,EAAO5/C,KAAK,MAAQ,EAAI6iD,EAAsB,IAC9C9P,EAAK7H,aAAe2X,GAGlBvsC,EAAK86B,MAAM,cAAgB6R,IAC7BrD,EAAO5/C,KAAK,MAAQ,EAAIijD,EAAsB,IAC9ClQ,EAAK7H,aAAe+X,GAGlB3sC,EAAK86B,MAAM,eAAiB2R,IAC9BnD,EAAO5/C,KAAK,MAAQ,EAAI+iD,EAAsB,IAC9ChQ,EAAKsE,sBAAwB0L,GAG/B,OAAOnD,CACT,CAhKiBsD,CAAsBjlD,EAAKoyC,EAAUC,EAAUh6B,EAAM8xB,EAAO2K,GAE3E,OADAe,EAAS3D,GAAKrC,KAAKmC,IAAI,EAAGqB,GAAWwC,EAASvC,GAAUqO,EAAQ,IAAK,QAAW,QACzE9L,CACT,CA7zBiBqP,CAAsBllD,EAAKoyC,EAAUC,EAAUh6B,EAAM8xB,EAAO2K,EAAMmF,GAC3EyH,EAAerpC,EAAK86B,MAAM,aAAed,EAAWD,EACpDqS,EAAoB/C,EAAaoB,OAASpB,EAAavD,cAAWt/C,GACpEwZ,EAAK86B,MAAM,gBAAiB,6BAC3B96B,EAAK86B,MAAM,eAAiBsR,KAC/BpsC,EAAKnS,SAAWw7C,EAAanP,MAAM9hC,IAAMixC,EAAanP,MAAMpjC,IAAM,WAAa,WAEjF,IAAMywC,EACJvnC,EAAK86B,MAAM,mBACqC,aAAhDsD,GAAwBrE,EAAUC,GAC9B,MACAh6B,EAAK86B,MAAM,cACT,MACkB,YAAlB96B,EAAKnS,SACH,MACA,MAIJ4vC,EAy8BD,SACL91C,EACAoyC,EACAC,EACAh6B,EACA8xB,EACA2K,GAEC,IACGgB,EAFJmE,EAAUt7C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAGNkjD,EAA8C,QAA/BxpC,EAAKxE,uBAAqD,aAAlBwE,EAAKnS,UAC7DmS,EAAK86B,MAAM,mBAAqE,aAAhDsD,GAAwBrE,EAAUC,GAC/DwN,EAAcgC,EAAe,MAAQ,MAC3CA,EAAe1X,EAAMO,cAAgBmX,EAAeA,EACpD/M,EAAK8E,WAAa3C,GAAqBj3C,EAAKqyC,EAAUwN,EAAaxN,EAASzI,QACvC,IAAjCyI,EAASnjC,OAAO2wC,IACf5F,GAAc5H,EAASnjC,OAAO2wC,GAAe,GAC9CxnC,EAAKxF,gBACPijC,EAAUzD,EAASM,SAASkN,GACnBzN,EAASR,WAAW,YAC7BkE,EAAUzD,EAASM,SAASkN,GAC5B/K,EAAKK,gBAAkB/C,EAAS8C,UAEhCY,EAAUzD,EAASE,MAAMsN,GACzB/K,EAAK4E,aAAerH,EAASnjC,OAAO2wC,IAIlC1V,EAAM4T,WAAW,SAAW1L,EAASV,QAAQ,UAAYkQ,IAC3D/L,EAAUzC,GAAqB,EAAVyC,EAAe,GACpChB,EAAKzK,QAAUF,EAAME,SAEnBF,EAAM4T,WAAW,SAAW1L,EAASV,QAAQ,QAAUkQ,IACzD/L,EAAUzC,GAAqB,EAAVyC,EAAe,GACpChB,EAAKzK,QAAUF,EAAME,SAGvB,IAAMyX,EAcD,SACL9hD,EACAoyC,EACAC,EACAh6B,EACA8xB,EACA2K,GAGC,IAADwL,EADAuB,EAAYljD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAENmjD,EAAS,GACXzP,EAAST,WAAW,iBAAmBS,EAASU,QAAU8O,GAC5DC,EAAO//C,KAAK,MACZ+yC,EAAKG,gBAAkB5C,EAAS6C,SAEhC7C,EAASc,MAAM,YACfd,EAAST,WAAW,gBACpBzH,EAAM4T,WAAW,MAAO,oBACvB8D,GAEDC,EAAO//C,KAAK,MACZ+yC,EAAKG,gBAAkB5C,EAAS6C,QAChCJ,EAAKzK,QAAUF,EAAME,SAErBF,EAAMoB,aAAa2B,cACnB/C,EAAM4T,WAAW,MAAO,oBACvB8D,GACDC,EAAO//C,KAAK,MACZ+yC,EAAKzK,QAAUF,EAAME,QACrByK,EAAKkF,sBAAuB,GAE5B3H,EAAST,WAAW,eACpBzH,EAAMyK,WAAW,WACjBiN,GAEAC,EAAO//C,KAAK,MACZ+yC,EAAKG,gBAAkB5C,EAAS6C,SACvB7C,EAAST,WAAW,aAAeiQ,IAC5CC,EAAO//C,KAAK,MACZ+yC,EAAKG,gBAAkB5C,EAAS6C,SAGlC,IAAMiQ,GAAuB/S,EAASR,WAAW,kBAAoBzH,EAAMa,iBAAmBqH,EAAST,WAAW,iBAC5GwT,GAAuBhT,EAASR,WAAW,kBAAoBzH,EAAMY,iBAAmBsH,EAAST,WAAW,kBAE/GuT,GAAuBtD,GACvBuD,IAAwBvD,KAErBzP,EAASR,WAAW,kBAAoBQ,EAASR,WAAW,iBAC9DkD,EAAKK,gBAAkB/C,EAAS8C,QAEhCJ,EAAK+M,EAAe,gBAAkB,kBAAmB,EAE3DC,EAAO//C,KAAK,OAIXixC,GAAWX,KAGTwP,GAA+C,QAA/B5O,GAAiBZ,KAChCwP,GAA+C,QAA/B5O,GAAiBZ,MAEnCyC,EAAKG,gBAAkB5C,EAAS6C,QAChC4M,EAAO//C,KAAK,OAIXswC,EAASb,QAAQ,aAAmD,QAAxC8O,EAAItgD,EAAI8lC,QAAQ7kC,IAAI/E,EAAKm2C,EAASh0C,cAAM,IAAAiiD,GAApCA,EAAsCnnC,MACrE0oC,GAAgBxP,EAASb,QAAQ,iBACrCsQ,EAAO//C,KAAK,MACZ+yC,EAAKM,aAAe/C,EAASjE,OAE5BiE,EAASb,QAAQ,iBAAmBa,EAASc,MAAM,UAAY0O,GAC/DxP,EAASb,QAAQ,mBAAqBa,EAASc,MAAM,cAAgB0O,KAEtEC,EAAO//C,KAAK,MACZ+yC,EAAKM,aAAe/C,EAASjE,MAG/B,IAAMiX,GAAyBlb,EAAMoB,aAAakB,aAAe,EAAI,GAAK4F,EAAS0S,mBAC/EM,IACFvD,EAAO//C,KAAK,MAAQ,EAAIsjD,EAAsB,IAC9CvQ,EAAKrI,aAAe4Y,GAGtB,OAAOvD,CACT,CArGiBwD,CACbtlD,EACAoyC,EACAC,EACAh6B,EACA8xB,EACA2K,EACAmF,EACA4H,GAGF,OAAO3P,GAAKrC,KAAKmC,IAAI,EAAGqB,GAAWyC,EAAUxC,GAAUwO,EAAQ,IAAK,QAAW,OACjF,CA1/BkByD,CAAuBvlD,EAAKoyC,EAAUC,EAAUh6B,EAAM8xB,EAAO2K,EAAMmF,GAG7E4F,EAF8C,QAA/BxnC,EAAKxE,uBAAqD,aAAlBwE,EAAKnS,UAC/DmS,EAAK86B,MAAM,mBAAqE,aAAhDsD,GAAwBrE,EAAUC,GAClC,MAAQ,MAKvC4N,EAAarK,GAAcxD,EAASjC,MAAOvqC,EAAWiwC,EAAQC,GAE5DoE,EAAW7hC,EAAK6hC,UAAY,CAAC,cAAe,mBAAmBzU,SAASptB,EAAK3Z,QAC/Ew7C,IACF+F,EAAa5M,GAAUD,GAAkB,KAAb6M,GAAqB,MACjDnL,EAAKoF,UAAW,GAGd9H,EAASR,WAAW,2BACtBqO,EAAa5M,GAAUD,GAAkB,KAAb6M,GAAqB,OAIjD9V,EAAM4T,WAAW,QAAU1lC,EAAK86B,MAAM,iBAAmBf,EAASZ,QAAQ,qBAE1EyO,EAAa5M,GAAUD,GAAkB,KAAb6M,GAAqB,MACjDnL,EAAKzK,QAAUF,EAAME,SACXgI,EAASb,QAAQ,sBAExBrH,EAAM4T,WAAW,MAAO,mBAAqB1lC,EAAKs5B,QAAQ,SAC1DxH,EAAM4T,WAAW,OAAQ,eAAiB1lC,EAAKs5B,QAAQ,UAExDsO,EAAa5M,GAAUD,GAAkB,KAAb6M,GAAqB,MACjDnL,EAAKzK,QAAUF,EAAME,UAEpBF,EAAM4T,WAAW,QAAU1lC,EAAKs5B,QAAQ,UACxCxH,EAAM4T,WAAW,SAAW1lC,EAAKs5B,QAAQ,WAE1CsO,EAAa5M,GAAUD,GAAkB,KAAb6M,GAAqB,MACjDnL,EAAKzK,QAAUF,EAAME,UAINgI,EAkqCJb,QAAQ,gBAAiB,aAAc,cAAe,iBAjqCnErH,EAAMyK,WAAWvC,EAASjE,KAAMsG,UAAU,EAAGrC,EAASjE,KAAMuG,QAAQ,QACpEzG,GAAkBmE,EAASjE,QAAWyR,IAGtC/K,EAAKM,aAAe/C,EAASjE,MAG3B6L,IACFgG,EAAapQ,KAAKC,MAAMsD,GAAkB,IAAb6M,IAC7BnL,EAAKmF,WAAaA,GAKpB,IAAI5D,EAAU,KACVjE,EAASoT,gBAAgBntC,EAAKxS,QAChCwwC,GAAW,KACPjE,EAASR,WAAW,UAAW,WAAaQ,EAAS55B,MAAM,KAAOH,EAAKxS,OACzEivC,EAAKK,gBAAkB/C,EAAS8C,UAGpC,IAAMiJ,EAAW0E,EACb1E,IAAa9lC,EAAKxS,MAAqB,YAAbs4C,IAC5B9H,GAAW,KACXvB,EAAKoE,aAAeiF,GAElB/L,EAASR,WAAW,iBAAmBQ,EAAST,QAAQt5B,EAAKxS,QAC/DwwC,GAAW8H,GAAY/L,EAASoT,gBAAgBrH,GAAY,KAAO,KACnErJ,EAAKK,gBAAkB/C,EAAS8C,SAII,YAAbiJ,IAEnB/L,EAASoT,gBAAgBntC,EAAKxS,MAChCwwC,GAAW,KAEXA,EAAU,MAId,IAAM0L,EACJ3P,EAASmB,UAAU,QACD,aAAlBl7B,EAAKnS,WACJksC,EAASR,WAAW,UACpBv5B,EAAK86B,MAAM,UACd2B,EAAKsB,SAAW2L,EAChB,IAAMC,EA4/BD,SACLhiD,EACAoyC,EACAC,EACAh6B,EACA8xB,EACA2K,GAGC,IAFDmF,EAAUt7C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACV8gD,EAAyB9gD,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAEnBmjD,EAAY,IAEd7X,EAAMoB,aAAagB,WAA+B,aAAlBl0B,EAAKnS,UACpC+zC,GAAe9P,EAAMoB,aAAa+B,cAKrCnD,EAAMoB,aAAaiB,eAAmC,YAAlBn0B,EAAKnS,UACxC+zC,GAAe9P,EAAMoB,aAAa+B,eAGnC0U,EAAUjgD,KAAwB,YAAnBooC,EAAMC,SAAyB,KAAO,MACrD0K,EAAKtI,eAAgB,IARrBwV,EAAUjgD,KAAwB,YAAnBooC,EAAMC,SAAyB,KAAO,MACrD0K,EAAKvI,WAAY,GASfpC,EAAMoB,aAAa+B,eAAiB2M,IACtC+H,EAAUjgD,KAAwB,YAAnBooC,EAAMC,SAAyB,KAAO,MACrD0K,EAAKxH,cAAe,GAGlB8E,EAASR,WAAW,eAAiB6N,EAAoB,GAC3DuC,EAAUjgD,KAAK,MACf+yC,EAAKK,gBAAkB/C,EAAS8C,SACvB9C,EAASR,WAAW,WAAaqI,GAC1C+H,EAAUjgD,KAAK,MACf+yC,EAAKK,gBAAkB/C,EAAS8C,SACvB9C,EAASR,WAAW,gBAAkB6N,EAAoB,IACnEuC,EAAUjgD,KAAK,MACf+yC,EAAKK,gBAAkB/C,EAAS8C,SAG9B7C,EAAS2Q,aAAe3qC,EAAK86B,MAAM,iBAAkB,iBAAkB,kBACzE6O,EAAUjgD,KAAK,OAGbswC,EAAST,WAAW,aAAc,kBAClCS,EAAS2J,UAAY3J,EAAS8F,UAC5BhO,EAAMoB,aAAae,MAAUnC,EAAMoB,aAAaS,SAAUqG,EAASV,QAAQ,aAC7EU,EAASb,QAAQ,qBAAyBY,EAASR,WAAW,2BAEhEoQ,EAAUjgD,KAAK,MACf+yC,EAAKG,gBAAkB5C,EAAS6C,UAG9B7C,EAAST,WAAW,WAAav5B,EAAKjB,MAAMI,UAAY46B,EAASR,WAAW,eAI7ES,EAAST,WAAW,cAAgBv5B,EAAKjB,MAAMQ,OAC/Cy6B,EAAST,WAAW,eAAmC,YAAlBv5B,EAAKnS,YAJ3C87C,EAAUjgD,KAAK,MACf+yC,EAAKG,gBAAkB5C,EAAS6C,SAS9B7C,EAAST,WAAW,aAAc,SAAU,gBAAkB6N,EAAoB,IACpFuC,EAAUjgD,KAAK,MACf+yC,EAAKG,gBAAkB5C,EAAS6C,SAG9B/K,EAAMoB,aAAa6B,gBACrB4U,EAAUjgD,KAAK,MACf+yC,EAAK1H,eAAgB,GAGvB,GAAIjD,EAAMoB,aAAa8B,aAAe,EAAG,CACvC,IAAI,IAAIvuC,EAAI,EAAGA,EAAIqrC,EAAMoB,aAAa8B,eAAgBvuC,EAClDkjD,EAAUjgD,KAAK,MAEnB+yC,EAAKzH,aAAelD,EAAMoB,aAAa8B,YACzC,CAEIgF,EAAST,WAAW,WAAav5B,EAAKs5B,QAAQ,UAChDqQ,EAAUjgD,KAAK,MACf+yC,EAAKG,gBAAkB5C,EAAS6C,SAGlC,GAAI9C,EAASZ,QAAQ,gBAAkBiO,EAAoB,IAAMpnC,EAAKtD,IACpEitC,EAAUjgD,KAAK,MACf+yC,EAAKE,aAAe5C,EAAShE,UACxB,GAAIgE,EAASZ,QAAQ,YAC1BwQ,EAAUjgD,KAAK,MACf+yC,EAAKE,aAAe5C,EAAShE,UACxB,GAAIgE,EAASZ,QAAQ,cAAgBn5B,EAAKukC,wBAA2B,EAAG,CAC7E,IAAMA,EAAyB/M,KAAKC,MAAMz3B,EAAKukC,wBAC3CA,GAA0B,EAC5BoF,EAAUjgD,KAAK,KAAgC,IAAzB66C,GAEtBoF,EAAUjgD,KAAK,MAEjB+yC,EAAKE,aAAe5C,EAAShE,IAC/B,CAEI/1B,EAAKs5B,QAAQtD,GAAmBgE,EAASjE,SACxCqR,EAAoB,GAAKpnC,EAAKs5B,QAAQ,aACtCS,EAASR,WAAW,UAAW,qBAAsB,wBACpDS,EAAST,WAAW,SACtBoQ,EAAUjgD,KAAK,MAEfigD,EAAUjgD,KAAK,MAEjB+yC,EAAKM,aAAe/C,EAASjE,MAG/B,OAAO4T,CACT,CA/mCoByD,CAChBzlD,EACAoyC,EACAC,EACAh6B,EACA8xB,EACA2K,EACAmF,EACAwF,GAGElJ,GAAU,EACVpM,EAAMoB,aAAamB,cACpB0F,EAAS4Q,aAAgB3qC,EAAKtD,KAAOq9B,EAAShE,MAAQgE,EAAShE,KAAK3I,SAAS,SAC9E8Q,GAAU,EACVzB,EAAKpI,aAAc,GAGrB,IAEIuV,EAFE3L,EAAWhD,GAAU0O,EAAW,GAAI,QAG1C,GAAI5P,EAASR,WAAW,kBAAkC,IAAdv5B,EAAK2/B,OAAekC,EAAU,CACxE,IAAMgI,EAAQ9P,EAAS3zC,QACvByjD,EAAMhN,QAAU,wBAChBL,GAAmB70C,EAAKkiD,EAAO7P,EAAUh6B,EAAM8xB,EAAO2K,GACtDmN,EAAcW,GAAgB5iD,EAAKkiD,EAAO7P,EAAUh6B,EAAM8xB,GAAOqN,OACjE1C,EAAKK,gBAAkB/C,EAAS8C,OAClC,CAGA,IADA,IAAIsC,EAAS,GACJ14C,EAAI,EAAGA,EAAI,GAAIA,IACtB04C,EAAO14C,GACLo3C,GAAe+J,EAAYnhD,EAAG2gD,EAAmBsC,EAAW1L,EAASC,EAAUC,GAGnF,GAAIl+B,EAAKi9B,YAAcj9B,EAAKskC,UAAa,EAAG,CAC1C,IAAMwF,GAAmB/P,EAASR,WAAW,UAAY,EAAI,EAE7DkD,EAAK2E,UAAS,QAAAp6C,OAAWgZ,EAAKskC,UAAS,UAIvC,IAHA,IAAMyF,GAAehQ,EAASZ,QAAQ,cAClCuD,IAAgB,EAChBsN,GAAYjQ,EAASljC,OAAO0wC,GAAY0C,GAAA,SAAAC,GAE1C,IAAMC,EAAY3Q,GAAgBgE,EAAQwM,IACtCI,EAAmB,EACvBjL,EAASA,EAAO/1C,KAAI,SAAAihD,GAClB,GAAIH,EAAO,CACT,IACMI,EAAiBzM,GADDN,GAAcxD,EAASjC,MAAOvqC,EAAW48C,EAAW1M,GAGxE2M,EACAhD,EACAsC,EACA1L,EACAC,EACAC,GAGF,OADAkM,IACOC,EAAiBC,CAC1B,CACA,OAAOD,CACT,IAEItQ,EAASR,WAAW,aACtByQ,GAAYxS,KAAKkC,IAAI,EAAGsQ,GAAYhqC,EAAKi9B,YACzCR,EAAKK,gBAAkB/C,EAAS8C,UAEhCmN,GAAYxS,KAAKmC,KAAK,EAAGqQ,GAAYhqC,EAAKi9B,WAAa6M,IACnD/P,EAASR,WAAW,YACtBkD,EAAKK,gBAAkB/C,EAAS8C,UAKhCkN,IAAgBhQ,EAASljC,OAAO0wC,GAAc,IAAM7K,KACtDsN,IAAahqC,EAAKi9B,WAAa6M,GAC/BpN,IAAgB,EAChBD,EAAKE,aAAe5C,EAAShE,KAEjC,EArCSmU,GAAQ,EAAGA,GAAQlqC,EAAKskC,UAAY4F,KAAOD,GAAAC,GAsCtD,CAQA,GANAzN,EAAK+D,YACHxgC,EAAK86B,MAAM,aAAed,EAASnjC,OAAO0wC,GAAcxN,EAASljC,OAAO0wC,GAE1EV,EAAO1H,OAASyK,EAAc,CAACzK,EAAQyK,GAAezK,EAGlDnF,EAASqT,YAAcrT,EAAS8H,aAAc,CAEhD,IAAIwL,GAAa9C,IAAgBxqC,EAAKxS,KAClCwsC,EAASqT,WAAWE,qBAAuB,IAC3C/C,EACAxQ,EAASqT,WAAWG,2BAA6B,IAC/CxT,EAASqT,WAAWI,iBAAmB,IAC7CH,GAAaA,IAAc,EAC3BzG,EAAO1H,OAAS0H,EAAO1H,OAAO/1C,KAAI,SAACskD,GAAG,MAAqB,kBAATA,EAC9ClW,KAAKmC,IAAI+T,EAAM,EAAI,EAAI,EAAG1S,GAAU0S,EAAMJ,KAC1CI,EAAItkD,KAAI,SAACukD,GAAI,OAAKnW,KAAKmC,IAAIgU,EAAO,EAAI,EAAI,EAAG3S,GAAU2S,EAAOL,IAAY,GAC7E,IACD7Q,EAAKqF,cAAe,CACtB,CAIA,OAAO+E,CACT,CCjqBA,IAAM+G,GAAY,CAChB,WAAO,EACPhH,GACAA,GCGK,SACLj/C,EACAoyC,EACAC,EACAh6B,EACA8xB,GAEAwJ,GAAavB,EAAUjI,GACvBwJ,GAAatB,EAAUlI,GACvB0J,GAAczB,EAAUjI,EAAME,SAC9BwJ,GAAcxB,EAAUlI,EAAME,SAC9B6J,GAAgBl0C,EAAKoyC,EAAUC,GAC/B6B,GAAgBl0C,EAAKqyC,EAAUD,GAC/BA,EAASG,MAAM/M,IAAMkN,GAAc1yC,EAAKoyC,EAAUjI,EAAOA,EAAMmB,cAC/D+G,EAASE,MAAM/M,IAAMkN,GAAc1yC,EAAKqyC,EAAUlI,EAAOA,EAAMoB,cAE/D,IAAMuJ,EAAgB,CACpBqE,aAAc/G,EAAS/zC,KACvBi7C,SAAUjhC,EAAKha,KACf07C,aAAc1H,EAASh0C,MAGnB6gD,EAAS,IAAIR,GAAO1+C,EAAKoyC,EAAUC,EAAUh6B,EAAM8xB,EAAO,EAAG2K,GAEnE,GAAsB,WAAlBz8B,EAAKnS,WAA0BmS,EAAK86B,MAAM,gBAC5C,OAAO+L,EAGT,GAAI/U,EAAMoB,aAAamB,YAErB,OADAoI,EAAKpI,aAAc,EACZwS,EAGL7mC,EAAK86B,MAAM,kBACb96B,EAAKxS,KACHskC,EAAM4T,WAAW,OAAS,OACxB5T,EAAM4T,WAAW,QAAU,QAC3B5T,EAAM4T,WAAW,QAAU,OAC3B5T,EAAM4T,WAAW,QAAU,MAC3B,SACJ1lC,EAAKnS,SAAyB,SAAdmS,EAAKxS,KAAkB,WAAa,UACpDivC,EAAKzK,QAAUF,EAAME,QACrByK,EAAK0E,SAAWnhC,EAAKxS,KACrBivC,EAAKyE,OAASlhC,EAAKpS,IAGrB,IAAMm5C,EAAmC,CACvC,SACA,OACA,QACA,WACA,QACA,MACA,WACA,SACA,SACA,SACA,UACA,MACA,OACA,QACA,SACA,OACA,SAGEC,EAAoBhN,EAAS75B,MAAM,GACnC8mC,EAAqBjN,EAAS75B,MAAM,GAExC,GAAI8mC,GAAsBD,IAAsBC,GAClBF,EAAiCzK,QAAQ0K,GACxCD,EAAiCzK,QAAQ2K,GAEtB,CAAC,IAAD/V,EACJ,CAAC+V,EAAoBD,GAA9DA,EAAiB9V,EAAA,GAAE+V,EAAkB/V,EAAA,EACxC,CAGF,IASMkW,EATqBjM,GACzBxzC,EACAqY,EACAgnC,EACAlV,EAAMoB,aAAauB,cAEMwS,EACvB9L,GAAqBxzC,EAAKqY,EAAMinC,EAAoBnV,EAAMoB,aAAauB,aACvE,GAGJ,GAA0B,IAAtB2S,EACF,OAAOP,EAGT,GAAK7M,EAAST,WAAW,eAAiBv5B,EAAKs5B,QAAQ,SAClDU,EAAST,WAAW,aAAev5B,EAAKs5B,QAAQ,WAChDU,EAAST,WAAW,gBAAkBv5B,EAAKs5B,QAAQ,aACnDU,EAAST,WAAW,iBAAmBv5B,EAAKs5B,QAAQ,UACpDU,EAAST,WAAW,kBAAoBv5B,EAAKs5B,QAAQ,QAAU8N,GAAqB,GACpFpN,EAAST,WAAW,eAAiBv5B,EAAKjB,MAAMQ,MAGnD,OADAk9B,EAAKG,gBAAkB5C,EAAS6C,QACzBgK,EAGTpK,EAAK6E,MAAK,GAAAt6C,OAAMgzC,EAAS8E,IAAIz+B,GAAE,OAE/B,IAAMymC,EAAc9H,GAAuBjF,EAAU/5B,GACrD,GAAI8mC,EAEF,OADAD,EAAO1H,OAAS2H,EACTD,EAGL7mC,EAAK2/B,KAAO,IACdlD,EAAKkD,KAAO3/B,EAAK2/B,MAGnB,IAAI/xC,EAAKoS,EAAKpS,GACd,OAAQoS,EAAKha,MACb,IAAK,QACL,IAAK,WACH,IAAM6G,EAAI2qC,KAAKC,MAAO,GAAKsC,EAAS4J,QAAW5J,EAAS+F,SACxDlyC,EAAKf,GAAK,EAAI,IAAMA,GAAK,EAAI,IAAMA,GAAK,EAAI,IAAMA,GAAK,GAAK,GAAKA,GAAK,GAAK,GAAK,GAChF4vC,EAAKyE,OAAStzC,EACd,MACF,IAAK,WACL,IAAK,cACHA,EAAK4pC,KAAKmC,IAAI,EAAGnC,KAAKC,MAAO,IAAMsC,EAAS4J,QAAW5J,EAAS+F,UAChErD,EAAKyE,OAAStzC,EACd,MACF,IAAK,WACH,IAAM+6C,EAAI3O,EAASt5B,SACnB9S,EAAK+6C,GAAK,IAAM,IAAMA,GAAK,IAAM,IAAMA,GAAK,GAAK,GAAKA,GAAK,GAAK,GAAKA,GAAK,GAAK,GAAK,GACpFlM,EAAKyE,OAAStzC,EACd,MACF,IAAK,SACCmsC,EAASmB,UAAU,MAAO,MAAO,MAAO,SAC1CttC,EAAe,EAAVoS,EAAKpS,GACV6uC,EAAKyE,OAAStzC,GAEhB,MACF,IAAK,eACHoS,EAAKnS,SAAW,WAChBD,EAAK,GACL6uC,EAAKwE,SAAW,QAChB,MACF,QACErzC,EAAKoS,EAAKpS,GAGZ,GAAW,IAAPA,EACF,OAAOi5C,EAGT,IAAMS,EAA+B,aAAlBtnC,EAAKnS,SAClB05C,EAAaD,EAAa,MAAQ,MACxC7K,EAAKiE,UAAY9B,GAAqBj3C,EAAKoyC,EAAUwN,EAAYxN,EAASxI,QAC1E,IAAMiW,EAAcF,EAAa,MAAQ,MACzC7K,EAAK8E,WAAa3C,GAAqBj3C,EAAKqyC,EAAUwN,EAAaxN,EAASzI,QAE5E,IAAIjxB,EAAKy5B,EAASO,SAASiN,GACvBhnC,EAAKy5B,EAASM,SAASkN,GAEvBF,GAAcvN,EAASR,WAAW,aAAc,gBAClDj5B,GAAM,EACNm8B,EAAKK,gBAAkB/C,EAAS8C,UAG7B9C,EAASZ,QAAQ,gBAAkBn5B,EAAKs5B,QAAQxD,GAAiBiE,EAAShE,QAC7Ez1B,EAAKk3B,KAAKC,MAAW,IAALn3B,GAChBm8B,EAAKE,aAAe5C,EAAShE,MACpBgE,EAASZ,QAAQ,gBAAkBn5B,EAAKs5B,QAAQ,UACzDh5B,EAAKk3B,KAAKC,MAAW,KAALn3B,GAChBm8B,EAAKE,aAAe5C,EAAShE,MAE5BuR,GAAcvN,EAASZ,QAAQ,iBAC9BmO,GAAcvN,EAASZ,QAAQ,aAAeY,EAASe,MAAM,SAAU,WAEzEx6B,EAAKk3B,KAAKC,MAAW,IAALn3B,GAChBm8B,EAAKE,aAAe5C,EAAShE,QAE3BuR,GAAcvN,EAASZ,QAAQ,mBAAqBY,EAASe,MAAM,cACnEwM,GAAcvN,EAASZ,QAAQ,eAAiBY,EAASe,MAAM,YAChEwM,GAAcvN,EAASZ,QAAQ,eAAiBY,EAASe,MAAM,SAAU,cAE1Ex6B,GAAM,EACNm8B,EAAKE,aAAe5C,EAAShE,OAG1BuR,GAActN,EAASb,QAAQ,aAAea,EAASc,MAAM,SAAU,WAC1Ev6B,EAAKi3B,KAAKC,MAAW,IAALl3B,GAChBk8B,EAAKM,aAAe/C,EAASjE,QAE3BuR,GAActN,EAASb,QAAQ,mBAAqBa,EAASc,MAAM,aACpEwM,GAActN,EAASb,QAAQ,iBAAmBa,EAASc,MAAM,YAElEv6B,GAAM,EACNk8B,EAAKM,aAAe/C,EAASjE,MAG3BiE,EAAST,WAAW,cAAiBv5B,EAAKs5B,QAAQ,OAAQ,QAC5Dh5B,EAAKk3B,KAAKC,MAAMn3B,EAAK,GACrBm8B,EAAKG,gBAAkB5C,EAAS6C,SACvByK,GAActN,EAAST,WAAW,iBAAmBS,EAASU,SACvEn6B,EAAKi3B,KAAKC,MAAW,IAALl3B,GAChBk8B,EAAKG,gBAAkB5C,EAAS6C,SAG7ByK,IACEvN,EAASR,WAAW,WAAcQ,EAASR,WAAW,SAAWQ,EAASW,UAC3E4M,GAAcvN,EAASU,WAAaV,EAASR,WAAW,OAAQ,UAEpEj5B,EAAKk3B,KAAKC,MAAW,IAALn3B,GAChBm8B,EAAKK,gBAAkB/C,EAAS8C,SACvB9C,EAAS4J,SAAW5J,EAAS+F,QAAU,IAC9C/F,EAASR,WAAW,aAAev5B,EAAKs5B,QAAQ,UAChDS,EAASR,WAAW,UAAYv5B,EAAKs5B,QAAQ,SAC7CS,EAASR,WAAW,YAAcv5B,EAAKs5B,QAAQ,UAC/CS,EAASR,WAAW,UAAYv5B,EAAKs5B,QAAQ,UAE/C1rC,EAAK4pC,KAAKC,MAAW,IAAL7pC,GAChB6uC,EAAKK,gBAAkB/C,EAAS8C,SAG9B78B,EAAK86B,MAAM,YAAa,mBAC1Bv6B,EAAKi3B,KAAKC,MAAMl3B,EAAK,IAGvB,IAAMqhC,EAAa5hC,EAAKqnC,SAAWrN,EAAST,WAAW,eAAgB,eAEjEiH,EAAczG,EAASljC,OAAO0wC,GAC9BlG,EAAerH,EAASnjC,OAAO2wC,IACjChH,EAAc,IAAOoB,GAAcpB,EAAc,KACnDlgC,EAAKk5B,GAAgBl5B,EAAIkgC,GACzB/D,EAAK+D,YAAcA,IAEjBa,EAAe,IAAOO,GAAcP,EAAe,KACrD9gC,EAAKi5B,GAAgBj5B,EAAI8gC,GACzB5E,EAAK4E,aAAeA,GAGtB,IAAMqG,EAAK3N,EAASjC,MAChB8P,EAAapQ,KAAKC,MAAMD,KAAKC,MAAOD,KAAKC,MAAO,EAAIiQ,EAAM,EAAI,GAAKpnC,EAAK1S,EAAM2S,GAAM,IAOxF,GALIw5B,EAASmB,UAAU,QAAUoM,IAAevN,EAASR,WAAW,UAClEqO,EAAapQ,KAAKC,MAAMmQ,EAAa,GACrCnL,EAAKsB,UAAW,IAGb6D,EAAY,CACf,IAAMiM,EAAsC,YAAnB/b,EAAMC,SAAyB,EAAI,EAAI,GAC5DuV,GAAcxV,EAAMoB,aAAagB,WACnC0T,EAAapQ,KAAKC,MAAMmQ,EAAaiG,GACrCpR,EAAKvI,WAAY,IACPoT,GAAcxV,EAAMoB,aAAaiB,gBAC3CyT,EAAapQ,KAAKC,MAAMmQ,EAAaiG,GACrCpR,EAAKtI,eAAgB,EAEzB,CAEIn0B,EAAK86B,MAAM,YAAiD,QAAnChJ,EAAMoB,aAAaqC,cAC9CqS,EAAapQ,KAAKC,MAAmB,EAAbmQ,GACxBnL,EAAKlH,YAAc,OAGE,YAAnBzD,EAAMC,UAA0C,oBAAhB/xB,EAAK3Z,SACvCuhD,EAAapQ,KAAKC,MAAMmQ,EAAa,IAGlC9V,EAAM4T,WAAW,QAAU1lC,EAAKs5B,QAAQ,SACxCxH,EAAM4T,WAAW,SAAW1lC,EAAKs5B,QAAQ,UAC5CsO,EAAapQ,KAAKC,MAAmB,IAAbmQ,GACxBnL,EAAKzK,QAAUF,EAAME,UAEpBF,EAAM4T,WAAW,QAAU1lC,EAAKs5B,QAAQ,UACxCxH,EAAM4T,WAAW,SAAW1lC,EAAKs5B,QAAQ,SACzCt5B,EAAK86B,MAAM,eAAiBhJ,EAAM4T,WAAW,OAAQ,OAAQ,WAE9DkC,EAAapQ,KAAKC,MAAMmQ,EAAa,GACrCnL,EAAKzK,QAAUF,EAAME,SAGnB+H,EAASR,WAAW,eAAiBQ,EAASU,WAAaz6B,EAAKs5B,QAAQ,UAC1EsO,EAAapQ,KAAKC,MAAmB,IAAbmQ,GACxBnL,EAAKK,gBAAkB,cAGzB8K,GAAgC,aAAlB5nC,EAAKnS,SAA0B2pC,KAAKmC,IAAI,EAAGiO,GAAcA,GAAc,EAEjFhG,IACFgG,GAAc,EACdnL,EAAKmF,YAAa,GAGhB5hC,EAAK86B,MAAM,iBAAmBhJ,EAAME,UACtC4V,GAAc,EACdnL,EAAKyE,OAAc,EAALtzC,GAGZkkC,EAAMmB,aAAa0B,gBACrBiT,EAAapQ,KAAKC,MAAmB,IAAbmQ,GACxBnL,EAAK9H,eAAgB,GAGnB30B,EAAKs5B,QAAOuB,MAAZ76B,GAAIstB,EAAAA,GAAAA,GAAYyM,EAAS55B,UAC3BynC,EAAapQ,KAAKC,MAAmB,IAAbmQ,IAG1BA,EAAapQ,KAAKC,MAAMmQ,EAAaR,GACrCP,EAAO1H,OAAS,GAChB,IAAK,IAAI14C,EAAI,GAAIA,GAAK,IAAKA,IACzBogD,EAAO1H,OAAO14C,EAAI,IAAM+wC,KAAKmC,IAAI,EAAGnC,KAAKC,MAAOmQ,EAAanhD,EAAK,MAGpE,OAAOogD,CACT,EJvTO,SACLl/C,EACAoyC,EACAC,EACAh6B,EACA8xB,GAIAwJ,GAAavB,EAAUjI,GACvBwJ,GAAatB,EAAUlI,GACvB0J,GAAczB,EAAUjI,EAAME,SAC9BwJ,GAAcxB,EAAUlI,EAAME,SAC9ByJ,GAAU1B,GACV0B,GAAUzB,GACV6B,GAAgBl0C,EAAKoyC,EAAUC,GAC/B6B,GAAgBl0C,EAAKqyC,EAAUD,GAC/BiC,GAAcjC,EAAUC,GACxBgC,GAAchC,EAAUD,GACxBA,EAASG,MAAM/M,IAAMkN,GAAc1yC,EAAKoyC,EAAUjI,EAAOA,EAAMmB,cAC/D+G,EAASE,MAAM/M,IAAMkN,GAAc1yC,EAAKqyC,EAAUlI,EAAOA,EAAMoB,cAE/D,IAAMuJ,EAAgB,CACpBqE,aAAc/G,EAAS/zC,KACvBi7C,SAAUjhC,EAAKha,KACf07C,aAAc1H,EAASh0C,MAGnB6gD,EAAS,IAAIR,GAAO1+C,EAAKoyC,EAAUC,EAAUh6B,EAAM8xB,EAAO,EAAG2K,GAEnE,GAAsB,WAAlBz8B,EAAKnS,WAA0BmS,EAAK86B,MAAM,gBAC5C,OAAO+L,EAGT,GAAI/U,EAAMoB,aAAamB,cAAgBr0B,EAAK9G,cAE1C,OADAujC,EAAKpI,aAAc,EACZwS,EAGL9M,EAASR,WAAW,kBACtBS,EAAS6C,QAAU,GACnBJ,EAAKK,gBAAkB/C,EAAS8C,SAGlC,IAAM+E,EAAa5hC,EAAKqnC,SAAWrN,EAAST,WAAW,eAAgB,eAEnEhsC,EAAYyS,EAAKpS,GACrB,GAAIoS,EAAK86B,MAAM,gBACThJ,EAAM4T,WAAW,QACnB1lC,EAAKxS,KAAO,OACZD,GAAa,GACJukC,EAAM4T,WAAW,SAC1B1lC,EAAKxS,KAAO,QACZD,GAAa,GACJukC,EAAM4T,WAAW,SAC1B1lC,EAAKxS,KAAO,OACZD,GAAa,GACJukC,EAAM4T,WAAW,SAC1B1lC,EAAKxS,KAAO,MACZD,GAAa,GAEbyS,EAAKxS,KAAO,SAGdivC,EAAKzK,QAAUF,EAAME,QACrByK,EAAK0E,SAAWnhC,EAAKxS,KACrBivC,EAAKyE,OAAS3zC,OACT,GAAIyS,EAAK86B,MAAM,aAAef,EAAShE,MAAQgE,EAAShE,KAAK3I,SAAS,SAC3EptB,EAAKxS,KAAOsoC,GAAiBiE,EAAShE,WACjC,GAAI/1B,EAAK86B,MAAM,iBAAmBf,EAAShE,MAAQgE,EAAShE,KAAK3I,SAAS,SAAU,CACzF,IAAMyJ,EAAOF,GAAehvC,EAAKoyC,EAAShE,MAC1C/1B,EAAKxS,KAAOqpC,EAAKjqC,EACjBoT,EAAKpS,GAAKipC,EAAKhqC,EACf4vC,EAAKE,aAAe5C,EAAShE,KAC7B0G,EAAKyE,OAASlhC,EAAKpS,GACnB6uC,EAAK0E,SAAWnhC,EAAKxS,IACvB,CAEIusC,EAASR,WAAW,eACtBv5B,EAAKxS,KAAO,SACZivC,EAAKK,gBAAkB/C,EAAS8C,SAGlC,IAAMzB,EAAkBrB,EAASR,WAAW,YAAczH,EAAMoB,aAAauB,YAEvEsS,EAAmC,CACvC,SACA,OACA,QACA,WACA,QACA,MACA,WACA,SACA,SACA,SACA,UACA,MACA,OACA,QACA,SACA,OACA,SAGEC,EAAoBhN,EAAS75B,MAAM,GACnC8mC,EAAqBjN,EAAS75B,MAAM,GAExC,GAAI8mC,GAAsBD,IAAsBC,GAClBF,EAAiCzK,QAAQ0K,GACxCD,EAAiCzK,QAAQ2K,GAEtB,CAAC,IAAD/V,EACJ,CAAC+V,EAAoBD,GAA9DA,EAAiB9V,EAAA,GAAE+V,EAAkB/V,EAAA,EACxC,CAGF,IAAIgW,EACF/L,GAAqBxzC,EAAKqY,EAAMgnC,EAAmB5L,EAAiBtJ,EAAMQ,WACxE6U,EAAqBF,EACrB9L,GAAqBxzC,EAAKqY,EAAMinC,EAAoB7L,EAAiBtJ,EAAMQ,WAC3E,EAEA8U,EAAoBF,EAAqBC,EAY7C,GAT0B,IAAtBC,GAA2BpnC,EAAKs5B,QAAQ,WAAaU,EAASb,QAAQ,eAC7C,IAAvB+N,EACFA,EAAqB,EACZlN,EAAS75B,MAAM,IAA6B,IAAvBgnC,IAC9BA,EAAqB,GAEvBC,EAAoBF,EAAqBC,GAGjB,IAAtBC,EACF,OAAOP,EAIT,KAD2B7mC,EAAKs5B,QAAQ,QAAUt5B,EAAK86B,MAAM,eACjCd,EAAST,WAAW,iBAAmB6N,GAAqB,GACnFpnC,EAAKs5B,QAAQ,SAAWU,EAAST,WAAW,eAC5Cv5B,EAAKs5B,QAAQ,UAAYU,EAAST,WAAW,WAAY,iBACzDv5B,EAAKs5B,QAAQ,aAAeU,EAAST,WAAW,cAAe,gBAC/Dv5B,EAAKs5B,QAAQ,YAAcxH,EAAMQ,YAC/B0H,EAASb,QAAQ,cAAgBa,EAAST,WAAW,aACvDv5B,EAAKjB,MAAMQ,OAASy6B,EAAST,WAAW,cAG3C,OADAkD,EAAKG,gBAAkB5C,EAAS6C,QACzBgK,EAGTpK,EAAK6E,MAAK,GAAAt6C,OAAMgzC,EAAS8E,IAAIz+B,GAAE,OAE/B,IAAMymC,EAAc9H,GAAuBjF,EAAU/5B,GACrD,GAAI8mC,EAEF,OADAD,EAAO1H,OAAS2H,EACTD,EAGL7mC,EAAK2/B,KAAO,IACdlD,EAAKkD,KAAO3/B,EAAK2/B,MAEnB,IAAM8I,EAAY1O,EAASG,MAAM/M,IAAM6M,EAASE,MAAM/M,IAAM,QAAU,OAKtE,OAAQntB,EAAKha,MACb,IAAK,QACCg0C,EAAS2J,SAAW3J,EAAS8F,QAAU,IACzCvyC,GAAa,EACbkvC,EAAKyE,OAAS3zC,GAEhB,MACF,IAAK,WACL,IAAK,cACHA,EAAYiqC,KAAKmC,IAAI,EAAGnC,KAAKC,MAAOlqC,EAAYwsC,EAAS4J,QAAW5J,EAAS+F,UAC7ErD,EAAKyE,OAAS3zC,EACd,MACF,IAAK,SACCwsC,EAASmB,UAAU,MAAO,MAAO,MAAO,SAC1C3tC,EAAsB,EAAVyS,EAAKpS,GACjB6uC,EAAKyE,OAAS3zC,GAEhB,MACF,IAAK,QACL,IAAK,WACH,IAAMV,EAAI2qC,KAAKC,MAAO,GAAKsC,EAAS4J,QAAW5J,EAAS+F,SACxDvyC,EAAYV,GAAK,EAAI,IAAMA,GAAK,EAAI,IAAMA,GAAK,GAAK,IAAMA,GAAK,GAAK,GAAKA,GAAK,GAAK,GAAK,GACxF4vC,EAAKyE,OAAS3zC,EACd,MACF,IAAK,QACHA,EAAYmpC,GAAcqD,EAAShE,MACnC0G,EAAKyE,OAAS3zC,EACdkvC,EAAKE,aAAe5C,EAAShE,KAC7B,MACF,IAAK,aACL,IAAK,WACH,IAAM4S,EAAI3O,EAASt5B,SACnBnT,EAAYo7C,GAAK,IAAM,IAAMA,GAAK,IAAM,IAAMA,GAAK,GAAK,GAAKA,GAAK,GAAK,GAAKA,GAAK,GAAK,GAAK,GAC3FlM,EAAKyE,OAAS3zC,EACd,MACF,IAAK,YACHA,EAAYiqC,KAAKkC,IAAI,IAAKlC,KAAKC,MAAO,GAAKuC,EAASE,MAAM/M,IAAO4M,EAASG,MAAM/M,MAChFsP,EAAKyE,OAAS3zC,EACd,MACF,IAAK,UACe,UAAdk7C,IACFl7C,GAAa,EACbkvC,EAAKyE,OAAS3zC,GAEhB,MACF,IAAK,aACHA,EAAYiqC,KAAKkC,IAAI,IAAK,GAAK,GAAK4E,GAAY32C,EAAKqyC,EAASnjC,SAC9D4lC,EAAKyE,OAAS3zC,EACd,MACF,IAAK,eACCysC,EAASkB,UAAU,SACrB3tC,GAAa,EACbkvC,EAAKyE,OAAS3zC,GAEhB,MACF,IAAK,eACHyS,EAAKnS,SAAW,UAChBmS,EAAKjG,aAAc,EACnBxM,EAAY,GACZkvC,EAAKwE,SAAW,aAChB,MACF,IAAK,aACL,IAAK,YACH1zC,EAAYiqC,KAAKC,MAA0B,IAAnBuC,EAAS2J,QAAiB3J,EAAS8F,SAAW,EACtErD,EAAKyE,OAAS3zC,EACd,MACF,QACEA,EAAYyS,EAAKpS,GAGnB,GAAkB,IAAdL,EACF,OAAOs5C,EAGL/U,EAAMmB,aAAa0B,gBACrBpnC,EAAYiqC,KAAKC,MAAkB,IAAZlqC,GACvBkvC,EAAK9H,eAAgB,GAGvB,IAAM2S,EAA+B,aAAlBtnC,EAAKnS,SACnBksC,EAASZ,QAAQ,gBAAkBmO,GACnCvN,EAASZ,QAAQ,kBAAoBmO,GACxC/5C,EAAYiqC,KAAKC,MAAkB,IAAZlqC,GACvBkvC,EAAKE,aAAe5C,EAAShE,OACpB/1B,EAAKs5B,QAAQxD,GAAiBiE,EAAShE,QAC/CgE,EAASZ,QAAQ,gBACjBY,EAASe,MAAM,WACf96B,EAAKs5B,QAAQ,QAAS,WACtBS,EAASZ,QAAQ,iBACjBY,EAASe,MAAM,WACf96B,EAAKs5B,QAAQ,QAAS,WACtBS,EAASZ,QAAQ,iBACjBY,EAASe,MAAM,oBACf96B,EAAKs5B,QAAQ,QAAS,aAEvB/rC,EAAYiqC,KAAKC,MAAkB,IAAZlqC,GACvBkvC,EAAKE,aAAe5C,EAAShE,MAG1BgE,EAASR,WAAW,cAAgBv5B,EAAK9Q,QAAU8Q,EAAKpQ,iBACxDmqC,EAASR,WAAW,cAAgBv5B,EAAKjB,MAAMK,OAClD7R,EAAYiqC,KAAKC,MAAkB,IAAZlqC,GACvBkvC,EAAKK,gBAAkB/C,EAAS8C,UACtB9C,EAAS4J,SAAW5J,EAAS+F,QAAU,IAC/C/F,EAASR,WAAW,aAAev5B,EAAKs5B,QAAQ,UAC/CS,EAASR,WAAW,UAAYv5B,EAAKs5B,QAAQ,SAC7CS,EAASR,WAAW,YAAcv5B,EAAKs5B,QAAQ,UAC/CS,EAASR,WAAW,UAAYv5B,EAAKs5B,QAAQ,SAC7CS,EAASR,WAAW,eAAiBhsC,GAAa,MAErDA,EAAYiqC,KAAKC,MAAkB,IAAZlqC,GACvBkvC,EAAKK,gBAAkB/C,EAAS8C,SAG7B7C,EAAST,WAAW,cAAgBv5B,EAAKs5B,QAAQ,SACjDU,EAAST,WAAW,cAAiBv5B,EAAKs5B,QAAQ,OAAQ,QAC7D/rC,EAAYiqC,KAAKC,MAAkB,GAAZlqC,GACvBkvC,EAAKG,gBAAkB5C,EAAS6C,SACvB7C,EAAST,WAAW,aAAev5B,EAAKs5B,QAAQ,UACzD/rC,EAAYiqC,KAAKC,MAAkB,KAAZlqC,GACvBkvC,EAAKG,gBAAkB5C,EAAS6C,SAMlC,IAEIW,EAFE+J,EAAaD,EAAa,MAAQ,MACxC7K,EAAKiE,UAAY9B,GAAqBj3C,EAAKoyC,EAAUwN,EAAYxN,EAASxI,QAE1E,IAAMiP,EAAczG,EAASljC,OAAO0wC,GAC9BuG,EAAY/T,EAASO,SAASiN,GAChB,IAAhB/G,GAAsBoB,GAAcpB,EAAc,EACpDhD,EAASsQ,EACA9T,EAAST,WAAW,YAC7BiE,EAASsQ,EACTrR,EAAKG,gBAAkB5C,EAAS6C,SACvB9C,EAASR,WAAW,WAC7BiE,EAASsK,GAAsBgG,EAAWtN,GAC1C/D,EAAKK,gBAAkB/C,EAAS8C,QAChCJ,EAAK+D,YAAcA,IAEnBhD,EAAShE,GAAgBsU,EAAWtN,GACpC/D,EAAK+D,YAAcA,GAGjB8G,GAAcvN,EAASR,WAAW,aAAc,eAClDiE,GAAU,EACVf,EAAKK,gBAAkB/C,EAAS8C,SACvB/K,EAAM4T,WAAW,QACzB3L,EAASR,WAAW+N,EAAa,cAAgB,gBAElD9J,EAAShG,KAAKC,MAAe,IAAT+F,GACpBf,EAAKK,gBAAkB/C,EAAS8C,QAChCJ,EAAKzK,QAAUF,EAAME,SACZF,EAAMmB,aAAa4B,cAAgB/C,EAAM4T,WAAW,QAAU4B,GACvE9J,EAAShG,KAAKC,MAAe,IAAT+F,GACpBf,EAAKzK,QAAUF,EAAME,QACrByK,EAAKuE,sBAAuB,GAE3BsG,IACEvN,EAASR,WAAW,WAAcQ,EAASR,WAAW,SAAWQ,EAASW,UAC3E4M,GAAcvN,EAASU,WAAaV,EAASR,WAAW,OAAQ,UAElEiE,EAAShG,KAAKC,MAAe,IAAT+F,GACpBf,EAAKK,gBAAkB/C,EAAS8C,SACvByK,GAAcvN,EAASR,WAAW,eAAiBQ,EAASU,YACrE+C,EAAShG,KAAKC,MAAM+F,EAAS,GAC7Bf,EAAKK,gBAAkB/C,EAAS8C,UAG7ByK,EAAavN,EAASZ,QAAQ,eAAiBY,EAASZ,QAAQ,mBAC/DmO,GAAcvN,EAASZ,QAAQ,aAAeY,EAASe,MAAM,SAAU,WAC3E0C,EAAShG,KAAKC,MAAe,IAAT+F,GACpBf,EAAKE,aAAe5C,EAAShE,OAE5BgE,EAASZ,QAAQ,eAAiBY,EAASe,MAAM,YACjDf,EAASZ,QAAQ,eAAiBY,EAASe,MAAM,SAAU,YAAcwM,GACzEvN,EAASZ,QAAQ,mBAAqBY,EAASe,MAAM,cAAgBwM,KAEtE9J,GAAU,EACVf,EAAKE,aAAe5C,EAAShE,MAM/B,IAEI0H,EAFE+J,EAAcF,EAAa,MAAQ,MACzC7K,EAAK8E,WAAa3C,GAAqBj3C,EAAKqyC,EAAUwN,EAAaxN,EAASzI,QAE5E,IAAM8P,EAAerH,EAASnjC,OAAO2wC,GAC/BuG,EAAa/T,EAASM,SAASkN,GAChB,IAAjBnG,GAAuBO,GAAcP,EAAe,EACtD5D,EAAUsQ,EACDhU,EAASR,WAAW,YAC7BkE,EAAUsQ,EACVtR,EAAKK,gBAAkB/C,EAAS8C,SACvB7C,EAAST,WAAW,WAC7BkE,EAAUqK,GAAsBiG,EAAY1M,GAC5C5E,EAAKG,gBAAkB5C,EAAS6C,QAChCJ,EAAK4E,aAAeA,IAEpB5D,EAAUjE,GAAgBuU,EAAY1M,GACtC5E,EAAK4E,aAAeA,GAGlBrH,EAAST,WAAW,iBAAmBS,EAASU,QAAU4M,GAC5D7J,EAAUjG,KAAKC,MAAgB,IAAVgG,GACrBhB,EAAKG,gBAAkB5C,EAAS6C,SACvB7C,EAAST,WAAW,gBAAkBzH,EAAM4T,WAAW,SAAW4B,GAC3E7J,EAAUjG,KAAKC,MAAgB,IAAVgG,GACrBhB,EAAKG,gBAAkB5C,EAAS6C,QAChCJ,EAAKzK,QAAUF,EAAME,SACZF,EAAMoB,aAAa2B,cAAgB/C,EAAM4T,WAAW,SAAW4B,IACxE7J,EAAUjG,KAAKC,MAAgB,IAAVgG,GACrBhB,EAAKzK,QAAUF,EAAME,QACrByK,EAAKkF,sBAAuB,GAG1B3H,EAASb,QAAQ,aAAea,EAASc,MAAM,SAAU,YAAcwM,GACzE7J,EAAUjG,KAAKC,MAAgB,IAAVgG,GACrBhB,EAAKM,aAAe/C,EAASjE,OAE5BiE,EAASb,QAAQ,mBAAqBa,EAASc,MAAM,cAAgBwM,GACrEtN,EAASb,QAAQ,iBAAmBa,EAASc,MAAM,UAAYwM,KAEhE7J,GAAW,EACXhB,EAAKM,aAAe/C,EAASjE,MAG3BjE,EAAM4T,WAAW,SAAW1L,EAASV,QAAQ,UAAYgO,IAC3D7J,EAAUjG,KAAKC,MAAgB,IAAVgG,GACrBhB,EAAKzK,QAAUF,EAAME,UAGnBhyB,EAAK86B,MAAM,cAAgB96B,EAAK86B,MAAM,oBACxC2C,EAAUjG,KAAKC,MAAgB,GAAVgG,IAGnBA,EAAU,IACZA,EAAU,GAMZ,IAAImK,EAAapQ,KAAKC,MACpBD,KAAKC,MAAOD,KAAKC,MAAO,EAAIsC,EAASjC,MAAS,EAAI,GAAKvqC,EAAYiwC,EAAU,IAAMC,GAQrF,GALI1D,EAASmB,UAAU,QAAUoM,IAAevN,EAASR,WAAW,UAClEqO,EAAapQ,KAAKC,MAAmB,GAAbmQ,GACxBnL,EAAKsB,UAAW,IAGb6D,EAAY,CACf,IAAMiM,EAAsC,YAAnB/b,EAAMC,SAAyB,EAAI,EAAI,GAC5DuV,GAAcxV,EAAMoB,aAAagB,WACnC0T,EAAapQ,KAAKC,MAAMmQ,EAAaiG,GACrCpR,EAAKvI,WAAY,IACPoT,GAAcxV,EAAMoB,aAAaiB,gBAC3CyT,EAAapQ,KAAKC,MAAMmQ,EAAaiG,GACrCpR,EAAKtI,eAAgB,EAEzB,CAEuB,YAAnBrC,EAAMC,UACN,CAAC,cAAe,mBAAmB3E,SAASptB,EAAK3Z,UACnDuhD,EAAapQ,KAAKC,MAAoB,EAAbmQ,EAAkB,IAGxC9V,EAAM4T,WAAW,QAAU1lC,EAAKs5B,QAAQ,SACxCxH,EAAM4T,WAAW,SAAW1lC,EAAKs5B,QAAQ,UAC5CsO,EAAapQ,KAAKC,MAAmB,IAAbmQ,GACxBnL,EAAKzK,QAAUF,EAAME,UAEpBF,EAAM4T,WAAW,QAAU1lC,EAAKs5B,QAAQ,UACxCxH,EAAM4T,WAAW,SAAW1lC,EAAKs5B,QAAQ,SACzCt5B,EAAK86B,MAAM,eAAiBhJ,EAAM4T,WAAW,OAAQ,OAAQ,WAE9DkC,EAAapQ,KAAKC,MAAmB,GAAbmQ,GACxBnL,EAAKzK,QAAUF,EAAME,SAGnB+H,EAASR,WAAW,eAAiBQ,EAASU,WAAaz6B,EAAKs5B,QAAQ,UAC1EsO,EAAapQ,KAAKC,MAAmB,IAAbmQ,GACxBnL,EAAKK,gBAAkB,cAGzB8K,GAAc,EAEVhG,IACE7H,EAASR,WAAW,WACtBqO,GAAc,EACdnL,EAAKK,gBAAkB/C,EAAS8C,SAEhC+K,GAAc,EAEhBnL,EAAKmF,WAAaA,GAGhB7H,EAASZ,QAAQ,cACnByO,EAAapQ,KAAKC,MAAmB,IAAbmQ,GACxBnL,EAAKE,aAAe5C,EAAShE,MAG3B/1B,EAAK86B,MAAM,YAAiD,QAAnChJ,EAAMoB,aAAaqC,cAE1CwE,EAASR,WAAW,cACtBqO,EAAapQ,KAAKC,MAAmB,EAAbmQ,IAExBA,EAAapQ,KAAKC,MAAmB,EAAbmQ,GACxBnL,EAAKlH,YAAc,QAMvB,IAAIyI,EAAU,EACVh+B,EAAKs5B,QAAOuB,MAAZ76B,GAAIstB,EAAAA,GAAAA,GAAYyM,EAAS55B,UACvB45B,EAASR,WAAW,iBACtByE,EAAU,EACVvB,EAAKK,gBAAkB/C,EAAS8C,SAEhCmB,EAAU,KAId,IAAIgQ,EAAY,EACZhU,EAAST,WAAW,SAAU,eAAiB6N,EAAoB,IACrE4G,EAAY,IACZvR,EAAKG,gBAAkB5C,EAAS6C,SAElC,IAAIoR,EAAW,EACXlU,EAASZ,QAAQ,gBAAkBiO,EAAoB,IACzD6G,EAAW,IACXxR,EAAKE,aAAe5C,EAAShE,MAE/B,IAAImY,EAAY,EACZnU,EAASR,WAAW,gBAAkB6N,EAAoB,IAC5D8G,EAAY,EACZzR,EAAKK,gBAAkB/C,EAAS8C,SAElC,IAAIsR,EAAW,EACXnuC,EAAKs5B,QAAQtD,GAAmBgE,EAASjE,SAC1CqR,EAAoB,GAAKpnC,EAAKs5B,QAAQ,aACvC6U,EAAW,GACX1R,EAAKM,aAAe/C,EAASjE,MAI/B,IADA,IAAMoJ,EAAmB,GAChB14C,EAAI,EAAGA,EAAI,GAAIA,IACtB04C,EAAO14C,GAAK+wC,KAAKC,MAAOmQ,GAAc,GAAKnhD,GAAM,KACjD04C,EAAO14C,GAAK+wC,KAAKC,MAAM0H,EAAO14C,GAAKu3C,GACnCmB,EAAO14C,GAAK+wC,KAAKC,MAAM0H,EAAO14C,GAAKygD,GACnC/H,EAAO14C,GAAK+wC,KAAKC,MAAM0H,EAAO14C,GAAK0gD,GACnChI,EAAO14C,GAAK+wC,KAAKC,MAAM0H,EAAO14C,GAAKunD,GACnC7O,EAAO14C,GAAK+wC,KAAKC,MAAM0H,EAAO14C,GAAKwnD,GACnC9O,EAAO14C,GAAK+wC,KAAKC,MAAM0H,EAAO14C,GAAKynD,GACnC/O,EAAO14C,GAAK+wC,KAAKC,MAAM0H,EAAO14C,GAAK0nD,GACnChP,EAAO14C,GAAK+wC,KAAKmC,IAAI,EAAGwF,EAAO14C,IAMjC,OAJAogD,EAAO1H,OAASA,EAIT0H,CACT,EGzhBEmB,GACAA,GACAuC,GACAA,GACAA,IEjBF,IAAM6D,GAAQ,CAAC,KAAM,MAAO,MAAO,MAAO,MAAO,OAC3CC,GAAM,IAAIzuC,IAAI,CAAC,QAGR0uC,GAAO,WAwDlB,SAAAA,EACE3mD,EACA3B,GAWC,IAADuoD,EAVAxoD,EASCO,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,GAACsB,EAAAA,EAAAA,GAAA,KAAA0mD,GAAA,KAnER3mD,SAAG,OACH3B,UAAI,OACJynC,aAAO,OAEPttB,WAAK,OACLO,cAAQ,OAERo3B,WAAK,OACLmK,oBAAc,OACduM,qBAAe,OACfttC,YAAM,OACN27B,aAAO,OACPpC,eAAS,OACTkQ,iBAAW,OACX8D,kBAAY,OACZ7I,gBAAU,OACV8I,mBAAa,OACbhR,iBAAW,OACX3H,UAAI,OACJ+P,cAAQ,OACR2E,YAAM,OACN4C,gBAAU,OACVvL,kBAAY,OACZ6M,UAAI,OACJC,uBAAiB,OACjBxV,eAAS,OACTC,iBAAW,OAEX9H,YAAM,OACN0F,SAAG,OACH6H,SAAG,OACHjoC,YAAM,OACNm0C,cAAQ,OACR6D,aAAO,OACPjD,gBAAU,OACVrN,kBAAY,OACZmN,eAAS,OACTpR,cAAQ,OACRJ,WAAK,OAEL4U,mBAAa,OACbpU,YAAM,OACNqU,oBAAc,OACdhK,kBAAY,OACZ4G,eAAS,OACT/K,kBAAY,OACZoO,kBAAY,EACZ,KAEAjvC,WAAK,OAELkvC,sBAAgB,OAChBzC,wBAAkB,OAClBE,wBAAkB,EAgBhB/lD,KAAK8mC,QAAU3nC,GAAO,EAAM,CAAC,EAAG6B,EAAI8lC,QAAQ7kC,IAAI/E,EAAKmC,IAAQD,EAAQmpD,WAErEvoD,KAAKgB,IAAMA,EACXhB,KAAKX,KAAOD,EAAQC,MAAQA,EAC5BW,KAAKwZ,MAAQpa,EAAQoa,OAASxZ,KAAK8mC,QAAQttB,MAC3CxZ,KAAK+Z,SAAW/Z,KAAK8mC,QAAQ/sB,SAE7B/Z,KAAKmxC,MAAQ/xC,EAAQ+xC,OAAS,IAC9BnxC,KAAKs7C,eAAiBl8C,EAAQk8C,gBAAkB,IAChDt7C,KAAK6nD,gBAAkBF,EAAQa,YAAYxnD,EAAK5B,EAAQyoD,gBAAiB,GAEzE7nD,KAAKua,OAASnb,EAAQmb,QAAUva,KAAK8mC,QAAQvsB,QAAU,IACvDva,KAAKk2C,QAAU92C,EAAQ82C,UAAiC,QAA1B0R,EAAI5nD,KAAK8mC,QAAQtkC,iBAAS,IAAAolD,OAAA,EAAtBA,EAAyB,UAAM/nD,EACjEG,KAAK8zC,YAAc10C,EAAQ00C,UAE3B9zC,KAAKgkD,cAAgB5kD,EAAQ4kD,YAC7BhkD,KAAK8nD,aAAe9nD,KAAKgkD,iBACKnkD,IAAzBT,EAAQ0oD,aAA6B,GAAK1oD,EAAQ0oD,kBAAgBjoD,EACvEG,KAAKi/C,aAAe7/C,EAAQ6/C,WAC5Bj/C,KAAK+nD,cAAgB3oD,EAAQ2oD,cAC7B/nD,KAAK+2C,YAAc33C,EAAQ23C,YAC3B/2C,KAAKioD,kBAAoB7oD,EAAQ6oD,kBACjCjoD,KAAKyyC,UAAYrzC,EAAQqzC,UACzBzyC,KAAK0yC,YAActzC,EAAQszC,YAC3B1yC,KAAKm/C,SAAW//C,EAAQ+/C,SACxBn/C,KAAK8jD,SAAW1kD,EAAQ0kD,OACxB9jD,KAAK0mD,WAAatnD,EAAQsnD,WAC1B1mD,KAAKm7C,aAAe/7C,EAAQ+7C,aAC5Bn7C,KAAKovC,KAAOhwC,EAAQgwC,KACpBpvC,KAAK4qC,OAASxrC,EAAQwrC,QAAW,UACjC5qC,KAAKswC,IAAMqX,EAAQa,YAAYxnD,EAAK5B,EAAQkxC,IAAK,IACjDtwC,KAAKm4C,IAAMwP,EAAQa,YAAYxnD,EAAK5B,EAAQ+4C,IAAKn3C,EAAIgqC,KAAO,EAAI,EAAI,KACpEhrC,KAAKkQ,OAASy3C,EAAQa,YAAYxnD,EAAK5B,EAAQ8Q,OAAQ,GAAG,GAC1DlQ,KAAKqkD,SAAWjlD,EAAQilD,UAAY,EACpCrkD,KAAKkoD,UAAY9oD,EAAQ8oD,QACzBloD,KAAKilD,aAAe7lD,EAAQ6lD,WAC5BjlD,KAAK43C,aAAex4C,EAAQw4C,cAAgB,EAC5C53C,KAAK+kD,UAAY3lD,EAAQ2lD,WAAa,EAIhB,IAAlB/kD,KAAK+Z,WAAmB/Z,KAAKgkD,aAAehkD,KAAK8mC,QAAQtgB,cAC3DxmB,KAAK+Z,SAAW/Y,EAAI8lC,QAAQ7kC,IAAI/E,EAAK8C,KAAK8mC,QAAQtgB,cAAezM,UAG/D/Y,EAAIgqC,IAAM,IACZhrC,KAAKswC,IAAI52B,GAAK82B,GAAMQ,OAClBR,GAAMiY,QAAQ,CACZh3C,IAAKzR,KAAKswC,IAAI7+B,IACdC,IAAK1R,KAAKswC,IAAI5+B,IACd80B,IAAKxmC,KAAKswC,IAAI9J,IACdmK,IAAK3wC,KAAKswC,IAAIngC,QAKpB,IAAMu4C,IAAqBtpD,EAAQu0C,SAC7BgV,IAAkBvpD,EAAQm0C,MAChCvzC,KAAK2zC,SAAW,CAAC,EACjB3zC,KAAKuzC,MAAQ,CAAC,EAAkB,IACRhxC,EADQG,GAAAC,EAAAA,EAAAA,GACb8kD,IAAK,IAAxB,IAAA/kD,EAAAE,MAAAL,EAAAG,EAAAG,KAAAb,MAA0B,CAAC,IAAhByuC,EAAIluC,EAAApB,MACPo9C,EAAMv+C,KAAK4oD,SAAS5nD,EAAKyvC,GAC/BzwC,KAAK2zC,SAASlD,GAAQiY,EAAmBtpD,EAAQu0C,SAAUlD,GAAoB,OAATA,IAAkB8N,EAAIv+C,KAAKs7C,eAAe,IAAMiD,EACtHv+C,KAAKuzC,MAAM9C,GAASkY,EAAgBvpD,EAAQm0C,MAAO9C,GAAmB,OAATA,IAAkB8N,EAAIv+C,KAAKs7C,eAAe,IAAMiD,CAC/G,CAAC,OAAAhhD,IAAAmF,EAAAxD,EAAA3B,GAAA,SAAAmF,EAAAI,GAAA,CAED,IAAMk6C,EAAQ59C,EAAQ49C,OAAS59C,EAAQ+oD,cACvCnoD,KAAKmoD,cAAgBnL,GAASA,GAASh9C,KAAK2zC,SAASj6B,GAAKsjC,EAAkB,IAAVA,EAAc,EAAIh9C,KAAK2zC,SAASj6B,GAClG1Z,KAAK+zC,OAAS30C,EAAQ20C,QAAU,GAChC/zC,KAAKooD,eAAiBhpD,EAAQgpD,gBAAkB,GAChDpoD,KAAKo+C,aAAeh/C,EAAQg/C,cAAgB,EAC5Cp+C,KAAKglD,UAAY5lD,EAAQ4lD,WAAa,EACtChlD,KAAKi6C,aAAe76C,EAAQ66C,cAAgB,EAC5Cj6C,KAAKqoD,eAAiBjpD,EAAQipD,aAE9BroD,KAAKoZ,MAAQha,EAAQga,OAAS,GAC9BpZ,KAAKsoD,iBAAmBlpD,EAAQkpD,iBAChCtoD,KAAK6lD,mBAAqBzmD,EAAQymD,oBAAsB,EACxD7lD,KAAK+lD,mBAAqB3mD,EAAQ2mD,oBAAsB,CAC1D,CA2JC,OA3JA7kD,EAAAA,EAAAA,GAAAymD,EAAA,EAAA3pD,IAAA,QAAAmD,MAED,WAEE,QAFYxB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,KAEKK,KAAKgkD,aAA6C,IAA9BhkD,KAAK8mC,QAAQR,UAAU5sB,GACnDm3B,KAAKC,MAAO9wC,KAAK2zC,SAASj6B,IAAM,IAAM,EAAI1Z,KAAK8nD,cAAkB,KAGnE9nD,KAAK2zC,SAASj6B,EACvB,GAAC,CAAA1b,IAAA,QAAAmD,MAED,WAEE,QAFYxB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,KAEKK,KAAKgkD,aAA6C,IAA9BhkD,KAAK8mC,QAAQR,UAAU5sB,GACnDm3B,KAAKyH,KAAMt4C,KAAKmoD,eAAiB,IAAM,EAAInoD,KAAK8nD,cAAkB,KAGpE9nD,KAAKmoD,aACd,GAAC,CAAAnqD,IAAA,aAAAmD,MAED,WAAoC,IAAD,IAAAsrC,EAAA9sC,UAAAC,OAArB4C,EAAS,IAAAvC,MAAAwsC,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAATnqC,EAASmqC,GAAAhtC,UAAAgtC,GACrB,OAAwC,KAAhC3sC,KAAKsoD,kBAAoB,OAAetoD,KAAKk2C,UAAW1zC,EAAUikC,SAASzmC,KAAKk2C,SAC1F,GAAC,CAAAl4C,IAAA,UAAAmD,MAED,WAA6B,IAAD,IAAAyrC,EAAAjtC,UAAAC,OAAjBmH,EAAK,IAAA9G,MAAA2sC,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAL/lC,EAAK+lC,GAAAntC,UAAAmtC,GACd,SAAU9sC,KAAKovC,OAAQroC,EAAM0/B,SAASzmC,KAAKovC,MAC7C,GAAC,CAAApxC,IAAA,YAAAmD,MAED,WAAwC,IAAD,IAAA0nD,EAAAlpD,UAAAC,OAA1BkpD,EAAQ,IAAA7oD,MAAA4oD,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAARD,EAAQC,GAAAppD,UAAAopD,GACnB,SAAU/oD,KAAK+zC,SAAU+U,EAASriB,SAASzmC,KAAK+zC,QAClD,GAAC,CAAA/1C,IAAA,UAAAmD,MAED,WAAiC,IAAD,IAAA6nD,EAAArpD,UAAAC,OAArB4Z,EAAK,IAAAvZ,MAAA+oD,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAALzvC,EAAKyvC,GAAAtpD,UAAAspD,GACd,QAAA5mD,EAAA,EAAA6mD,EAAmB1vC,EAAKnX,EAAA6mD,EAAAtpD,OAAAyC,IAAE,CAArB,IAAMwE,EAAIqiD,EAAA7mD,GACb,GAAKrC,KAAK8jD,QAAU9jD,KAAKm/C,SAAYn/C,KAAKm/C,WAAat4C,EAAO7G,KAAKwZ,MAAMitB,SAAS5/B,GAAO,OAAO,CAAS,CAC3G,OAAO,CACT,GAEA,CAAA7I,IAAA,kBAAAmD,MACA,WAAyC,IAAD,IAAAgoD,EAAAxpD,UAAAC,OAArB4Z,EAAK,IAAAvZ,MAAAkpD,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAL5vC,EAAK4vC,GAAAzpD,UAAAypD,GACtB,QAAAlwC,EAAA,EAAAmwC,EAAmB7vC,EAAKN,EAAAmwC,EAAAzpD,OAAAsZ,IAAE,CAArB,IAAMrS,EAAIwiD,EAAAnwC,GACb,IAAKlZ,KAAKwZ,MAAMitB,SAAS5/B,GAAO,OAAO,CACzC,CACA,OAAO,CACT,GAAC,CAAA7I,IAAA,QAAAmD,MAED,WAA2B,IAAD,IAAAmoD,EAAA3pD,UAAAC,OAAjB2pD,EAAK,IAAAtpD,MAAAqpD,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAALD,EAAKC,GAAA7pD,UAAA6pD,GACZ,OAAOD,EAAM9iB,SAASzmC,KAAKX,KAC7B,GAAC,CAAArB,IAAA,QAAAmD,MAED,WACE,OAAO,IAAIwmD,EAAQ3nD,KAAKgB,IAAKhB,KAAKX,KAAM,CACtC8xC,MAAOnxC,KAAKmxC,MACZmK,eAAgBt7C,KAAKs7C,eACrBuM,gBAAiB7nD,KAAK6nD,gBACtB3R,QAASl2C,KAAKk2C,QACdpC,UAAW9zC,KAAK8zC,UAChBkQ,YAAahkD,KAAKgkD,YAClB8D,aAAc9nD,KAAK8nD,aACnB7I,WAAYj/C,KAAKi/C,WACjB8I,cAAe/nD,KAAK+nD,cACpBhR,YAAa/2C,KAAK+2C,YAClBkR,kBAAmBjoD,KAAKioD,kBACxBxV,UAAWzyC,KAAKyyC,UAChBrD,KAAMpvC,KAAKovC,KACX70B,OAAQva,KAAKua,OACbqwB,OAAQ5qC,KAAK4qC,OACb2I,MAAOvzC,KAAKuzC,MACZjD,IAAKnxC,GAAO,EAAM,CAAC,EAAGa,KAAKswC,KAC3B6H,IAAKh5C,GAAO,EAAM,CAAC,EAAGa,KAAKm4C,KAC3BjoC,OAAQ/Q,GAAO,EAAM,CAAC,EAAGa,KAAKkQ,QAC9Bm0C,SAAUrkD,KAAKqkD,SACf6D,QAASloD,KAAKkoD,QACdjD,WAAYjlD,KAAKilD,WACjBrN,aAAc53C,KAAK43C,aACnBmN,UAAW/kD,KAAK+kD,UAChBoD,cAAenoD,KAAKmoD,cACpBpU,OAAQ/zC,KAAK+zC,OACbqU,eAAgBpoD,KAAKooD,eACrBjJ,SAAUn/C,KAAKm/C,SACf2E,OAAQ9jD,KAAK8jD,OACb4C,WAAY1mD,KAAK0mD,WACjBvL,aAAcn7C,KAAKm7C,aACnBiD,aAAcp+C,KAAKo+C,aACnB4G,UAAWhlD,KAAKglD,UAChB/K,aAAcj6C,KAAKi6C,aACnBzgC,MAAOxZ,KAAKwZ,MACZ6uC,aAAcroD,KAAKqoD,aAEnBjvC,MAAOpZ,KAAKoZ,MAAMikC,QAClBiL,iBAAkBtoD,KAAKsoD,iBACvBzC,mBAAoB7lD,KAAK6lD,mBACzBE,mBAAoB/lD,KAAK+lD,mBACzBwC,UAAWvoD,KAAK8mC,SAEpB,GAAC,CAAA9oC,IAAA,WAAAmD,MAED,SAAiBH,EAAmByvC,GAClC,OAAOI,KAAKC,MAAM9wC,KAAK6nD,gBAAgBpX,GAASD,GAAMoY,SACpD5nD,EACAyvC,EACAzwC,KAAK8mC,QAAQR,UAAUmK,GACvBzwC,KAAKswC,IAAIG,GACTzwC,KAAKm4C,IAAI1H,GACTzwC,KAAKmxC,MACLnxC,KAAK4qC,QAET,IAAC,EAAA5sC,IAAA,WAAAmD,MAED,SACEH,EACAyoD,EACAra,EACAkL,GAEA,IAAMxT,EAAU9lC,EAAI8lC,QAAQ7kC,IAAI/E,EAAKusD,IACrC,GAAY,OAAP3iB,QAAO,IAAPA,IAAAA,EAASvgB,YACZ,OAAOkjC,EAGT,IAAI3pD,EAAI,EAcR,OAZGsvC,IACGA,EAAK3I,SAAS,SAAW2I,EAAK3I,SAAS,UACtB,YAAhBgjB,GAAsC,YAATra,GACb,WAAhBqa,GAAqC,aAATra,IAChCkL,GAA4B,aAAhBmP,GAA2C,eAAbnP,GAC1B,aAAhBmP,GAA2C,kBAAbnP,EAE/Bx6C,EAAI,EACS,OAAJsvC,QAAI,IAAJA,GAAAA,EAAM3I,SAAS,WACxB3mC,EAAI,GAGCA,EAAIgnC,EAAQvgB,YAAYzmB,EAAI,GAAKgnC,EAAQznC,IAClD,GAAC,CAAArB,IAAA,cAAAmD,MAED,SACEH,EACA0oD,EACAnL,GAEC,IADDoL,IAAKhqD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAECiqD,EAA6B,CAAC,EACpC,GAAIF,IACF9rD,EAAcgsD,EAAKF,EAAShC,IACxBgC,EAAQ/Y,MACViZ,EAAIz5C,IAAMu5C,EAAQ/Y,IAClBiZ,EAAIrjB,IAAMmjB,EAAQ/Y,KAEhBgZ,GAAS3oD,EAAIgqC,KAAO,GAAK0e,EAAQv5C,MAAQu5C,EAAQnjB,KACnD,MAAM,IAAI9oC,MAAM,8DAGpB,OAAAgrC,EAAAA,GAAAA,GAAA,CAAQ/uB,GAAI6kC,EAAK9sC,IAAK8sC,EAAK7sC,IAAK6sC,EAAKpuC,IAAKouC,EAAKhY,IAAKgY,EAAK/X,IAAK+X,GAAQqL,EACxE,KAACjC,CAAA,CAhTiB,GCLdkC,GAAU,CAAC,OAAQ,QAAS,QAAS,WAAY,MAAO,UAAW,OAAQ,UAEpE3xC,GAAI,WAwCf,SAAAA,EACElX,EACA3B,GAMC,IAADyqD,EAAAC,EALA3qD,EAICO,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,GAACsB,EAAAA,EAAAA,GAAA,KAAAiX,GAAA,KA9CRlX,SAAG,OACH3B,UAAI,OAEJ2qD,kBAAY,OACZ9T,aAAO,OACP9G,UAAI,OACJtI,aAAO,OACPmjB,UAAI,OACJC,YAAM,OACN3B,eAAS,OAETvP,UAAI,OACJ2E,eAAS,OACTC,4BAAsB,OACtB32C,QAAE,OACFJ,UAAI,OACJK,cAAQ,OACRkR,WAAK,OACLhF,iBAAW,OACX1T,YAAM,OACN6I,YAAM,OACNU,oBAAc,OACdiN,qBAAe,OACfrE,oBAAc,OACd6uC,YAAM,OACNt4C,oBAAc,OACd8yC,cAAQ,OACR9zC,WAAK,OACLoF,cAAQ,OACR8pC,gBAAU,OACVziC,qBAAe,OACf6C,2BAAqB,OACrB7B,2BAAqB,OACrBJ,8BAAwB,OACxB4D,8BAAwB,OACxB9F,mBAAa,OACbwD,SAAG,OACHc,WAAK,EAWHxX,EAAOD,EAAQC,MAAQA,EACvBW,KAAKgqD,aAAe3qD,EACpB,IAAI8Y,EAAehZ,GAAO,EAAM,CAACE,KAAAA,GAAO2B,EAAIoY,MAAMnX,IAAI/E,EAAKmC,IAAQD,EAAQmpD,WAI3E,GAFAvoD,KAAKg5C,KAAO55C,EAAQ45C,MAAQ,EAExB55C,EAAQ8qD,QAAU/xC,EAAKI,QAAS,CAClC,IAAM4xC,EAsLL,SACL3P,EACA4P,EACAC,EACAC,GAEA,GAAID,EAAU,MAAO,YACrB,GAAuB,cAAnBC,EAAgC,MAAO,aAC3C,GAAiB,SAAb9P,EAAqB,CACvB,GAAuB,mBAAnB4P,EAAqC,MAAO,iBAChD,GAAuB,qBAAnBA,EAAuC,MAAO,mBAClD,GAAuB,mBAAnBA,EAAqC,MAAO,iBAClD,CACA,GAAiB,WAAb5P,EAAuB,CACzB,GAAuB,eAAnB4P,EAAiC,MAAO,eAC5C,GAAuB,gBAAnBA,EAAkC,MAAO,kBAC7C,GAAuB,iBAAnBA,EAAmC,MAAO,kBAC9C,GAAuB,aAAnBE,EAA+B,MAAO,eAC1C,GAAuB,aAAnBA,EAA+B,MAAO,gBAC1C,GAAuB,gBAAnBA,EAAkC,MAAO,gBAC7C,GAAuB,cAAnBA,EAAgC,MAAO,eAC7C,CACA,GAAiB,UAAb9P,EAAsB,CACxB,GAAuB,kBAAnB4P,EAAoC,MAAO,eAC/C,GAAuB,mBAAnBA,EAAqC,MAAO,aAClD,CACA,GAAiB,UAAb5P,EAAsB,CACxB,GAAuB,oBAAnB4P,EAAsC,MAAO,mBACjD,GAAuB,kBAAnBA,EAAoC,MAAO,gBACjD,CACA,GAAiB,aAAb5P,EAAyB,CAC3B,GAAuB,iBAAnB4P,EAAmC,MAAO,mBAC9C,GAAkB,OAAdA,QAAc,IAAdA,GAAAA,EAAgBxH,WAAW,eACf,OAAdwH,QAAc,IAAdA,GAAAA,EAAgB1jB,SAAS,QAAS,MAAO,kBAC7C,CACA,GAAiB,UAAb8T,EAAsB,CACxB,GAAuB,kBAAnB4P,EAAoC,MAAO,kBAC/C,GAAuB,iBAAnBA,EAAmC,MAAO,iBAC9C,GAAuB,mBAAnBA,EAAqC,MAAO,kBAChD,GAAuB,kBAAnBA,EAAoC,MAAO,iBACjD,CACA,GAAiB,UAAb5P,EAAsB,CACxB,GAAuB,mBAAnB4P,EAAqC,MAAO,kBAChD,GAAuB,iBAAnBA,EAAmC,MAAO,mBAC9C,GAAuB,kBAAnBA,EAAoC,MAAO,mBAC/C,GAAuB,iBAAnBA,EAAmC,MAAO,mBAC9C,GAAuB,8BAAnBA,EAAgD,MAAO,kBAC7D,CACA,GAAiB,SAAb5P,EAAqB,CACvB,GAAuB,oBAAnB4P,EAAsC,MAAO,eACjD,GAAuB,iBAAnBA,EAAmC,MAAO,gBAChD,CACA,MAAiB,WAAb5P,GAA4C,kBAAnB4P,EAA2C,gBACvD,aAAb5P,GAA8C,iBAAnB4P,EAA0C,mBACxD,UAAb5P,GAA2C,gBAAnB4P,EAAyC,eACpD,QAAb5P,GAAyC,gBAAnB4P,EAAyC,kBAClD,WAAb5P,GAA4C,qBAAnB4P,EAA8C,kBAC1D,WAAb5P,GAA4C,mBAAnB4P,EAA4C,kBACxD,YAAb5P,GAA6C,kBAAnB4P,EAA2C,iBACxD,SAAb5P,GAA0C,mBAAnB4P,EAA4C,kBACtD,WAAb5P,GAA4C,oBAAnB4P,EAA6C,kBACzD,SAAb5P,GAA0C,oBAAnB4P,EAA6C,eACjE,OAASG,GAAgB/P,EAClC,CArPkCgQ,CAC1BryC,EAAKtR,KACLzH,EAAQ0nC,UACa,WAAlB3uB,EAAKjR,UACR9H,EAAQ82C,SAEJ39B,EAAUvX,EAAIoY,MAAMnX,IAAI/E,EAAKitD,IAYnChyC,EAAOhZ,GAAO,EAAM,CAAC,EAAGoZ,EAAS,CAC/BlZ,KAAM8qD,EACNvjD,UAZI,CAAC,kBAAmB,kBAAmB,oBAAoB6/B,SAAS0jB,GAC/D,IAIkB,KAAvB5xC,EAAS3R,WAAoC,cAAhBujD,EACxBhyC,EAAKI,QAAS3R,UAEhB2R,EAAS3R,UAKhBM,SAAUiR,EAAKjR,UAEnB,CACA,GAAI9H,EAAQ6qD,MAAkB,QAAdH,EAAI3xC,EAAKG,aAAK,IAAAwxC,GAAVA,EAAYljD,UAAW,CACzC,IAAM6jD,EA0GL,SAAsBnQ,EAAkBE,EAAsBpL,GAEnE,GADAA,EAAOA,GAAQ,GACXkL,EAAS7T,SAAS,gBAAiB,MAAO,kBAC9C,GAAiB,oBAAb6T,GAA2C,gBAATlL,EAAwB,MAAO,uBACrE,GAAiB,mBAAbkL,GAA0C,eAATlL,EAAuB,MAAO,sBACnE,GAAiB,gBAAbkL,GAAuC,eAATlL,EAAuB,MAAO,sBAChE,GAAiB,mBAAbkL,GAA0C,eAATlL,EAAuB,MAAO,8BACnE,GAAiB,kBAAbkL,GAAyC,qBAATlL,EAClC,MAAO,2BAET,GAAiB,eAAbkL,GAAsC,eAATlL,EAAuB,MAAO,wBAC/D,GAAiB,YAAbkL,GAAmC,cAATlL,EAAsB,MAAO,oBAC3D,GAAiB,mBAAbkL,GAA0C,gBAATlL,EAAwB,MAAO,mBACpE,GAAiB,mBAAbkL,GAA0C,iBAATlL,EACnC,MAAO,8BAET,GAAiB,mBAAbkL,GAA0C,eAATlL,EAAuB,MAAO,sBACnE,GAAiB,eAAbkL,GAAsC,eAATlL,EAAuB,MAAO,yBAC/D,GAAiB,oBAAbkL,GAA2C,gBAATlL,EAAwB,MAAO,wBACrE,GAAiB,gBAAbkL,GAAuC,eAATlL,EAAuB,MAAO,eAChE,GAAiB,qBAAbkL,GAA6C,eAATlL,EAAuB,MAAO,oBACtE,GAAiB,gBAAbkL,EAA4B,CAC9B,GAAa,kBAATlL,EAA0B,MAAO,qBACrC,GAAa,kBAATA,EAA0B,MAAO,6BACvC,CACA,OAAOsb,GAAclQ,EACvB,CApIgCmQ,CAAaxyC,EAAK9Y,KAAM8Y,EAAKtR,KAAMzH,EAAQgwC,MAC/D92B,EAAQtX,EAAIoY,MAAMnX,IAAI/E,EAAKutD,IACjCtyC,EAAOhZ,GAAO,EAAM,CAAC,EAAGmZ,EAAO,CAC7BjZ,KAAMorD,EACN7jD,UAAgC,IAArB0R,EAAO1R,UAAkBuR,EAAKG,MAAM1R,UAAY0R,EAAO1R,UAClEM,SAAUiR,EAAKjR,UAEnB,WACuBrH,IAAjBT,EAAQ45C,MAAsB7gC,EAAK3Q,WACR,kBAAlB2Q,EAAK3Q,SACdxH,KAAKg5C,KAAO7gC,EAAK3Q,SACRpI,EAAQ45C,KACjBh5C,KAAKg5C,KAAO55C,EAAQ45C,KAEpBh5C,KAAKg5C,KAA4B,eAApB55C,EAAQ82C,QACjB/9B,EAAK3Q,SAAS,GACd2Q,EAAK3Q,SAAS,GAAK,GAG3BxH,KAAK49C,uBAAyBx+C,EAAQw+C,uBAExC59C,KAAKgB,IAAMA,EACXhB,KAAKX,KAAO8Y,EAAK9Y,KACjBW,KAAKk2C,QAAU92C,EAAQ82C,QACvBl2C,KAAKovC,KAAOhwC,EAAQgwC,KACpBpvC,KAAKiqD,KAAO7qD,EAAQ6qD,KACpBjqD,KAAKkqD,OAAS9qD,EAAQ8qD,OACtBlqD,KAAKuoD,UAAYnpD,EAAQmpD,UACzBvoD,KAAK8mC,QAAU1nC,EAAQ0nC,QAGvB9mC,KAAKiH,GAAK7H,EAAQ6H,GAAK7H,EAAQ6H,GAAKkR,EAAKvR,UAEzC,IAAMgkD,EACH5pD,EAAIgqC,KAAO,GAAiB,aAAZ7yB,EAAK/W,IACrBJ,EAAIgqC,KAAO,GAAK,CAAC,cAAe,cAAcvE,SAAStuB,EAAK/W,IAC/DpB,KAAK6G,KAAO+jD,EAAiB,MAAQzyC,EAAKtR,KAC1C7G,KAAKkH,SAAWiR,EAAKjR,WAClBlG,EAAIgqC,IAAM,EAAK6e,GAAQpjB,SAAStuB,EAAKtR,MAAQ,UAAY,WAAc,UAE1E,IAAM4pC,EAAyB,YAAlBzwC,KAAKkH,SAAyB,MAAQ,MACtC,QAAT6iD,EAAA5xC,EAAKlI,YAAI,IAAA85C,GAATA,EAAW75C,QAAUiI,EAAKlI,KAAKC,OAAOugC,IAASt4B,EAAKlI,KAAKC,OAAOugC,GAAS,IAC3EzwC,KAAKs2C,WAAazF,KAAKga,IAAI1yC,EAAKlI,KAAKC,OAAOugC,KAE9CzwC,KAAK29C,UAAa39C,KAAKs2C,YAAcl3C,EAAQu+C,WAAc,EAC3D39C,KAAKoT,YAAc+E,EAAK/E,YAGxBpT,KAAKN,OAASyY,EAAKzY,QAAU,MAC7BM,KAAKuI,OAAS4P,EAAK5P,OACnBvI,KAAKiJ,iBAAmBkP,EAAKlP,eAC7BjJ,KAAKkW,kBAAoBiC,EAAKjC,gBAC9BlW,KAAK6R,iBAAmBsG,EAAKtG,eAC7B7R,KAAK0gD,SAAWthD,EAAQshD,UAAYvoC,EAAK3E,UAE3B,IAAZxS,EAAIgqC,KAAa,CAAC,aAAc,YAAa,QAAS,eAAevE,SAAStuB,EAAK/W,IACrFpB,KAAKoI,iBAAmB+P,EAAK/P,eAC7BpI,KAAKk7C,WAAa97C,EAAQ87C,SAC1Bl7C,KAAKoH,MAAQ+Q,EAAK/Q,MAClBpH,KAAKoY,MAAQD,EAAKC,MAElBpY,KAAKwM,SAAW2L,EAAK3L,UAAY,EAEjCxM,KAAK6T,kBAAoBsE,EAAKtE,gBAC9B7T,KAAK0W,sBAAwByB,EAAKzB,sBAClC1W,KAAK6U,sBAAwBsD,EAAKtD,sBAClC7U,KAAKyU,yBAA2B0D,EAAK1D,yBACrCzU,KAAKqY,yBAA2BF,EAAKE,yBACrCrY,KAAKuS,gBAAkB4F,EAAK5F,cAC5BvS,KAAK+V,MAAQoC,EAAKpC,IAClB/V,KAAK6W,QAAUsB,EAAKtB,MAEf7W,KAAKiH,IAEJ,CAAC,SAAU,cAAe,YAAa,gBAAgBw/B,SAAStuB,EAAK/W,MACvEpB,KAAKiH,GAAK,IAGhB,CAyBC,OAzBA/F,EAAAA,EAAAA,GAAAgX,EAAA,EAAAla,IAAA,QAAAmD,MAED,WAA2B,IAAD,IAAAsrC,EAAA9sC,UAAAC,OAAjB2pD,EAAK,IAAAtpD,MAAAwsC,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAL4c,EAAK5c,GAAAhtC,UAAAgtC,GACZ,OAAO4c,EAAM9iB,SAASzmC,KAAKX,KAC7B,GAAC,CAAArB,IAAA,UAAAmD,MAED,WAAoD,IAAD,IAAAyrC,EAAAjtC,UAAAC,OAAxC4Z,EAAK,IAAAvZ,MAAA2sC,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAALtzB,EAAKszB,GAAAntC,UAAAmtC,GACd,OAAOtzB,EAAMitB,SAASzmC,KAAK6G,KAC7B,GAAC,CAAA7I,IAAA,QAAAmD,MAED,WACE,OAAO,IAAI+W,EAAKlY,KAAKgB,IAAKhB,KAAKgqD,aAAc,CAC3C9T,QAASl2C,KAAKk2C,QACd9G,KAAMpvC,KAAKovC,KACXtI,QAAS9mC,KAAK8mC,QACdmjB,KAAMjqD,KAAKiqD,KACXC,OAAQlqD,KAAKkqD,OACbxJ,OAAQ1gD,KAAK0gD,OACbxF,SAAUl7C,KAAKk7C,SACflC,KAAMh5C,KAAKg5C,KACX/xC,GAAIjH,KAAKiH,GACT02C,UAAW39C,KAAK29C,UAChBC,uBAAwB59C,KAAK49C,uBAC7B2K,UAAWvoD,KAAKuoD,WAEpB,KAACrwC,CAAA,CAxLc,GAuNjB,IAAMwyC,GAEF,CACFnjB,IAAK,kBACLO,KAAM,qBACND,OAAQ,oBACRT,SAAU,iBACVY,MAAO,iBACPL,SAAU,oBACVT,KAAM,oBACNI,OAAQ,uBACRM,MAAO,yBACPX,MAAO,aACPQ,OAAQ,gBACRJ,IAAK,kBACLL,OAAQ,kBACRQ,OAAQ,gBACRl+B,QAAS,mBACTo+B,KAAM,oBACNK,MAAO,kBACPZ,MAAO,gBAoET,ICnTA2jB,GDmTMP,GAEF,CACFhjB,IAAK,YACLO,KAAM,WACND,OAAQ,WACRT,SAAU,YACVY,MAAO,WACPL,SAAU,UACVT,KAAM,QACNI,OAAQ,YACRM,MAAO,WACPX,MAAO,aACPQ,OAAQ,QACRJ,IAAK,YACLL,OAAQ,SACRQ,OAAQ,OACRl+B,QAAS,YACTo+B,KAAM,WACNK,MAAO,aACPZ,MAAO,UEvRF,SAAS4jB,GACd/pD,EACAoyC,EACAC,EACAh6B,EACA8xB,GAEA,OLhCK,SACLnqC,EACAoyC,EACAC,EACAh6B,EACA8xB,GAEA,OAAO8b,GAAUjmD,EAAIgqC,KACnBhqC,EACAoyC,EAAS3zC,QACT4zC,EAAS5zC,QACT4Z,EAAK5Z,QACL0rC,EAAQA,EAAM1rC,QAAU,IAAIyrC,GAEhC,CKkBU8f,CACS,kBAARhqD,EAAmB6pC,GAAY5oC,IAAIjB,GAAOA,EACjDoyC,EACAC,EACAh6B,EACA8xB,EAEJ,CD9DiB2f,KAAAA,GAAK,ICgEf,IAAM5yC,GAAI,SAAA+yC,IAAAC,EAAAA,EAAAA,GAAAhzC,EAAA+yC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAlzC,GACf,SAAAA,EACElX,EACA3B,GAMC,IALDD,EAICO,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAAsB,EAAAA,EAAAA,GAAA,KAAAiX,GAAAizC,EAAA/sD,KAAA,KAEe,kBAAR4C,EAAmB6pC,GAAY5oC,IAAIjB,GAAOA,EAAK3B,EAAMD,EACpE,CAAC,OAAA8B,EAAAA,EAAAA,GAAAgX,EAAA,CAXc,CAAS8yC,IAcbrD,GAAO,SAAA0D,IAAAH,EAAAA,EAAAA,GAAAvD,EAAA0D,GAAA,IAAAC,GAAAF,EAAAA,EAAAA,GAAAzD,GAClB,SAAAA,EACE3mD,EACA3B,GAcC,IAbDD,EAYCO,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAAsB,EAAAA,EAAAA,GAAA,KAAA0mD,GAAA2D,EAAAltD,KAAA,KAEe,kBAAR4C,EAAmB6pC,GAAY5oC,IAAIjB,GAAOA,EAAK3B,EAAMD,EACpE,CAcC,OAdA8B,EAAAA,EAAAA,GAAAymD,EAAA,OAAA3pD,IAAA,WAAAmD,MAED,SACEH,EACAyoD,EACAra,EACAkL,GAEA,OAAO0Q,GAAUO,SACA,kBAARvqD,EAAmB6pC,GAAY5oC,IAAIjB,GAAOA,EACjDyoD,EACAra,EACAkL,EAEJ,KAACqN,CAAA,CAjCiB,CAASqD,I,g2DC1EvBhqD,GAAM6pC,GAAY5oC,IAAI,GAErB,SAASupD,GAAcxgB,GAC1B,OAAOA,EAAM,EAAI6F,KAAKyH,KAAKtN,GAAO6F,KAAKC,MAAM9F,EACjD,CAGO,SAASqf,GAASoB,GACrB,MACgB,QAAZA,GACY,QAAZA,GACY,QAAZA,GACY,QAAZA,GACY,QAAZA,GACY,QAAZA,CAER,CAOO,SAASC,GAAiBryC,EAAYmhC,EAAoBrP,EAAciI,EAAmBC,GAC9F,IAAMsY,EAAW,IAAIzzC,GAAK,EAAGmB,EAAKha,MAElC,GADAssD,EAAS9kD,KAAO2zC,GACXmR,EAAS9kD,KAAO,OAAO,EAC5B,GAAIwsC,EAAST,WAAW,eAAiBS,EAAS8U,gBAAkB9U,EAAS8F,QAAW,OAAO,EAC/F,IAAM1E,EACNrB,EAASR,WAAW,YAAcQ,EAASR,WAAW,eAAiBzH,EAAMoB,aAAauB,YACpF4G,EACJrB,EAASb,QAAQ,iBAAmBa,EAAST,WAAW,SA6BtD6N,EA5BuBjM,GACzBxzC,GACA2qD,EACAtY,EAAS75B,MAAM,GACfi7B,EACAtJ,EAAMQ,UACN+I,IAEyBrB,EAAS75B,MAAM,GACtCg7B,GACAxzC,GACA2qD,EACAtY,EAAS75B,MAAM,GACfi7B,EACAtJ,EAAMQ,UACN+I,GAEA,IACuBrB,EAAS75B,MAAM,GACtCg7B,GACAxzC,GACAqY,EACAg6B,EAAS75B,MAAM,GACfi7B,EACAtJ,EAAMQ,UACN+I,GACE,GAuBN,OAnBIrB,EAASyQ,QAAUzQ,EAAS8L,WAC9BsB,EAAoBjM,GAClBxzC,GACAqY,EACAg6B,EAAS8L,SACT1K,EACAtJ,EAAMQ,UACN+I,IAIsB,IAAtB+L,GAA2BpnC,EAAKs5B,QAAQ,WAC1CU,EAASb,QAAQ,eAAiBa,EAAST,WAAW,WACtD6N,EAAoB,GAGI,IAAtBA,GAA2BpnC,EAAK86B,MAAM,qBACxCsM,EAAoB,GAEfA,GAAqB,CAChC,CAEO,SAASmL,GAAkBrZ,EAAiBpH,GAC/C,IAAI0gB,EAAWvZ,GAAWC,EAASpH,GAGnC,OAFIoH,EAAQuZ,WAAYD,EAAWA,GAAsC,UAA1BtZ,EAAQuZ,SAASzsD,MAEzDwsD,CACX,CAYO,SAASE,GAAYC,EAAoB9kD,EAA6CksC,EAAkBC,GAA8G,IAA5F4Y,EAAoBtsD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAUukD,EAA+BvkD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAG1L,GAAIyzC,EAASR,WAAW,aAAeS,EAAST,WAAW,YACvD,MAAO,CAAC,IAAI,IAGhB,IAAMsZ,EAAWF,EAAS3sD,KAE1B,GAAiB,UAAb6sD,GAAwB9Y,EAAST,QAAQ,UACzC,MAAO,CAAC,IAAI,IAGhB,GAAIU,EAAS8Y,YAAc9Y,EAASyY,SAAU,CAC1C,GAAI,CAAC,SAAS,MAAM,YAAYrlB,SAAS4M,EAASyY,SAASzsD,MACvD,MAAI,CAAC,OAAQ,WAAWonC,SAASylB,IAEtB,CAAC,YAAa,eAAgB,aAAc,UAAW,mBAAmBzlB,SAASylB,GADnF,CAAC,IAAI,IAIL,CAAC,EAAE,IAEX,GAA+B,QAA3B7Y,EAASyY,SAASzsD,KACzB,MAAI,CAAC,aAAc,aAAaonC,SAASylB,IAEjB,YAAbA,EADA,CAAC,IAAI,IAIL,CAAC,EAAE,IAEX,GAA+B,SAA3B7Y,EAASyY,SAASzsD,KACzB,MAAI,CAAC,OAAQ,aAAaonC,SAASylB,GACxB,CAAC,IAAI,IAEL,CAAC,EAAE,GAGtB,CAEA,IACKF,EAASI,UACThZ,EAAS0Y,UAAuC,YAA3B1Y,EAAS0Y,SAASzsD,MACvC+zC,EAASjI,MAAM4T,WAAW,SAAW,CAAC,UAAU,YAAY,iBAAiB,kBAAkB,kBAAkBtY,SAASylB,IAC1H9Y,EAASjI,MAAM4T,WAAW,OAAO,SAAwB,aAAbmN,GAC5C7Y,EAAS4R,YAAc,CAAC,YAAY,QAAQ,cAAc,aAAa,aAAa,gBAAgBxe,SAASylB,IAC9GG,GAAmB5lB,SAASylB,GAE5B,MAAO,CAAC,IAAI,IAGhB,IAAII,EAAeN,EAASI,SAExBG,GAAa,EAEbnZ,EAASjI,MAAM4T,WAAW,QAAU,CAAC,YAAY,WAAWtY,SAASylB,KACrEI,EAAe,GACfC,GAAa,GAGjB,IAAMC,EAAWpZ,EAASljC,OAAOu8C,KAAO,EAClCC,EAAWtZ,EAASR,WAAW,WAAY,cAAgB,EAAKS,EAASnjC,OAAOy8C,KAAO,EACvFC,EAAY/b,KAAKmC,KAAK,EAAGnC,KAAKkC,IAAI,EAAGyZ,EAAWE,IAIlDN,EAAWE,GAFAM,GAAa,GAAMA,EAAY,GAAG,EAAM,GAAG,EAAIA,IAG1DC,EAAoB,GA2DxB,OA1DIL,GACAK,EAAQ9pD,KAAK,QAAUypD,EAAW,EAAI,IAAM,IAAMA,GAElDE,GACAG,EAAQ9pD,KAAK,QAAU2pD,EAAW,EAAI,IAAM,IAAMA,GAIlDtZ,EAASZ,QAAQ,cACjB4Z,GAAY,KAAK,KACjBS,EAAQ9pD,KAAK,cACNqwC,EAASZ,QAAQ,cAAgByZ,IAAgC,IAAhB7Y,EAAShyC,IAA4B,IAAhBiyC,EAASjyC,MACtFgrD,GAAY,KAAK,KACjBS,EAAQ9pD,KAAK,eAEbswC,EAASb,QAAQ,kBAAoBa,EAASb,QAAQ,kBACtD4Z,GAAY,KAAK,IACjBS,EAAQ9pD,KAAKswC,EAASjE,OAItBgE,EAASR,WAAW,kBACpBwZ,GAAY,KAAK,KACjBS,EAAQ9pD,KAAK,kBACNqwC,EAASR,WAAW,WAA0B,aAAb1rC,IACxCklD,GAAY,KAAK,KACjBS,EAAQ9pD,KAAK,WAEZmhD,GACG7Q,EAAST,WAAW,iBAAmBS,EAAS+U,eAAe3hB,SAAS,eACxE2lB,GAAY,GACZS,EAAQ9pD,KAAK,iBAIjBqwC,EAASjI,MAAMQ,YACfygB,GAAY,KAAK,KACjBS,EAAQ9pD,KAAK,aAEZmhD,GAA0B7Q,EAASlI,MAAM4T,WAAW,UAAY1L,EAASlI,MAAMiB,aAAeiH,EAAST,WAAW,eACnHwZ,GAAY,KAAK,KACjBS,EAAQ9pD,KAAK,eAEZmhD,GAA0B7Q,EAASlI,MAAM4T,WAAW,OAAQ,UAAY1L,EAASlI,MAAMiB,aAAeiH,EAAST,WAAW,gBAC3HwZ,GAAY,KAAK,KACjBS,EAAQ9pD,KAAK,eAIbqwC,EAAS8U,UACTkE,GAAY,KAAK,KACjBS,EAAQ9pD,KAAK,gBAGbwpD,GACAM,EAAQ9pD,KAAK,2BAGV,CAACqpD,EAAUS,EACtB,CAEO,SAASC,GAAcd,EAAoB3Y,GAAqD,IAAnC0Z,EAAgBptD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAC1EusD,EAAWF,EAAS3sD,KAE1B,GAAIg0C,EAAS8Y,YAAc9Y,EAASyY,SAAU,CAC1C,GAAI,CAAC,SAAS,MAAM,YAAYrlB,SAAS4M,EAASyY,SAASzsD,OAAS,CAAC,OAAQ,WAAWonC,SAASylB,GAC7F,OAAO,EACJ,GAA+B,QAA3B7Y,EAASyY,SAASzsD,MAAkB,CAAC,aAAc,aAAaonC,SAASylB,GAChF,OAAO,EACJ,GAA+B,SAA3B7Y,EAASyY,SAASzsD,MAAmB,CAAC,OAAQ,aAAaonC,SAASylB,GAC3E,OAAO,CAEf,CACA,OAAIa,GACI,CAAC,YAAa,WAAWtmB,SAASylB,GAC3B,EAGR,CACX,CAmGA,IAAMc,GAAe,CACjB,eACA,gBACA,aACA,0BACA,2BACA,oBACA,mBAGG,SAASC,GAAaf,GACzB,OAAOc,GAAavmB,SAASylB,EACjC,CAEO,SAASgB,GAAchB,GAC1B,OAAQe,GAAaf,IAA0B,cAAbA,GAAyC,oBAAbA,GAA+C,mBAAbA,CACpG,CA2BO,SAASiB,GAAc9zC,EAAY+5B,EAAkBC,GACxD,GAAIA,EAAST,WAAW,eAAkB,OAAO,EACjD,IAAMz6B,EAAOnX,GAAIoY,MAAMnX,IAAI/E,EAAKmc,EAAKha,OACrC,GAAI8Y,GAAQA,EAAK3E,SAAY,OAAO,EAEpC,QADoB6F,EAAKjR,eAAiB,EAAI,IAAMgrC,EAASiR,UAAY,IAAMjR,EAASR,WAAW,cAAgB,EAAI,IAAMQ,EAASZ,QAAQ,aAAc,cAAgB,EAAI,IAE5K,KAAK,EACD,OAAO,EAAI,GACf,KAAK,EACD,OAAO,EAAI,EACf,KAAK,EACD,MAAO,GACX,QACI,OAAO,EAEnB,CCnZO,SAAS4a,GAAmB/tD,GAG/B,GAAKA,EACL,OAAQA,GACJ,IAAK,SACL,IAAK,aACD,MAAO,CACHA,KAAMA,EACNguD,KAAM,SAAC/P,EAAGp3C,GAAC,OAAKA,EAAEizC,QAAU,CAAC,EAC7BmU,UAAW,SAACC,EAAWC,EAAYtnD,GAAC,OAAqB,IAAfsnD,GAAoBD,GAAarnD,EAAEizC,OAAO,GAE5F,IAAK,SACD,MAAO,CACH95C,KAAMA,EACNguD,KAAO,SAAC/P,EAAGp3C,GAAC,OAAKA,EAAEizC,QAAU,CAAC,EAC9BmU,UAAW,SAACC,EAAWC,EAAYtnD,GAAC,OAAMqnD,GAAarnD,EAAEizC,OAAO,GAExE,IAAK,eACD,MAAO,CACH95C,KAAMA,EACNguD,KAAM,SAAC/P,EAAGp3C,GAAC,OAAKo3C,EAAIzM,KAAKC,MAAM5qC,EAAEizC,SAAWjzC,EAAE0sC,WAAW,SAAW,EAAI,GAAG,EAC3E0a,UAAW,SAACC,EAAWC,EAAYtnD,GAAC,OAAOqnD,EAAYrnD,EAAEizC,SAAaoU,GAAarnD,EAAEizC,QAAU,CAAE,GAEzG,IAAK,aACD,MAAO,CACH95C,KAAMA,EACNguD,KAAM,SAAC/P,EAAGp3C,GAAC,OAAKo3C,GAAKp3C,EAAE0sC,WAAW,SAAW,GAAK,GAAG,EACrD0a,UAAW,SAACC,EAAWC,EAAYtnD,GAAC,OAAOqnD,EAAYrnD,EAAEizC,SAAaoU,GAAarnD,EAAEizC,QAAU,CAAE,GAEzG,IAAK,cACL,IAAK,aACL,IAAK,eACL,IAAK,aACL,IAAK,aACD,MAAO,CACH95C,KAAMA,EACNguD,KAAM,SAAC/P,EAAGp3C,GAAC,OAAKo3C,EAAIzM,KAAKC,MAAM5qC,EAAEizC,SAAWjzC,EAAE0sC,WAAW,SAAW,EAAI,GAAK,EAAE,EAC/E0a,UAAW,SAACC,EAAWC,EAAYtnD,GAAC,OAAOqnD,EAAYrnD,EAAEizC,SAAaoU,GAAarnD,EAAEizC,SAAWjzC,EAAE0sC,WAAW,YAAc,EAAI,EAAG,GAE1I,QAAS,OAEjB,CAGO,SAAS6a,GAAcC,EAAmB3a,EAAaC,GAE1D,IAFmH,IAA5C2a,EAA6BhuD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,QAAGE,EACjG+tD,EAAW,IAAIC,IACZ/tD,EAAE,EAAGA,EAAE4tD,EAAM9tD,OAAQE,IAC1BguD,GAAiBF,EAAUF,EAAM5tD,GAAIizC,EAAKC,EAAK2a,EAAUA,EAAQ7tD,QAAKD,GAE1E,OAAO+tD,CACX,CAEO,SAASE,GAAiBF,EAA+BG,EAAoBhb,EAAaC,GAAsD,IAC7Igb,IAD8HruD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,QAAGE,IACzG,GAAKkuD,EAASnuD,OACtCquD,EAAe,IAAIJ,IAAoBD,GACnB,IAAtBK,EAAaC,MACbD,EAAaE,IAAI,EAAG,GAExB,IAAMC,EAAYnuD,MAAMouD,KAAKJ,EAAansD,QAC1C8rD,EAASU,QACT,IAAK,IAAIxuD,EAAE,EAAGA,EAAEiuD,EAASnuD,OAAQE,IAE7B,IADA,IAAMutD,EAAOU,EAASjuD,GACby8C,EAAE,EAAGA,EAAE6R,EAAUxuD,OAAQ28C,IAAK,CACnC,IAAMgS,EAAWH,EAAU7R,GACrBiS,EAAeD,GAAYvb,EAAMA,EAAMnC,KAAKmC,IAAID,EAAKlC,KAAKkC,IAAIC,EAAKqa,EAAOkB,IAC1EE,EAAaR,EAAahsD,IAAIusD,IAAiB,EAC/CE,EAAYd,EAAS3rD,IAAIusD,IAAiB,EAChDZ,EAASO,IAAIK,EAAcE,EAAYD,EAAaT,EACxD,CAGJ,OAAOJ,CACX,CAEO,SAASe,GAAc9wD,EAAwBC,GAIlD,IAHA,IAAMwhD,EAAI,IAAIuO,IACRe,EAAS3uD,MAAMouD,KAAKxwD,EAAEiE,QACtB+sD,EAAS5uD,MAAMouD,KAAKvwD,EAAEgE,QACnBhC,EAAE,EAAGA,EAAE8uD,EAAOhvD,OAAQE,IAAK,CAChC,IAAMgvD,EAASjxD,EAAEoE,IAAI2sD,EAAO9uD,KAAO,EAC7BivD,EAASzP,EAAEr9C,IAAI2sD,EAAO9uD,KAAO,EACnCw/C,EAAE6O,IAAIS,EAAO9uD,GAAIgvD,EAASC,EAC9B,CACA,IAAK,IAAIjvD,EAAE,EAAGA,EAAE+uD,EAAOjvD,OAAQE,IAAK,CAChC,IAAMkvD,EAASlxD,EAAEmE,IAAI4sD,EAAO/uD,KAAO,EAC7BivD,EAASzP,EAAEr9C,IAAI4sD,EAAO/uD,KAAO,EACnCw/C,EAAE6O,IAAIU,EAAO/uD,GAAIkvD,EAASD,EAC9B,CACA,OAAOzP,CACX,CAEO,SAAS2P,GAAkBpxD,EAAwBC,EAAwBi1C,EAAaC,EAAa9sC,EAAagpD,EAAgCC,GACrJ,IAAM7P,EAAI,IAAIuO,IACRuB,EAAW,IAAIvB,IACfe,EAAS3uD,MAAMouD,KAAKxwD,EAAEiE,QACtB+sD,EAAS5uD,MAAMouD,KAAKvwD,EAAEgE,QACN,IAAlB8sD,EAAOhvD,QACPgvD,EAAO7rD,KAAK,GAEM,IAAlB8rD,EAAOjvD,QACPivD,EAAO9rD,KAAK,GAEhB,IAAK,IAAIjD,EAAE,EAAGA,EAAE8uD,EAAOhvD,OAAQE,IAC3B,IAAK,IAAIy8C,EAAE,EAAGA,EAAEsS,EAAOjvD,OAAQ28C,IAAK,CAChC,IAAIiS,EAAeI,EAAO9uD,KAAOkzC,EAAMA,EAAMnC,KAAKmC,IAAID,EAAKlC,KAAKkC,IAAIC,EAAK4b,EAAO9uD,GAAK+uD,EAAOtS,KACtF8S,EAAUxxD,EAAEoE,IAAI2sD,EAAO9uD,KAAO,EAC9BwvD,EAAUxxD,EAAEmE,IAAI4sD,EAAOtS,KAAO,EACpC,GAAIr2C,GAAKgpD,EAAY,CAAC,IACW3sD,EADZG,GAAAC,EAAAA,EAAAA,GACEusD,GAAU,IAA7B,IAAAxsD,EAAAE,MAAAL,EAAAG,EAAAG,KAAAb,MAA+B,CAAC,IAArButD,EAAIhtD,EAAApB,MACPouD,EAAKjC,UAAUkB,EAAcI,EAAO9uD,GAAIoG,KACxCsoD,EAAee,EAAKlC,KAAKmB,EAActoD,GAE/C,CAAC,OAAA3I,IAAAmF,EAAAxD,EAAA3B,GAAA,SAAAmF,EAAAI,GAAA,CACL,CACA,GAAIoD,GAAKipD,GAAgBA,EAAa7B,UAAUkB,EAAcI,EAAO9uD,GAAIoG,GAAI,CACzE,IAAMspD,EAAU3e,KAAKmC,IAAID,EAAKlC,KAAKkC,IAAIoc,EAAa9B,KAAKmB,EAActoD,KACjEupD,EAAUL,EAASntD,IAAIutD,IAAY,EACzCJ,EAASjB,IAAIqB,EAASH,EAAUC,EAAUG,EAC9C,KAAO,CACH,IAAMA,EAAUnQ,EAAEr9C,IAAIusD,IAAiB,EACvClP,EAAE6O,IAAIK,EAAca,EAAUC,EAAUG,EAC5C,CACJ,CAEJ,MAAO,CAACnQ,EAAAA,EAAG8P,SAAAA,EACf,CAQO,IAAMM,GAAe,WAKxB,SAAAA,EAAYhC,EAA+BiC,EAA0CC,IAA0C3uD,EAAAA,EAAAA,GAAA,KAAAyuD,GAAA,KAJ/HhC,WAAK,OACLiC,0BAAoB,OACpBC,0BAAoB,EAGhB5vD,KAAK0tD,MAAQA,GAAS,CAAC,IAAIG,KAC3B7tD,KAAK2vD,qBAAuBA,GAAwB,GACpD3vD,KAAK4vD,qBAAuBA,GAAwB,EACxD,CAgFC,OAhFA1uD,EAAAA,EAAAA,GAAAwuD,EAAA,EAAA1xD,IAAA,QAAAmD,MAED,WACI,OAAO,IAAIuuD,EACP1vD,KAAK0tD,MAAMjrD,KAAI,SAAA67C,GAAC,OAAI,IAAIuP,IAAIvP,EAAE,KAAC3X,EAAAA,GAAAA,GAC3B3mC,KAAK2vD,uBAAoBhpB,EAAAA,GAAAA,GACzB3mC,KAAK4vD,sBAEjB,GAAC,CAAA5xD,IAAA,yBAAAmD,MAED,SAA8B9B,GAC1B,IAAMkwD,EAAOnC,GAAmB/tD,GAC5BkwD,GACAvvD,KAAK2vD,qBAAqB5sD,KAAKwsD,EAEvC,GAAC,CAAAvxD,IAAA,yBAAAmD,MAED,SAA8B9B,GAC1B,IAAMkwD,EAAOnC,GAAmB/tD,GAC5BkwD,IACAvvD,KAAK4vD,qBAAqB7sD,KAAKwsD,GAC/BvvD,KAAK0tD,MAAM3qD,KAAK,IAAI8qD,KAE5B,GAAC,CAAA7vD,IAAA,4BAAAmD,MAED,SAAiC9B,GAC7BW,KAAK2vD,qBAAuB3vD,KAAK2vD,qBAAqB5pD,QAAO,SAAAwpD,GAAI,OAAIA,EAAKlwD,OAASA,CAAI,GAC3F,GAAC,CAAArB,IAAA,4BAAAmD,MAED,SAAiC9B,GAC7B,IAAMwwD,EAAU7vD,KAAK4vD,qBAAqBE,WAAU,SAAAP,GAAI,OAAIA,EAAKlwD,OAASA,CAAI,IAC9E,GAAIwwD,GAAW,EAAG,CACd7vD,KAAK4vD,qBAAqBG,OAAOF,EAAS,GAC1C,IAAMG,EAAYhwD,KAAK0tD,MAAMqC,OAAOF,EAAQ,EAAG,GAAG,GAClD7vD,KAAK0tD,MAAMmC,GAAWlB,GAAc3uD,KAAK0tD,MAAMmC,GAAUG,EAC7D,CACJ,GAAC,CAAAhyD,IAAA,WAAAmD,MAED,SAAgBusD,EAA4BxnD,GAGxC,IAFA,IAAM6nD,EAAiC,GACjCkC,EAA6C,GAC1CnwD,EAAE,EAAGA,EAAEE,KAAK0tD,MAAM9tD,OAAQE,IAC/B,GAAU,IAANA,GAAWE,KAAK0tD,MAAM5tD,GAAGouD,KAAO,EAAG,CACnC,IAAAgC,EAAsBjB,GAAkBjvD,KAAK0tD,MAAM5tD,GAAI4tD,EAAO,EAAGxnD,EAAEizC,QAASjzC,EAAGlG,KAAK2vD,qBAAsB3vD,KAAK4vD,qBAAqB9vD,IAA7Hw/C,EAAC4Q,EAAD5Q,EAAG8P,EAAQc,EAARd,SACVrB,EAAShrD,KAAKu8C,GACVx/C,EAAIE,KAAK0tD,MAAM9tD,QACfqwD,EAAoBltD,KAAKqsD,EAEjC,MACIrB,EAAShrD,KAAK,IAAI8qD,KACd/tD,EAAIE,KAAK0tD,MAAM9tD,QACfqwD,EAAoBltD,KAAK,IAAI8qD,KAMzC,IADA,IAAIsC,EAAc,GACVF,EAAoBG,OAAM,SAAAhB,GAAQ,OAAsB,IAAlBA,EAASlB,IAAU,KAAG,CAChE,IAAK,IAAIpuD,EAAE,EAAGA,EAAEiuD,EAASnuD,OAAQE,IAAK,CAClC,IAAAuwD,EAAsBpB,GAAkBN,GAAcZ,EAASjuD,GAAImwD,EAAoBnwD,EAAE,IAAK,IAAI+tD,IAAsB,EAAG3nD,EAAEizC,QAASjzC,EAAGlG,KAAK2vD,qBAAsB3vD,KAAK4vD,qBAAqB9vD,IAAvLw/C,EAAC+Q,EAAD/Q,EAAG8P,EAAQiB,EAARjB,SACVrB,EAASjuD,GAAKw/C,EACd2Q,EAAoBnwD,EAAE,GAAKsvD,CAC/B,CAEA,KADAe,EACkB,GAAI,CAClBzyD,QAAQC,IAAI,0BACZ,KACJ,CACJ,CACAqC,KAAK0tD,MAAQK,CACjB,GAAC,CAAA/vD,IAAA,cAAAmD,MAED,SAAmBuY,GACf,IAE4B+8B,EAFxB6Z,EAAa,EACbC,EAAU,EAAE5Z,GAAAh0C,EAAAA,EAAAA,GACE3C,KAAK0tD,OAAK,IAA5B,IAAA/W,EAAA/zC,MAAA6zC,EAAAE,EAAA9zC,KAAAb,MAA8B,CAAC,IAAtB0rD,EAAKjX,EAAAt1C,MACVmvD,GAA0BrwD,MAAMouD,KAAKX,EAAM8C,UAAUC,QAAO,SAAC5yD,EAAGC,GAAC,OAAKD,EAAIC,CAAC,GAAE,GAC7EyyD,GAAqB7C,EAAMzrD,IAAIyX,IAAO,CAC1C,CAAC,OAAAnc,IAAAo5C,EAAAz3C,EAAA3B,GAAA,SAAAo5C,EAAA7zC,GAAA,CACD,OAAO04C,YAAY+U,EAAUD,EAAa,KAAKI,YAAY,GAC/D,KAAChB,CAAA,CAzFuB,G,0iJChHtBiB,GAAiB,CAAC,YAAY,eAAe,gBAAgB,aAAa,2BAA2B,0BAA0B,oBAAoB,mBACnJC,GAA0B,CAC5B,gBACA,iBACA,SACA,cACA,cACA,UACA,cACA,YACA,UACA,SACA,SACA,cACA,WACA,YACA,aACA,SACA,cACA,mBACA,WACA,cACA,aACA,YACA,WACA,WACA,aACA,YACA,YACA,WACA,WACA,mBACA,SACA,aACA,aACA,UACA,aACA,aACA,WACA,YACA,SACA,gBACA,cACA,YACA,YACA,eAGEC,GAAgB5wD,MAAMouD,KAAKpuD,MAAM,IAAI6B,QAAQW,KAAI,SAAC3C,GAAC,MAAM,GAAM,GAAMA,EAAE,EAAE,IAElEgxD,GAAQ,WA2CjB,SAAAA,EAAYC,EAAoB13C,EAAY23C,EAAsBC,EAAgBC,EAAkBC,EAAkBC,EAAsBC,EAAmCC,EAAwBC,EAAkBxE,EAAmByE,EAAsBC,IAAmBxwD,EAAAA,EAAAA,GAAA,KAAA6vD,GAAA,KA1CrRz3C,UAAI,OACJ03C,cAAQ,OACRC,eAAS,OACTC,YAAM,EAAc,KACpBC,cAAQ,EAAY,KACpBC,cAAQ,EAAY,KACpBC,gBAAU,OACVhyD,aAAO,OACP45C,UAAI,OACJsY,kBAAY,OACZC,YAAM,OACNxE,aAAO,OACP0E,aAAO,OACPD,gBAAU,OAEVE,gBAAU,OACVC,cAAQ,OACRC,WAAK,OACLC,kBAAY,OACZC,aAAO,OAEPC,eAAS,EAAW,KACpBC,oBAAc,OACdC,mBAAa,OACbC,gBAAU,OAEVC,0BAAoB,OAEpBC,gBAAU,OACVC,oBAAc,OAEdC,eAAS,OACTC,eAAS,OACTC,aAAO,OACPC,kBAAY,OACZC,cAAQ,OACRC,YAAM,OAENC,WAAK,OACLC,YAAM,OACNC,eAAS,EAGL9yD,KAAKqZ,KAAOA,EACZrZ,KAAK+wD,SAAWA,EAChB/wD,KAAKgxD,UAAYA,EACjBhxD,KAAKixD,OAASA,EACdjxD,KAAKkxD,SAAWA,EAChBlxD,KAAKmxD,SAAWA,EAChBnxD,KAAKoxD,WAAaA,EAClBpxD,KAAKZ,QAAUiyD,GAAmB,CAAC,EACnCrxD,KAAKsxD,aAAeA,IAAgB,EACpCtxD,KAAKuxD,OAASA,IAAU,EACxBvxD,KAAK+sD,QAAUA,IAAW,EAC1B/sD,KAAKwxD,WAAaA,IAAc,EAChCxxD,KAAKyxD,QAAUA,IAAW,EAC1BzxD,KAAKg5C,KAA8B,WAAvBh5C,KAAKqZ,KAAKnS,SAAwB,EAAI2pC,KAAKmC,IAAIhzC,KAAK+wD,SAASgC,SAAW,EAAGliB,KAAKkC,IAAI/yC,KAAK+wD,SAASiC,SAAW,EAAGhzD,KAAKZ,QAAQ45C,MAAQ,IACjJh5C,KAAKg5C,KAAOh5C,KAAKgxD,UAAUiC,QAAQjzD,KAAKixD,QAAQre,WAAW,cAAiB5yC,KAAK+wD,SAASiC,SAAW,EAAKhzD,KAAKg5C,IACnH,CA8zDC,OA9zDA93C,EAAAA,EAAAA,GAAA4vD,EAAA,EAAA9yD,IAAA,SAAAmD,MAED,WAEI,GADAnB,KAAKkzD,sBACAlzD,KAAKmzD,eAEN,OADenzD,KAAK45C,OAMxB,GAHA55C,KAAK0xD,WAAWuB,QAAQ,GAAGG,cAC3BpzD,KAAKqzD,kBACLrzD,KAAKszD,qBACDtzD,KAAKuxD,OACLvxD,KAAK4yD,MAAM5yD,KAAKixD,QAAUjxD,KAAK4xD,MAAMvyD,KAAO,kBAEzC,GACa,IAAhBW,KAAKixD,QACLjxD,KAAK4xD,MAAM2B,iBACXvzD,KAAK4xD,MAAM2B,gBAAiBvzD,KAAK+xD,UAAU,GAE3C/xD,KAAK4yD,MAAM5yD,KAAKixD,QAAUjxD,KAAK4xD,MAAMvyD,KAAO,8CAC5CW,KAAK4xD,MAAM2B,gBAAiBvzD,KAAK+xD,UAAU,IAAK,OAC7C,GACF/xD,KAAK4xD,MAAMzF,aACZqH,GAAY/sB,SAASzmC,KAAKqZ,KAAKha,OAC7BW,KAAK4xD,MAAMzmB,MAAM4T,WAAW,QAAU,CAAC,aAAc,eAAetY,SAASzmC,KAAKqZ,KAAKha,OACvFW,KAAK4xD,MAAMzmB,MAAM4T,WAAW,SAA8B,iBAAnB/+C,KAAKqZ,KAAKha,MAClDW,KAAK4xD,MAAMpf,QAAQ,cAWjB,GAAIxyC,KAAK4xD,MAAM6B,aAClBzzD,KAAK4xD,MAAM6B,cAAe,EAC1BzzD,KAAK4yD,MAAM5yD,KAAKixD,QAAUjxD,KAAK4xD,MAAMvyD,KAAO,uBACzC,GAAKW,KAAKyxD,SAA+B,iBAAnBzxD,KAAKqZ,KAAKha,MAA8C,gBAAnBW,KAAKqZ,KAAKha,KAenEW,KAAK4xD,MAAMzF,aACZqH,GAAY/sB,SAASzmC,KAAKqZ,KAAKha,OAC7BW,KAAK4xD,MAAMzmB,MAAM4T,WAAW,QAAU,CAAC,aAAc,eAAetY,SAASzmC,KAAKqZ,KAAKha,OACvFW,KAAK4xD,MAAMzmB,MAAM4T,WAAW,SAA8B,iBAAnB/+C,KAAKqZ,KAAKha,OACnDW,KAAK4xD,MAAMpf,QAAQ,gBAEnBxyC,KAAKqyD,gBAAiB,GAG1BryD,KAAK0zD,cACL1zD,KAAK2zD,mBACL3zD,KAAK4zD,kBACL5zD,KAAK6zD,kBACL7zD,KAAK8zD,wBACL9zD,KAAK+zD,cACL/zD,KAAKg0D,aACLh0D,KAAKi0D,eACLj0D,KAAKk0D,kBACLl0D,KAAKm0D,cACLn0D,KAAKo0D,mBACLp0D,KAAKq0D,eACLr0D,KAAKs0D,oBACLt0D,KAAKu0D,wBACLv0D,KAAKw0D,yBACLx0D,KAAK4xD,MAAMzF,YAAa,EACpBsI,GAAchuB,SAASzmC,KAAKqZ,KAAKha,QACjCW,KAAK4xD,MAAM6B,cAAe,GAE1BzzD,KAAKqyD,gBAAkBryD,KAAK4xD,MAAMpf,QAAQ,eAC1CxyC,KAAK0xD,WAAWgD,YAAY10D,KAAKixD,OAAQjxD,KAAK4xD,MAAMxiB,MAExDpvC,KAAK20D,2BA9C4F,CACjG,IAAMj1D,EAASM,KAAK40D,WAAW50D,KAAK+xD,WAChCryD,EAAOm1D,mBACP70D,KAAK4yD,MAAM5yD,KAAKixD,QAAUjxD,KAAK4xD,MAAMvyD,KAAO,IAAMW,KAAKqZ,KAAKha,KAAO,QAAUW,KAAK0xD,WAAWkD,WAAW50D,KAAK+xD,WAAW1yD,KAAO,WAAQW,KAAKqZ,KAAKha,KAAO,YAExJK,EAAOm1D,mBAAqB,EAC5Bn1D,EAAOo1D,kBAAoB90D,KAAKixD,OAChCvxD,EAAOq1D,YAAc/0D,KAAK+wD,SACC,iBAAvB/wD,KAAK+wD,SAAS1xD,KACdW,KAAK4yD,MAAM5yD,KAAKixD,QAAUjxD,KAAK4xD,MAAMvyD,KAAO,qBAE5CW,KAAK4yD,MAAM5yD,KAAKixD,QAAUjxD,KAAK4xD,MAAMvyD,KAAO,qCAGxD,MA1BIW,KAAK4xD,MAAMzF,YAAa,EACxBnsD,KAAK4yD,MAAM5yD,KAAKixD,QAAUjxD,KAAK4xD,MAAMvyD,KAAO,2BAEjB,iBAAvBW,KAAK+wD,SAAS1xD,MAA4BW,KAAKmyD,sBAC/CnyD,KAAK0xD,WAAWsD,gBAAgBh1D,KAAKixD,OAAQ,CAAC9gD,IAAK,IAE5B,gBAAvBnQ,KAAK+wD,SAAS1xD,MAA2BW,KAAKmyD,sBAC9CnyD,KAAK0xD,WAAWsD,gBAAgBh1D,KAAKixD,OAAQ,CAAC9gD,IAAK,IAkE3D,OAbAnQ,KAAK0xD,WAAWuB,QAAQ,GAAGG,cAC3BpzD,KAAKi1D,WAED/H,GAAcltD,KAAK+wD,SAAS1xD,QAC5BW,KAAK4xD,MAAM9F,SAAW9rD,KAAK+wD,SAC3B/wD,KAAK4xD,MAAMsD,WAAsC,SAAzBl1D,KAAK+wD,SAASrxD,OAAoBM,KAAKixD,OAASjxD,KAAK+xD,UAC7E/xD,KAAK0xD,WAAWyD,YAAcn1D,KAAKixD,OAEnCjxD,KAAK4xD,MAAM1J,SAAU,EACD,IAAhBloD,KAAKixD,SACLjxD,KAAK0xD,WAAWuB,QAAQjzD,KAAKmxD,UAAUjJ,SAAU,IAGlDloD,KAAK45C,MAChB,GAAC,CAAA57C,IAAA,SAAAiE,IAED,WACI,MAAO,CACHmzD,MAAOp1D,KAAK0xD,WACZT,OAAQjxD,KAAKixD,OACbC,SAAUlxD,KAAKkxD,SACf1Y,OAAQx4C,KAAKwyD,QACbprD,MAAOpH,KAAK2yD,OACZ0C,QAASr1D,KAAK0yD,SACd5c,KAAM91C,KAAK4yD,MACXx6C,MAAOpY,KAAK6yD,OACZyC,aAAct1D,KAAKiyD,cACnB/W,SAAUl7C,KAAKuyD,UACfgD,SAAUv1D,KAAK8yD,UAEvB,GAAC,CAAA90D,IAAA,qBAAAmD,MAED,WACInB,KAAK0xD,WAAa1xD,KAAKgxD,UAAUvxD,QACjCO,KAAK2xD,SAAW3xD,KAAK0xD,WAAWuB,QAChCjzD,KAAK8xD,QAAU9xD,KAAK0xD,WAAW8D,OAC/Bx1D,KAAK4xD,MAAQ5xD,KAAK2xD,SAAS3xD,KAAKixD,QAChCjxD,KAAK+xD,UAAY/xD,KAAKkxD,SAGtBlxD,KAAKgyD,eAAiB,MAACnyD,OAAWA,OAAWA,OAAWA,OAAWA,GACnEG,KAAKkyD,WAAY,MAACryD,OAAWA,OAAWA,OAAWA,OAAWA,GAC9DG,KAAKiyD,cAAgB,EAAC,GAAO,GAAO,GAAO,GAAO,GAClDjyD,KAAKsyD,UAAYtyD,KAAKqZ,KAAKxS,KAC3B7G,KAAKwyD,QAAU,CAAC,EAAE,EAAE,EAAE,EAAE,GACxBxyD,KAAKyyD,aAAe,CAAC,GAAG,GAAG,GAAG,GAAG,IACjCzyD,KAAK2yD,OAAS,CAAC,EAAE,EAAE,EAAE,EAAE,GACvB3yD,KAAK0yD,SAAW,CAAC,EAAE,EAAE,EAAE,EAAE,GACzB1yD,KAAK4yD,MAAQ,CAAC,GAAG,GAAG,GAAG,GAAG,IAC1B5yD,KAAK6yD,OAAO,CAAC,GAAG,GAAG,GAAG,GAAG,IACzB7yD,KAAK8yD,UAAY,EACrB,GAAC,CAAA90D,IAAA,eAAAmD,MAED,WACI,OAAiC,IAA7BnB,KAAK4xD,MAAMzJ,eACXnoD,KAAK8yD,UAAU/vD,KAAK/C,KAAK4xD,MAAMvyD,KAAO,4BAC/B,KACAW,KAAKsxD,cAAgC,IAAhBtxD,KAAKixD,YAE1BhE,GAAajtD,KAAK+wD,SAAS1xD,QAE3BW,KAAKuxD,QACZvxD,KAAK4yD,MAAM5yD,KAAKixD,QAAUjxD,KAAK4xD,MAAMvyD,KAAO,aAC5CW,KAAK8yD,UAAU/vD,KAAK/C,KAAK4xD,MAAMvyD,KAAO,kCAC/B,GAEHW,KAAK4xD,MAAM6D,SACXz1D,KAAK4yD,MAAM5yD,KAAKixD,QAAUjxD,KAAK4xD,MAAMvyD,KAAO,mBAC5CW,KAAK4xD,MAAM6D,UAEXz1D,KAAK8yD,UAAU/vD,KAAK/C,KAAK4xD,MAAMvyD,KAAO,mCAC/B,GACAW,KAAK4xD,MAAM8D,WAAaC,GAAclvB,SAASzmC,KAAKqZ,KAAKha,OAChEW,KAAK4yD,MAAM5yD,KAAKixD,QAAUjxD,KAAK4xD,MAAMvyD,KAAO,oBAC5CW,KAAK4xD,MAAM8D,WAEX11D,KAAK8yD,UAAU/vD,KAAK/C,KAAK4xD,MAAMvyD,KAAO,mCAC/B,GAEPW,KAAK4xD,MAAMgE,SACY,WAAvB51D,KAAKqZ,KAAKnS,WACT+lD,GAAajtD,KAAK+wD,SAAS1xD,OAE5BW,KAAK4yD,MAAM5yD,KAAKixD,QAAUjxD,KAAK4xD,MAAMvyD,KAAO,wCAC5CW,KAAK4xD,MAAMgE,UAEX51D,KAAK8yD,UAAU/vD,KAAK/C,KAAK4xD,MAAMvyD,KAAO,6BAA+BW,KAAK+wD,SAAS1xD,KAAO,MACnF,GACAW,KAAK4xD,MAAMiE,WAAa71D,KAAKqZ,KAAKha,OAASW,KAAK4xD,MAAMkE,cAC7D91D,KAAK4yD,MAAM5yD,KAAKixD,QAAUjxD,KAAKqZ,KAAKha,KAAO,gBAE3CW,KAAK8yD,UAAU/vD,KAAK/C,KAAK+wD,SAAS1xD,KAAO,oCAClC,GACAW,KAAK4xD,MAAMmE,cAAgB/1D,KAAK+wD,SAAS5hD,SAChDnP,KAAK4yD,MAAM5yD,KAAKixD,QAAUjxD,KAAK4xD,MAAMvyD,KAAO,mDAE5CW,KAAK8yD,UAAU/vD,KAAK,mCAAqC/C,KAAK+wD,SAAS1xD,KAAO,MACvE,GACsB,QAAtBW,KAAK4xD,MAAM7d,QAAoB/zC,KAAKZ,QAAQ42D,WAAmC,QAAtBh2D,KAAKZ,QAAQiuD,MAC7ErtD,KAAK4yD,MAAM5yD,KAAKixD,QAAUjxD,KAAK4xD,MAAMvyD,KAAO,sCAE5CW,KAAK8yD,UAAU/vD,KAAK/C,KAAK4xD,MAAMvyD,KAAO,wCAC/B,GACAW,KAAK4xD,MAAMxJ,eAAe3hB,SAAS,cAAgBzmC,KAAKZ,QAAQ42D,WAAmC,QAAtBh2D,KAAKZ,QAAQiuD,MAEjGrtD,KAAKi2D,wBACE,IAEmB,QAAtBj2D,KAAK4xD,MAAM7d,OACX/zC,KAAK8yD,UAAU/vD,KAAK,yBAA2B/C,KAAK4xD,MAAMvyD,KAAO,iBAC1DW,KAAK4xD,MAAMxJ,eAAe3hB,SAAS,cAC1CzmC,KAAK8yD,UAAU/vD,KAAK,yBAA2B/C,KAAK4xD,MAAMvyD,KAAO,kBAE9D,IAGnB,GAAC,CAAArB,IAAA,uBAAAmD,MAED,WACI,IAAM+0D,EAAel2D,KAAK4xD,MAAMnyD,QAC5By2D,EAAatjB,WAAW,aAAc,aAAc,gBACpDsjB,EAAahgB,QAAU,gBAEM,QAA7BggB,EAAanf,cACbmf,EAAanf,iBAAcl3C,GAE3Bq2D,EAAa1jB,QAAQ,WAAY,cAAe,aAAc,gBAC9D0jB,EAAa9mB,UAAOvvC,GAExBq2D,EAAa7R,SAAW,EACxB,IAAMlZ,EAAQ,IAAID,GAEZirB,EAAMpL,GAAU,EAAGmL,EAAcA,EAD1B,IAAIh+C,GAAK,EAAG,gCACkCizB,GACrDqN,EAAS2d,EAAI3d,OACb4d,EAAkC,QAAtBp2D,KAAKZ,QAAQiuD,KAAiB7U,EAAOA,EAAO54C,OAAO,GAA2B,QAAtBI,KAAKZ,QAAQiuD,KAAiB7U,EAAO,GAAKA,EAAO3H,KAAKC,MAAM0H,EAAO54C,OAAO,IAC9IytD,EAAOI,GAAc,CAACjV,GAAS,EAAG0d,EAAa/c,QAAS,CAAC,IAC/Dn5C,KAAKwyD,QAAQxyD,KAAKixD,QAAUmF,EAC5Bp2D,KAAK4yD,MAAM5yD,KAAKixD,QAAUkF,EAAIrgB,OAC9B91C,KAAK8yD,UAAU/vD,KAAK/C,KAAK4xD,MAAMvyD,KAAO,kCACtCW,KAAK0xD,WAAWqC,YAAY/zD,KAAKixD,OAAQmF,EAAW/I,EAAM,GAAG,GAAO,EAAO,MAAO,YAAY,GAAO,GAAO,GAAM,EACtH,GAAC,CAAArvD,IAAA,kBAAAmD,MAED,WACInB,KAAKmyD,qBACDnyD,KAAK4xD,MAAMhf,WAAW,kBAChB5yC,KAAK+wD,SAASsF,cAAgB,GAAK,GACT,mBAA3Br2D,KAAK+wD,SAAS7pD,UACa,iBAA3BlH,KAAK+wD,SAAS7pD,UAA+BjJ,OAAOuyD,OAAOxwD,KAAK+wD,SAASuF,aAAcC,MAAK,SAAChY,GAAG,OAAKA,EAAIiY,OAAS,CAAC,KACxF,iBAA3Bx2D,KAAK+wD,SAAS7pD,UAA+BjJ,OAAOuyD,OAAOxwD,KAAK+wD,SAASuF,aAAcC,MAAK,SAAChY,GAAG,OAAKA,EAAIiY,OAAS,CAAC,KACpH,CAAC,cAAc,iBAAiB,cAAc,oBAAoB,eAAe,iBAAiB,iBAAiB,aAAa/vB,SAASzmC,KAAK+wD,SAAS1xD,MAGnK,GAAC,CAAArB,IAAA,qBAAAmD,MAED,WAA8B,IAADs1D,EAAA,KACnBC,EAAa12D,KAAK+wD,SAASrxD,OACN,eAAvBM,KAAK+wD,SAAS1xD,KAAyBW,KAAK6xD,aAAe,CAAC,EAAE,EAAE,EAAE,GAC9C,SAAf6E,EAAyB12D,KAAK6xD,aAAe,CAAC7xD,KAAKixD,SACnDjxD,KAAKsxD,cAAgC,sBAAfoF,GAAqD,kBAAfA,EAC7C,qBAAfA,GAAoD,kBAAfA,GAAiD,sBAAfA,EAAsC12D,KAAK6xD,aAAe,CAAC7xD,KAAK+xD,WACxH,eAAf2E,EAA+B12D,KAAK6xD,aAA+B,IAAhB7xD,KAAKixD,OAAe,GAAK,CAAC,EAAE,EAAE,EAAE,GAAGlrD,QAAO,SAACjG,GAAC,OAAKA,IAAM22D,EAAKxF,MAAM,IACtG,oBAAfyF,EAAoC12D,KAAK6xD,aAA+B,IAAhB7xD,KAAKixD,OAAe,CAAC,GAAK,CAAC,EAAE,EAAE,EAAE,GACzF,CAAC,cAAe,eAAgB,gBAAgBxqB,SAASiwB,GAAc,IAAO12D,KAAK6xD,aAAe,CAAC7xD,KAAKixD,QAC1GjxD,KAAK6xD,aAAe,CAAC7xD,KAAK+xD,WALuE/xD,KAAK6xD,aAAe,CAAC,EAAE,EAAE,EAAE,EAMvI,GAAC,CAAA7zD,IAAA,cAAAmD,MAED,WACI,OAAQnB,KAAKqZ,KAAKha,MACd,IAAK,eACD,IAAMs3D,EAAU32D,KAAK0xD,WAAW8D,OAAOx1D,KAAKixD,QAO5C,YANAjxD,KAAKsyD,UACDqE,EAAQ5X,WAAW,MAAO,oBAAsB/+C,KAAK4xD,MAAMpf,QAAQ,oBAAsB,OACvFmkB,EAAQ5X,WAAW,OAAQ,gBAAkB/+C,KAAK4xD,MAAMpf,QAAQ,oBAAsB,QACtFmkB,EAAQ5X,WAAW,QAAU,OAC7B4X,EAAQ5X,WAAW,OAAQ,QAAU,MACrC,UAEV,IAAK,WAID,YAHI/+C,KAAK4xD,MAAMvyD,KAAKonC,SAAS,YACzBzmC,KAAKsyD,UAAYtyD,KAAK4xD,MAAMp4C,MAAM,KAG1C,IAAK,mBAED,YADAxZ,KAAKsyD,UAAYtyD,KAAK4xD,MAAMp4C,MAAM,IAEtC,IAAK,aAED,YADAxZ,KAAKsyD,UAAYtyD,KAAK4xD,MAAMzd,MAAM,kBAAoB,OAAS,YAEnE,IAAK,cAKD,YAJAn0C,KAAKsyD,UAAatyD,KAAK4xD,MAAMzd,MAAM,wBAA0B,WACjDn0C,KAAK4xD,MAAMzd,MAAM,uBAAyB,OAC1Cn0C,KAAK4xD,MAAMzd,MAAM,sBAAwB,QACzC,UAEhB,IAAK,gBACD,IAAMyiB,EAAU52D,KAAK0xD,WAAW8D,OAAOx1D,KAAKixD,QAM5C,YALAjxD,KAAKsyD,UAAasE,EAAQhhB,WAAW,YAAc,WACvCghB,EAAQhhB,WAAW,UAAY,QAC/BghB,EAAQhhB,WAAW,WAAa,UAChCghB,EAAQhhB,WAAW,SAAW,QAC9B,UAEhB,IAAK,aAED,YADA51C,KAAKsyD,UAAatyD,KAAK4xD,MAAM9N,QAAU9jD,KAAK4xD,MAAMzS,SAAYn/C,KAAK4xD,MAAMzS,SAAW,UAExF,IAAK,aAKD,YAJAn/C,KAAKsyD,UAAatyD,KAAK4xD,MAAMzd,MAAM,sBAAwB,QAC/Cn0C,KAAK4xD,MAAMzd,MAAM,uBAAyB,OAC1Cn0C,KAAK4xD,MAAMzd,MAAM,uBAAyB,OAC1C,SAEhB,IAAK,iBAED,YADAn0C,KAAKsyD,UAAYtyD,KAAK4xD,MAAMzd,MAAM,qBAAuB,UAAY,UAG7E,IAAMyN,EAA4B,WAAnB5hD,KAAKsyD,UACpB,OAAQtyD,KAAK4xD,MAAM1b,SACf,IAAK,WACDl2C,KAAKsyD,UAAY1Q,EAAS,SAAW5hD,KAAKsyD,UAC1C,MACJ,IAAK,YACDtyD,KAAKsyD,UAAY1Q,EAAS,WAAa5hD,KAAKsyD,UAC5C,MACJ,IAAK,eACDtyD,KAAKsyD,UAAYtyD,KAAKqZ,KAAKjB,OAASpY,KAAKqZ,KAAKjB,MAAMQ,MAAQ,QAAU5Y,KAAKsyD,UAC3E,MACJ,IAAK,WACDtyD,KAAKsyD,UAAY1Q,EAAS,QAAU5hD,KAAKsyD,UACzC,MACJ,IAAK,cACDtyD,KAAKsyD,UAAY1Q,EAAS,MAAQ5hD,KAAKsyD,UACvC,MACJ,IAAK,YACDtyD,KAAKsyD,UAAY,SAG7B,GAAC,CAAAt0D,IAAA,mBAAAmD,MAED,WACI,IAAI8rD,GAAajtD,KAAK+wD,SAAS1xD,MAA/B,CAIA,IAHA,IAAM6H,EAAWlH,KAAKqZ,KAAKnS,SACrBwvD,EAAa12D,KAAK+wD,SAASrxD,OAC3B46C,EAAWt6C,KAAKqZ,KAAKha,KAClBS,EAAE,EAAGA,EAAEE,KAAK6xD,aAAajyD,OAAQE,IAAK,CAC3C,IAAIsB,EAAKpB,KAAK6xD,aAAa/xD,GAC3B,GAAIE,KAAKixD,SAAW7vD,EAApB,CAMA,IAAImxC,EAAUvyC,KAAK40D,WAAWxzD,GACxB+pC,EAAQoH,EAAQpH,MAkBtB,GAhBI0rB,GAAiBpwB,SAAS6T,IAAa/H,EAAQK,WAAW,kBAC1D5yC,KAAKgyD,eAAe5wD,GAAM,+BAC1BpB,KAAK6xD,aAAa/xD,GAAKE,KAAKixD,OAC5BjxD,KAAK+xD,UAAY/xD,KAAKixD,OACtB7vD,EAAKpB,KAAKixD,OACV1e,EAAUvyC,KAAK40D,WAAWxzD,IAGV,IAAhBpB,KAAKixD,QAAgB1e,EAAQ4I,cAA6B,WAAbj0C,IAC7ClH,KAAKgyD,eAAe5wD,GAAM,cAAgBmxC,EAAQlzC,KAAO,cAGzDkzC,EAAQukB,YAA2B,WAAb5vD,GAA0BlH,KAAK+wD,SAAS5hD,SAAYnP,KAAK+wD,SAASgG,WAAc/2D,KAAK4xD,MAAMhf,WAAW,iBAC5H5yC,KAAKgyD,eAAe5wD,GAAM,cAAgBmxC,EAAQlzC,KAAO,iBAGzD8rC,EAAMyK,WAAW,YAAcgW,GAAkBrZ,EAASpH,KAAWnrC,KAAK+wD,SAASvkD,UAAY,GAAK,IAC/E,IAAhBxM,KAAKixD,QAAqC,IAAnBjxD,KAAK+xD,WAC7B/xD,KAAKgyD,eAAe5wD,GAAM,iCAFlC,CAOA,IAAKmxC,EAAQ+V,oBAAsBtoD,KAAK4xD,MAAMhf,WAAW,eAAgB,WAAY,eAAkBL,EAAQC,QAAQ,sBAAwBxyC,KAAK4xD,MAAMhf,WAAW,mBAA4C,WAAvB5yC,KAAKqZ,KAAKnS,UAKhM,OAHIikC,EAAMmB,aAAa6B,aAAenuC,KAAK+wD,SAASvkD,UAAY,GAAK,IACjExM,KAAKgyD,eAAe5wD,GAAM,+BAEtBmxC,EAAQ2D,SACZ,IAAK,eACL,IAAK,eACD,GAAiB,WAAbhvC,GAAwC,SAAfwvD,EAAuB,CAChD12D,KAAKgyD,eAAe5wD,GAAM,mBAAqBmxC,EAAQlzC,KAAO,WAAakzC,EAAQ2D,QACnF,QACJ,CACA,MACJ,IAAK,WACL,IAAK,eACD,GAAuB,UAAnBl2C,KAAKsyD,UAAuB,CAC5BtyD,KAAKgyD,eAAe5wD,GAAM,SAAWmxC,EAAQlzC,KAAO,WAAakzC,EAAQ2D,QACzEl2C,KAAK0yD,SAAStxD,GAAMyvC,KAAKC,MAAwB,IAAlByB,EAAQ4G,SACvC,QACJ,CACA,MACJ,IAAK,cACD,GAAuB,aAAnBn5C,KAAKsyD,UAA0B,CAC/BtyD,KAAKgyD,eAAe5wD,GAAM,SAAWmxC,EAAQlzC,KAAO,WAAakzC,EAAQ2D,QACzEl2C,KAAK0yD,SAAStxD,GAAMyvC,KAAKC,MAAwB,IAAlByB,EAAQ4G,SACvC,QACJ,CACA,MACJ,IAAK,cACD,GAAuB,WAAnBn5C,KAAKsyD,UAAwB,CAC7BtyD,KAAKgyD,eAAe5wD,GAAM,SAAWmxC,EAAQlzC,KAAO,WAAakzC,EAAQ2D,QACzEl2C,KAAK0yD,SAAStxD,GAAMyvC,KAAKC,MAAwB,IAAlByB,EAAQ4G,SACvC,QACJ,CACA,MACJ,IAAK,aACD,GAAuB,SAAnBn5C,KAAKsyD,UAAsB,CAC3BtyD,KAAKgyD,eAAe5wD,GAAM,UAAYmxC,EAAQlzC,KAAO,WAAakzC,EAAQ2D,QAC1El2C,KAAK0xD,WAAWkD,WAAWxzD,GAAI0yC,WAAY,EAC3C,QACJ,CACA,MACJ,IAAK,kBACD,GAAwB,oBAApBvB,EAAQ2D,SAAoD,SAAnBl2C,KAAKsyD,UAAsB,CACpEtyD,KAAKgyD,eAAe5wD,GAAM,UAAYmxC,EAAQlzC,KAAO,WAAakzC,EAAQ2D,QAE1El2C,KAAK0xD,WAAWsD,gBAAgB5zD,EADlB,CAACsQ,IAAK,IAEpB,QACJ,CACA,MACJ,IAAK,aACD,GAAuB,UAAnB1R,KAAKsyD,UAAuB,CAC5BtyD,KAAKgyD,eAAe5wD,GAAM,UAAYmxC,EAAQlzC,KAAO,WAAakzC,EAAQ2D,QAE1El2C,KAAK0xD,WAAWsD,gBAAgB5zD,EADlB,CAACqQ,IAAK,IAEpB,QACJ,CACA,MACJ,IAAK,cACD,GAAuB,aAAnBzR,KAAKsyD,UAA0B,CAC/BtyD,KAAKgyD,eAAe5wD,GAAM,UAAYmxC,EAAQlzC,KAAO,WAAakzC,EAAQ2D,QAE1El2C,KAAK0xD,WAAWsD,gBAAgB5zD,EADlB,CAAColC,IAAK,IAEpB,QACJ,CACA,MACJ,IAAK,cACD,GAAuB,UAAnBxmC,KAAKsyD,UAAuB,CAC5BtyD,KAAKgyD,eAAe5wD,GAAM,UAAYmxC,EAAQlzC,KAAO,WAAakzC,EAAQ2D,QAE1El2C,KAAK0xD,WAAWsD,gBAAgB5zD,EADlB,CAAC+O,IAAK,IAEpB,QACJ,CACA,MACJ,IAAK,gBACD,GAAuB,aAAnBnQ,KAAKsyD,UAA0B,CAC/BtyD,KAAKgyD,eAAe5wD,GAAM,UAAYmxC,EAAQlzC,KAAO,WAAakzC,EAAQ2D,QAE1El2C,KAAK0xD,WAAWsD,gBAAgB5zD,EADlB,CAAC+O,IAAK,IAEpB,QACJ,CACA,MACJ,IAAK,cACD,GAAInQ,KAAK+wD,SAAS97C,SAAU,CACxBjV,KAAKgyD,eAAe5wD,GAAM,yBAC1B,QACJ,CACA,MACJ,IAAK,aACD,GAAIpB,KAAK+wD,SAAS15C,OAAQ,CACtBrX,KAAKgyD,eAAe5wD,GAAM,wBAE1BpB,KAAK0xD,WAAWsD,gBAAgB5zD,EADlB,CAACqQ,IAAK,IAEpB,QACJ,CACA,MACJ,IAAK,WACD,IAAKm6C,GAAkBrZ,EAASpH,IAA6B,WAAnBnrC,KAAKsyD,UAAwB,CACnEtyD,KAAKgyD,eAAe5wD,GAAM,mBAAqBmxC,EAAQlzC,KAAO,WAAakzC,EAAQ2D,QACnF,QACJ,CACA,MACJ,IAAK,aACD,GAAIl2C,KAAK+wD,SAAS5hD,QAAS,CACvBnP,KAAKgyD,eAAe5wD,GAAM,wBAC1B,QACJ,EAMZ,IAAM41D,EAAezkB,EAAQuR,QAAUvR,EAAQ4M,SAAY,CAAC5M,EAAQ4M,UAAY5M,EAAQ/4B,MACxF,GAAiB,WAAbtS,GAA0C,gBAAjBqrC,EAAQnD,KAAwB,CACzD,GAAuB,WAAnBpvC,KAAKsyD,YAA2B1G,GAAkBrZ,EAASpH,GAAQ,CACnEnrC,KAAKgyD,eAAe5wD,GAAM,mBAAqBmxC,EAAQlzC,KACvD,QACJ,CACA,GAAuB,aAAnBW,KAAKsyD,WAA4B0E,EAAYvwB,SAAS,UAAW,CACjEzmC,KAAKgyD,eAAe5wD,GAAM,mBAAqBmxC,EAAQlzC,KACvD,QACJ,CACA,GAAI,CAAC,SAAU,YAAYonC,SAASzmC,KAAKsyD,WAAa,KAAO0E,EAAYvwB,SAAS,WAAc,CAAC,UAAW,cAA8CA,SAASzmC,KAAK4xD,MAAM1b,SAAU,CACpLl2C,KAAKgyD,eAAe5wD,GAAM,mBAAqBmxC,EAAQlzC,KACvD,QACJ,CACA,GAAuB,UAAnBW,KAAKsyD,WAAyB0E,EAAYvwB,SAAS,UAAW,CAC9DzmC,KAAKgyD,eAAe5wD,GAAM,mBAAqBmxC,EAAQlzC,KACvD,QACJ,CACA,GAAuB,WAAnBW,KAAKsyD,WAA0B0E,EAAYvwB,SAAS,SAAU,CAC9DzmC,KAAKgyD,eAAe5wD,GAAM,mBAAqBmxC,EAAQlzC,KACvD,QACJ,CACA,GAAuB,YAAnBW,KAAKsyD,WAA2B0E,EAAYvwB,SAAS,QAAS,CAC9DzmC,KAAKgyD,eAAe5wD,GAAM,mBAAqBmxC,EAAQlzC,KACvD,QACJ,CACA,GAAuB,WAAnBW,KAAKsyD,WAA0B0E,EAAYvwB,SAAS,WAAazmC,KAAK4xD,MAAMhf,WAAW,aAAc,CACrG5yC,KAAKgyD,eAAe5wD,GAAM,mBAAqBmxC,EAAQlzC,KACvD,QACJ,CACJ,CACiB,iBAAbi7C,GAA+B0c,EAAYvwB,SAAS,WAA8B,gBAAjB8L,EAAQnD,KACzEpvC,KAAKgyD,eAAe5wD,GAAM,mBAAqBmxC,EAAQlzC,OAGtDi7C,EAAS7T,SAAS,WAAa6T,EAAS7T,SAAS,UAAyB,gBAAb6T,KAAgC0c,EAAYvwB,SAAS,UAA6B,mBAAjB8L,EAAQnD,KAIvIhuC,IAAOpB,KAAKixD,QAAUjxD,KAAK4xD,MAAMhf,WAAW,cAA6B,WAAb1rC,GAAyB8vD,EAAYvwB,SAAS,UAC1GzmC,KAAKgyD,eAAe5wD,GAAM,mBAAqBmxC,EAAQlzC,MAJvDW,KAAKgyD,eAAe5wD,GAAM,mBAAqBmxC,EAAQlzC,IAtJ3D,CAzBA,KAJqB,cAAbi7C,GAAqD,IAAzBt6C,KAAK4xD,MAAM7M,YACvC/kD,KAAKgyD,eAAe5wD,GAAM,mBAAqBpB,KAAK40D,WAAWxzD,GAAI/B,KAyL/E,CAAC,IACkCkD,EADlCG,GAAAC,EAAAA,EAAAA,GACe3C,KAAKgyD,gBAAc,IAAnC,IAAAtvD,EAAAE,MAAAL,EAAAG,EAAAG,KAAAb,MAAsC,CAClC,GADQO,EAAApB,MAGJ,KAER,CAAC,OAAA5D,IAAAmF,EAAAxD,EAAA3B,GAAA,SAAAmF,EAAAI,GAAA,CAvM+C,CAwMpD,GAAC,CAAA9E,IAAA,kBAAAmD,MAED,WACI,IAAK81D,GAAmBxwB,SAASzmC,KAAK+wD,SAAS1xD,MAAM,CAAC,IAClBo3C,EADiBE,GAAAh0C,EAAAA,EAAAA,GAClC3C,KAAK6xD,cAAY,IAAhC,IAAAlb,EAAA/zC,MAAA6zC,EAAAE,EAAA9zC,KAAAb,MAAkC,CAAC,IAA1BZ,EAAEq1C,EAAAt1C,MACP,IAAKnB,KAAKgyD,eAAe5wD,GAAK,CAC1B,IAAMmxC,EAAUvyC,KAAK40D,WAAWxzD,GAC1B+pC,EAAQoH,EAAQpH,MAClBA,EAAMmB,aAAaoB,YACnB1tC,KAAKkyD,WAAW9wD,GAAMmxC,EAAQuZ,SAAUzsD,KACjC8rC,EAAMmB,aAAaqB,aAAe,CAAC,cAAe,oBAAqB,iBAAiBlH,SAASzmC,KAAK+wD,SAASrxD,QAAU,IAChIM,KAAKkyD,WAAW9wD,GAAM,aACf+pC,EAAMmB,aAAasB,eAAiB5tC,KAAK+wD,SAASvkD,UAAY,GAAK,IAC1ExM,KAAKkyD,WAAW9wD,GAAM,cAE9B,CACJ,CAAC,OAAA7D,IAAAo5C,EAAAz3C,EAAA3B,GAAA,SAAAo5C,EAAA7zC,GAAA,CACL,CACJ,GAAC,CAAA9E,IAAA,kBAAAmD,MAED,WACI,IAAMm5C,EAAWt6C,KAAK+wD,SAAS1xD,KAC/B,GAAI,CAAC,UAAW,SAAU,eAAgB,iBAAkB,mBAAmBonC,SAAS6T,GACpFt6C,KAAK8xD,QAAQ9xD,KAAKixD,QAAQ3kB,aAAaoB,aAAc,OAClD,GAAiB,eAAb4M,EACP,GAAoB,IAAhBt6C,KAAKixD,OACLjxD,KAAK8xD,QAAQ,GAAGxlB,aAAaqB,aAAc,OAE3C,IAAK,IAAI7tC,EAAE,EAAGA,EAAE,EAAGA,IACfE,KAAK8xD,QAAQhyD,GAAGwsC,aAAaqB,aAAc,OAGhD,GAAiB,gBAAb2M,EACP,GAAoB,IAAhBt6C,KAAKixD,OACLjxD,KAAK8xD,QAAQ,GAAGxlB,aAAasB,cAAe,OAE5C,IAAK,IAAI9tC,EAAE,EAAGA,EAAE,EAAGA,IACfE,KAAK8xD,QAAQhyD,GAAGwsC,aAAasB,cAAe,CAI5D,GAAC,CAAA5vC,IAAA,eAAAmD,MAED,SAAqB+1D,EAAcC,GAC/B,IAAMC,EAAYp3D,KAAK0xD,WAAW8D,OAAO0B,GAAOz3D,QAEhD,OADA23D,EAAU7qB,aAAevsC,KAAK0xD,WAAW8D,OAAO2B,GAAO7qB,aAAa7sC,QAC7D23D,CACX,GAAC,CAAAp5D,IAAA,aAAAmD,MAED,SAAmBC,GACf,OAAOpB,KAAK2xD,SAASvwD,EACzB,GAAC,CAAApD,IAAA,cAAAmD,MAED,WAAuB,IAADk2D,EAAAC,EAAAC,EAAAC,EAAA,KACZC,EAAWz3D,KAAK40D,WAAW50D,KAAKixD,QAEtCjxD,KAAKuyD,WAAkC,QAAtB8E,EAAAr3D,KAAK+wD,SAAS7pD,gBAAQ,IAAAmwD,OAAA,EAAtBA,EAAwB5wB,SAAS,YAAczmC,KAAK6xD,aAAajyD,OAAS,EAEhE,cAAvBI,KAAK+wD,SAAS1xD,MAAwBW,KAAK+wD,SAASlqD,MAAQ4wD,EAAS7kB,WAAW,UAAW,YAAc6kB,EAAS3jB,YAAc2jB,EAAS3T,SACzI2T,EAASj+C,MAAQ,CAACxZ,KAAKsyD,WACvBmF,EAAS3jB,WAAY,EACrB2jB,EAASpP,cAAe,EACxBroD,KAAK6yD,OAAO7yD,KAAKixD,QAAQluD,KAAK,kBAAoB/C,KAAKsyD,UAAY,UAG5C,iBAAvBtyD,KAAK+wD,SAAS1xD,MAA4BW,KAAKmyD,sBAAyBsF,EAAStL,YACjFnsD,KAAK0xD,WAAWsD,gBAAgBh1D,KAAKixD,OAAQ,CAAC9gD,IAAK,IAG5B,YAAvBnQ,KAAK+wD,SAAS1xD,MAAuBW,KAAK4xD,MAAM7M,YAChD/kD,KAAK4yD,MAAM5yD,KAAKixD,QAAUjxD,KAAK4xD,MAAMvyD,KAAO,IAAMW,KAAKqZ,KAAKha,KAAO,QAAUW,KAAK0xD,WAAWkD,WAAW50D,KAAK+xD,WAAW1yD,KAAO,WAAQW,KAAKqZ,KAAKha,KAAO,YAI5J,IADA,IAAIq4D,GAAkB,EACtBx+C,EAAA,EAAA+9B,EAAe,CAAC,EAAE,EAAE,EAAE,EAAE,GAAE/9B,EAAA+9B,EAAAr3C,OAAAsZ,IAAE,CAAvB,IAAI9X,EAAE61C,EAAA/9B,GACDxZ,EAASM,KAAK40D,WAAWxzD,GAC/B,GAAIpB,KAAKgyD,eAAe5wD,GACpBpB,KAAK4yD,MAAMxxD,GAAMpB,KAAKqZ,KAAKha,KAAO,IAAMW,KAAKgyD,eAAe5wD,GAAM,SAC/D,GAAIpB,KAAKkyD,WAAW9wD,GACvBpB,KAAK4yD,MAAMxxD,GAAMpB,KAAKqZ,KAAKha,KAAO,mBAAqBW,KAAKkyD,WAAW9wD,GAAM,SAC1E,GAAIpB,KAAK6xD,aAAaprB,SAASrlC,GAAK,CACvC,IAAMu2D,EAAaxK,GAAcntD,KAAKqZ,KAAMo+C,EAAU/3D,GAChDk4D,EAAO53D,KAAKZ,QAAQw4D,MAAQD,GAAc,EAC1CtK,EAAOrtD,KAAKZ,QAAQiuD,MAAQ,MAC5BwK,EAAiBnM,GAAiB1rD,KAAKqZ,KAAMrZ,KAAKsyD,UAAW5yD,EAAOyrC,MAAOnrC,KAAK4xD,MAAOlyD,GACzFo4D,EAAU,GACVC,OAA8Cl4D,EAC9Cm4D,EAAc,EAEZ9T,EAA0BlkD,KAAK4xD,MAAMhf,WAAW,eAAgB,WAAY,gBAAkBlzC,EAAO8yC,QAAQ,mBAAuBxyC,KAAK4xD,MAAMhf,WAAW,mBAA4C,WAAvB5yC,KAAKqZ,KAAKnS,SAC/LqjC,EAAkCvqC,KAAKwxD,YAAcxxD,KAAK4xD,MAAMqG,aAAgB,CAACj4D,KAAK4xD,MAAMqG,aAAc,IAAMlM,GAAY/rD,KAAK+wD,SAAU/wD,KAAKqZ,KAAKnS,SAAUuwD,EAAU/3D,GAASM,KAAKoxD,WAAYlN,GAAuB1Z,GAAAC,EAAAA,GAAAA,GAAAF,EAAA,GAArN6hB,EAAQ5hB,EAAA,GAAE0tB,EAAc1tB,EAAA,GAC7BxqC,KAAK4xD,MAAMqG,aAAe7L,EAC1B,IAAM+L,EAAarL,GAAc9sD,KAAK+wD,SAAUrxD,EAAQM,KAAK+sD,SACvDqL,EAAcvnB,KAAKkC,IAAI,EAAEqZ,EAAS,KAClC4B,EAAaoK,GAAeR,EAAOD,EAAc,EAAIA,GAC3D,GAAI33D,KAAKZ,QAAQ42D,UAAa5J,GAAY,KAAgB,QAATiB,EAAmBjB,EAAW,EAAI,CAC/E,IAGI,IAFA,IAAMiM,EAAgB34D,EAAO0vC,KAC7BkU,EAAA,WAEI,IAAMgV,EAAWd,EAAKn+C,KAAK5Z,QAM3B,GALA64D,EAAStf,KAAO,EAChBsf,EAAS5X,OAASkX,EAClBU,EAASpd,WAAasc,EAAKjF,UAC3B+F,EAASrxD,GAAKqxD,EAASrxD,GAAKkxD,EAC5BG,EAASrxD,IAAyB,gBAAlBqxD,EAASj5D,MAA4C,gBAAlBi5D,EAASj5D,KAA0BS,EAAE,EAAI,GAAKw4D,EAASrxD,GACpF,gBAAlBqxD,EAASj5D,MAA0C,IAAhBm4D,EAAKvG,QAAmC,IAAnBuG,EAAKzF,UAAkB,MAAD,QAI9EyF,EAAK5F,MAAM9F,UAAa0L,EAAKzG,SAAS1xD,OAASm4D,EAAK5F,MAAM9F,SAASzsD,KACnEm4D,EAAK5F,MAAM2G,cAAgBf,EAAK5F,MAAM2G,cAAgB,GAAK,EAI3Df,EAAK5F,MAAM2G,aAAe,EAEN,cAApBf,EAAK5F,MAAMxiB,OACXkpB,EAAS1a,uBAAyB4Z,EAAK5F,MAAM2G,cAAgB,GAGjE,IAAMnB,EAAYI,EAAKgB,aAAahB,EAAKvG,OAAQ7vD,GAC3C8+C,EAAS6K,GAAU,EAAG0M,EAAU/3D,EAAQ44D,EAAUlB,GACpDqB,OAAc54D,EAClB,GAAI83D,EAAa,GAAKA,EAAa,EAAG,CAClC,IAAMe,EAAgBJ,EAAS74D,QAC/Bi5D,EAAchY,QAAUkX,EACxBa,EAAc1N,GAAU,EAAG0M,EAAU/3D,EAAQg5D,EAAetB,EAChE,CAEAU,EAAQ/0D,KAAKm9C,QAEQrgD,IAAjBk4D,EAEAA,EAAe7X,EAAO1H,OACU,kBAAlBuf,EACdA,GAA2C7X,EAAO1H,OAElDuf,EAAgBA,EAA0Bt1D,KAAI,SAAC87C,EAAKz+C,GAAC,OAAKy+C,EAAO2B,EAAO1H,OAAoB14C,EAAE,IAElG,IAAI64D,EAAY,EACZC,OAAU/4D,EAYd,GAX8B,kBAAnBqgD,EAAO1H,OAEdogB,EAAUnL,GAAc,CAAC,CADzBkL,EAAYzY,EAAO1H,SACoB,EAAG94C,EAAOy5C,QAAS,CAAC6U,KAG3D2K,EAAqB,QAATtL,EAAiBnN,EAAO1H,OAAO0H,EAAO1H,OAAO54C,OAAO,GAAc,QAATytD,EAAiBnN,EAAO1H,OAAO,GAAK0H,EAAO1H,OAAO3H,KAAKC,MAAMoP,EAAO1H,OAAO54C,OAAO,IACvJg5D,EAAUnL,GAAc,CAACvN,EAAO1H,QAAqB,EAAG94C,EAAOy5C,QAAS,CAAC6U,KAEvD,gBAAlBsK,EAASj5D,OACTs5D,EAAY9nB,KAAKkC,IAAI4lB,EAAWj5D,EAAOyoD,cAAgB,IAEvDsQ,EAAa,CACb,IAAMI,EAAkBT,GAAeR,EAAO,EAAID,EAAaA,GAE3DiB,EAD+B,kBAAxBH,EAAYjgB,OACTmW,GAAciK,EAASnL,GAAc,CAAC,CAACgL,EAAYjgB,SAAoB,EAAG94C,EAAOy5C,QAAS,CAAC0f,KAE3FlK,GAAciK,EAASnL,GAAc,CAACgL,EAAYjgB,QAAqB,EAAG94C,EAAOy5C,QAAS,CAAC0f,IAE7G,CACIT,EAAc,GAAKA,EAAc,IACjCQ,EAAUjK,GAAciK,EAASnL,GAAc,CAAC,CAAC,IAAK,EAAG/tD,EAAOy5C,QAAS,CAAC,EAAIif,MAElF,IAAMU,EAAmBtB,EAAKzG,SAASgG,WAAaU,EAAS7kB,WAAW,eAYxE,GAXA4kB,EAAK9F,WAAWqC,YAAY3yD,EAAIu3D,EAAWC,EAAS,EAAG1Y,EAAOzH,QAAQwC,WAAY4c,EAAgBL,EAAKlF,UAAWkF,EAAKn+C,KAAKnS,UAAU,EAAMswD,EAAKzG,SAAS15C,OAAQyhD,EAAkBtB,EAAKrF,sBACzL6F,GAAeW,EACfnB,EAAK/E,aAAarxD,GAAI2B,KAAK61D,GAGvBZ,EAAc,IACdN,GAAkB,EAClBD,EAAStsB,MAAMmB,aAAa0B,eAAgB,EACrB,aAAnBwpB,EAAKlF,YAA4BmF,EAAStsB,MAAMmB,aAAauC,WAAY,IAG7E2oB,EAAKzG,SAAS7hD,eAAiBsoD,EAAK5F,MAAMhf,WAAW,gBAAkB4kB,EAAK5F,MAAMpf,QAAQ,mBAAoB,CAC9G,IAAM9yC,EAAS83D,EAAK9F,WAAWuB,QAAQuE,EAAKzF,WAEtC7N,GAA0BsT,EAAK5F,MAAMhf,WAAW,eAAgB,WAAY,gBAAkBlzC,EAAO8yC,QAAQ,oBAAuBglB,EAAK5F,MAAMhf,WAAW,mBAA4C,WAAvB4kB,EAAKn+C,KAAKnS,SAC/L,IAAKxH,EAAO4oD,mBAAqBpE,EAC7B,OAAQsT,EAAK9F,WAAWuB,QAAQuE,EAAKzF,WAAW7b,SAC5C,IAAK,aACL,IAAK,aACDshB,EAAK9F,WAAWqC,YAAYyD,EAAKvG,OAAQpgB,KAAKC,MAAM0mB,EAAK5F,MAAMzY,QAAU,IAAMqe,EAAK5F,MAAMtW,gBAAkB,KAAO,OACnH,MACJ,IAAK,YAC4B,IAAzB57C,EAAOyoD,eACPqP,EAAK9F,WAAWqC,YAAYyD,EAAKvG,OAAQpgB,KAAKC,MAAM0mB,EAAK5F,MAAMzY,QAAU,IAAMqe,EAAK5F,MAAMtW,gBAAkB,KAAO,OAEvH,MACJ,IAAK,QACL,IAAK,gBACDkc,EAAK9F,WAAWsD,gBAAgBwC,EAAKvG,OAAQ,CAACzqB,KAAM,IACpD,MAEJ,IAAK,mBACIuyB,GAAAA,GAAkCtyB,SAAS+wB,EAAK5F,MAAM1b,WACvDx2C,EAAOw2C,QAAUshB,EAAK5F,MAAM1b,QAC5BshB,EAAK5F,MAAM1b,QAAU,oBAEzB,MACJ,IAAK,WACL,IAAK,aACD,IAAKx2C,EAAO0vC,MAAQooB,EAAK5F,MAAMxiB,KAAM,CACjC,IAAMA,EAAOooB,EAAK5F,MAAMxiB,KACxBooB,EAAK9F,WAAW1S,SAASwY,EAAKvG,QAC9BuG,EAAK9F,WAAWsH,YAAYxB,EAAKzF,UAAW3iB,EAChD,CACA,MAEJ,IAAK,QACL,IAAK,kBACIooB,EAAK5F,MAAMpf,QAAQ,oBACjBglB,EAAK5F,MAAMtJ,mBACVkP,EAAK5F,MAAMhf,WAAW,kBAAkB,UAAYmmB,GAAAA,GAAkCtyB,SAAS+wB,EAAK5F,MAAM1b,SAAW,MAEzHshB,EAAK9F,WAAWuH,cAAczB,EAAK5F,MAAMxwD,GAAI1B,EAAOw2C,SAQpE,OAAQx2C,EAAO0vC,MACX,IAAK,eACDooB,EAAK9F,WAAWqC,YAAYyD,EAAKvG,OAAQpgB,KAAKC,MAAM0mB,EAAK5F,MAAMzY,QAAU,IAAMqe,EAAK5F,MAAMtW,gBAAkB,KAAO,OACnH,MACJ,IAAK,cACIkc,EAAK5F,MAAMxiB,OACZooB,EAAK9F,WAAW1S,SAASwY,EAAKzF,WAC9ByF,EAAK9F,WAAWsH,YAAYxB,EAAKvG,OAAQ,gBAKzD,CACJ,EA3ISnxD,EAAE,EAAGA,EAAEE,KAAKg5C,KAAMl5C,IAAI,CAAD,aAAAwjD,IAQtB,KAAM,CAoId,IAAM4V,EAAiBx5D,EAAO0vC,KACzBipB,IAAkBa,GAAqBA,GACxCl5D,KAAK0xD,WAAW1S,SAAS59C,GAG7B,IAAM8+C,EAAS4X,EAAQ,GACvB5X,EAAO1H,OAASuf,EAChB7X,EAAOzH,QAAQO,KAAOh5C,KAAKg5C,KAAO,EAAIh5C,KAAKg5C,UAAOn5C,EAClDG,KAAKwyD,QAAQpxD,GAAMyvC,KAAKkC,IAAIilB,EAAah4D,KAAKgxD,UAAUiC,QAAQ7xD,GAAI+mD,eACpEnoD,KAAK4yD,MAAMxxD,GAAM8+C,EAAOpK,OAEG,UAAvB91C,KAAK+wD,SAAS1xD,MAAoBW,KAAK4xD,MAAMxiB,OAC7CpvC,KAAKoyD,WAAaqF,EAASroB,KAC3BpvC,KAAK0xD,WAAW1S,SAASh/C,KAAKixD,QAC9BjxD,KAAK4xD,MAAMuH,iBAAmBn5D,KAAKoyD,WAC/BpyD,KAAK4xD,MAAMhf,WAAW,aAAe5yC,KAAKoyD,WAAY3rB,SAAS,WAC/DzmC,KAAK4xD,MAAMwH,UAAY,GAGnC,CACA,MAAAC,GACIr5D,KAAK4yD,MAAMxxD,GAAMpB,KAAK4xD,MAAMvyD,KAAO,SAAWW,KAAKqZ,KAAKha,KAAO,OAASW,KAAK40D,WAAWxzD,GAAI/B,KAAO,GACvG,CAGA,GAAI+sD,EAAW,IAAK,CAChB,IAAMkN,EAAYzoB,KAAKuL,MAAiB,GAAXgQ,GAAiB,GACxCmN,EAAa1oB,KAAKuL,MAA0B,IAAnB,IAAMkd,IAAmB,GAClDE,EAAmBtB,EAAet4D,OAAS,KAAOs4D,EAAeuB,KAAK,MAAQ,IAAM,GAC1Fz5D,KAAK4yD,MAAMxxD,IAAO,KAAOk4D,EAAY,kBAAoBE,EAAmB,IAC5Ex5D,KAAK8yD,UAAU/vD,KAAK/C,KAAKqZ,KAAKha,KAAO,UAAYk6D,EAAa,mBAAqBC,EACvF,CAEK7I,GAAelqB,SAASzmC,KAAK+wD,SAAS1xD,KAG/C,KAAO,CACH,IAAMi6D,EAAYzoB,KAAKuL,MAAiB,GAAXgQ,GAAiB,GACxCmN,EAAa1oB,KAAKuL,MAA0B,IAAnB,IAAMkd,IAAmB,GAClDE,EAAmBtB,EAAet4D,OAAS,SAAWs4D,EAAeuB,KAAK,MAAQ,GACxFz5D,KAAK4yD,MAAMxxD,GAAMpB,KAAK4xD,MAAMvyD,KAAO,SAAWW,KAAKqZ,KAAKha,KAAO,qBAAuBi6D,EAAY,mBAAqBE,EAAmB,IAC1Ix5D,KAAK8yD,UAAU/vD,KAAK/C,KAAKqZ,KAAKha,KAAO,YAAck6D,EAAa,mBAAqBC,EAAmB,MACxGx5D,KAAKgyD,eAAe5wD,GAAM,QAE9B,CACJ,CAEA,GAAIpB,KAAK6xD,aAAaprB,SAASrlC,IACvBpB,KAAK+wD,SAAS7hD,cAAgBlP,KAAKkyD,WAAW9wD,IAAO1B,EAAOosD,WAAa9rD,KAAK4xD,MAAMhf,WAAW,gBAAkB5yC,KAAK4xD,MAAMpf,QAAQ,mBACpI,OAAQ9yC,EAAOosD,SAASzsD,MACpB,IAAK,eACDW,KAAK0xD,WAAWqC,YAAY/zD,KAAKixD,OAAQpgB,KAAKC,MAAM9wC,KAAK4xD,MAAMzY,QAAU,IAAMn5C,KAAK4xD,MAAMtW,gBAAkB,KAAO,OACnH,MACJ,IAAK,iBACDt7C,KAAK0xD,WAAWgI,YAAY15D,KAAKixD,OAAQ,MAAOvxD,EAAO0B,IAAI,GAAO,EAAOpB,KAAKZ,QAAQiuD,MACtF,MACJ,IAAK,kBACDrtD,KAAK0xD,WAAWgI,YAAY15D,KAAKixD,OAAQ,MAAOvxD,EAAO0B,IAAI,GAAO,EAAOpB,KAAKZ,QAAQiuD,MACtF,MACJ,IAAK,aACG3tD,EAAOysD,YACPnsD,KAAK0xD,WAAWgI,YAAY15D,KAAKixD,OAAQ,MAAOvxD,EAAO0B,IAAI,GAAO,EAAOpB,KAAKZ,QAAQiuD,MAE1F,MACJ,IAAK,gBACDrtD,KAAK0xD,WAAWsD,gBAAgBh1D,KAAKixD,OAAQ,CAACx/C,KAAM,IACpD,MACJ,IAAK,WACDzR,KAAK0xD,WAAWsD,gBAAgBh1D,KAAKixD,OAAQ,CAACv/C,KAAM,IACpD,MACJ,IAAK,YACD1R,KAAK0xD,WAAWsD,gBAAgBh1D,KAAKixD,OAAQ,CAACzqB,KAAM,IAOxE,CAEA,GAAIxmC,KAAK6xD,aAAajyD,OAAS,IAA4B,QAAvB03D,EAACt3D,KAAK+wD,SAAS7pD,gBAAQ,IAAAowD,IAAtBA,EAAwB7wB,SAAS,WAAW,CAAC,IAC9CkzB,EAD6CC,GAAAj3D,EAAAA,EAAAA,GAC9D3C,KAAK6xD,cAAY,IAAhC,IAAA+H,EAAAh3D,MAAA+2D,EAAAC,EAAA/2D,KAAAb,MAAkC,CAAC,IAA1BZ,EAAEu4D,EAAAx4D,MACPnB,KAAK4yD,MAAMxxD,GAAM,EACrB,CAAC,OAAA7D,IAAAq8D,EAAA16D,EAAA3B,GAAA,SAAAq8D,EAAA92D,GAAA,CACD9C,KAAK4yD,MAAM5yD,KAAKixD,QAAUjxD,KAAK4xD,MAAMvyD,KAAO,SAAWW,KAAKqZ,KAAKha,KAAO,GAC5E,EAS2B,QAAtBk4D,EAAAv3D,KAAK+wD,SAAS7pD,gBAAQ,IAAAqwD,GAAtBA,EAAwB9wB,SAAS,WAAyC,WAA3BzmC,KAAK+wD,SAAS7pD,UAAyBlH,KAAK+wD,SAAS7e,QAAWwlB,GAAmB13D,KAAK4xD,MAAMiI,WAAa,GAC3J75D,KAAK4xD,MAAMiI,YAEnB,GAAC,CAAA77D,IAAA,aAAAmD,MAED,WACI,IAAI24D,EAAe95D,KAAK+wD,SAAS3pD,OAC5BpH,KAAK+wD,SAAS3pD,OAAS,GAAK,GAAKpH,KAAK4xD,MAAMhf,WAAW,YAAa,iBACrEknB,EAAe,GAEnBA,GAAgBA,GAAgB,KAAQ95D,KAAKmyD,sBAAwBnyD,KAAK4xD,MAAMpf,QAAQ,cAAiB,KAAO,GAChH,IAAMgG,EAASx4C,KAAKwyD,QAAQ/B,QAAO,SAAC5yD,EAAEC,GAAC,OAAKD,EAAIC,CAAC,GAAE,GACnD,GAAIg8D,EAAc,CAEd,IAAIC,OAA6Cl6D,EACjD,GAAI24C,EAAS,EAAG,CAAC,IACmBwhB,EADpBC,GAAAt3D,EAAAA,EAAAA,GACG3C,KAAK6xD,cAAY,IAAhC,IAAAoI,EAAAr3D,MAAAo3D,EAAAC,EAAAp3D,KAAAb,MAAkC,CAAC,IAA1BZ,EAAE44D,EAAA74D,MACPnB,KAAK2yD,OAAO3yD,KAAKixD,QAAUjxD,KAAK2yD,OAAO3yD,KAAKixD,QAAUzF,GAAcxrD,KAAKwyD,QAAQpxD,GAAM04D,EAAa,KAAK,IAC/DI,EAD+DC,GAAAx3D,EAAAA,EAAAA,GACpF3C,KAAKyyD,aAAarxD,IAAG,IAA1C,IAAA+4D,EAAAv3D,MAAAs3D,EAAAC,EAAAt3D,KAAAb,MAA4C,CAAC,IAEVo4D,EAF1BC,EAAQH,EAAA/4D,MACPm5D,EAAc,IAAIzM,IAAqB0M,GAAA53D,EAAAA,EAAAA,GACtB03D,GAAQ,IAA/B,IAAAE,EAAA33D,MAAAw3D,EAAAG,EAAA13D,KAAAb,MAAiC,CAAC,IAADw4D,GAAA/vB,EAAAA,GAAAA,GAAA2vB,EAAAj5D,MAAA,GAAvBnD,EAAGw8D,EAAA,GAAEjc,EAAGic,EAAA,GACdF,EAAYnM,IAAI3C,GAAcxtD,GAAO87D,EAAa,KAAMvb,EAC5D,CAAC,OAAAhhD,IAAAg9D,EAAAr7D,EAAA3B,GAAA,SAAAg9D,EAAAz3D,GAAA,CAEGi3D,OADel6D,IAAfk6D,EACaO,EAEArL,GAAkB8K,EAAYO,GAAct6D,KAAK0xD,WAAWuB,QAAQ7xD,GAAI+3C,QAASn5C,KAAK0xD,WAAWuB,QAAQ7xD,GAAI+3C,SAASmG,CAE3I,CAAC,OAAA/hD,IAAA48D,EAAAj7D,EAAA3B,GAAA,SAAA48D,EAAAr3D,GAAA,CACL,CAAC,OAAAvF,IAAA08D,EAAA/6D,EAAA3B,GAAA,SAAA08D,EAAAn3D,GAAA,CACL,CACI9C,KAAK2yD,OAAO3yD,KAAKixD,SAAWjxD,KAAK4xD,MAAMzJ,cAAgB,GACvDnoD,KAAK0xD,WAAWqC,YAAY/zD,KAAKixD,QAASjxD,KAAK2yD,OAAO3yD,KAAKixD,QAAS8I,EAE5E,CACJ,GAAC,CAAA/7D,IAAA,eAAAmD,MAED,WAAwB,IAGYs5D,EAHbC,EAAA,KACfC,EAAiB36D,KAAK+wD,SAASsE,QAC7BuF,EAAyC,MAAC/6D,OAAWA,OAAWA,OAAWA,OAAWA,GAAWg7D,GAAAl4D,EAAAA,EAAAA,GACxF3C,KAAK6xD,cAAY,QAAAiJ,EAAA,WAAG,IAA1B15D,EAAEq5D,EAAAt5D,MACP,GAAIu5D,EAAK1I,eAAe5wD,IAAOs5D,EAAKxI,WAAW9wD,GAAM,MAAD,WACpD,IAAM1B,EAASg7D,EAAK9F,WAAWxzD,GACzB+3C,EAAQz5C,EAAOy5C,QACrB,GAAuB,eAAnBuhB,EAAKrhD,KAAKha,KAAuB,CACjC,IAAMguD,EAAOqN,EAAKt7D,QAAQiuD,MAAQ,MAClCuN,EAAax5D,GAAMyvD,GAAcpuD,KAAI,SAAA87C,GAAG,OAAK1N,KAAKC,MAAMyN,EAAMpF,EAAM,IACpEuhB,EAAKhI,SAAStxD,IAAgB,QAATisD,EAAiBxc,KAAKC,MAAc,GAARqI,GAAwB,QAATkU,EAAiBlU,EAAQtI,KAAKC,MAAc,GAARqI,GACpG,IAAM5G,EAAUmoB,EAAK9F,WAAWxzD,GAChCmxC,EAAQwB,OAAS,GACjBxB,EAAQmjB,SAAW,EACnBnjB,EAAQkjB,QAAU,EAClBljB,EAAQwoB,OAAS,EACjBxoB,EAAQyoB,eAAiB,CAC7B,MAAO,GAAuB,YAAnBN,EAAKrhD,KAAKha,KAEZK,EAAOqlD,YACR2V,EAAK9H,MAAMxxD,GAAM1B,EAAOL,KAAO,IAAMK,EAAOL,KAAO,WAAQq7D,EAAKrhD,KAAKha,KAAO,YAEhFq7D,EAAKhI,SAAStxD,IAA4B,IAArB1B,EAAOqlD,UAAkB5L,EAAQtI,KAAKC,MAAc,IAARqI,EAAez5C,EAAOqlD,eACpF,CACC2V,EAAK9I,MAAMhf,WAAW,kBAAoB8nB,EAAK3J,SAAS77C,UACxDylD,EAAyC,KAAvBA,GAAkB,IAEb,mBAAvBD,EAAK3J,SAAS1xD,MAA6Bq7D,EAAK9I,MAAMzmB,MAAMyK,WAAW,YACvE+kB,EAAiB,OAErB,IAAMM,EAAapqB,KAAKC,MAAMpxC,EAAOy5C,SAAWwhB,GAAkB,GAAG,MAAQj7D,EAAO47C,gBAAkB,KAAO,MAC7Gof,EAAKhI,SAAStxD,IAAO65D,CACzB,CACJ,EA9BA,IAAAJ,EAAAj4D,MAAA63D,EAAAI,EAAAh4D,KAAAb,MAAA84D,GA8BC,OAAAv9D,IAAAs9D,EAAA37D,EAAA3B,GAAA,SAAAs9D,EAAA/3D,GAAA,CACD,IAAK,IAAI1B,EAAG,EAAGA,EAAG,EAAGA,IACbpB,KAAK0yD,SAAStxD,IAAOpB,KAAK40D,WAAWxzD,GAAI+mD,cAAgB,GACzDnoD,KAAK0xD,WAAWqC,YAAY3yD,GAAKpB,KAAK0yD,SAAStxD,GAAKw5D,EAAax5D,GAAMqsD,GAAc,CAACmN,EAAax5D,KAAmBpB,KAAK0xD,WAAWuB,QAAQ7xD,GAAI+3C,QAASn5C,KAAK0xD,WAAWuB,QAAQ7xD,GAAI+3C,cAAWt5C,EAG9M,GAAC,CAAA7B,IAAA,cAAAmD,MAED,WACI,IAAMk1D,GAAgBr2D,KAAK+wD,SAASsF,cAAgB,IAAMr2D,KAAK4xD,MAAMhf,WAAW,gBAAkB,EAAI,GAChGsoB,EAAgBl7D,KAAK4xD,MAAMhf,WAAW,eAAgB,WAAY,eAAkB5yC,KAAK4xD,MAAMhf,WAAW,mBAA4C,WAAvB5yC,KAAKqZ,KAAKnS,SAC/I,GAAImvD,IAAiBr2D,KAAKmyD,uBAAyBnyD,KAAKZ,QAAQ+7D,kBAAoB9E,GAAgB,KAAM,CAAC,IACvE+E,EADsEC,GAAA14D,EAAAA,EAAAA,GACvF3C,KAAK6xD,cAAY,IAAhC,IAAAwJ,EAAAz4D,MAAAw4D,EAAAC,EAAAx4D,KAAAb,MAAkC,CAAC,IAA1BZ,EAAEg6D,EAAAj6D,MACP,GAAW,IAAPC,KACApB,KAAKgyD,eAAe5wD,KAAOpB,KAAKkyD,WAAW9wD,IAA/C,CACA,IAAM1B,EAASM,KAAK40D,WAAWxzD,GACX,iBAAhB1B,EAAO0vC,MAA2B1vC,EAAOkzC,WAAW,kBACpDlzC,EAAOkzC,WAAW,gBAAoBsoB,IAAkBx7D,EAAO8yC,QAAQ,qBAC3ExyC,KAAKiyD,cAAc7wD,IAAM,EACrBpB,KAAK4xD,MAAMhf,WAAW,cACtB5yC,KAAK0xD,WAAWsD,gBAAgB5zD,EAAI,CAAColC,IAAK,IAAI,EAAMxmC,KAAKixD,OAAQiK,GANL,CAQpE,CAAC,OAAA39D,IAAA89D,EAAAn8D,EAAA3B,GAAA,SAAA89D,EAAAv4D,GAAA,CACL,CACJ,GAAC,CAAA9E,IAAA,mBAAAmD,MAED,WAA4B,IAADm6D,EACjBp0D,EAAWlH,KAAK+wD,SAAS7pD,SAC/B,IAAIlH,KAAKmyD,qBAAT,CACA,IAAMoJ,EAA2B,iBAAbr0D,EAA8B,CAAClH,KAAKixD,QAAUjxD,KAAK6xD,aACnEyE,EAAct2D,KAAK+wD,SAASuF,YAIhC,GAFuB,WAAnBt2D,KAAKqZ,KAAKha,MAAsD,QAArCi8D,EAAIt7D,KAAK8xD,QAAQ9xD,KAAKixD,QAAQ5lB,eAAO,IAAAiwB,GAAjCA,EAAmC70B,SAAS,SAAWzmC,KAAK8xD,QAAQ9xD,KAAKixD,QAAQ7kB,cAAekqB,EAAc,CAAC,CAAC7lB,KAAM,MAAO+lB,OAAQ,GAAI,CAAC/lB,KAAM,MAAO+lB,OAAQ,KAE3K,UAAnBx2D,KAAKqZ,KAAKha,OAAoBW,KAAK2xD,SAAS3xD,KAAKixD,QAAQte,QAAQ,SAArE,CACA,IAAM+K,GAAU19C,KAAK+wD,SAASyK,YAAc,MAAQx7D,KAAK2xD,SAAS3xD,KAAKixD,QAAQre,WAAW,gBAAkB,EAAI,GAChH,GAAI8K,IAAW19C,KAAKZ,QAAQ+7D,kBAAoBzd,GAAU,KAAO,CAAC,IACpC+d,EADmCC,GAAA/4D,EAAAA,EAAAA,GAC9C44D,GAAW,IAA1B,IAAAG,EAAA94D,MAAA64D,EAAAC,EAAA74D,KAAAb,MAA4B,CAAC,IAAD25D,EAAnBv6D,EAAEq6D,EAAAt6D,MACP,IAAInB,KAAKgyD,eAAe5wD,KAAOpB,KAAKkyD,WAAW9wD,GAA/C,CACA,IAAMmxC,EAAUvyC,KAAK40D,WAAWxzD,GAChC,GAA8B,IAA1BmxC,EAAQ4V,cAAZ,CACA,IAAMhd,EAAQoH,EAAQpH,MACtB,GAAI/pC,IAAOpB,KAAKixD,QAAgC,QAA1B0K,EAAI37D,KAAK+wD,SAAS7pD,gBAAQ,IAAAy0D,IAAtBA,EAAwBl1B,SAAS,WAA+B,iBAAjB8L,EAAQnD,OAA2BmD,EAAQK,WAAW,eAA/H,CACA,IACyCgpB,EADnC5jB,EAA6B,CAAC,EAAE6jB,GAAAl5D,EAAAA,EAAAA,GACd2zD,GAAe,IAAE,IAAzC,IAAAuF,EAAAj5D,MAAAg5D,EAAAC,EAAAh5D,KAAAb,MAA4C,CAAC,IAApC85D,EAAUF,EAAAz6D,MACTsvC,EAAOqrB,EAAWrrB,KACpB+lB,EAASsF,EAAWtF,OACpBuF,OAAOte,MAAM+Y,KAIbA,EAASsF,EAAW36D,OAEpB46D,OAAOte,MAAM+Y,GAAW94D,QAAQC,IAAI,wBAA0BqC,KAAK+wD,SAAS1xD,KAAO,gBACnFm3D,EAAS,GAAKp1D,IAAOpB,KAAKixD,SAAW9lB,EAAMmB,aAAaoB,aAAgBvC,EAAMmB,aAAawC,QAAiC,gBAAvB9uC,KAAK4xD,MAAM1b,WAGpH8B,EAAMvH,GAAQ+lB,EAClB,CAAC,OAAAj5D,IAAAs+D,EAAA38D,EAAA3B,GAAA,SAAAs+D,EAAA/4D,GAAA,CACD9C,KAAK0xD,WAAWsD,gBAAgB5zD,EAAI42C,GAAO,EAAMh4C,KAAKixD,OAASjxD,KAAK4xD,MAAMhf,WAAW,eAAgB,WAAY,gBAAkBL,EAAQC,QAAQ,mBAAuBxyC,KAAK4xD,MAAMhf,WAAW,mBAA4C,WAAvB5yC,KAAKqZ,KAAKnS,SAjBnE,CAF/G,CAFmB,CAsBpE,CAAC,OAAA3J,IAAAm+D,EAAAx8D,EAAA3B,GAAA,SAAAm+D,EAAA54D,GAAA,CACL,CA3ByF,CANhD,CAkC7C,GAAC,CAAA9E,IAAA,eAAAmD,MAED,WACI,IAAMsqD,EAAUzrD,KAAK+wD,SAAStF,QACxB/N,GAAU19C,KAAK+wD,SAASiL,eAAiB,MAAQh8D,KAAK4xD,MAAMhf,WAAW,gBAAkB,EAAI,GACnG,GAAI6Y,IAAYzrD,KAAKmyD,uBAAyBzU,GAAU,KAAO19C,KAAKZ,QAAQ+7D,kBAAmB,CAAC,IAC5Dc,EAD2DC,GAAAv5D,EAAAA,EAAAA,GAC5E3C,KAAK6xD,cAAY,IAAhC,IAAAqK,EAAAt5D,MAAAq5D,EAAAC,EAAAr5D,KAAAb,MAAkC,CAAC,IAADm6D,EAAzB/6D,EAAE66D,EAAA96D,MACP,IAAInB,KAAKgyD,eAAe5wD,KAAOpB,KAAKkyD,WAAW9wD,GAE/C,GAA8B,IADdpB,KAAK40D,WAAWxzD,GACpB+mD,cAAZ,CACA,IAAMiU,EAAkB/R,GAASoB,GAC3B4Q,EAA0C,QAAzBF,EAAGn8D,KAAK+wD,SAAS7pD,gBAAQ,IAAAi1D,OAAA,EAAtBA,EAAwB11B,SAAS,UAEvD21B,EACAp8D,KAAK0xD,WAAWgI,YAAYt4D,EAAIqqD,EAAuBzrD,KAAKixD,OAAQoL,GAAmB,EAAOr8D,KAAKZ,QAAQiuD,MAG3GrtD,KAAK0xD,WAAW4K,oBAAoBl7D,EAAIqqD,EAAS4Q,EAAmBr8D,KAAKixD,OAAQjxD,KAAKoxD,YAGtFpxD,KAAK4xD,MAAMhf,WAAW,gBAAkBypB,GAAqBr8D,KAAKZ,QAAQ+7D,kBAC1En7D,KAAK0xD,WAAWgI,YAAYt4D,EAAI,MAAOpB,KAAKixD,QAAQ,GAAM,EAAOjxD,KAAKZ,QAAQiuD,KAZrC,CAcjD,CAAC,OAAA9vD,IAAA2+D,EAAAh9D,EAAA3B,GAAA,SAAA2+D,EAAAp5D,GAAA,CACL,CACJ,GAAC,CAAA9E,IAAA,kBAAAmD,MAED,WACI,IAAInB,KAAK4xD,MAAMhf,WAAW,eAA1B,CACA,IAAM2pB,EAAa1rB,KAAKC,MAAO9wC,KAAK4xD,MAAMzY,SAAWn5C,KAAK+wD,SAASwL,YAAc,GAAK,MAASv8D,KAAK4xD,MAAMtW,gBAAkB,KAAO,MAC7HkhB,EAAqC,aAApBx8D,KAAK4xD,MAAMxiB,OAAwBpvC,KAAKmyD,sBAAwBnyD,KAAKwyD,QAAQ/B,QAAO,SAAC5yD,EAAEC,GAAC,OAAKD,EAAIC,CAAC,GAAE,GAAK,EAAK+yC,KAAKC,MAA2B,GAArB9wC,KAAK4xD,MAAMzY,SAAiB,EAC5K,GAAmB,IAAfojB,EAAkB,CAClB,IAAME,EAAoBz8D,KAAK+wD,SAASwL,WACxCv8D,KAAK6yD,OAAO7yD,KAAKixD,QAAQluD,KAAM05D,EAAoB,sBAAwBz8D,KAAK+wD,SAAS1xD,MACzFW,KAAK0xD,WAAWqC,YAAY/zD,KAAKixD,OAAQsL,EAC7C,CACsB,IAAlBC,IACAx8D,KAAK6yD,OAAO7yD,KAAKixD,QAAQluD,KAAM,mBAC/B/C,KAAK0xD,WAAWqC,YAAY/zD,KAAKixD,OAAQuL,GAVO,CAYxD,GAAC,CAAAx+D,IAAA,oBAAAmD,MAED,WAG2B,eAAnBnB,KAAKqZ,KAAKha,MAAyBW,KAAK0xD,WAAWgL,aAAa,OAA4B,cAApB18D,KAAK4xD,MAAMxiB,KAAuB,EAAI,GAC3F,cAAnBpvC,KAAKqZ,KAAKha,MAAwBW,KAAK0xD,WAAWgL,aAAa,MAA2B,cAApB18D,KAAK4xD,MAAMxiB,KAAuB,EAAI,GACzF,cAAnBpvC,KAAKqZ,KAAKha,MAAwBW,KAAK0xD,WAAWgL,aAAa,OAA4B,gBAApB18D,KAAK4xD,MAAMxiB,KAAyB,EAAI,GAC5F,cAAnBpvC,KAAKqZ,KAAKha,MAA2C,qBAAnBW,KAAKqZ,KAAKha,MAA+BW,KAAK0xD,WAAWgL,aAAa,OAA4B,aAApB18D,KAAK4xD,MAAMxiB,KAAsB,EAAI,GAElI,qBAAnBpvC,KAAKqZ,KAAKha,MAA+BW,KAAK0xD,WAAWiL,aAAa,WAAgC,qBAApB38D,KAAK4xD,MAAMxiB,KAA8B,EAAI,GAC5G,mBAAnBpvC,KAAKqZ,KAAKha,MAA6BW,KAAK0xD,WAAWiL,aAAa,SAA8B,qBAApB38D,KAAK4xD,MAAMxiB,KAA8B,EAAI,GACxG,kBAAnBpvC,KAAKqZ,KAAKha,MAA4BW,KAAK0xD,WAAWiL,aAAa,QAA6B,qBAApB38D,KAAK4xD,MAAMxiB,KAA8B,EAAI,GACtG,oBAAnBpvC,KAAKqZ,KAAKha,MAA8BW,KAAK0xD,WAAWiL,aAAa,UAA+B,qBAApB38D,KAAK4xD,MAAMxiB,KAA8B,EAAI,GAEjI,IAQ8BwtB,EARxBC,EAA6B,YAAnB78D,KAAKqZ,KAAKha,KAEpBy9D,EAA+B,eAAnB98D,KAAKqZ,KAAKha,KAEtB09D,EAA+B,eAAnB/8D,KAAKqZ,KAAKha,KAEtB29D,EAAgC,gBAAnBh9D,KAAKqZ,KAAKha,KAC7B49D,GAAAt6D,EAAAA,EAAAA,GACkB3C,KAAK8xD,SAAO,IAA9B,IAAAmL,EAAAr6D,MAAAg6D,EAAAK,EAAAp6D,KAAAb,MAAgC,CAAC,IAAxBmpC,EAAKyxB,EAAAz7D,MACVgqC,EAAMQ,UAAakxB,IAAY1xB,EAAMQ,UAAa,EAAIR,EAAMQ,UAC5DR,EAAMgB,YAAc2wB,EAAa3xB,EAAMgB,YAAc,EAAI,EAAKhB,EAAMgB,YACpEhB,EAAMM,YAAcsxB,EAAa5xB,EAAMM,YAAc,EAAI,EAAKN,EAAMM,YACpEN,EAAMO,aAAesxB,EAAc7xB,EAAMO,aAAe,EAAI,EAAKP,EAAMO,YAC3E,CAEA,OAAAnuC,IAAA0/D,EAAA/9D,EAAA3B,GAAA,SAAA0/D,EAAAn6D,GAAA,CAkBA,IAjBA,IAAIo6D,EAA6B,YAAnBl9D,KAAKqZ,KAAKha,KAEpB89D,EAAiC,iBAAnBn9D,KAAKqZ,KAAKha,KAExB+9D,EAAgC,gBAAnBp9D,KAAKqZ,KAAKha,MAA0BW,KAAK4xD,MAAMzmB,MAAM4T,WAAW,OAAQ,QAErFse,EAA0B,SAAnBr9D,KAAKqZ,KAAKha,KAEjBi+D,EAA+B,cAAnBt9D,KAAKqZ,KAAKha,KAEtBk+D,EAA8B,aAAnBv9D,KAAKqZ,KAAKha,KAErBm+D,EAAiC,iBAAnBx9D,KAAKqZ,KAAKha,KAExBo+D,EAAkC,kBAAnBz9D,KAAKqZ,KAAKha,KAG7By4C,EAAA,EAAA4lB,EADqC,IAAhB19D,KAAKixD,OAAe,CAAC,GAAK,CAAC,EAAE,EAAE,EAAE,GAC3BnZ,EAAA4lB,EAAA99D,OAAAk4C,IAAE,CAAxB,IAAI12C,EAAEs8D,EAAA5lB,GACD3M,EAAQnrC,KAAK8xD,QAAQ1wD,GAC3B+pC,EAAMmB,aAAaiB,UAAa2vB,IAAY/xB,EAAMmB,aAAaiB,UAAkC,eAApBvtC,KAAK4xD,MAAMxiB,KAAwB,EAAI,EAAKjE,EAAMmB,aAAaiB,UAC5IpC,EAAMmB,aAAakB,cAAiB2vB,IAAgBhyB,EAAMmB,aAAakB,cAAsC,eAApBxtC,KAAK4xD,MAAMxiB,KAAwB,EAAI,EAAKjE,EAAMmB,aAAakB,cACxJrC,EAAMmB,aAAagC,aAAgB8uB,IAAejyB,EAAMmB,aAAa0C,YAAoC,eAApBhvC,KAAK4xD,MAAMxiB,KAAwB,EAAI,EAAKjE,EAAMmB,aAAagC,aACpJnD,EAAMmB,aAAawC,OAAUuuB,IAASlyB,EAAMmB,aAAawC,OAAU,EAAI3D,EAAMmB,aAAawC,OAC1F3D,EAAMmB,aAAayC,YAAeuuB,IAAcnyB,EAAMmB,aAAayC,YAAe,EAAI5D,EAAMmB,aAAayC,YACzG5D,EAAMmB,aAAayB,WAAcwvB,IAAapyB,EAAMmB,aAAayB,WAAc,EAAI5C,EAAMmB,aAAayB,WACtG5C,EAAMmB,aAAa2B,aAAe4C,KAAKkC,IAAI,GAAIyqB,EAAc,EAAI,GAAKryB,EAAMmB,aAAa2B,cACzF9C,EAAMmB,aAAamB,aAAeoD,KAAKkC,IAAI,GAAI0qB,EAAe,EAAI,GAAKtyB,EAAMmB,aAAamB,aAC9F,CAGuC,iBAAnBztC,KAAKqZ,KAAKha,OAEtBW,KAAKgyD,eAAehyD,KAAK+xD,WACzB/xD,KAAK4yD,MAAM5yD,KAAK+xD,WAAa/xD,KAAKqZ,KAAKha,KAAO,IAAMW,KAAKgyD,eAAehyD,KAAK+xD,WAAa,IAE1F/xD,KAAK8xD,QAAQ9xD,KAAK+xD,WAAWzlB,aAAa0B,eAAgB,EAGtE,GAAC,CAAAhwC,IAAA,wBAAAmD,MAED,WAMI,IALKnB,KAAK4xD,MAAM8D,UAAY11D,KAAK4xD,MAAMrd,UAAU,SAAWohB,GAAclvB,SAASzmC,KAAKqZ,KAAKha,QACzFW,KAAK4xD,MAAM7d,OAAS,GACpB/zC,KAAK4xD,MAAM8D,SAAW,IAGtB11D,KAAKgyD,eAAehyD,KAAK+xD,WAE7B,OAAQ/xD,KAAKqZ,KAAKha,MACd,IAAK,cACL,IAAK,gBACL,IAAK,cACD,IAE8Bs+D,EAFxBC,EAA+B,IAAhB59D,KAAKixD,OAAejxD,KAAK8xD,QAAQzU,MAAM,GAAK,CAACr9C,KAAK8xD,QAAQ,IAC3E+L,GAAa,EAAKC,GAAAn7D,EAAAA,EAAAA,GACJi7D,GAAY,IAA9B,IAAAE,EAAAl7D,MAAA+6D,EAAAG,EAAAj7D,KAAAb,MAAgC,CAAC,IAAxBmpC,EAAKwyB,EAAAx8D,MACV08D,KAAgB1yB,EAAMmB,aAAaiB,WAAapC,EAAMmB,aAAakB,eAAiBrC,EAAMmB,aAAagC,eAAiBuvB,EACxH1yB,EAAMmB,aAAaiB,UAAY,EAC/BpC,EAAMmB,aAAakB,cAAgB,EACnCrC,EAAMmB,aAAagC,aAAe,CACtC,CAAC,OAAA/wC,IAAAugE,EAAA5+D,EAAA3B,GAAA,SAAAugE,EAAAh7D,GAAA,CACG+6D,GACA79D,KAAK6yD,OAAO7yD,KAAKixD,QAAQluD,KAAK/C,KAAKqZ,KAAKha,KAAO,kCAEnD,MACJ,IAAK,aACD,IAAMK,EAASM,KAAK40D,WAAW50D,KAAK+xD,WACpC,IAAK,IAAIthB,KAAQ/wC,EAAOwQ,OAAQ,CAC5B,IAAM6tD,EAASttB,EACf/wC,EAAOwQ,OAAO6tD,GAAU,CAC5B,EAIZ,GAAC,CAAA//D,IAAA,wBAAAmD,MAED,WAEQnB,KAAK+wD,SAAS5hD,SAAWnP,KAAK4xD,MAAMpf,QAAQ,iBAC5CxyC,KAAK0xD,WAAWgD,YAAY10D,KAAKixD,OAAQjxD,KAAK4xD,MAAMxiB,KAE5D,GAAC,CAAApxC,IAAA,yBAAAmD,MAED,WAAkC,IAAD68D,EAAAC,EAAA,KACvBv+D,EAASM,KAAK40D,WAAW50D,KAAK+xD,WAE9BmM,EAAel+D,KAAK4xD,MAAM1b,QAC1BioB,EAAiBz+D,EAAOw2C,QAE9B,IAAIl2C,KAAKgyD,eAAehyD,KAAK+xD,WAE7B,OAAQ/xD,KAAKqZ,KAAKha,MAEd,IAAK,2BACD,GAAoB,IAAhBW,KAAKixD,OACL,MAAM,IAAIxzD,MAAM,4DAEpBuC,KAAK4yD,MAAM5yD,KAAK+xD,WAAa,yDAC7B,IAAK,IAAIjyD,EAAE,EAAGA,EAAE,EAAGA,IAAK,CACpB,IAAMyyC,EAAUvyC,KAAK40D,WAAW90D,GAgBhC,IAAK,IAAI2wC,KAPJ8B,EAAQC,QAAQ,mBAAsBD,EAAQK,WAAW,WAAY,cACtE5yC,KAAK0xD,WAAW0M,yBAAyBt+D,EAAGyyC,EAAQ2D,SACpD3D,EAAQ+V,iBAAmB,EAC3B/V,EAAQuB,WAAY,GAExBvB,EAAQpH,MAAMmB,aAAa2B,aAAe,EAC1CsE,EAAQpH,MAAMmB,aAAamB,aAAe,EACzB8E,EAAQriC,OACrBqiC,EAAQriC,OAAOugC,GAA0BI,KAAKkC,IAAI,EAAIR,EAAQriC,OAAOugC,IAA2B,EAExG,CACA,MACJ,IAAK,0BACD,GAAoB,IAAhBzwC,KAAKixD,OACL,MAAM,IAAIxzD,MAAM,mDAEpBuC,KAAK4yD,MAAM5yD,KAAK+xD,WAAa,0DAC7B,IAAMsM,EAAOr+D,KAAK40D,WAAW,GAO7B,IAAK,IAAInkB,KANT4tB,EAAKtqB,OAAS,GACdsqB,EAAKjW,eAAiB,GAEtBiW,EAAK5I,QAAU,EACf4I,EAAKtD,OAAS,EACdsD,EAAKrD,eAAiB,EACLqD,EAAKnuD,OAClBmuD,EAAKnuD,OAAOugC,GAA0BI,KAAKmC,IAAI,EAAGqrB,EAAKnuD,OAAOugC,IAA2B,GAE7F,MACJ,IAAK,oBACD,GAAoB,IAAhBzwC,KAAKixD,OACL,MAAM,IAAIxzD,MAAM,8CAEpBuC,KAAK4yD,MAAM,GAAK,wDAChB,IAAK,IAAI9yD,EAAE,EAAGA,EAAE,EAAGA,IAAK,CACpB,IAAMyyC,EAAUvyC,KAAK0xD,WAAWkD,WAAW90D,GAC3CyyC,EAAQsnB,WAAahpB,KAAKmC,IAAI,GAAIT,EAAQsnB,YAAc,GAAK,EACjE,CACA,MACJ,IAAK,kBACD,GAAoB,IAAhB75D,KAAKixD,OACL,MAAM,IAAIxzD,MAAM,+CAEfuC,KAAK4xD,MAAM0M,cAAiBt+D,KAAK4xD,MAAMzW,cAAqC,QAAzB6iB,EAAIh+D,KAAK4xD,MAAMlL,kBAAU,IAAAsX,IAArBA,EAAuBO,mBAK/Ev+D,KAAK4yD,MAAM5yD,KAAK+xD,WAAa,qGAJ7B/xD,KAAK4yD,MAAM5yD,KAAK+xD,WAAa,sCAC7B/xD,KAAK4xD,MAAMzW,cAAe,EAC1Bn7C,KAAK4xD,MAAM4M,iBAAmBx+D,KAAK4xD,MAAMzJ,eAI7C,MACJ,IAAK,aACD,GACKnoD,KAAK4xD,MAAMtJ,kBAAqB5oD,EAAO4oD,kBACvCtoD,KAAK4xD,MAAMpf,QAAQ,mBACnB9yC,EAAO8yC,QAAQ,mBACfumB,GAAAA,GAAqCtyB,SAASy3B,IAC9CnF,GAAAA,GAAqCtyB,SAAS03B,GAM/Cn+D,KAAK4yD,MAAM5yD,KAAK+xD,WAAa/xD,KAAK4xD,MAAMvyD,KAAO,IAAMW,KAAKqZ,KAAKha,KAAO,QAAUK,EAAOL,KAAO,WAAQW,KAAKqZ,KAAKha,KAAO,eALzH,CACE,IAAMo/D,EAAkBP,EACxBl+D,KAAK0xD,WAAWuH,cAAcj5D,KAAKixD,OAAQkN,GAAgB,GAC3Dn+D,KAAK0xD,WAAWuH,cAAcj5D,KAAK+xD,UAAW0M,GAAiB,EACnE,CAGA,MACJ,IAAK,gBACL,IAAK,cAEI1F,GAAAA,GAAoCtyB,SAAS03B,IAC7Cz+D,EAAO8yC,QAAQ,kBAKhBxyC,KAAK4yD,MAAM5yD,KAAK+xD,WAAa/xD,KAAK4xD,MAAMvyD,KAAO,IAAMW,KAAKqZ,KAAKha,KAAO,QAAUK,EAAOL,KAAO,WAAQW,KAAKqZ,KAAKha,KAAO,YAHvHW,KAAK0xD,WAAW0M,yBAAyB1+D,EAAO0B,GAAI1B,EAAOw2C,SAC3Dx2C,EAAO4oD,kBAAoB,GAI/B,MACJ,IAAK,cAEIyQ,GAAAA,GAAiCtyB,SAASy3B,IAC1Cx+D,EAAO8yC,QAAQ,kBAIhBxyC,KAAK4yD,MAAM5yD,KAAK+xD,WAAa/xD,KAAK4xD,MAAMvyD,KAAO,IAAMW,KAAKqZ,KAAKha,KAAO,QAAUK,EAAOL,KAAO,WAAQW,KAAKqZ,KAAKha,KAAO,WAFvHW,KAAK0xD,WAAWuH,cAAcj5D,KAAK+xD,UAAWmM,GAIlD,MAEJ,IAAK,aAEInF,GAAAA,GAAqCtyB,SAAS03B,IAC9Cz+D,EAAO8yC,QAAQ,kBAIhBxyC,KAAK4yD,MAAM5yD,KAAK+xD,WAAa/xD,KAAK4xD,MAAMvyD,KAAO,IAAMW,KAAKqZ,KAAKha,KAAO,QAAUK,EAAOL,KAAO,WAAQW,KAAKqZ,KAAKha,KAAO,WAFvHW,KAAK0xD,WAAWuH,cAAcj5D,KAAK+xD,UAAW,YAIlD,MACJ,IAAK,YAEIryD,EAAO4oD,kBACPyQ,GAAAA,GAAoCtyB,SAAS03B,IAC7Cn+D,KAAK4xD,MAAMpf,QAAQ,kBAIpBxyC,KAAK4yD,MAAM5yD,KAAK+xD,WAAa/xD,KAAK4xD,MAAMvyD,KAAO,IAAMW,KAAKqZ,KAAKha,KAAO,QAAUK,EAAOL,KAAO,WAAQW,KAAKqZ,KAAKha,KAAO,WAFvHW,KAAK0xD,WAAWuH,cAAcj5D,KAAKixD,OAAQkN,GAI/C,MAEJ,IAAK,cAEIpF,GAAAA,GAAoCtyB,SAAS03B,IAC7Cz+D,EAAO8yC,QAAQ,kBAIhBxyC,KAAK4yD,MAAM5yD,KAAK+xD,WAAa/xD,KAAK4xD,MAAMvyD,KAAO,IAAMW,KAAKqZ,KAAKha,KAAO,QAAUK,EAAOL,KAAO,WAAQW,KAAKqZ,KAAKha,KAAO,WAFvHW,KAAK0xD,WAAWuH,cAAcj5D,KAAK+xD,UAAW,UAIlD,MACJ,IAAK,WACD/xD,KAAK4xD,MAAM3M,YAAa,EACxB,MAEJ,IAAK,SACD,IACK8T,GAAAA,GAAkCtyB,SAAS03B,KAC3Cn+D,KAAK4xD,MAAMpf,QAAQ,oBAEpBxyC,KAAK0xD,WAAWuH,cAAcj5D,KAAKixD,OAAQkN,GACvB,IAAhBn+D,KAAKixD,QACL,IAAK,IAAInxD,EAAE,EAAGA,EAAE,EAAGA,IAAK,CACpB,IAAMyyC,EAAUvyC,KAAK40D,WAAW90D,GAC5BA,IAAME,KAAKixD,QACV1e,EAAQC,QAAQ,mBAChBumB,GAAAA,GAAkCtyB,SAAS8L,EAAQ2D,SAAW,KAE/Dl2C,KAAK0xD,WAAWuH,cAAcn5D,EAAGq+D,EAEzC,CAGR,MAEJ,IAAK,QACIz+D,EAAOokD,aAAgCjkD,IAApBH,EAAOy/C,UAA8C,QAApBz/C,EAAOy/C,WAAyBz/C,EAAO8Z,MAAM42C,OAAM,SAAAvpD,GAAI,MAAa,UAATA,CAAgB,KAChInH,EAAO8Z,MAAQ,CAAC,SAChB9Z,EAAO2oD,cAAe,EACtBroD,KAAK4yD,MAAMlzD,EAAO0B,IAAMpB,KAAK4xD,MAAMvyD,KAAO,aAAeK,EAAOL,KAAO,wBAAqBK,EAAOL,KAAO,qBAE1GW,KAAK4yD,MAAMlzD,EAAO0B,IAAMpB,KAAK4xD,MAAMvyD,KAAO,aAAeK,EAAOL,KAAO,uBAE3E,MACJ,IAAK,gBACIK,EAAOokD,aAAgCjkD,IAApBH,EAAOy/C,UAA8C,QAApBz/C,EAAOy/C,WAAyBz/C,EAAO8Z,MAAM42C,OAAM,SAAAvpD,GAAI,MAAa,YAATA,CAAkB,KAClInH,EAAO8Z,MAAQ,CAAC,WAChB9Z,EAAO2oD,cAAe,EACtBroD,KAAK4yD,MAAMlzD,EAAO0B,IAAMpB,KAAK4xD,MAAMvyD,KAAO,qBAAuBK,EAAOL,KAAO,gCAA6BK,EAAOL,KAAO,uBAE1HW,KAAK4yD,MAAMlzD,EAAO0B,IAAMpB,KAAK4xD,MAAMvyD,KAAO,qBAAuBK,EAAOL,KAAO,+BAEnF,MACJ,IAAK,kBACIK,EAAOokD,aAAgCjkD,IAApBH,EAAOy/C,UAA8C,QAApBz/C,EAAOy/C,WAAwBz/C,EAAO8Z,MAAMitB,SAAS,UAC9E,IAAxB/mC,EAAO8Z,MAAM5Z,OACbF,EAAO8Z,MAAM,GAAK,QAElB9Z,EAAO8Z,MAAMzW,KAAK,SAEtBrD,EAAO2oD,cAAe,EACtBroD,KAAK4yD,MAAMlzD,EAAO0B,IAAMpB,KAAK4xD,MAAMvyD,KAAO,uBAAyBK,EAAOL,KAAO,uCAAoCK,EAAOL,KAAO,KAEnIW,KAAK4yD,MAAMlzD,EAAO0B,IAAMpB,KAAK4xD,MAAMvyD,KAAO,uBAAyBK,EAAOL,KAAO,iCAErF,MACJ,IAAK,kBACIK,EAAOokD,aAAgCjkD,IAApBH,EAAOy/C,UAA8C,QAApBz/C,EAAOy/C,WAAwBz/C,EAAO8Z,MAAMitB,SAAS,UAC9E,IAAxB/mC,EAAO8Z,MAAM5Z,OACbF,EAAO8Z,MAAM,GAAK,QAElB9Z,EAAO8Z,MAAMzW,KAAK,SAEtBrD,EAAO2oD,cAAe,EACtBroD,KAAK4yD,MAAMlzD,EAAO0B,IAAMpB,KAAK4xD,MAAMvyD,KAAO,uBAAyBK,EAAOL,KAAO,uCAAoCK,EAAOL,KAAO,KAEnIW,KAAK4yD,MAAMlzD,EAAO0B,IAAMpB,KAAK4xD,MAAMvyD,KAAO,uBAAyBK,EAAOL,KAAO,iCAErF,MACJ,IAAK,aACD,IAAMq/D,EAAgB1+D,KAAK4xD,MAAMb,SAAS,GAAGlqD,KACzC63D,IACA1+D,KAAK4xD,MAAMp4C,MAAQ,CAACklD,GACpB1+D,KAAK4xD,MAAMvJ,cAAe,EAC1BroD,KAAK4yD,MAAM5yD,KAAKixD,QAAUjxD,KAAK4xD,MAAMvyD,KAAO,sBAAmBW,KAAK4xD,MAAMvyD,KAAO,yBAA2Bq/D,EAAcC,cAAgB,UAE9I,MACJ,IAAK,eACIj/D,EAAOokD,aAA+BjkD,IAApBH,EAAOy/C,UAA8C,QAApBz/C,EAAOy/C,UAK3Dn/C,KAAK4xD,MAAMp4C,MAAQ,CAAC9Z,EAAOy/C,UAC3Bn/C,KAAK4xD,MAAMvJ,cAAe,IAL1BroD,KAAK4xD,MAAMp4C,OAAKmtB,EAAAA,GAAAA,GAAOjnC,EAAO8Z,OAC9BxZ,KAAK4xD,MAAMvJ,aAAe3oD,EAAO2oD,aACjCroD,KAAK4yD,MAAM5yD,KAAKixD,QAAUjxD,KAAK4xD,MAAMvyD,KAAO,qBAAuBK,EAAOL,KAAO,WAAQW,KAAK4xD,MAAMvyD,KAAO,6BAA+BK,EAAOL,KAAO,OAK5JW,KAAK4yD,MAAM5yD,KAAKixD,QAAUjxD,KAAK4xD,MAAMvyD,KAAO,qBAAuBK,EAAOL,KAAO,WAAQW,KAAK4xD,MAAMvyD,KAAO,4BAA8BK,EAAOL,KAAO,MACvJ,MAEJ,IAAK,YAEmB,IAAhBW,KAAKixD,QAAgBvxD,EAAO0vC,MAC5BpvC,KAAK0xD,WAAW1S,SAASh/C,KAAK+xD,WAElC,MACJ,IAAK,aACL,IAAK,QAwQL,QAAS,MAjQT,IAAK,QACD,GAAI/xD,KAAKoyD,aAAgB1yD,EAAOkzC,WAAW,iBAAkBlzC,EAAO8yC,QAAQ,gBACxE,OAAQxyC,KAAKoyD,YACT,IAAK,aACDpyD,KAAK0xD,WAAWgI,YAAYh6D,EAAO0B,GAAI,MAAOpB,KAAKixD,QAAQ,GAAM,EAAOjxD,KAAKZ,QAAQiuD,MACrF,MACJ,IAAK,YACDrtD,KAAK0xD,WAAWgI,YAAYh6D,EAAO0B,GAAI,MAAOpB,KAAKixD,QAAQ,GAAM,EAAOjxD,KAAKZ,QAAQiuD,MACrF,MACJ,IAAK,YACDrtD,KAAK0xD,WAAWgI,YAAYh6D,EAAO0B,GAAI,MAAOpB,KAAKixD,QAAQ,GAAM,EAAOjxD,KAAKZ,QAAQiuD,MACrF,MACJ,IAAK,cACDrtD,KAAK0xD,WAAWgI,YAAYh6D,EAAO0B,GAAI,MAAOpB,KAAKixD,QAAQ,GAAM,EAAOjxD,KAAKZ,QAAQiuD,MACrF,MACJ,IAAK,aACL,IAAK,cACL,IAAK,eACL,IAAK,cACL,IAAK,cACL,IAAK,eACL,IAAK,YACL,IAAK,eACL,IAAK,eACL,IAAK,YACL,IAAK,eACL,IAAK,eACL,IAAK,gBACL,IAAK,eACL,IAAK,cACL,IAAK,cACL,IAAK,eACL,IAAK,cACL,IAAK,eACL,IAAK,aACL,IAAK,cACDrtD,KAAK0xD,WAAWgD,YAAY10D,KAAK+xD,UAAW/xD,KAAKoyD,YAAY,GAKzE,MAEJ,IAAK,QACD,IAC8BwM,EADxBhB,EAA+B,IAAhB59D,KAAKixD,OAAejxD,KAAK8xD,QAAQzU,MAAM,GAAK,CAACr9C,KAAK8xD,QAAQ,IAAI+M,GAAAl8D,EAAAA,EAAAA,GACjE3C,KAAK8xD,SAAO,IAA9B,IAAA+M,EAAAj8D,MAAAg8D,EAAAC,EAAAh8D,KAAAb,MAAgC,CAAC,IAAxBmpC,EAAKyzB,EAAAz9D,MACVgqC,EAAMmB,aAAaiB,UAAY,EAC/BpC,EAAMmB,aAAakB,cAAgB,EACnCrC,EAAMmB,aAAayC,YAAc,EACjC5D,EAAMmB,aAAawC,OAAS,EAC5B3D,EAAMI,aAAU1rC,CACpB,CAAC,OAAAtC,IAAAshE,EAAA3/D,EAAA3B,GAAA,SAAAshE,EAAA/7D,GAAA,KAC6Bg8D,EAD7BC,GAAAp8D,EAAAA,EAAAA,GACiBi7D,GAAY,IAA9B,IAAAmB,EAAAn8D,MAAAk8D,EAAAC,EAAAl8D,KAAAb,MAAgC,CAAlB88D,EAAA39D,MACJmrC,aAAagC,aAAe,CACtC,CAAC,OAAA/wC,IAAAwhE,EAAA7/D,EAAA3B,GAAA,SAAAwhE,EAAAj8D,GAAA,CACD,MACJ,IAAK,eACD,IAG0Bk8D,EAHpBC,GAAYx2B,EAAAA,GAAAA,GAAA,GAAQzoC,KAAK8xD,QAAQ9xD,KAAKixD,QAAQ3kB,cAC9C4yB,EAA4B,IAAhBl/D,KAAKixD,OAAe,CAACjxD,KAAK8xD,QAAQ,IAAM9xD,KAAK8xD,QAAQzU,MAAM,GACvE8hB,EAA8B,IAAhBn/D,KAAKixD,OAAejxD,KAAK8xD,QAAQzU,MAAM,GAAK,CAACr9C,KAAK8xD,QAAQ,IAAIsN,GAAAz8D,EAAAA,EAAAA,GACjEu8D,GAAS,IAA1B,IAAAE,EAAAx8D,MAAAo8D,EAAAI,EAAAv8D,KAAAb,MAA4B,CAAC,IAApB+qC,EAAIiyB,EAAA79D,MACT4rC,EAAKT,aAAakB,cAAgB2xB,EAAY,GAAG7yB,aAAakB,cAC9DT,EAAKT,aAAaiB,UAAY4xB,EAAY,GAAG7yB,aAAaiB,UAC1DR,EAAKT,aAAayC,YAAcowB,EAAY,GAAG7yB,aAAayC,YAC5DhC,EAAKT,aAAawC,OAASqwB,EAAY,GAAG7yB,aAAawC,OACvD/B,EAAKT,aAAagC,aAAe6wB,EAAY,GAAG7yB,aAAagC,aAC7DvB,EAAKT,aAAayB,WAAaoxB,EAAY,GAAG7yB,aAAayB,UAC/D,CAAC,OAAAxwC,IAAA6hE,EAAAlgE,EAAA3B,GAAA,SAAA6hE,EAAAt8D,GAAA,KAC2Bu8D,EAD3BC,GAAA38D,EAAAA,EAAAA,GACgBw8D,GAAW,IAA5B,IAAAG,EAAA18D,MAAAy8D,EAAAC,EAAAz8D,KAAAb,MAA8B,CAAC,IAAtB+qC,EAAIsyB,EAAAl+D,MACT4rC,EAAKT,aAAakB,cAAgByxB,EAAazxB,cAC/CT,EAAKT,aAAaiB,UAAY0xB,EAAa1xB,UAC3CR,EAAKT,aAAayC,YAAckwB,EAAalwB,YAC7ChC,EAAKT,aAAawC,OAASmwB,EAAanwB,OACxC/B,EAAKT,aAAagC,aAAe2wB,EAAa3wB,aAC9CvB,EAAKT,aAAayB,WAAakxB,EAAalxB,UAChD,CAAC,OAAAxwC,IAAA+hE,EAAApgE,EAAA3B,GAAA,SAAA+hE,EAAAx8D,GAAA,CACD,MACJ,IAAK,OACD,IAAK,IAAI1B,EAAG,EAAGA,EAAG,EAAGA,IAAM,CACvB,IAAMmxC,EAAUvyC,KAAK40D,WAAWxzD,GAChC,IAAK,IAAIqvC,KAAQ8B,EAAQriC,OAAQ,CAC7B,IAAM6tD,EAASttB,EACf8B,EAAQriC,OAAO6tD,GAAU,CAC7B,CACJ,CACA,MACJ,IAAK,YACL,IAAK,iBAAiB,IACcwB,EADfC,GAAA78D,EAAAA,EAAAA,GACF3C,KAAK6xD,cAAY,IAAhC,IAAA2N,EAAA58D,MAAA28D,EAAAC,EAAA38D,KAAAb,MAAkC,CAAC,IAA1BZ,EAAEm+D,EAAAp+D,MACP,IAAKnB,KAAKgyD,eAAe5wD,GACLpB,KAAK0xD,WAAWkD,WAAWxzD,GACnC2yC,OAAS,EAEzB,CAAC,OAAAx2C,IAAAiiE,EAAAtgE,EAAA3B,GAAA,SAAAiiE,EAAA18D,GAAA,CACD,MACJ,IAAK,SACD9C,KAAK8xD,QAAQ9xD,KAAKixD,QAAQ3kB,aAAauC,WAAY,EACnD,MACJ,IAAK,SACD7uC,KAAK4xD,MAAM6N,UAAW,EACtBz/D,KAAK4xD,MAAM8N,eAAeC,uBAAuB,UACjD,MACJ,IAAK,aACD,IAAMC,EAAe/uB,KAAKC,MAAM9wC,KAAK4xD,MAAMzY,QAAU,GACjDn5C,KAAK4xD,MAAMzJ,cAAgByX,QAA0C//D,IAA1BG,KAAK4xD,MAAMkF,aACtD92D,KAAK4xD,MAAMzJ,eAAiByX,EAC5B5/D,KAAK4xD,MAAMkF,WAAa8I,GAE5B,MACJ,IAAK,WACD,QAAAC,EAAA,EAAAC,EAAiB,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAMD,EAAAC,EAAAlgE,OAAAigE,IAAE,CAA/D,IACK9B,EADG+B,EAAAD,GAET7/D,KAAK4xD,MAAM1hD,OAAO6tD,GAAUr+D,EAAOwQ,OAAO6tD,IAAW,EACrD/9D,KAAK4xD,MAAMvN,SAAW3kD,EAAO2kD,QACjC,CACA,MACJ,IAAK,aACD,IAAM0b,GAAiBt3B,EAAAA,GAAAA,GAAA,GAAOzoC,KAAK4xD,MAAM1hD,QACzClQ,KAAK4xD,MAAM1hD,OAAOuB,IAAM/R,EAAOwQ,OAAOuB,IACtCzR,KAAK4xD,MAAM1hD,OAAOC,IAAMzQ,EAAOwQ,OAAOC,IACtCzQ,EAAOwQ,OAAOuB,IAAMsuD,EAAkBtuD,IACtC/R,EAAOwQ,OAAOC,IAAM4vD,EAAkB5vD,IACtC,MACJ,IAAK,aACD,IAAM6vD,GAAiBv3B,EAAAA,GAAAA,GAAA,GAAOzoC,KAAK4xD,MAAM1hD,QACzClQ,KAAK4xD,MAAM1hD,OAAOwB,IAAMhS,EAAOwQ,OAAOwB,IACtC1R,KAAK4xD,MAAM1hD,OAAOq2B,IAAM7mC,EAAOwQ,OAAOq2B,IACtC7mC,EAAOwQ,OAAOwB,IAAMsuD,EAAkBtuD,IACtChS,EAAOwQ,OAAOq2B,IAAMy5B,EAAkBz5B,IACtC,MACJ,IAAK,aACD,IAAM05B,GAAcx3B,EAAAA,GAAAA,GAAA,GAAOzoC,KAAK4xD,MAAM1hD,QACtClQ,KAAK4xD,MAAM1hD,QAAMu4B,EAAAA,GAAAA,GAAA,GAAO/oC,EAAOwQ,QAC/BxQ,EAAOwQ,QAAMu4B,EAAAA,GAAAA,GAAA,GAAOw3B,GACpB,MACJ,IAAK,cACD,IAAMC,EAAUlgE,KAAK4xD,MAAMre,MAAM9hC,IACjCzR,KAAK4xD,MAAMre,MAAM9hC,IAAMzR,KAAK4xD,MAAMre,MAAM7hC,IACxC1R,KAAK4xD,MAAMre,MAAM7hC,IAAMwuD,EACvB,MACJ,IAAK,aACD,IAAMC,EAAUngE,KAAK4xD,MAAMre,MAAM/M,IACjCxmC,KAAK4xD,MAAMre,MAAM/M,IAAM9mC,EAAO6zC,MAAM/M,IACpC9mC,EAAO6zC,MAAM/M,IAAM25B,EACnB,MACJ,IAAK,cACD,IAAK,IAAI1vB,KAAQ/wC,EAAOwQ,OACpBxQ,EAAOwQ,OAAOugC,KAA4B/wC,EAAOwQ,OAAOugC,IAA2B,GAEvF,MACJ,IAAK,cACD/wC,EAAOk4C,cAA0C,EAA1Bl4C,EAAO0gE,iBAC9B,MACJ,IAAK,OAC0B,QAAtBpgE,KAAK4xD,MAAM7d,QACPzB,GAAWtyC,KAAK4xD,MAAO5xD,KAAK4xD,MAAMzmB,QAAUnrC,KAAK4xD,MAAMzmB,MAAMyK,WAAW,UAAY51C,KAAK4xD,MAAMzmB,MAAMyK,WAAW,cACjH51C,KAAK4xD,MAAMtJ,kBAAqB,CAAC,WAAY,iBAAkB,gBAAgB7hB,SAASzmC,KAAK4xD,MAAM1b,UAClGl2C,KAAK4xD,MAAMzmB,MAAM4T,WAAW,QAAU/+C,KAAK4xD,MAAMhf,WAAW,gBAEjE5yC,KAAK4xD,MAAMzJ,cAAgBnoD,KAAK4xD,MAAMzY,QACtCn5C,KAAK4xD,MAAM6D,QAAgC,QAAtBz1D,KAAKZ,QAAQiuD,KAAiB,EAA0B,QAAtBrtD,KAAKZ,QAAQiuD,KAAiB,EAAI,EACzFrtD,KAAK0xD,WAAWgI,YAAY15D,KAAKixD,OAAQ,MAAOjxD,KAAKixD,QAAQ,GAAO,EAAOjxD,KAAKZ,QAAQiuD,OAE5F,MACJ,IAAK,UACDrtD,KAAK4xD,MAAMnf,WAAY,EACvB,MACJ,IAAK,aACD/yC,EAAOgzC,aAAc,EACrB,MACJ,IAAK,eACI1yC,KAAK4xD,MAAMvN,SAGZrkD,KAAK4yD,MAAM5yD,KAAK+xD,WAAa/xD,KAAK4xD,MAAMvyD,KAAO,MAAQW,KAAKqZ,KAAKha,KAAO,WAFxEW,KAAK4xD,MAAMvN,SAAW,EAI1B,MACJ,IAAK,eACD,IAC0Bgc,EADpBC,EAA0B,IAAhBtgE,KAAKixD,OAAe,CAAC,EAAE,EAAE,EAAE,GAAGlrD,QAAO,SAAC3E,GAAE,OAAKA,IAAO68D,EAAKhN,MAAM,IAAI,GAAGsP,GAAA59D,EAAAA,EAAAA,GACnE29D,GAAO,IAA1B,IAAAC,EAAA39D,MAAAy9D,EAAAE,EAAA19D,KAAAb,MAA4B,CAAC,IAApBw+D,EAAMH,EAAAl/D,MACLs/D,EAAOzgE,KAAK0xD,WAAWkD,WAAW4L,GACnCC,EAAKpc,SAGNrkD,KAAK4yD,MAAM4N,GAAUC,EAAKphE,KAAO,MAAQW,KAAKqZ,KAAKha,KAAO,WAF1DohE,EAAKpc,SAAWoc,EAAK9tB,QAAQ,UAAY,EAAG,CAIpD,CAAC,OAAAp1C,IAAAgjE,EAAArhE,EAAA3B,GAAA,SAAAgjE,EAAAz9D,GAAA,CACD,MACJ,IAAK,aACIpD,EAAOs7D,iBACRt7D,EAAOs7D,eAAiB,EACxBh7D,KAAK6yD,OAAO7yD,KAAK+xD,WAAWhvD,KAAK,6BAErC,MACJ,IAAK,WAGD,IADA,IACA29D,GAAA,EAAAC,GAD+B,IAAhB3gE,KAAKixD,OAAe,CAAC,EAAE,EAAE,EAAE,GAAK,CAAC,GAC3ByP,GAAAC,GAAA/gE,OAAA8gE,KAAE,CAAlB,IAAIt/D,GAAEu/D,GAAAD,IACDD,GAAOzgE,KAAK40D,WAAWxzD,IACzBq/D,GAAK7tB,WAAW,cAChB5yC,KAAK8xD,QAAQ1wD,IAAIkrC,aAAauC,WAAY,EACnC4xB,GAAK7tB,WAAW,eACvB5yC,KAAK0xD,WAAWsD,gBAAgB5zD,GAAI,CAACqQ,IAAK,GAElD,CACA,MACJ,IAAK,QACGzR,KAAK4xD,MAAMjf,QAAQ,UACnB3yC,KAAK0xD,WAAWqC,YAAY/zD,KAAKixD,OAAQjxD,KAAK4xD,MAAMzY,QAAU,GAGlE,MACJ,IAAK,YACDn5C,KAAK4xD,MAAM7M,UAAYlU,KAAKkC,IAAI,EAAG/yC,KAAK4xD,MAAM7M,UAAY,GAC1D,MACJ,IAAK,UACG/kD,KAAKwyD,QAAQ/B,QAAO,SAAC5yD,EAAEC,GAAC,OAAKD,EAAIC,CAAC,GAAE,GAAK,IACzCkC,KAAK0xD,WAAWsD,gBAAgBh1D,KAAKixD,OAAQ,CAACv/C,KAAM1R,KAAK4xD,MAAM7M,UAAWxe,KAAMvmC,KAAK4xD,MAAM7M,YAAY,EAAO/kD,KAAKixD,QAAQ,GAC3HjxD,KAAK4xD,MAAM7M,UAAY,GAE3B,MACJ,IAAK,UACG/kD,KAAK0yD,SAASjC,QAAO,SAAC5yD,EAAEC,GAAC,OAAKD,EAAIC,CAAC,GAAE,GAAK,IAC1CkC,KAAK0xD,WAAWsD,gBAAgBh1D,KAAKixD,OAAQ,CAACv/C,KAAM1R,KAAK4xD,MAAM7M,UAAWxe,KAAMvmC,KAAK4xD,MAAM7M,YAAY,EAAO/kD,KAAKixD,QAAQ,GAC3HjxD,KAAK4xD,MAAM7M,UAAY,GAE3B,MACJ,IAAK,YACD/kD,KAAK0xD,WAAWkP,UAAU5gE,KAAKixD,OAAQvxD,EAAO0B,IAC9CpB,KAAK4yD,MAAM5yD,KAAKkxD,UAAYlxD,KAAK4xD,MAAMvyD,KAAO,qBAAuBK,EAAOL,KAAO,IACnF,MACJ,IAAK,aACGW,KAAK4xD,MAAMvyD,KAAKonC,SAAS,cAAgBzmC,KAAK4xD,MAAMhf,WAAW,iBACvC,aAApB5yC,KAAK4xD,MAAMvyD,KACXW,KAAK4xD,MAAMiP,WAAW,sBAEtB7gE,KAAK4xD,MAAMiP,WAAW,aAG9B,MACJ,IAAK,QACD,IAAM/U,GAAWpsD,EAAOosD,SACpBA,KACA9rD,KAAK4xD,MAAMkP,UAAUhV,GAAUpsD,EAAO0B,IACtCpB,KAAK4yD,MAAM5yD,KAAKkxD,UAAYlxD,KAAK4xD,MAAMvyD,KAAO,WAAaysD,GAASzsD,KAAO,SAAWK,EAAOL,KAAO,KAExG,MACJ,IAAK,SACD,IAAM0hE,GAAYrhE,EAAOosD,SACrBiV,KACA/gE,KAAK4xD,MAAMoP,WAAWD,GAAWrhE,EAAO0B,IACxCpB,KAAK4yD,MAAM5yD,KAAKkxD,UAAYlxD,KAAK4xD,MAAMvyD,KAAO,WAAa0hE,GAAU1hE,KAAO,SAAWK,EAAOL,KAAO,KAEzG,MACJ,IAAK,cACDK,EAAOq2D,aAA6B,IAAdr2D,EAAO0B,GAAW,EAAI,EAIxD,GAAC,CAAApD,IAAA,uBAAAmD,MAED,WAGQnB,KAAK4xD,MAAMpf,QAAQ,eAAgB,cAAe,iBAClDxyC,KAAKgxD,UAAUiC,QAAQjzD,KAAKmxD,UAAU3e,QAAQ,eAAgB,cAAe,kBAC7ExyC,KAAK4xD,MAAMqP,gBAAiB,EAEpC,GAAC,CAAAjjE,IAAA,WAAAmD,MAED,WAGI,IADA,IAAM+/D,EAAU,EAAC,GAAO,GAAO,GAAO,GAAO,GACpCphE,EAAE,EAAGA,EAAE,EAAGA,IACXE,KAAK2xD,SAAS7xD,GAAGqoD,eAAiB,GAAKnoD,KAAKgxD,UAAUiC,QAAQnzD,GAAGqoD,cAAgB,IACjF+Y,EAAQphE,IAAK,GAIrB,IAAK,IAAIA,EAAE,EAAGA,EAAE,EAAGA,IACf,IAAIohE,EAAQphE,GAAZ,CACA,IAAMyyC,EAAUvyC,KAAK2xD,SAAS7xD,GACxBqhE,EAAcnhE,KAAKgxD,UAAUiC,QAAQnzD,GACvCyyC,EAAQ8R,WAAa8c,EAAY9c,UACjCrkD,KAAK6yD,OAAO/yD,GAAGiD,KAAK,uBAAD1C,OAAwBkyC,EAAQ8R,SAAQ,KAJnC,CAQhC,IAAK,IAAIvkD,EAAE,EAAGA,EAAE,EAAGA,IACf,IAAIohE,EAAQphE,GAAZ,CACA,IAAMyyC,EAAUvyC,KAAK2xD,SAAS7xD,GACxBqhE,EAAcnhE,KAAKgxD,UAAUiC,QAAQnzD,GACvCyyC,EAAQpH,MAAMmB,aAAauC,YAAcsyB,EAAYh2B,MAAMmB,aAAauC,YACpE0D,EAAQpH,MAAMmB,aAAauC,UAC3B7uC,KAAK6yD,OAAO/yD,GAAGiD,KAAK,yBAEpB/C,KAAK6yD,OAAO/yD,GAAGiD,KAAK,wBAPA,CAchC,IAFA,IAAMq+D,EAAwBphE,KAAKgxD,UAAUiC,QAAQxwD,KAAI,SAAAyD,GAAC,OAAIA,EAAEkiD,cAAc,IACxEiZ,EAAsBrhE,KAAK2xD,SAASlvD,KAAI,SAAAyD,GAAC,OAAIA,EAAEkiD,cAAc,IAC1DtoD,EAAE,EAAGA,EAAE,EAAGA,IACf,IAAIohE,EAAQphE,GAAZ,CACA,IACwCwhE,EADxCC,GAAA5+D,EAAAA,EAAAA,GACkB0+D,EAAoBvhE,IAAE,IAAxC,IAAAyhE,EAAA3+D,MAAA0+D,EAAAC,EAAA1+D,KAAAb,MAA0C,CAAC,IAAlCw/D,EAAKF,EAAAngE,MACLigE,EAAsBthE,GAAG2mC,SAAS+6B,KACrB,YAAVA,EACAxhE,KAAK6yD,OAAO/yD,GAAGiD,KAAK,uBACH,UAAVy+D,EACPxhE,KAAK6yD,OAAO/yD,GAAGiD,KAAK,wBACH,SAAVy+D,EACPxhE,KAAK6yD,OAAO/yD,GAAGiD,KAAK,yBACH,aAAVy+D,GAEU,eAAVA,GAEU,eAAVA,GAEU,YAAVA,GAEC5Q,GAAwBnqB,SAAS+6B,IACzCxhE,KAAK6yD,OAAO/yD,GAAGiD,KAAKy+D,EAAQ,cAGxC,CACA,OAAAjkE,IAAAgkE,EAAAriE,EAAA3B,GAAA,SAAAgkE,EAAAz+D,GAAA,KAC0C2+D,EAD1CC,GAAA/+D,EAAAA,EAAAA,GACkBy+D,EAAsBthE,IAAE,IAA1C,IAAA4hE,EAAA9+D,MAAA6+D,EAAAC,EAAA7+D,KAAAb,MAA4C,CAAC,IAApCw/D,EAAKC,EAAAtgE,MACLkgE,EAAoBvhE,GAAG2mC,SAAS+6B,KACnB,YAAVA,EACAxhE,KAAK6yD,OAAO/yD,GAAGiD,KAAKy+D,EAAQ,SAE5BxhE,KAAK6yD,OAAO/yD,GAAGiD,KAAKy+D,EAAQ,UAGxC,CAAC,OAAAjkE,IAAAmkE,EAAAxiE,EAAA3B,GAAA,SAAAmkE,EAAA5+D,GAAA,CAhC2B,CAmChC,IAAM6+D,EAAgB3hE,KAAKgxD,UAAUiC,QAAQ,GAAG9X,aAC1CymB,EAAc5hE,KAAK2xD,SAAS,GAAGxW,aACjCwmB,IAAkBC,IACdA,EACA5hE,KAAK6yD,OAAO,GAAG9vD,KAAK,oBAEpB/C,KAAK6yD,OAAO,GAAG9vD,KAAK,kBAI5B,IAAK,IAAIjD,EAAE,EAAGA,EAAE,EAAGA,IACXohE,EAAQphE,IACRE,KAAK6yD,OAAO/yD,GAAGiD,KAAK/C,KAAK2xD,SAAS7xD,GAAGT,KAAO,aAMpD,IAFA,IAAMwiE,EAAe7hE,KAAKgxD,UAAUiC,QAAQxwD,KAAI,SAAAyD,GAAC,OAAIA,EAAEkpC,IAAI,IACrD0yB,EAAa9hE,KAAK2xD,SAASlvD,KAAI,SAAAyD,GAAC,OAAIA,EAAEkpC,IAAI,IACvCtvC,EAAE,EAAGA,EAAE,EAAGA,IACX+hE,EAAa/hE,KAAOgiE,EAAWhiE,UACTD,IAAlBiiE,EAAWhiE,GACXE,KAAK6yD,OAAO/yD,GAAGiD,KAAK8+D,EAAa/hE,GAAK,cACXD,IAApBgiE,EAAa/hE,GACpBE,KAAK6yD,OAAO/yD,GAAGiD,KAAK++D,EAAWhiE,GAAK,WAEpCE,KAAK6yD,OAAO/yD,GAAGiD,KAAK8+D,EAAa/hE,GAAK,kBAAoBgiE,EAAWhiE,KAOjF,IAFA,IAAMiiE,EAAmB/hE,KAAKgxD,UAAUiC,QAAQxwD,KAAI,SAAAyD,GAAC,OAAIA,EAAEgwC,OAAO,IAC5D8rB,EAAiBhiE,KAAK2xD,SAASlvD,KAAI,SAAAyD,GAAC,OAAIA,EAAEgwC,OAAO,IAC9Cp2C,EAAE,EAAGA,EAAE,EAAGA,IACXohE,EAAQphE,IACRiiE,EAAiBjiE,KAAOkiE,EAAeliE,KACb,iBAAtBkiE,EAAeliE,SAA+CD,IAAtBmiE,EAAeliE,GACvDE,KAAK6yD,OAAO/yD,GAAGiD,KAAKg/D,EAAiBjiE,GAAK,YAE1CE,KAAK6yD,OAAO/yD,GAAGiD,KAAK,sBAAwBi/D,EAAeliE,KAOvE,IAFA,IAAMmiE,EAAmBjiE,KAAKgxD,UAAUiC,QAAQxwD,KAAI,SAAAyD,GAAC,OAAIA,EAAEoiD,gBAAgB,IACrE4Z,EAAiBliE,KAAK0xD,WAAWuB,QAAQxwD,KAAI,SAAAyD,GAAC,OAAIA,EAAEoiD,gBAAgB,IACjExoD,EAAE,EAAGA,EAAE,EAAGA,IACXohE,EAAQphE,IAA6B,iBAAtBkiE,EAAeliE,KAC7BmiE,EAAiBniE,IAAQoiE,EAAepiE,IACzCE,KAAK6yD,OAAO/yD,GAAGiD,KAAKi/D,EAAeliE,GAAK,cAMhD,IAFA,IAAMqiE,EAAmBniE,KAAKgxD,UAAUiC,QAAQxwD,KAAI,SAAAyD,GAAC,OAAIA,EAAE4tC,SAAS,IAC9DsuB,EAAiBpiE,KAAK2xD,SAASlvD,KAAI,SAAAyD,GAAC,OAAIA,EAAE4tC,SAAS,IAChDh0C,EAAE,EAAGA,EAAE,EAAGA,IACXohE,EAAQphE,IACRqiE,EAAiBriE,KAAOsiE,EAAetiE,KACnCsiE,EAAetiE,GACfE,KAAK6yD,OAAO/yD,GAAGiD,KAAK/C,KAAK2xD,SAAS7xD,GAAGo2C,QAAU,cAE/Cl2C,KAAK6yD,OAAO/yD,GAAGiD,KAAK/C,KAAK2xD,SAAS7xD,GAAGo2C,QAAU,iBAO3D,IAFA,IAAMmsB,EAAgBriE,KAAKgxD,UAAUiC,QAAQxwD,KAAI,SAAAyD,GAAC,OAAIA,EAAE6tC,MAAM,IACxDuuB,EAActiE,KAAK2xD,SAASlvD,KAAI,SAAAyD,GAAC,OAAIA,EAAE6tC,MAAM,IAC1Cj0C,EAAE,EAAGA,EAAE,EAAGA,IACXohE,EAAQphE,IACRuiE,EAAcviE,KAAOwiE,EAAYxiE,KACV,KAAnBwiE,EAAYxiE,SAAgCD,IAAnByiE,EAAYxiE,GACrCE,KAAK6yD,OAAO/yD,GAAGiD,KAAKs/D,EAAcviE,GAAK,UAEvCE,KAAK6yD,OAAO/yD,GAAGiD,KAAKu/D,EAAYxiE,GAAK,eAKjD,IAAK,IAAIA,EAAE,EAAGA,EAAE,EAAGA,IACf,IAAIohE,EAAQphE,GAAZ,CACA,IAAMyyC,EAAUvyC,KAAK40D,WAAW90D,GAC1BqhE,EAAcnhE,KAAKgxD,UAAUiC,QAAQnzD,GACvCyiE,EAAqB,GACzB,IAAK,IAAI9xB,KAAQ8B,EAAQriC,OAAQ,CAE7B,IAAMsyD,EAAWrB,EAAYjxD,OAAOugC,IAAS,EAEvCgyB,OAAmC5iE,IAAzB0yC,EAAQriC,OAAOugC,GAAsB+xB,EAAWjwB,EAAQriC,OAAOugC,GAElE,IADAgyB,EAAUD,GAEnBD,EAASx/D,KAAK0tC,EAAO,KAAO+xB,EAAW,EAAI,IAAM,IAAMA,EAAW,YAASC,EAAU,EAAI,IAAM,IAAMA,EAE7G,CAKA,GAHIlwB,EAAQqF,eAAiBupB,EAAYvpB,cACrC2qB,EAASx/D,KAAK,gBAAkBo+D,EAAYvpB,aAAe,EAAI,IAAM,IAAMupB,EAAYvpB,aAAe,YAASrF,EAAQqF,aAAe,EAAI,IAAM,IAAMrF,EAAQqF,cAE9J2qB,EAAS3iE,OAAS,EAAG,CACrB,IAAM8iE,EAAa,kBAAoBH,EAAS9I,KAAK,MAAQ,IAC7Dz5D,KAAK6yD,OAAO/yD,GAAGiD,KAAK2/D,EACxB,CArB4B,CAwBhC,IAAK,IAAI5iE,EAAE,EAAGA,EAAE,EAAGA,IAAK,CACpB,IAAM6iE,EAAY3iE,KAAKgxD,UAAUiC,QAAQnzD,GAAGqoD,cACtCya,EAAU5iE,KAAK2xD,SAAS7xD,GAAGqoD,cACjC,GAAIwa,IAAcC,EAAS,CACvB,IAEMC,EAAQ,OAFShyB,KAAKC,MAAM6xB,EAAY3iE,KAAKgxD,UAAUiC,QAAQnzD,GAAGq5C,QAAU,KAAM,GAEhD,YADnBtI,KAAKC,MAAM8xB,EAAU5iE,KAAK2xD,SAAS7xD,GAAGq5C,QAAU,KAAM,GACX,IAChEn5C,KAAK6yD,OAAO/yD,GAAGiD,KAAK8/D,EACxB,CACJ,CAEA,IAAK,IAAI/iE,EAAE,EAAGA,EAAE,EAAGA,IACf,GAAIA,IAAME,KAAKixD,QAAUnxD,IAAME,KAAKkxD,UAAYpxD,IAAME,KAAKmxD,UAAYnxD,KAAK6xD,aAAaprB,SAAS3mC,GAAI,CAClG,IACMgjE,EADO9iE,KAAK2xD,SAAS7xD,GACLgjE,SAClBA,EAAW,GACX9iE,KAAK6yD,OAAO/yD,GAAGiD,KAAK+/D,GAAY,IAAM,gBAAe,GAAAziE,OAAMyiE,EAAQ,iCAE3E,CAER,KAAChS,CAAA,CAz3DgB,G,2sHCnEf9vD,GAAM6pC,GAAY5oC,IAAI,GACtB8gE,GAAY,IAAI7qD,GAAKlX,GAAK,UAiBnBgiE,GAAQ,WA0CjB,SAAAA,EAAYhS,EAAsBiS,EAAoBC,IAAoBjiE,EAAAA,EAAAA,GAAA,KAAA+hE,GAAA,KAzC1EhS,eAAS,EAAkB,KAC3BG,cAAQ,OACRD,cAAQ,OACRiS,oBAAc,OACdC,kBAAY,OACZC,mBAAa,OACbC,iBAAW,OACXliE,QAAE,OACFmiE,WAAK,OACLL,gBAAU,OAEVM,mBAAa,OACbC,cAAQ,OACRC,kBAAY,OACZC,sBAAgB,OAEhBC,uBAAiB,OACjBC,aAAO,OACPC,WAAK,OACLC,iBAAW,OACXC,eAAS,OACTC,qBAAe,OACfC,mBAAa,OACbC,mBAAa,EAAmB,KAChCC,uBAAiB,OACjBC,qBAAe,OACfC,mBAAa,OACbC,iBAAW,OAEXC,gBAAU,OACVC,gBAAU,OAEVC,cAAQ,OACRC,cAAQ,OACRC,qBAAe,OACflT,gBAAU,EAAmB,KAE7BmB,YAAM,OACNgS,eAAS,EAIL7kE,KAAKgxD,UAAYA,EACjBhxD,KAAKmxD,SAAW8R,EAAK6B,SAAS7T,OAC9BjxD,KAAKkxD,SAAW+R,EAAK6B,SAAS5T,SAC9BlxD,KAAKmjE,eAAiBF,EAAK6B,SAAS/T,SACe,IAA/C9yD,OAAO6D,KAAKmhE,EAAK6B,SAAS/T,UAAUnxD,SACpCI,KAAKmjE,eAAiBnjE,KAAKgxD,UAAUiC,QAAQjzD,KAAKmxD,UAAUJ,SAASgU,MAAK,SAAC1rD,GAAI,OAAKA,EAAKha,OAAS4jE,EAAK6B,SAAS/T,SAAS1xD,IAAI,KAAK,CAACA,KAAM4jE,EAAK6B,SAAS/T,SAAS1xD,OAEpKW,KAAKojE,aAAeH,EAAK+B,aAAajU,SACiB,IAAnD9yD,OAAO6D,KAAKmhE,EAAK+B,aAAajU,UAAUnxD,SACxCI,KAAKojE,aAAepjE,KAAKgxD,UAAUiC,QAAQ,GAAGlC,SAASgU,MAAK,SAAC1rD,GAAI,OAAKA,EAAKha,OAAS4jE,EAAK+B,aAAajU,SAAS1xD,IAAI,KAAK,CAACA,KAAM4jE,EAAK+B,aAAajU,SAAS1xD,OAE9JW,KAAKoB,GAAK6hE,EAAK7hE,GACfpB,KAAKujE,MAAQN,EAAKM,MAClBvjE,KAAKkjE,WAAaA,EAElBljE,KAAKqjE,cAAgBJ,EAAK6B,SAAS1lE,SAAW,CAAC,EAC/CY,KAAKsjE,YAAcL,EAAK+B,aAAa5lE,SAAW,CAAC,CACrD,CAsrBC,OAtrBA8B,EAAAA,EAAAA,GAAA8hE,EAAA,EAAAhlE,IAAA,SAAAmD,MAED,WAsBI,GApBAnB,KAAKwjE,cAA6C,cAA7BxjE,KAAKmjE,eAAe9jE,MAAmD,cAA3BW,KAAKojE,aAAa/jE,KACnFW,KAAKyjE,SAAW,CAAC,eAAgB,gBAAiB,cAAch9B,SAASzmC,KAAKmjE,eAAe9jE,MAC7FW,KAAK0jE,aAA4C,cAA7B1jE,KAAKmjE,eAAe9jE,MAAmD,cAA3BW,KAAKojE,aAAa/jE,KAElFW,KAAK2jE,kBAAoB3jE,KAAKwjE,gBAAkBxjE,KAAK0jE,cAAkB1jE,KAAKkjE,WAAa,IAAO,EAEhGljE,KAAK+jE,YAAc,IAAI7rD,GAAK,EAAGlY,KAAKmjE,eAAe9jE,KAAMW,KAAKqjE,eAC1DrjE,KAAKqjE,cAAczL,OAAM53D,KAAK+jE,YAAYrjB,QAAS,QACvB7gD,IAA5BG,KAAKqjE,cAAcrqB,OAAoBh5C,KAAK+jE,YAAY/qB,KAAOh5C,KAAKqjE,cAAcrqB,MACtFh5C,KAAKgkE,UAAY,IAAI9rD,GAAK,EAAGlY,KAAKojE,aAAa/jE,KAAMW,KAAKsjE,aACtDtjE,KAAKsjE,YAAY1L,OAAM53D,KAAKgkE,UAAUtjB,QAAS,QACrB7gD,IAA1BG,KAAKsjE,YAAYtqB,OAAoBh5C,KAAKgkE,UAAUhrB,KAAOh5C,KAAKsjE,YAAYtqB,MAGhFh5C,KAAK0xD,WAAa1xD,KAAKgxD,UAAUvxD,QACjCO,KAAK4kE,gBAAkB,GACvB5kE,KAAK6yD,OAAS,CAAC,GAAI,GAAI,GAAI,GAAI,IAC/B7yD,KAAK6kE,UAAY,GAG4C,IAAzD7kE,KAAK0xD,WAAWuB,QAAQjzD,KAAKmxD,UAAUhJ,cAAqB,CAC5DnoD,KAAK6yD,OAAO7yD,KAAKmxD,UAAUpuD,KAAK,eAChC/C,KAAK0xD,WAAWuT,SAASjlE,KAAKmxD,UAE9B,IAAM+T,EAAa,IAAIpU,GACnB,CAACzxD,KAAM,YAAyBK,OAAQ,QACxC,IAAIwY,GAAKlX,GAAK,aACdhB,KAAK0xD,WACL1xD,KAAKmxD,SACLnxD,KAAKmxD,SACLnxD,KAAKmxD,UACL,GACEjR,SACNlgD,KAAK0xD,WAAawT,EAAW9P,MAC7B,IAAK,IAAIt1D,EAAE,EAAGA,EAAE,EAAGA,IACfE,KAAK6yD,OAAO/yD,GAAKE,KAAK6yD,OAAO/yD,GAAGO,OAAO6kE,EAAW9sD,MAAMtY,GAEhE,CAGIE,KAAKqjE,cAAc8B,eACGnlE,KAAK0xD,WAAWyT,aAAanlE,KAAKmxD,WACnCnxD,KAAK6yD,OAAO7yD,KAAKmxD,UAAUpuD,KAAK,mBAmBzD,GAfA/C,KAAKolE,eAELplE,KAAKmkE,cAAgBnkE,KAAKmxD,SAC1BnxD,KAAKokE,kBAAoBpkE,KAAKkxD,SAC9BlxD,KAAKikE,gBAAkBjkE,KAAKmjE,eAC5BnjE,KAAKkkE,cAAgBlkE,KAAKojE,aAC1BpjE,KAAKqkE,gBAAkBrkE,KAAKikE,gBAAgB5kE,KAC5CW,KAAKskE,cAAgBtkE,KAAKkkE,cAAc7kE,KAEnCW,KAAK0jE,cACN1jE,KAAKqlE,mBAKLrlE,KAAKsjE,YAAYgC,gBAAiB,CAClCtlE,KAAK6yD,OAAO,GAAG9vD,KAAK,sCACpB,IAAK,IAAIjD,EAAE,EAAGA,EAAE,EAAGA,IAAK,CACpB,IAAMyyC,EAAUvyC,KAAK0xD,WAAWkD,WAAW90D,GAC3CyyC,EAAQsnB,WAAahpB,KAAKmC,IAAI,GAAIT,EAAQsnB,YAAc,GAAK,EACjE,CACJ,CACA,IAAK75D,KAAKyjE,WAAazjE,KAAKwjE,gBAAkBxjE,KAAK0jE,aAAc,CAE7D,IAAMjM,EAAWz3D,KAAK0xD,WAAWkD,WAAW50D,KAAKmkE,eACxB,IAArB1M,EAAShC,SAAiBgC,EAASljB,UAAU,SAC7CkjB,EAAS1jB,OAAS,GAClB/zC,KAAK6yD,OAAO7yD,KAAKmkE,eAAephE,KAAK,YAGhB,IAArB00D,EAAS7B,SAAiB6B,EAASrP,eAAe3hB,SAAS,WAC3DgxB,EAASrP,eAAiBqP,EAASrP,eAAeriD,QAAO,SAACguC,GAAM,MAAgB,UAAXA,CAAkB,IACvF/zC,KAAK6yD,OAAO7yD,KAAKmkE,eAAephE,KAAK,uBAE7C,CA0GA,OAzGK/C,KAAKwjE,eAAkBxjE,KAAK0jE,eAEF,IAAvB1jE,KAAK8jE,MAAMrO,SAAiBz1D,KAAK8jE,MAAMvvB,UAAU,SACjDv0C,KAAK8jE,MAAM/vB,OAAS,GACpB/zC,KAAK6yD,OAAO,GAAG9vD,KAAK,YAGG,IAAvB/C,KAAK8jE,MAAMlO,SAAiB51D,KAAK8jE,MAAM1b,eAAe3hB,SAAS,WAC/DzmC,KAAK8jE,MAAM1b,eAAiBpoD,KAAK8jE,MAAM1b,eAAeriD,QAAO,SAACguC,GAAM,MAAgB,UAAXA,CAAkB,IAC3F/zC,KAAK6yD,OAAO,GAAG9vD,KAAK,yBAIxB/C,KAAK4jE,mBACL5jE,KAAKwkE,WAAa,IAAI1T,GAClB9wD,KAAKikE,gBACLjkE,KAAK+jE,YACL/jE,KAAK0xD,WACL1xD,KAAKmkE,cACLnkE,KAAKokE,kBACLpkE,KAAKmxD,SACLnxD,KAAK4jE,kBACL5jE,KAAKqjE,cACLrjE,KAAKwjE,eACL,GACA,EACAxjE,KAAKukE,aAETvkE,KAAK0kE,SAAW1kE,KAAKwkE,WAAWtkB,SAChClgD,KAAK0xD,WAAa1xD,KAAK0kE,SAAStP,MAChCp1D,KAAKykE,WAAa,IAAI3T,GAClB9wD,KAAKkkE,cACLlkE,KAAKgkE,UACLhkE,KAAK0xD,WACL,EACA,CAAC,gBAAgB,oBAAoB,eAAejrB,SAASzmC,KAAKkkE,cAAcxkE,QAAU,IAAMM,KAAKmkE,cAAgBnkE,KAAKmxD,SAC1HnxD,KAAKmxD,UACJnxD,KAAK4jE,kBACN5jE,KAAKsjE,YACLtjE,KAAKwjE,cACLxjE,KAAK0kE,SAASpP,aAAa,GAC3Bt1D,KAAK0kE,SAASlsB,OAAO,GAAK,KAG9Bx4C,KAAKwkE,WAAa,IAAI1T,GAClB9wD,KAAKkkE,cACLlkE,KAAKgkE,UACLhkE,KAAK0xD,WACL,EACA1xD,KAAKmxD,SACLnxD,KAAKmxD,UACJnxD,KAAK4jE,kBACN5jE,KAAKsjE,YACLtjE,KAAKwjE,eAETxjE,KAAK0kE,SAAW1kE,KAAKwkE,WAAWtkB,SAChClgD,KAAK0xD,WAAa1xD,KAAK0kE,SAAStP,MAChCp1D,KAAKykE,WAAa,IAAI3T,GAClB9wD,KAAKikE,gBACLjkE,KAAK+jE,YACL/jE,KAAK0xD,WACL1xD,KAAKmkE,cACLnkE,KAAKokE,kBACLpkE,KAAKmxD,SACLnxD,KAAK4jE,kBACL5jE,KAAKqjE,cACLrjE,KAAKwjE,cACLxjE,KAAK0kE,SAASpP,aAAat1D,KAAKmxD,UAChCnxD,KAAK0kE,SAASlsB,OAAOx4C,KAAKmxD,UAAY,EACtCnxD,KAAKukE,cAGbvkE,KAAKykE,WAAWvkB,SAChBlgD,KAAK2kE,SAAW3kE,KAAKykE,WAAW7qB,OAChC55C,KAAK0xD,WAAa1xD,KAAK2kE,SAASvP,MAAM31D,QAEjCO,KAAK0jE,eACN1jE,KAAKulE,mBACAvlE,KAAKwjE,gBAENxjE,KAAKwlE,uBAELxlE,KAAKylE,4BAELzlE,KAAK0lE,+BAEL1lE,KAAK0xD,WAAWuB,QAAQjzD,KAAKmxD,UAAUsO,UAAW,EAClDz/D,KAAK0xD,WAAWuB,QAAQjzD,KAAKmxD,UAAUuO,eAAeiG,0BAA0B,UAChF3lE,KAAK0xD,WAAWuB,QAAQ,GAAGwM,UAAW,EACtCz/D,KAAK0xD,WAAWuB,QAAQ,GAAGyM,eAAeiG,0BAA0B,UAEpE3lE,KAAK4lE,wBAEL5lE,KAAK6lE,4BACL7lE,KAAK8lE,8BACA9lE,KAAKyjE,UAENzjE,KAAK+lE,wBAEJ/lE,KAAKwjE,eACNxjE,KAAKgmE,kCAKV,CACH5Q,MAAOp1D,KAAK0xD,WACZoG,QAAQ,CAAE93D,KAAK0kE,SAAU1kE,KAAK2kE,UAAQtkE,QAAAsmC,EAAAA,GAAAA,GAAK3mC,KAAK4kE,kBAChDqB,iBAAkBjmE,KAAK4jE,kBACvBsC,eAAgBlmE,KAAKqkE,iBAAmBrkE,KAAK0xD,WAAWuB,QAAQjzD,KAAKmxD,UAAUhF,WAAa,cAAgB,IAC5Gga,aAAcnmE,KAAKskE,eAAiBtkE,KAAK0xD,WAAWuB,QAAQ,GAAG9G,WAAa,cAAgB,IAC5F/qD,GAAIpB,KAAKoB,GACTmiE,MAAOvjE,KAAKujE,MACZuB,SAAU,CACN7T,OAAQjxD,KAAKmxD,SACbD,SAAUlxD,KAAKkxD,SACfH,SAAU/wD,KAAKmjE,eACf/jE,QAASY,KAAKqjE,eAElB2B,aAAc,CACV/T,OAAQ,EACRC,SAAUlxD,KAAKmxD,SACfJ,SAAU/wD,KAAKojE,aACfhkE,QAASY,KAAKsjE,aAElBlrD,MAAOpY,KAAK6yD,OACZuT,SAAUpmE,KAAK6kE,UACf3B,WAAYljE,KAAKkjE,WAGzB,GAAC,CAAAllE,IAAA,mBAAAmD,MAED,WAuCI,GArCInB,KAAK6jE,QAAQ1X,aACbnsD,KAAKikE,gBAAkBjkE,KAAKgxD,UAAUiC,QAAQjzD,KAAKmxD,UAAUrF,SAC7D9rD,KAAK+jE,YAAc,IAAI7rD,GAAK,EAAGlY,KAAKikE,gBAAgB5kE,KAAMW,KAAKqjE,eAC3DrjE,KAAKqjE,cAAczL,OAAM53D,KAAK+jE,YAAYrjB,QAAS,QACvB7gD,IAA5BG,KAAKqjE,cAAcrqB,OAAoBh5C,KAAK+jE,YAAY/qB,KAAOh5C,KAAKqjE,cAAcrqB,MACtFh5C,KAAKqkE,gBAAkBrkE,KAAKikE,gBAAgB5kE,MAE5CW,KAAK8jE,MAAM3X,aACXnsD,KAAKkkE,cAAgBlkE,KAAKgxD,UAAUiC,QAAQ,GAAGnH,SAC/C9rD,KAAKgkE,UAAY,IAAI9rD,GAAK,EAAGlY,KAAKkkE,cAAc7kE,KAAMW,KAAKsjE,aACvDtjE,KAAKsjE,YAAY1L,OAAM53D,KAAKgkE,UAAUtjB,QAAS,QACrB7gD,IAA1BG,KAAKsjE,YAAYtqB,OAAoBh5C,KAAKgkE,UAAUhrB,KAAOh5C,KAAKsjE,YAAYtqB,MAChFh5C,KAAKskE,cAAgBtkE,KAAKkkE,cAAc7kE,MAGxCW,KAAK6jE,QAAQpQ,eACbzzD,KAAKikE,gBAAkB,CAAC5kE,KAAM,aAC9BW,KAAK+jE,YAAc,IAAI7rD,GAAK,EAAG,aAC/BlY,KAAKqkE,gBAAkB,gBAEvBrkE,KAAK8jE,MAAMrQ,eACXzzD,KAAKkkE,cAAgB,CAAC7kE,KAAM,aAC5BW,KAAKgkE,UAAY,IAAI9rD,GAAK,EAAG,aAC7BlY,KAAKskE,cAAgB,gBAGQ,gBAA7BtkE,KAAKmjE,eAAe9jE,MACE,IAAlBW,KAAKkxD,WACLlxD,KAAKikE,iBAAex7B,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAA,GACbzoC,KAAKmjE,gBAAc,IACtBjxB,MAAO,EACPhrC,SAAU,OACVmuD,QAAS,MAKjBr1D,KAAK8jE,MAAMlO,SAAmC,cAAxB51D,KAAKgkE,UAAU3kE,KAAsB,CAC3D,IAAMgnE,EAAW,IAAInuD,GAAK,EAAGlY,KAAKojE,aAAa/jE,KAAMW,KAAKsjE,aAChC,WAAtB+C,EAASn/D,UAA0B,CAAC,2BAA4B,2BAA2Bu/B,SAAS4/B,EAAShnE,QACzGW,KAAKwjE,cACDtW,GAAcltD,KAAKkkE,cAAc7kE,QACjCW,KAAKkkE,cAAgB,CAAC7kE,KAAM,YAAyBK,OAAQ,mBAAoBwH,SAAU,UAC3FlH,KAAKgkE,UAAY,IAAI9rD,GAAK,EAAG,YAAalY,KAAKsjE,aAC/CtjE,KAAKskE,cAAgB,aAGzBtkE,KAAKkkE,cAAgB,CAAC7kE,KAAM,kBAA+BK,OAAQ,mBAAoBwH,SAAU,UAG7G,CACA,GAAIlH,KAAK6jE,QAAQjO,QAAS,CACtB,IAAMyQ,EAAW,IAAInuD,GAAK,EAAGlY,KAAKmjE,eAAe9jE,KAAMW,KAAKqjE,eAClC,WAAtBgD,EAASn/D,UAA0B,CAAC,eAAgB,gBAAiB,cAAcu/B,SAAS4/B,EAAShnE,QACrGW,KAAKikE,gBAAkB,CAAC5kE,KAAM,kBAA+BK,OAAQ,mBAAoBwH,SAAU,UAE3G,CAEA,IAAKlH,KAAKgxD,UAAUiC,QAAQ,GAAG9G,YAA0C,oBAA5BnsD,KAAKkkE,cAAc7kE,KAA4B,CACxF,IAG8BkD,EAHxB+jE,EHEX,SAA4B/zB,GAAiD,IAAhC+e,EAAqB3xD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACjE4mE,EAA8B,GAAAlmE,QAAAsmC,EAAAA,GAAAA,GAAI4L,EAAQwe,WAAQpqB,EAAAA,GAAAA,GAAM2qB,GAAe/e,EAAQi0B,eAAsB,KAAKzgE,QAAO,SAAAuT,GAAC,MAAe,cAAXA,EAAEja,IAAoB,IAqBhJ,OApBKiyD,KACI/e,EAAQ0uB,gBAAkB1uB,EAAQk0B,WAAal0B,EAAQuZ,WACxDya,EAAkBA,EAAgBxgE,QAAO,SAAAuT,GAAC,OAAIA,EAAEja,OAASkzC,EAAQuZ,SAAUzsD,IAAI,KAE/EkzC,EAAQuZ,WAAavZ,EAAQm0B,WAAwC,mBAA1Bn0B,EAAQuZ,SAASzsD,MAAuD,eAA1BkzC,EAAQuZ,SAASzsD,QAC1GknE,EAAkBA,EAAgBxgE,QAAO,SAAAuT,GAAC,OAAIA,EAAEja,OAASkzC,EAAQuZ,SAAUzsD,IAAI,KAE/EkzC,EAAQsjB,WAAatjB,EAAQujB,eAC7ByQ,EAAkBA,EAAgBxgE,QAAO,SAAAuT,GAAC,OAAIA,EAAEja,OAASkzC,EAAQujB,YAAY,KAE7EvjB,EAAQqjB,UACR2Q,EAAkBA,EAAgBxgE,QAAO,SAAAuT,GAAC,MAAuB,WAAnBA,EAAEqtD,YAAyB,KAEzEp0B,EAAQwjB,eACRwQ,EAAkBA,EAAgBxgE,QAAO,SAAAuT,GAAC,OAAMA,EAAEnK,OAAQ,KAEzC,iBAAjBojC,EAAQnD,OACRm3B,EAAkBA,EAAgBxgE,QAAO,SAAAuT,GAAC,MAAuB,WAAnBA,EAAEqtD,YAAyB,MAG1EJ,EAAgB9jE,KAAI,SAAA6W,GAAC,OAAIA,EAAEja,IAAI,GAC1C,CGzBgCunE,CAAmB5mE,KAAK0xD,WAAWuB,QAAQ,IAAI,GAC/D4T,EAAW,YACXC,EAAa,EAAEpkE,GAAAC,EAAAA,EAAAA,GACA2jE,GAAW,IAA9B,IAAA5jE,EAAAE,MAAAL,EAAAG,EAAAG,KAAAb,MAAgC,CAAC,IAAtBqX,EAAI9W,EAAApB,MACLklE,EAAW,IAAInuD,GAAK,EAAGmB,EAAMrZ,KAAKsjE,aACxC+C,EAAS3lB,OAAS1gD,KAAKsjE,YAAY1L,OAAQ,EAC3C,IAAMmP,EAAY/mE,KAAK0xD,WAAWuB,QAAQ,GAAG9nB,MAC7C47B,EAAUx6B,aAAevsC,KAAK0xD,WAAWuB,QAAQjzD,KAAKmxD,UAAUhmB,MAAMmB,aACtE,IAAM4T,EAAS6K,GAAU,EAAG/qD,KAAK0xD,WAAWuB,QAAQ,GAAIjzD,KAAK0xD,WAAWuB,QAAQjzD,KAAKmxD,UAAWkV,EAAUU,GACtGvuB,EAAiB,GAEjBA,EAD0B,kBAAnB0H,EAAO1H,OACL0H,EAAO1H,OAEoB,QAA1Bx4C,KAAKsjE,YAAYjW,KAAiBnN,EAAO1H,OAAO,GACtB,QAA1Bx4C,KAAKsjE,YAAYjW,KAAiBnN,EAAO1H,OAAO0H,EAAO1H,OAAO54C,OAAS,GACvEsgD,EAAO1H,OAAO3H,KAAKC,MAAMoP,EAAO1H,OAAO54C,OAAS,KAEjDknE,IACTD,EAAWxtD,EACXytD,EAAatuB,EAErB,CAAC,OAAAj7C,IAAAmF,EAAAxD,EAAA3B,GAAA,SAAAmF,EAAAI,GAAA,CACD9C,KAAKkkE,cAAgBlkE,KAAK0xD,WAAWuB,QAAQ,GAAGlC,SAASgU,MAAK,SAAC1rD,GAAI,OAAKA,EAAKha,OAASwnE,CAAQ,KAAK,CAACxnE,KAAMwnE,GAC1G7mE,KAAKgkE,UAAY,IAAI9rD,GAAK,EAAG2uD,EAAU7mE,KAAKsjE,aAC5CtjE,KAAKskE,cAAgBuC,CACzB,CACA,IAAK7mE,KAAKgxD,UAAUiC,QAAQjzD,KAAKmxD,UAAUhF,YAA4C,oBAA9BnsD,KAAKikE,gBAAgB5kE,KAA4B,CACtG,IAG8Bo3C,EAHxB6vB,EAActmE,KAAK0xD,WAAWuB,QAAQjzD,KAAKmxD,UAAU/3C,MACvDytD,EAAW,YACXC,EAAa,EAAEnwB,GAAAh0C,EAAAA,EAAAA,GACA2jE,GAAW,IAA9B,IAAA3vB,EAAA/zC,MAAA6zC,EAAAE,EAAA9zC,KAAAb,MAAgC,CAAC,IAAtBqX,EAAIo9B,EAAAt1C,MACLklE,EAAW,IAAInuD,GAAK,EAAGmB,EAAMrZ,KAAKqjE,eACxCgD,EAAS3lB,OAAS1gD,KAAKqjE,cAAczL,OAAQ,EAC7C,IAAMmP,EAAY/mE,KAAK0xD,WAAWuB,QAAQjzD,KAAKmxD,UAAUhmB,MACzD47B,EAAUx6B,aAAevsC,KAAK0xD,WAAWuB,QAAQjzD,KAAKkxD,UAAU/lB,MAAMmB,aACtE,IAAM4T,EAAS6K,GAAU,EAAG/qD,KAAK0xD,WAAWuB,QAAQjzD,KAAKmxD,UAAWnxD,KAAK0xD,WAAWuB,QAAQ,GAAIoT,EAAUU,GACtGvuB,EAAiB,GAEjBA,EAD0B,kBAAnB0H,EAAO1H,OACL0H,EAAO1H,OAEsB,QAA5Bx4C,KAAKqjE,cAAchW,KAAiBnN,EAAO1H,OAAO,GACtB,QAA5Bx4C,KAAKqjE,cAAchW,KAAiBnN,EAAO1H,OAAO0H,EAAO1H,OAAO54C,OAAS,GACzEsgD,EAAO1H,OAAO3H,KAAKC,MAAMoP,EAAO1H,OAAO54C,OAAS,KAEjDknE,IAAkC,gBAAlBT,EAAShnE,MAA4C,IAAlBW,KAAKkxD,YACjE2V,EAAWxtD,EACXytD,EAAatuB,EAErB,CAAC,OAAAj7C,IAAAo5C,EAAAz3C,EAAA3B,GAAA,SAAAo5C,EAAA7zC,GAAA,CACD9C,KAAKikE,gBAAkBjkE,KAAK0xD,WAAWuB,QAAQjzD,KAAKmxD,UAAUJ,SAASgU,MAAK,SAAC1rD,GAAI,OAAKA,EAAKha,OAASwnE,CAAQ,KAAK,CAACxnE,KAAMwnE,GACxH7mE,KAAK+jE,YAAc,IAAI7rD,GAAK,EAAG2uD,EAAU7mE,KAAKqjE,eAC9CrjE,KAAKqkE,gBAAkBwC,CAC3B,CAG8G,IAADG,EAA7G,GAAiC,aAA7BhnE,KAAKmjE,eAAe9jE,WAA0EQ,IAAnDG,KAAKgxD,UAAUiC,QAAQjzD,KAAKkxD,UAAUpF,SAC5E9rD,KAAKgxD,UAAUiC,QAAQjzD,KAAKkxD,UAAU/E,YAAensD,KAAKgxD,UAAUiC,QAAQjzD,KAAKkxD,UAAUuC,cAAiBD,GAAY/sB,UAAuD,QAA9CugC,EAAAhnE,KAAKgxD,UAAUiC,QAAQjzD,KAAKkxD,UAAUpF,gBAAQ,IAAAkb,OAAA,EAA9CA,EAAgD3nE,OAAQ,MAC1LW,KAAKukE,aAAc,EACnBvkE,KAAKmkE,cAAgBnkE,KAAKkxD,SAC1BlxD,KAAKokE,kBAAoBpkE,KAAKgxD,UAAUiC,QAAQjzD,KAAKmkE,eAAejP,WAChEl1D,KAAKokE,oBAAsBpkE,KAAKkxD,WAAYlxD,KAAKokE,kBAAoBpkE,KAAKmkE,eAC9EnkE,KAAKikE,gBAAkBjkE,KAAKgxD,UAAUiC,QAAQjzD,KAAKkxD,UAAUpF,SAC7D9rD,KAAK+jE,YAAc,IAAI7rD,GAAK,EAAGlY,KAAKikE,gBAAgB5kE,KAAMW,KAAKqjE,eAC3DrjE,KAAKqjE,cAAczL,OAAQ53D,KAAK+jE,YAAYrjB,QAAS,QACzB7gD,IAA5BG,KAAKqjE,cAAcrqB,OAAoBh5C,KAAK+jE,YAAY/qB,KAAOh5C,KAAKqjE,cAAcrqB,YAGvF,GAAiC,YAA7Bh5C,KAAKmjE,eAAe9jE,MAC3B,QAAoCQ,IAAhCG,KAAK0xD,WAAWyD,YAA2B,CAC3C,IAAM8R,EAAejnE,KAAKgxD,UAAU4D,WAAW50D,KAAK0xD,WAAWyD,aAC/Dn1D,KAAKokE,kBAAoB,EACzBpkE,KAAKikE,gBAAkBgD,EAAanb,SACpC9rD,KAAK+jE,YAAc,IAAI7rD,GAAK,EAAGlY,KAAKikE,gBAAgB5kE,KAAMW,KAAKqjE,eAC3DrjE,KAAKqjE,cAAczL,OAAM53D,KAAK+jE,YAAYrjB,QAAS,QACvB7gD,IAA5BG,KAAKqjE,cAAcrqB,OAAoBh5C,KAAK+jE,YAAY/qB,KAAOh5C,KAAKqjE,cAAcrqB,KAC1F,OAEOkU,GAAcltD,KAAK+jE,YAAY1kE,QAAUW,KAAK6jE,QAAQ5C,gBAAkBjhE,KAAK6jE,QAAQ4C,gBAAuC5mE,IAA1BG,KAAK6jE,QAAQ/X,UAAyD,cAA/B9rD,KAAK6jE,QAAQ/X,SAASzsD,OACtKW,KAAKikE,gBAAkBjkE,KAAKgxD,UAAUiC,QAAQjzD,KAAKmxD,UAAUrF,SAC7D9rD,KAAK+jE,YAAc,IAAI7rD,GAAK,EAAGlY,KAAKikE,gBAAgB5kE,KAAMW,KAAKqjE,eAC3DrjE,KAAKqjE,cAAczL,OAAM53D,KAAK+jE,YAAYrjB,QAAS,QACvB7gD,IAA5BG,KAAKqjE,cAAcrqB,OAAoBh5C,KAAK+jE,YAAY/qB,KAAOh5C,KAAKqjE,cAAcrqB,MACtFh5C,KAAKqkE,gBAAkBrkE,KAAKikE,gBAAgB5kE,KAEpD,GAAC,CAAArB,IAAA,eAAAmD,MAED,WACInB,KAAK6jE,QAAU7jE,KAAK0xD,WAAWuB,QAAQjzD,KAAKmxD,UAC5CnxD,KAAK8jE,MAAQ9jE,KAAK0xD,WAAWuB,QAAQ,GAErCjzD,KAAKknE,4BAA4BlnE,KAAKmjE,eAAgBnjE,KAAK6jE,SAC3D7jE,KAAKknE,4BAA4BlnE,KAAKojE,aAAcpjE,KAAK8jE,OAGzD,IAAMqD,EAAiBnnE,KAAKmjE,eAAe32D,UAAYxM,KAAK+jE,YAAYv3D,SAClE46D,EAAepnE,KAAKojE,aAAa52D,UAAYxM,KAAKgkE,UAAUx3D,SAClE,GAAI26D,EAAiBC,EACjBpnE,KAAK4jE,mBAAoB,OACtB,GAAIuD,EAAiBC,EACxBpnE,KAAK4jE,mBAAoB,MACtB,CAEH,IAAMyD,EAAWrnE,KAAK6jE,QAAQjxB,WAAW,mBAAmD,WAA9B5yC,KAAK+jE,YAAY78D,SACzEogE,EAAStnE,KAAK8jE,MAAMlxB,WAAW,mBAAiD,WAA5B5yC,KAAKgkE,UAAU98D,SACzE,GAAImgE,IAAaC,EACbtnE,KAAK4jE,mBAAoB,OACtB,GAAI0D,IAAWD,EAClBrnE,KAAK4jE,mBAAoB,MACtB,CACH,IAAM2D,EAAcvnE,KAAK6jE,QAAQ2D,eAC3BC,EAAYznE,KAAK8jE,MAAM0D,eAEvBE,EAAY1nE,KAAK0xD,WAAW8D,OAAO,GACzCx1D,KAAK4jE,kBAAoB8D,EAAUv7B,YAAeo7B,EAAcE,EAAcF,EAAcE,CAChG,CACJ,CACJ,GAAC,CAAAzpE,IAAA,8BAAAmD,MAED,SAAoC4vD,EAAoB4W,GACpD,IAAMzxB,EAAUyxB,EAAOzxB,QACvB,IAAKyxB,EAAOrf,iBACR,OAAQpS,GACJ,IAAK,iBACyBr2C,IAAtBkxD,EAASvkD,UAA0Bo7D,GAAenhC,SAASsqB,EAAS1xD,QACpE0xD,EAASvkD,UAAY,GAEzB,MACJ,IAAK,kBACyB3M,IAAtBkxD,EAASvkD,UAA0Bm7D,EAAO3qB,UAAY2qB,EAAOxuB,SAA6B,WAAlB4X,EAASlqD,OACjFkqD,EAASvkD,UAAY,GAEzB,MACJ,IAAK,cACyB3M,IAAtBkxD,EAASvkD,UAA0Bq7D,GAAYphC,SAASsqB,EAAS1xD,QACjE0xD,EAASvkD,UAAY,GAOzC,GAAC,CAAAxO,IAAA,uBAAAmD,MAED,WACI,GAAInB,KAAK2jE,iBAAkB,CAAC,IACqBhK,EADtBC,GAAAj3D,EAAAA,EAAAA,GACD3C,KAAK0xD,WAAWuB,SAAO,IAA7C,IAAA2G,EAAAh3D,MAAA+2D,EAAAC,EAAA/2D,KAAAb,MAA+C,CAAC,IAArCuwC,EAAOonB,EAAAx4D,MACd,GAAIoxC,EAAQ4V,cAAgB,EAAG,CAC3B,IAAMiP,EAAY7kB,EAAQpH,MAAM1rC,QAChC23D,EAAU7qB,aAAegG,EAAQpH,MAAMmB,aACvC,IAAM4R,EAAMC,GAAan9C,GAAKhB,KAAK0xD,WAAWuB,QAAQ,GAAI1gB,EAASwwB,GAAW3L,GAC9E,GAAIlZ,EAAI1F,OAAQ,CACZ0F,EAAI1F,OAASgT,GAActN,EAAI1F,SAAWjG,EAAQ+I,gBAAkB,KAAO,MAC3E,IAAMqnB,EAAYpwB,EAAQ4V,cAC1BnoD,KAAK0xD,WAAWqC,YAAYxhB,EAAQnxC,IAAK88C,EAAI1F,QAC7C,IAAMoqB,EAAUrwB,EAAQ4V,cAClB2f,EAAiBj3B,KAAKC,MAAM6xB,EAAYpwB,EAAQ4G,QAAU,KAAM,GAChE4uB,EAAel3B,KAAKC,MAAM8xB,EAAUrwB,EAAQ4G,QAAU,KAAM,GAClEn5C,KAAK6kE,UAAU9hE,KAAKwvC,EAAQy1B,KAAO,gBAAaF,EAAiB,YAASC,EAAe,WAAa7pB,EAAIJ,MAAM2b,KAAK,MACzH,CACJ,CACJ,CAAC,OAAAl8D,IAAAq8D,EAAA16D,EAAA3B,GAAA,SAAAq8D,EAAA92D,GAAA,CACL,CACJ,GAAC,CAAA9E,IAAA,4BAAAmD,MAED,WAAqC,IACY64D,EADbC,GAAAt3D,EAAAA,EAAAA,GACV3C,KAAK0xD,WAAWuB,SAAO,IAA7C,IAAAgH,EAAAr3D,MAAAo3D,EAAAC,EAAAp3D,KAAAb,MAA+C,CAAC,IAArCuwC,EAAOynB,EAAA74D,MAEd,GAAInB,KAAK2jE,wBAAwC9jE,IAAnB0yC,EAAQwB,QAA2C,KAAnBxB,EAAQwB,QAClE,OAAQxB,EAAQnD,MACZ,IAAK,YACDpvC,KAAK0xD,WAAWgI,YAAYnnB,EAAQnxC,GAAI,MAAOmxC,EAAQnxC,IAAI,GAAO,GAC7B,QAAjCmxC,EAAQwB,QACR/zC,KAAK2kE,SAASvsD,MAAMm6B,EAAQnxC,IAAI2B,KAAK,iBAEzC,MACJ,IAAK,YACD/C,KAAK0xD,WAAWgI,YAAYnnB,EAAQnxC,GAAI,MAAOmxC,EAAQnxC,IAAI,GAAO,GAC7B,QAAjCmxC,EAAQwB,QACR/zC,KAAK2kE,SAASvsD,MAAMm6B,EAAQnxC,IAAI2B,KAAK,iBAMzD,CAAC,OAAAxF,IAAA08D,EAAA/6D,EAAA3B,GAAA,SAAA08D,EAAAn3D,GAAA,CACL,GAAC,CAAA9E,IAAA,wBAAAmD,MAED,WACI,QAAA+X,EAAA,EAAA+9B,EAAe,CAAC,EAAGj3C,KAAKmxD,UAASj4C,EAAA+9B,EAAAr3C,OAAAsZ,IAAE,CAA9B,IAAI9X,EAAE61C,EAAA/9B,GACDq5B,EAAUvyC,KAAK0xD,WAAWuB,QAAQ7xD,GACxC,GAAImxC,EAAQsiB,qBACRtiB,EAAQsiB,qBAC2B,IAA/BtiB,EAAQsiB,oBAA0B,CAClC,GAAItiB,EAAQ4V,cAAgB,EAAG,CAC3B,IAeM8f,EAfc,IAAInX,GACpBve,EAAQwiB,YACR,IAAI78C,GAAKlX,GAAKuxC,EAAQwiB,YAAa11D,MACnCW,KAAK0xD,WACLnf,EAAQuiB,kBACRviB,EAAQnxC,GACRmxC,EAAQuiB,mBACR,EACAviB,EAAQ21B,oBACR,GACA,GACA,GACA,GACA,GAEkChoB,SACtClgD,KAAK0xD,WAAauW,EAAkB7S,MACpCp1D,KAAK4kE,gBAAgB7hE,KAAKklE,EAC9B,CACA11B,EAAQwiB,iBAAcl1D,EACtB0yC,EAAQuiB,uBAAoBj1D,EAC5B0yC,EAAQsiB,wBAAqBh1D,CACjC,CAER,CACJ,GAAC,CAAA7B,IAAA,+BAAAmD,MAED,WAEI,QAAA22C,EAAA,EAAAgoB,EAAiB,CAAC,EAAG9/D,KAAKmxD,UAASrZ,EAAAgoB,EAAAlgE,OAAAk4C,IAAE,CAAhC,IAAM12C,EAAE0+D,EAAAhoB,GACHvF,EAAWvyC,KAAK0xD,WAAWuB,QAAQ7xD,GACzC,IAAKmxC,EAAQ+V,mBAAoC,IAAf/V,EAAQnxC,IAAYpB,KAAK2jE,mBAAsBpxB,EAAQ4V,cAAgB,EACrG,OAAQ5V,EAAQ2D,SACZ,IAAK,aACG3D,EAAQ41B,mBACR51B,EAAQ41B,mBACyB,IAA7B51B,EAAQ41B,mBACR51B,EAAQuB,WAAY,EACpB9zC,KAAK6kE,UAAU9hE,KAAKwvC,EAAQy1B,KAAO,8BAG3C,MACJ,IAAK,gBAC2D,YAAxDhoE,KAAK0xD,WAAWuB,QAAQjzD,KAAKmxD,UAAUrqB,QAAQznC,KAC/CW,KAAK0xD,WAAWuB,QAAQjzD,KAAKmxD,UAAU0P,WAAW,kBACa,mBAAxD7gE,KAAK0xD,WAAWuB,QAAQjzD,KAAKmxD,UAAUrqB,QAAQznC,MACtDW,KAAK0xD,WAAWuB,QAAQjzD,KAAKmxD,UAAU0P,WAAW,WAMtE,CACA,IAC6C3G,EAD7CC,GAAAx3D,EAAAA,EAAAA,GACsB3C,KAAK0xD,WAAWuB,SAAO,IAA7C,IAAAkH,EAAAv3D,MAAAs3D,EAAAC,EAAAt3D,KAAAb,MAA+C,CAAC,IAArCuwC,EAAO2nB,EAAA/4D,MACd,IAAKoxC,EAAQ+V,kBAAoBtoD,KAAK2jE,kBAAoBpxB,EAAQ4V,cAAgB,EAC9E,OAAQ5V,EAAQ2D,SACZ,IAAK,cACD,GAAI3D,EAAQuZ,SAAU,CAClB,IAAMsc,EAAU71B,EAAQriC,OAAOs2B,KAAO,EACtCxmC,KAAK0xD,WAAWsD,gBAAgBziB,EAAQnxC,GAAI,CAAC,IAAO,IAAI,EAAMmxC,EAAQnxC,IAAI,GAC1EpB,KAAK6kE,UAAU9hE,KAAKwvC,EAAQy1B,KAAO,gBAAaI,EAAU,KAAO71B,EAAQriC,OAAOs2B,IAAO,iBAC3F,CACA,MACJ,IAAK,QACG+L,EAAQuZ,WACRvZ,EAAQqF,cAAgB,EACxB53C,KAAK6kE,UAAU9hE,KAAKwvC,EAAQy1B,KAAO,mEAEvC,MACJ,IAAK,YACDz1B,EAAQwB,OAAS,GACjB,MACJ,IAAK,UACGxB,EAAQpH,MAAM4T,WAAW,SAAWxM,EAAQnD,OAASmD,EAAQ4mB,kBAAoB,IAAI1yB,SAAS,WAC9FzmC,KAAK0xD,WAAWsH,YAAYzmB,EAAQnxC,GAAImxC,EAAQ4mB,kBAChDn5D,KAAK6kE,UAAU9hE,KAAKwvC,EAAQy1B,KAAI,WAAA3nE,OAASkyC,EAAQ4mB,iBAAgB,yBAErE,MACJ,IAAK,WACG5mB,EAAQ6mB,YACR7mB,EAAQ6mB,YACkB,IAAtB7mB,EAAQ6mB,YAAoB7mB,EAAQ4mB,kBAAoB,IAAI1yB,SAAS,WACrEzmC,KAAK0xD,WAAWgD,YAAYniB,EAAQnxC,GAAImxC,EAAQ4mB,kBAAmB,GACnEn5D,KAAK6kE,UAAU9hE,KAAKwvC,EAAQy1B,KAAO,WAAQz1B,EAAQ4mB,iBAAmB,4BAO9F,CAAC,OAAA57D,IAAA48D,EAAAj7D,EAAA3B,GAAA,SAAA48D,EAAAr3D,GAAA,CACL,GAAC,CAAA9E,IAAA,mBAAAmD,MAED,WACI,IAAMq0D,EAASx1D,KAAK0xD,WAAW8D,OAC/BA,EAAOx1D,KAAKmxD,UAAU7kB,aAAaoB,aAAc,EACjD8nB,EAAO,GAAGlpB,aAAaoB,aAAc,EAAM,IACnB0sB,EADmBG,GAAA53D,EAAAA,EAAAA,GACzB6yD,GAAM,IAAxB,IAAA+E,EAAA33D,MAAAw3D,EAAAG,EAAA13D,KAAAb,MAA0B,CAAC,IAAlBmpC,EAAKivB,EAAAj5D,MACNnB,KAAK2jE,mBACLx4B,EAAMmB,aAAaqB,aAAc,EACjCxC,EAAMmB,aAAasB,cAAe,EAE1C,CAAC,OAAArwC,IAAAg9D,EAAAr7D,EAAA3B,GAAA,SAAAg9D,EAAAz3D,GAAA,CACL,GAAC,CAAA9E,IAAA,wBAAAmD,MAED,WACI,GAAInB,KAAK2jE,iBAAkB,CACvB,IACwBlJ,EADlBjF,EAASx1D,KAAK0xD,WAAW8D,OAAOqF,GAAAl4D,EAAAA,EAAAA,GACpB6yD,GAAM,IAAxB,IAAAqF,EAAAj4D,MAAA63D,EAAAI,EAAAh4D,KAAAb,MAA0B,CAAC,IAAlBmpC,EAAKsvB,EAAAt5D,MAEVgqC,EAAMK,sBAAwBqF,KAAKmC,IAAI,GAAI7H,EAAMK,uBAAyB,GAAK,GAC/EL,EAAMI,QAAUJ,EAAMK,sBAAwBL,EAAMI,aAAU1rC,EAC9DsrC,EAAMG,sBAAwBuF,KAAKmC,IAAI,GAAI7H,EAAMG,uBAAyB,GAAK,GAC/EH,EAAME,QAAUF,EAAMG,sBAAwBH,EAAME,aAAUxrC,EAC9DsrC,EAAMQ,UAAYkF,KAAKmC,IAAI,EAAG7H,EAAMQ,UAAY,GAChDR,EAAMgB,YAAc0E,KAAKmC,IAAI,EAAG7H,EAAMgB,YAAc,GACpDhB,EAAMM,YAAcoF,KAAKmC,IAAI,EAAG7H,EAAMM,YAAc,GACpDN,EAAMO,aAAemF,KAAKmC,IAAI,EAAG7H,EAAMO,aAAe,GAEtDP,EAAMmB,aAAaiB,UAAYsD,KAAKmC,IAAI,EAAG7H,EAAMmB,aAAaiB,UAAY,GAC1EpC,EAAMmB,aAAakB,cAAgBqD,KAAKmC,IAAI,EAAG7H,EAAMmB,aAAakB,cAAgB,GAClFrC,EAAMmB,aAAagC,aAAeuC,KAAKmC,IAAI,EAAG7H,EAAMmB,aAAagC,aAAe,GAChFnD,EAAMmB,aAAawC,OAAS+B,KAAKmC,IAAI,EAAG7H,EAAMmB,aAAawC,OAAS,GACpE3D,EAAMmB,aAAayC,YAAc8B,KAAKmC,IAAI,EAAG7H,EAAMmB,aAAayC,YAAc,GAC9E5D,EAAMmB,aAAayB,WAAa8C,KAAKmC,IAAI,EAAG7H,EAAMmB,aAAayB,WAAa,GAC5E5C,EAAMmB,aAAa2B,aAAe4C,KAAKmC,IAAI,EAAG7H,EAAMmB,aAAa2B,aAAe,GAChF9C,EAAMmB,aAAamB,aAAeoD,KAAKmC,IAAI,EAAG7H,EAAMmB,aAAamB,aAAe,EACpF,CAEA,OAAAlwC,IAAAs9D,EAAA37D,EAAA3B,GAAA,SAAAs9D,EAAA/3D,GAAA,CACI9C,KAAKgxD,UAAUwE,OAAO,GAAGnqB,UAAYmqB,EAAO,GAAGnqB,SAAWrrC,KAAK6kE,UAAU9hE,KAAK/C,KAAKgxD,UAAUwE,OAAO,GAAGnqB,QAAW,UAClHrrC,KAAKgxD,UAAUwE,OAAO,GAAGjqB,UAAYiqB,EAAO,GAAGjqB,SAAWvrC,KAAK6kE,UAAU9hE,KAAK/C,KAAKgxD,UAAUwE,OAAO,GAAGjqB,QAAW,kBAClHvrC,KAAKgxD,UAAUwE,OAAO,GAAG7pB,YAAc6pB,EAAO,GAAG7pB,WAAa3rC,KAAK6kE,UAAU9hE,KAAK,iBAClF/C,KAAKgxD,UAAUwE,OAAO,GAAGrpB,cAAgBqpB,EAAO,GAAGrpB,aAAensC,KAAK6kE,UAAU9hE,KAAK,oBACtF/C,KAAKgxD,UAAUwE,OAAO,GAAG/pB,cAAgB+pB,EAAO,GAAG/pB,aAAezrC,KAAK6kE,UAAU9hE,KAAK,oBACtF/C,KAAKgxD,UAAUwE,OAAO,GAAG9pB,eAAiB8pB,EAAO,GAAG9pB,cAAgB1rC,KAAK6kE,UAAU9hE,KAAK,qBAExF/C,KAAKgxD,UAAUwE,OAAO,GAAGlpB,aAAaiB,YAAcioB,EAAO,GAAGlpB,aAAaiB,WAAavtC,KAAK6kE,UAAU9hE,KAAK,iBAC5G/C,KAAKgxD,UAAUwE,OAAO,GAAGlpB,aAAakB,gBAAkBgoB,EAAO,GAAGlpB,aAAakB,eAAiBxtC,KAAK6kE,UAAU9hE,KAAK,sBACpH/C,KAAKgxD,UAAUwE,OAAO,GAAGlpB,aAAagC,eAAiBknB,EAAO,GAAGlpB,aAAagC,cAAgBtuC,KAAK6kE,UAAU9hE,KAAK,qBAClH/C,KAAKgxD,UAAUwE,OAAO,GAAGlpB,aAAawC,SAAW0mB,EAAO,GAAGlpB,aAAawC,QAAU9uC,KAAK6kE,UAAU9hE,KAAK,cACtG/C,KAAKgxD,UAAUwE,OAAO,GAAGlpB,aAAayC,cAAgBymB,EAAO,GAAGlpB,aAAayC,aAAe/uC,KAAK6kE,UAAU9hE,KAAK,mBAChH/C,KAAKgxD,UAAUwE,OAAO,GAAGlpB,aAAayB,aAAeynB,EAAO,GAAGlpB,aAAayB,YAAc/tC,KAAK6kE,UAAU9hE,KAAK,kBAE9G/C,KAAKgxD,UAAUwE,OAAO,GAAGlpB,aAAaiB,YAAcioB,EAAO,GAAGlpB,aAAaiB,WAAavtC,KAAK6kE,UAAU9hE,KAAK,iBAC5G/C,KAAKgxD,UAAUwE,OAAO,GAAGlpB,aAAakB,gBAAkBgoB,EAAO,GAAGlpB,aAAakB,eAAiBxtC,KAAK6kE,UAAU9hE,KAAK,sBACpH/C,KAAKgxD,UAAUwE,OAAO,GAAGlpB,aAAagC,eAAiBknB,EAAO,GAAGlpB,aAAagC,cAAgBtuC,KAAK6kE,UAAU9hE,KAAK,qBAClH/C,KAAKgxD,UAAUwE,OAAO,GAAGlpB,aAAawC,SAAW0mB,EAAO,GAAGlpB,aAAawC,QAAU9uC,KAAK6kE,UAAU9hE,KAAK,cACtG/C,KAAKgxD,UAAUwE,OAAO,GAAGlpB,aAAayC,cAAgBymB,EAAO,GAAGlpB,aAAayC,aAAe/uC,KAAK6kE,UAAU9hE,KAAK,mBAChH/C,KAAKgxD,UAAUwE,OAAO,GAAGlpB,aAAayB,aAAeynB,EAAO,GAAGlpB,aAAayB,YAAc/tC,KAAK6kE,UAAU9hE,KAAK,kBAC9G/C,KAAKgxD,UAAUwE,OAAO,GAAGlpB,aAAa2B,eAAiBunB,EAAO,GAAGlpB,aAAa2B,cAAgBjuC,KAAK6kE,UAAU9hE,KAAK,sBAClH/C,KAAKgxD,UAAUwE,OAAO,GAAGlpB,aAAamB,eAAiB+nB,EAAO,GAAGlpB,aAAamB,cAAgBztC,KAAK6kE,UAAU9hE,KAAK,sBAC1H,CACJ,GAAC,CAAA/E,IAAA,4BAAAmD,MAED,WACI,IAC6Ci6D,EAD7CC,GAAA14D,EAAAA,EAAAA,GACsB3C,KAAK0xD,WAAWuB,SAAO,IAA7C,IAAAoI,EAAAz4D,MAAAw4D,EAAAC,EAAAx4D,KAAAb,MAA+C,CAAC,IAArCuwC,EAAO6oB,EAAAj6D,MAEd,GAAIoxC,EAAQyoB,gBAAkBh7D,KAAK2jE,iBAAkB,CACjD,IAAMyE,EAAU71B,EAAQriC,OAAOs2B,KAAO,EACtCxmC,KAAK0xD,WAAWsD,gBAAgBziB,EAAQnxC,GAAI,CAAC,KAAQ,IAAI,EAAOmxC,EAAQnxC,IAAI,GAC5EpB,KAAK6kE,UAAU9hE,KAAKwvC,EAAQy1B,KAAO,gBAAaI,EAAU,KAAO71B,EAAQriC,OAAOs2B,IAAO,iBACvF+L,EAAQyoB,gBACZ,CAEA,GAAIzoB,EAAQwoB,QAAU/6D,KAAK2jE,mBACvBpxB,EAAQwoB,SACe,IAAnBxoB,EAAQwoB,QAAc,CACtB,IAAMsN,EAA4B,IAAf91B,EAAQnxC,GAAsC,QAA1BpB,KAAKsjE,YAAYjW,KAAiB,EAA+B,QAA1BrtD,KAAKsjE,YAAYjW,KAAiB,EAAI,EAC3D,QAA5BrtD,KAAKqjE,cAAchW,KAAiB,EAAiC,QAA5BrtD,KAAKqjE,cAAchW,KAAiB,EAAI,EAC9GrtD,KAAK0xD,WAAWgI,YAAYnnB,EAAQnxC,GAAI,MAAOmxC,EAAQnxC,IAAI,GACpC,QAAnBmxC,EAAQwB,SACRxB,EAAQkjB,QAAU4S,EAClBroE,KAAK6kE,UAAU9hE,KAAKwvC,EAAQlzC,KAAO,kBAEvCkzC,EAAQ6V,eAAiB7V,EAAQ6V,eAAeriD,QAAO,SAACguC,GAAM,MAAgB,SAAXA,CAAiB,GACxF,CAER,CAAC,OAAAx2C,IAAA89D,EAAAn8D,EAAA3B,GAAA,SAAA89D,EAAAv4D,GAAA,CACL,GAAC,CAAA9E,IAAA,8BAAAmD,MAED,WAAuC,IACQs6D,EADTC,GAAA/4D,EAAAA,EAAAA,GACd3C,KAAK0xD,WAAWuB,SAAO,IAA3C,IAAAyI,EAAA94D,MAAA64D,EAAAC,EAAA74D,KAAAb,MAA6C,CAAC,IAArCuwC,EAAOkpB,EAAAt6D,MAERoxC,EAAQsjB,WAAatjB,EAAQsjB,aAC5BtjB,EAAQsjB,WAAatjB,EAAQujB,eAAgBvjB,EAAQujB,kBAAej2D,GACrE0yC,EAAQk0B,UAAYl0B,EAAQk0B,WAC5Bl0B,EAAQwjB,cAAgBxjB,EAAQwjB,eAEX,IAArBxjB,EAAQmjB,UAAkBnjB,EAAQgC,UAAU,SAC5ChC,EAAQwB,OAAS,GACjB/zC,KAAK6kE,UAAU9hE,KAAKwvC,EAAQy1B,KAAO,YAE3C,CAAC,OAAAzqE,IAAAm+D,EAAAx8D,EAAA3B,GAAA,SAAAm+D,EAAA54D,GAAA,CACL,GAAC,CAAA9E,IAAA,gCAAAmD,MAED,WAEI,IAAMoxC,EAAUvyC,KAAK0xD,WAAWkD,WAAW50D,KAAKmxD,UAChD,GAAI5e,EAAQ+V,iBAAkB,CAC1B/V,EAAQ+V,mBACR,IAAIggB,GAAkB,EAClBC,GAAqB,EACQ,IAA7Bh2B,EAAQ+V,mBACR/V,EAAQ+V,sBAAmBzoD,EAC3BG,KAAK0xD,WAAW8W,sBAAsBj2B,EAAQnxC,GAAImxC,EAAQ2D,SAAS,GACnEoyB,EAAsC,iBAApB/1B,EAAQ2D,QAC1BqyB,IAAuBh2B,EAAQuB,UAE3BvB,EAAQ2D,SAAgC,iBAApB3D,EAAQ2D,UACxBoyB,GAAmBC,EACnBvoE,KAAK6kE,UAAU9hE,KAAKwvC,EAAQy1B,KAAO,WAAQz1B,EAAQ2D,QAAU,6BACtDoyB,EACPtoE,KAAK6kE,UAAU9hE,KAAKwvC,EAAQy1B,KAAO,WAAQz1B,EAAQ2D,QAAU,aACtDqyB,GACPvoE,KAAK6kE,UAAU9hE,KAAKwvC,EAAQy1B,KAAO,WAAQz1B,EAAQ2D,QAAU,iBAI7E,CACJ,KAAC8sB,CAAA,CAlvBgB,GCvBfhiE,GAAM6pC,GAAY5oC,IAAI,GAkBfwmE,GAAU,WAYnB,SAAAA,EAAYxF,GAAgE,IAA1C/iB,EAAgCvgD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,MAAIsB,EAAAA,EAAAA,GAAA,KAAAwnE,GAAA,KAXzEC,mBAAa,OACbC,YAAM,OAENC,iBAAW,OAEXC,YAAM,OACNC,kBAAY,OAEZC,oBAAc,OACdC,oBAAc,EAGN9oB,GACAlgD,KAAK0oE,cAAgBxoB,EAAO+oB,SAC5BjpE,KAAK2oE,OAAS1F,EAAK0F,OACnB3oE,KAAK+oE,eAAiB7oB,EAAOgpB,cAC7BlpE,KAAKgpE,eAAiB9oB,EAAOipB,cAC7BnpE,KAAK8oE,aAAe5oB,EAAOkpB,YAC3BppE,KAAK4oE,aAAc,IAEnB5oE,KAAK0oE,cAAgBzF,EAAKyF,cAC1B1oE,KAAK2oE,OAAS1F,EAAK0F,OACnB3oE,KAAK4oE,aAAc,EACnB5oE,KAAK8oE,aAAe,GAE5B,CAiFC,OAjFA5nE,EAAAA,EAAAA,GAAAunE,EAAA,EAAAzqE,IAAA,SAAAmD,MAED,WACI,IACInB,KAAK6oE,OAAS7oE,KAAK0oE,cAAcjpE,QAC5BO,KAAK4oE,aACN5oE,KAAKqpE,oBAET,IAAMxnE,EAAK7B,KAAK6oE,OAAOppE,QAEvB,OADAO,KAAKspE,iBACE,CACHL,SAAUjpE,KAAK6oE,OACfO,YAAappE,KAAK8oE,aAClBI,cAAelpE,KAAK+oE,eACpBI,cAAenpE,KAAKgpE,eACpBO,cAAe1nE,EAEvB,CAAE,MAAO3C,GAEL,OADAxB,QAAQJ,MAAM4B,GACP,CACH+pE,SAAUjpE,KAAK0oE,cAAcjpE,QAC7B2pE,YAAa,GACbF,cAAe,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAC3CC,cAAe,CAAC,EAAE,EAAE,EAAE,EAAE,GACxBI,cAAevpE,KAAK0oE,cAAcjpE,QAE1C,CACJ,GAAC,CAAAzB,IAAA,iBAAAmD,MAED,WACI,IAAIqoE,EAAc,EAClB,GAAIxpE,KAAK4oE,aAAe5oE,KAAK8oE,aAAalpE,OAAS,EAAG,CAClD,IAAM6pE,EAAezpE,KAAK8oE,aAAa9oE,KAAK8oE,aAAalpE,OAAS,GAClE4pE,EAAcC,EAAavG,YAAsD,cAAxCuG,EAAa3E,SAAS/T,SAAS1xD,KAAuB,EAAI,EACvG,CACA,IAAK,IAAIS,EAAI,EAAGA,EAAIE,KAAK2oE,OAAO/oE,OAAQE,IAGpC,IAFA,IAAM4pE,EAAQ1pE,KAAK2oE,OAAO7oE,GAAG4pE,MACvBC,EAAU3pE,KAAK2oE,OAAO7oE,GAAG6pE,SAAW,EACjCptB,EAAI,EAAGA,EAAIotB,EAASptB,IACzB,IAAK,IAAIqtB,EAAI,EAAGA,EAAIF,EAAM9pE,OAAQgqE,IAAK,CACnC,IAAMC,EAAOH,EAAME,GACb1pB,EAAS,IAAI8iB,GAAShjE,KAAK6oE,OAAQgB,EAAML,GAAatpB,SAC5DlgD,KAAK8oE,aAAa/lE,KAAKm9C,GACvBlgD,KAAK6oE,OAAS3oB,EAAOkV,MACc,cAAhCyU,EAAK/E,SAAS/T,SAAS1xD,MACtBmqE,GAER,CAGZ,GAAC,CAAAxrE,IAAA,oBAAAmD,MAED,WACInB,KAAK+oE,eAAiB,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAElD,IACMe,EADS9pE,KAAK6oE,OAAO5V,QAAQxwD,KAAI,SAAAklE,GAAM,OAAIA,EAAOH,cAAc,IAC5C/kE,KAAI,SAACmxC,EAAOm2B,GAAK,MAAK,CAACn2B,EAAOm2B,EAAM,IAAEjkE,MAAK,SAACjI,EAAGC,GAAC,OAAKA,EAAE,GAAKD,EAAE,EAAE,IAAE4E,KAAI,SAAAunE,GAAI,OAAIA,EAAK,EAAE,IAC/GhqE,KAAKgpE,eAAiBc,EACtB,IACyBvnE,EADzBG,GAAAC,EAAAA,EAAAA,GACemnE,GAAU,IAAzB,IAAApnE,EAAAE,MAAAL,EAAAG,EAAAG,KAAAb,MAEI,IAFwB,IAAnBZ,EAAEmB,EAAApB,MACDiX,EAAQpY,KAAK6oE,OAAO5D,SAAS7jE,GAC1BtB,EAAE,EAAGA,EAAE,EAAGA,IACfE,KAAK+oE,eAAejpE,GAAKE,KAAK+oE,eAAejpE,GAAGO,OAAO+X,EAAMtY,GAGrE,OAAAvC,IAAAmF,EAAAxD,EAAA3B,GAAA,SAAAmF,EAAAI,GAAA,KACyB2zC,EADzBE,GAAAh0C,EAAAA,EAAAA,GACemnE,GAAU,IAAzB,IAAAnzB,EAAA/zC,MAAA6zC,EAAAE,EAAA9zC,KAAAb,MAA2B,CAAC,IAAnBZ,EAAEq1C,EAAAt1C,MACD+jE,EAAa,IAAIpU,GACnB,CAACzxD,KAAM,YAAyBK,OAAQ,QACxC,IAAIwY,GAAKlX,GAAK,aACdhB,KAAK6oE,OACLznE,EACAA,EACAA,GACA,GACE8+C,SACNlgD,KAAK6oE,OAAS3D,EAAW9P,MACzB,IAAK,IAAIt1D,EAAE,EAAGA,EAAE,EAAGA,IACfE,KAAK+oE,eAAejpE,EAAE,GAAKE,KAAK+oE,eAAejpE,EAAE,GAAGO,OAAO6kE,EAAW9sD,MAAMtY,GAEpF,CAAC,OAAAvC,IAAAo5C,EAAAz3C,EAAA3B,GAAA,SAAAo5C,EAAA7zC,GAAA,CACL,KAAC2lE,CAAA,CA3GkB,GClBjBznE,GAAM6pC,GAAY5oC,IAAI,GAEfgoE,GAAM,SAAAC,IAAAhf,EAAAA,EAAAA,GAAA+e,EAAAC,GAAA,IAAA/e,GAAAC,EAAAA,EAAAA,GAAA6e,GA6Df,SAAAA,EACI7oE,EACA4mE,EACAmC,EACAC,EACAj/B,EACAoH,EACAwe,GA0CD,IAAD0F,EAzCE4T,EAAsB1qE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACzB6mE,EAA+B7mE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAClC+/D,EAA2C//D,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,QAAGE,EAC9CijE,EAAgBnjE,UAAAC,OAAA,SAAAC,IAAAF,UAAA,IAAAA,UAAA,IAAG,EACnB8/D,EAAiB9/D,UAAAC,OAAA,SAAAC,IAAAF,UAAA,KAAAA,UAAA,IACjBi2D,EAAej2D,UAAAC,OAAA,SAAAC,IAAAF,UAAA,IAAAA,UAAA,IAAG,EAClB81D,EAAe91D,UAAAC,OAAA,SAAAC,IAAAF,UAAA,IAAAA,UAAA,IAAG,EAClBo7D,EAAcp7D,UAAAC,OAAA,SAAAC,IAAAF,UAAA,IAAAA,UAAA,IAAG,EACjB2qE,EAA8B3qE,UAAAC,OAAA,SAAAC,IAAAF,UAAA,IAAAA,UAAA,SAAGE,EACjC61D,EAAgB/1D,UAAAC,OAAA,SAAAC,IAAAF,UAAA,IAAAA,UAAA,IAAG,EACnBwsD,EAAmBxsD,UAAAC,OAAA,SAAAC,IAAAF,UAAA,KAAAA,UAAA,IACnB8zD,EAAqB9zD,UAAAC,OAAA,SAAAC,IAAAF,UAAA,KAAAA,UAAA,IACrBmsD,EAAoCnsD,UAAAC,OAAA,SAAAC,IAAAF,UAAA,IAAAA,UAAA,SAAGE,EACvCq1D,EAA8Bv1D,UAAAC,OAAA,SAAAC,IAAAF,UAAA,IAAAA,UAAA,SAAGE,EACjCo4D,EAAgCt4D,UAAAC,OAAA,SAAAC,IAAAF,UAAA,IAAAA,UAAA,SAAGE,EACnC04D,EAAgC54D,UAAAC,OAAA,SAAAC,IAAAF,UAAA,IAAAA,UAAA,SAAGE,EACnCg6D,EAA8Bl6D,UAAAC,OAAA,SAAAC,IAAAF,UAAA,IAAAA,UAAA,IAAG,EACjC4qE,EAAqB5qE,UAAAC,OAAA,SAAAC,IAAAF,UAAA,KAAAA,UAAA,IACrB8mE,EAA4B9mE,UAAAC,OAAA,SAAAC,IAAAF,UAAA,IAAAA,UAAA,IAAG,EAC/B+mE,EAA8B/mE,UAAAC,OAAA,SAAAC,IAAAF,UAAA,KAAAA,UAAA,IAC9Bk2D,EAA6Bl2D,UAAAC,OAAA,SAAAC,IAAAF,UAAA,IAAAA,UAAA,IAAG,EAChCm2D,EAAkCn2D,UAAAC,OAAA,SAAAC,IAAAF,UAAA,IAAAA,UAAA,SAAGE,EACrCk2D,EAAgCp2D,UAAAC,OAAA,SAAAC,IAAAF,UAAA,IAAAA,UAAA,IAAG,EACnC6+D,EAAoC7+D,UAAAC,OAAA,SAAAC,IAAAF,UAAA,IAAAA,UAAA,SAAGE,EACvCy+D,EAAiC3+D,UAAAC,OAAA,SAAAC,IAAAF,UAAA,IAAAA,UAAA,SAAGE,EACpC0zD,EAAsC5zD,UAAAC,OAAA,SAAAC,IAAAF,UAAA,IAAAA,UAAA,SAAGE,EACzCi3D,EAA8Bn3D,UAAAC,OAAA,SAAAC,IAAAF,UAAA,IAAAA,UAAA,SAAGE,EACjC2qE,EAAyD7qE,UAAAC,OAAA,SAAAC,IAAAF,UAAA,IAAAA,UAAA,SAAGE,EAC5Dm7D,EAAkCr7D,UAAAC,OAAA,SAAAC,IAAAF,UAAA,IAAAA,UAAA,IAAG,EACrCw5D,EAAsCx5D,UAAAC,OAAA,SAAAC,IAAAF,UAAA,IAAAA,UAAA,SAAGE,EACzCu5D,EAA6Bz5D,UAAAC,OAAA,SAAAC,IAAAF,UAAA,IAAAA,UAAA,IAAG,EAChC8qE,EAAkC9qE,UAAAC,OAAA,SAAAC,IAAAF,UAAA,IAAAA,UAAA,SAAGE,EACrC6qE,EAAkC/qE,UAAAC,OAAA,SAAAC,IAAAF,UAAA,IAAAA,UAAA,SAAGE,EACrC8qE,EAAwChrE,UAAAC,OAAA,SAAAC,IAAAF,UAAA,IAAAA,UAAA,SAAGE,EAC3C+qE,EAA2CjrE,UAAAC,OAAA,SAAAC,IAAAF,UAAA,IAAAA,UAAA,SAAGE,EAC9CgrE,EAA6DlrE,UAAAC,OAAA,SAAAC,IAAAF,UAAA,IAAAA,UAAA,SAAGE,EAChEsoE,EAAoCxoE,UAAAC,OAAA,SAAAC,IAAAF,UAAA,IAAAA,UAAA,SAAGE,EACvCg1D,EAAsCl1D,UAAAC,OAAA,SAAAC,IAAAF,UAAA,IAAAA,UAAA,SAAGE,EACzCi1D,EAAqCn1D,UAAAC,OAAA,SAAAC,IAAAF,UAAA,IAAAA,UAAA,SAAGE,EACxCqoE,EAAqDvoE,UAAAC,OAAA,SAAAC,IAAAF,UAAA,IAAAA,UAAA,SAAGE,EACxDk1D,EAAuCp1D,UAAAC,OAAA,SAAAC,IAAAF,UAAA,IAAAA,UAAA,SAAGE,EAiDX,OAjDoBoB,EAAAA,EAAAA,GAAA,KAAAgpE,IAEnDxT,EAAAtL,EAAA/sD,KAAA,KAAMm0C,EAAQvxC,IAAKuxC,EAAQlzC,MAAIopC,EAAAA,GAAAA,GAAA,GAAM8J,KA9GzCnxC,QAAE,EAAAq1D,EACFuR,UAAI,EAAAvR,EACJ0T,WAAK,EAAA1T,EACL2T,gBAAU,EAAkB3T,EAC5BtrB,WAAK,EAAuBsrB,EAC5B1F,cAAQ,EAAA0F,EACR4T,gBAAU,EAAkB5T,EAC5B+P,mBAAa,EAAA/P,EAEbiJ,oBAAc,EAAAjJ,EACdqM,cAAQ,EAAArM,EAERgJ,cAAQ,EAAoBhJ,EAC5Bb,aAAO,EAAqBa,EAC5BhB,aAAO,EAAqBgB,EAC5BsE,YAAM,EAAsBtE,EAC5B6T,gBAAU,EAAkB7T,EAC5Bf,cAAQ,EAAoBe,EAE5BtK,gBAAU,EAAkBsK,EAC5BhD,kBAAY,EAAgBgD,EAE5B3K,cAAQ,EAAoB2K,EAC5BvB,gBAAU,EAAkBuB,EAC5BwB,kBAAY,EAAgBxB,EAC5B8B,kBAAY,EAAgB9B,EAC5BoD,gBAAU,EAAkBpD,EAE5BwK,oBAAc,EAAcxK,EAC5BgQ,cAAQ,EAAoBhQ,EAC5BiQ,eAAS,EAAAjQ,EACTZ,eAAS,EAAmBY,EAC5BX,kBAAY,EAAgBW,EAC5BV,kBAAY,EAAAU,EAEZ+H,sBAAgB,EAAA/H,EAChB6H,kBAAY,EAAA7H,EACZlD,qBAAe,EAAAkD,EACfK,gBAAU,EAAAL,EAEV+T,qBAAe,EAAkC/T,EAEjDuE,oBAAc,EAAYvE,EAE1B0C,sBAAgB,EAAa1C,EAC7B2C,eAAS,EAAoB3C,EAE7BgU,mBAAa,EAAYhU,EACzBiU,mBAAa,EAAYjU,EACzBkU,qBAAe,EAAgBlU,EAC/BmU,mBAAa,EAAqBnU,EAClCoU,yBAAmB,EAAiCpU,EAEpD0R,sBAAgB,EAAW1R,EAE3B5B,wBAAkB,EAAA4B,EAClB3B,uBAAiB,EAAA2B,EACjByR,wBAAkB,EAAAzR,EAClB1B,iBAAW,EAqDP0B,EAAKr1D,GAAKA,EACVq1D,EAAKuR,KAAOA,EACZvR,EAAK0T,QAAUA,EACf1T,EAAK2T,aAAeA,EACpB3T,EAAKtrB,MAAQA,EACbsrB,EAAK1F,SAAWA,EAChB0F,EAAK4T,WAAaA,EAClB5T,EAAK+P,cAAgBA,EACrB/P,EAAKiJ,eAAiBA,GAAkB,IAAIhQ,GAC5C+G,EAAKqM,SAAWA,EAChBrM,EAAKgJ,SAAWA,EAChBhJ,EAAKb,QAAUA,EACfa,EAAKhB,QAAUA,EACfgB,EAAKsE,OAASA,EACdtE,EAAK6T,WAAaA,EAClB7T,EAAKf,SAAWA,EAChBe,EAAKtK,WAAaA,EAClBsK,EAAKhD,aAAeA,EACpBgD,EAAK3K,SAAWA,EAChB2K,EAAKvB,WAAaA,EAClBuB,EAAKwB,aAAeA,EACpBxB,EAAK8B,aAAeA,EACpB9B,EAAKoD,WAAaA,EAClBpD,EAAKwK,eAAiBsJ,EACtB9T,EAAKgQ,SAAWA,EAChBhQ,EAAKiQ,UAAYA,EACjBjQ,EAAKZ,UAAYA,EACjBY,EAAKX,aAAeA,EACpBW,EAAKV,aAAeA,EACpBU,EAAK+H,iBAAmBA,EACxB/H,EAAK6H,aAAeA,EACpB7H,EAAKlD,gBAAkBA,EACvBkD,EAAKK,WAAaA,EAClBL,EAAK+T,gBAAkBA,GAAmBj4B,EAAQ2D,SAAW,eAC7DugB,EAAKuE,eAAiBA,EACtBvE,EAAK0C,iBAAmBA,EACxB1C,EAAK2C,UAAYA,EACjB3C,EAAKgU,cAAgBA,EACrBhU,EAAKiU,cAAgBA,EACrBjU,EAAKkU,gBAAmBA,EACxBlU,EAAKmU,cAAgBA,EACrBnU,EAAKoU,oBAAsBA,GAAuBt4B,EAAQ2D,SAAW,eACrEugB,EAAK0R,iBAAmBA,EACxB1R,EAAK5B,mBAAqBA,EAC1B4B,EAAK3B,kBAAoBA,EACzB2B,EAAKyR,mBAAqBA,EAC1BzR,EAAK1B,YAAcA,EAAY0B,CACnC,CA2QC,OA3QAv1D,EAAAA,EAAAA,GAAA+oE,EAAA,EAAAjsE,IAAA,QAAAmD,MAED,WACI,OAAO,IAAI8oE,EACPjqE,KAAKoB,GACLpB,KAAKgoE,KACLhoE,KAAKmqE,MACLnqE,KAAKoqE,WACLpqE,KAAKmrC,MAAM1rC,QACX,IAAIkoD,GAAQ3nD,KAAKgB,IAAKhB,KAAKX,KAAM,CAC7B8xC,MAAOnxC,KAAKmxC,MACZmK,eAAgBt7C,KAAKs7C,eACrBuM,gBAAiB7nD,KAAK6nD,gBACtB3R,QAASl2C,KAAKk2C,QACdpC,UAAW9zC,KAAK8zC,UAChBkQ,YAAahkD,KAAKgkD,YAClB8D,aAAc9nD,KAAK8nD,aACnB7I,WAAYj/C,KAAKi/C,WACjB8I,cAAe/nD,KAAK+nD,cACpBhR,YAAa/2C,KAAK+2C,YAClBkR,kBAAmBjoD,KAAKioD,kBACxBxV,UAAWzyC,KAAKyyC,UAChBC,YAAa1yC,KAAK0yC,YAClBtD,KAAMpvC,KAAKovC,KACX70B,OAAQva,KAAKua,OACbqwB,OAAQ5qC,KAAK4qC,OACb+I,SAAU3zC,KAAK2zC,SACfJ,MAAOvzC,KAAKuzC,MACZjD,IAAKnxC,GAAO,EAAM,CAAC,EAAGa,KAAKswC,KAC3B6H,IAAKh5C,GAAO,EAAM,CAAC,EAAGa,KAAKm4C,KAC3BjoC,OAAQ/Q,GAAO,EAAM,CAAC,EAAGa,KAAKkQ,QAC9Bm0C,SAAUrkD,KAAKqkD,SACf6D,QAASloD,KAAKkoD,QACdjD,WAAYjlD,KAAKilD,WACjBrN,aAAc53C,KAAK43C,aACnBmN,UAAW/kD,KAAK+kD,UAChBoD,cAAenoD,KAAKmoD,cACpBpU,OAAQ/zC,KAAK+zC,OACbqU,eAAgBpoD,KAAKooD,eAAe/K,QACpC8B,SAAUn/C,KAAKm/C,SACf2E,OAAQ9jD,KAAK8jD,OACb4C,WAAY1mD,KAAK0mD,WACjBvL,aAAcn7C,KAAKm7C,aACnBiD,aAAcp+C,KAAKo+C,aACnB4G,UAAWhlD,KAAKglD,UAChB/K,aAAcj6C,KAAKi6C,aACnBzgC,MAAOxZ,KAAKwZ,MACZ6uC,aAAcroD,KAAKqoD,aAEnBjvC,MAAOpZ,KAAKoZ,MAAMikC,QAClBiL,iBAAkBtoD,KAAKsoD,iBACvBzC,mBAAoB7lD,KAAK6lD,mBACzBE,mBAAoB/lD,KAAK+lD,mBACzBwC,UAAWvoD,KAAK8mC,UAEpB9mC,KAAK+wD,SACL/wD,KAAKqqE,WACLrqE,KAAKwmE,cACLxmE,KAAK0/D,eAAejgE,QACpBO,KAAK8iE,SACL9iE,KAAKy/D,SACLz/D,KAAK41D,QACL51D,KAAKy1D,QACLz1D,KAAK+6D,OACL/6D,KAAKsqE,WACLtqE,KAAK01D,SACL11D,KAAKmsD,WACLnsD,KAAKyzD,aACLzzD,KAAK8rD,SACL9rD,KAAKk1D,WACLl1D,KAAKi4D,aACLj4D,KAAKu4D,aACLv4D,KAAK65D,WACL75D,KAAKihE,eACLjhE,KAAKymE,SACLzmE,KAAK0mE,UACL1mE,KAAK61D,UACL71D,KAAK81D,aACL91D,KAAK+1D,aACL/1D,KAAKw+D,iBACLx+D,KAAKs+D,aACLt+D,KAAKuzD,gBACLvzD,KAAK82D,WACL92D,KAAKwqE,gBACLxqE,KAAKg7D,eACLh7D,KAAKm5D,iBACLn5D,KAAKo5D,UACLp5D,KAAKyqE,cACLzqE,KAAK0qE,cACL1qE,KAAK2qE,gBACL3qE,KAAK4qE,cACL5qE,KAAK6qE,oBACL7qE,KAAKmoE,iBACLnoE,KAAK60D,mBACL70D,KAAK80D,kBACL90D,KAAKkoE,mBACLloE,KAAK+0D,YAEb,GAAC,CAAA/2D,IAAA,mBAAAiE,IAED,WACI,IAAM6oE,EAAY9qE,KAAK4yC,WAAW,UAC5Bm4B,EAAc/qE,KAAK4yC,WAAW,YACpC,OAAOk4B,EAAY,EAAIC,GAAe,EAAI,CAC9C,GAAC,CAAA/sE,IAAA,iBAAAiE,IAED,WAEI,OLnBD,SAA0BswC,GAC7B,IAAIqB,EAAQf,GAAgBN,EAAQgB,MAAM/M,IAAK+L,EAAQriC,OAAOs2B,IAAKxlC,IAMnE,OALA4yC,EAQG,SAAoCA,EAAeG,EAAiBmC,GACvE,MAAkB,QAAXnC,GAAgC,eAAZmC,EAAmC,GAARtC,EAAaA,CACvE,CAVYo3B,CAA2Bp3B,EAAOrB,EAAQwB,OAAQxB,EAAQ2D,SAClEtC,EAWG,SAAkCA,EAAgBxE,GACrD,OAAOA,GACH,IAAK,eACD,OAAe,IAARwE,EACX,IAAK,YACL,IAAK,cACL,IAAK,eACL,IAAK,aACL,IAAK,aACL,IAAK,eACL,IAAK,aACL,IAAK,eACD,MAAe,GAARA,EACX,IAAK,eACL,IAAK,eACD,OAAO,EAEX,QACI,OAAOA,EAEnB,CA/BYq3B,CAAyBr3B,EAAOrB,EAAQnD,MAChDwE,EAgCG,SAAqCA,EAAesC,EAAuBpC,EAAqBC,GACnG,OAAOmC,GACH,IAAK,WACD,OAAOpC,EAAoB,EAARF,EAAYA,EACnC,IAAK,aACD,OAAOE,EAAoB,GAARF,EAAaA,EACpC,IAAK,aACD,OAAOG,EAAiB,IAARH,EAAcA,EAClC,QACI,OAAOA,EAEnB,CA3CYs3B,CAA4Bt3B,EAAOrB,EAAQ2D,QAAS3D,EAAQuB,UAAWvB,EAAQwB,QAEvFH,EA+CG,SAAmCA,EAAezI,EAAc+K,GAenE,OAbK/K,EAAMiB,cACS,gBAAZ8J,GAA+C,QAAlB/K,EAAME,SACvB,cAAZ6K,GAA6C,SAAlB/K,EAAME,SACrB,eAAZ6K,GAA8C,SAAlB/K,EAAME,SACtB,eAAZ6K,GAA8C,SAAlB/K,EAAME,SACtB,iBAAZ6K,GAAgD,aAAlB/K,EAAMI,WAGxCqI,GAAS,GAETzI,EAAMmB,aAAayB,aACnB6F,GAAS,GAENA,CACX,CA/DYu3B,CADRv3B,EA4CG,SAAgCA,EAAezI,EAAc+K,EAAuB9G,EAAiBg8B,GACxG,MAAyB,QAAlBA,EAAkC,IAARx3B,EAAcA,CACnD,CA9CYy3B,CAAuBz3B,EAAOrB,EAAQpH,MAAOoH,EAAQ2D,QAAS3D,EAAQnD,KAAMmD,EAAQwE,aACnDxE,EAAQpH,MAAOoH,EAAQ2D,SACzDtC,CACX,CKWe03B,CAAiBtrE,KAC5B,GAAC,CAAAhC,IAAA,cAAAmD,MAED,SAAmBq3C,EAAgB+yB,EAAkCC,GAKjE,GAJAxrE,KAAKmoD,cAAgBtX,KAAKkC,IAAI/yC,KAAKm5C,QAAStI,KAAKmC,IAAI,EAAGhzC,KAAKmoD,cAAgB3P,IACzEx4C,KAAKy/D,UAAmC,IAAvBz/D,KAAKmoD,gBACtBnoD,KAAKmoD,cAAgB,IAEpBqjB,EAAgB,CACjB,IAAMC,EAAkBF,GAAe,IAAI1d,IACd,IAAzB4d,EAAgBvd,MAAyB,IAAX1V,GAC9BizB,EAAgBtd,IAAI3V,EAAQ,GAEhCx4C,KAAK0rE,cAAcD,EACvB,CACA,OAAOzrE,KAAKmoD,aAChB,GAAC,CAAAnqD,IAAA,kBAAAmD,MAED,SAAuB+O,GAA0E,IL/LvE/O,EK+L0B+5D,EAAsBv7D,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAChEgsE,EAAmB,CAACjyD,GAAI,EAAGjI,IAAK,EAAGC,IAAK,EAAGvB,IAAK,EAAGo2B,IAAK,EAAGC,IAAK,EAAGimB,IAAK,EAAGE,IAAK,GACtF,IAAK,IAAIlc,KAAQvgC,EAAQ,CACrB,IAAM6tD,EAASttB,EACTm7B,EAAe5rE,KAAKkQ,OAAO6tD,IAAW,EAC5C/9D,KAAKkQ,OAAO6tD,ILpMM58D,EKoMkByqE,GAAgB17D,EAAO6tD,IAAW,IAAM7C,EAAgB,EAAIl7D,KAAKogE,kBLnMtGvvB,KAAKmC,KAAK,EAAGnC,KAAKkC,IAAI,EAAG5xC,KKoMxBwqE,EAAK5N,IAAW/9D,KAAKkQ,OAAO6tD,IAAW,GAAK6N,CAChD,CACA,OAAOD,CACX,GAAC,CAAA3tE,IAAA,WAAAmD,MAED,WAEQnB,KAAK4yC,WAAW,kBAA6B/yC,IAAdG,KAAKovC,OACpCpvC,KAAK8zC,WAAY,GAEjB9zC,KAAKwyC,QAAQ,cAAe,eAAgB,kBAC5CxyC,KAAKihE,gBAAiB,GAE1BjhE,KAAKovC,UAAOvvC,CAChB,GAAC,CAAA7B,IAAA,eAAAmD,MAED,WACI,OAAKnB,KAAK8jD,QAAU9jD,KAAK65D,YAAc,IACnC75D,KAAK8jD,QAAS,EACV9jD,KAAKqoD,cAAgBroD,KAAKwZ,MAAM5Z,OAAS,IACzCI,KAAKwZ,MAAQxZ,KAAKwZ,MAAM6jC,MAAM,EAAGr9C,KAAKwZ,MAAM5Z,OAAO,GACnDI,KAAKqoD,cAAe,GAEpBroD,KAAKX,KAAKonC,SAAS,YACD,YAAdzmC,KAAKX,MACLW,KAAKm/C,SAAW,QAChBn/C,KAAKk2C,QAAU,wBACM,wBAAdl2C,KAAKX,MACZW,KAAKm/C,SAAW,OAChBn/C,KAAKk2C,QAAU,+BACM,uBAAdl2C,KAAKX,MACZW,KAAKm/C,SAAW,QAChBn/C,KAAKk2C,QAAU,+BAEfl2C,KAAKm/C,SAAW,OAChBn/C,KAAKk2C,QAAU,+BAEnBl2C,KAAK8zC,WAAY,GACV9zC,KAAKX,KAAKonC,SAAS,eAC1BzmC,KAAK6gE,WAAW,qBAEhB7gE,KAAKm/C,SAAW,YAEb,EAGf,GAAC,CAAAnhD,IAAA,cAAAmD,MAED,WACI,GAAgB,IAAZnB,KAAKoB,IACJpB,KAAK0mD,aACN1mD,KAAKs+D,cACkB,IAAvBt+D,KAAKmoD,cACT,QAA8BtoD,IAA1BG,KAAKw+D,iBAAgC,CACrC,IAAMqN,EAAe7rE,KAAK0mD,WAAWolB,UAAY,IAAM9rE,KAAKm5C,QACxDn5C,KAAKmoD,eAAiB0jB,IACtB7rE,KAAKm7C,cAAe,EACpBn7C,KAAKw+D,iBAAmBx+D,KAAKmoD,cAErC,KAAO,CACH,IAAM4jB,EAAU/rE,KAAKw+D,iBAAoBx+D,KAAK0mD,WAAW6X,mBAAqB,IAAMv+D,KAAKm5C,QACrFn5C,KAAKmoD,cAAgB4jB,IACrB/rE,KAAKm7C,cAAe,EACpBn7C,KAAKs+D,cAAe,EACpBt+D,KAAKuzD,gBAAkB,EAAC,GAAM,GAAM,GAAM,GAElD,CACJ,GAAC,CAAAv1D,IAAA,gBAAAmD,MAED,SAAqBoxC,GAEjBvyC,KAAKyqE,eAAgB,EACrBzqE,KAAK2qE,gBAAkB3qE,KAAKX,KAC5BW,KAAK4qE,cAAgB5qE,KAAK+wD,SAAS1T,QAEnCr9C,KAAKX,KAAOkzC,EAAQlzC,KACpBW,KAAK8mC,QAAUyL,EAAQzL,QACvB9mC,KAAK+Z,SAAWw4B,EAAQx4B,SACxB/Z,KAAK2zC,UAAQlL,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAA,GAAO8J,EAAQoB,UAAQ,IAAEj6B,GAAI1Z,KAAK2zC,SAASj6B,KACxD1Z,KAAKwZ,MAAQ+4B,EAAQ/4B,MAAM6jC,QAC3Br9C,KAAKqoD,aAAe9V,EAAQ8V,aAE5BroD,KAAKkQ,QAAMu4B,EAAAA,GAAAA,GAAA,GAAO8J,EAAQriC,QAC1BlQ,KAAKoZ,MAAQm5B,EAAQn5B,MAAMikC,QAC3Br9C,KAAK+wD,SAAWxe,EAAQwe,SAAS1T,QACjCr9C,KAAKuzC,OAAK9K,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAA,GAAO8J,EAAQgB,OAAK,IAAE75B,GAAI1Z,KAAKuzC,MAAM75B,KAC/C1Z,KAAKwqE,gBAAkBj4B,EAAQ2D,OAEnC,GAAC,CAAAl4C,IAAA,aAAAmD,MAED,SAAkB6qE,GACd,IAAMC,EAAU,IAAItkB,GAAQ3mD,GAAKgrE,EAAU,CAAC76B,MAAOnxC,KAAKmxC,MAAOb,IAAKtwC,KAAKswC,IAAK6H,IAAKn4C,KAAKm4C,IAAKvN,OAAQ5qC,KAAK4qC,OAAQ0Q,eAAgBt7C,KAAKs7C,iBAEvIt7C,KAAK0qE,eAAgB,EACrB1qE,KAAK2qE,gBAAkB3qE,KAAKX,KAC5BW,KAAK4qE,cAAgB5qE,KAAK+wD,SAAS1T,QAEnCr9C,KAAKX,KAAO2sE,EACZhsE,KAAK8mC,QAAUmlC,EAAQnlC,QACvB9mC,KAAK+Z,SAAWkyD,EAAQlyD,SACxB/Z,KAAK2zC,UAAQlL,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAA,GAAOwjC,EAAQt4B,UAAQ,IAAEj6B,GAAI1Z,KAAK2zC,SAASj6B,KACxD1Z,KAAKwZ,MAAQyyD,EAAQzyD,MAAM6jC,QAC3Br9C,KAAKqoD,cAAe,EAEpBroD,KAAKuzC,OAAK9K,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAA,GAAOwjC,EAAQ14B,OAAK,IAAE75B,GAAI1Z,KAAKuzC,MAAM75B,IACnD,GAAC,CAAA1b,IAAA,YAAAmD,MAED,SAAiBkY,EAAsB63C,GAE9BlxD,KAAK4qE,gBACN5qE,KAAK4qE,cAAgB5qE,KAAK+wD,SAAS1T,SAEvC,IAAM6uB,EAAalsE,KAAKoZ,MAAM02C,WAAU,SAAAx2C,GAAC,MAAU,UAANA,CAAa,KACtC,IAAhB4yD,IACJlsE,KAAKoZ,MAAM8yD,GAAc7yD,EAAKha,KAC9BW,KAAK+wD,SAASmb,IAAWzjC,EAAAA,GAAAA,GAAA,GAAOpvB,GAChCrZ,KAAK8rD,SAAWzyC,EAChBrZ,KAAKk1D,WAAahE,EAClBlxD,KAAKu4D,aAAe,EACxB,GAAC,CAAAv6D,IAAA,aAAAmD,MAED,SAAkBkY,EAAsB63C,GAEpC,IAAMib,EAAcnsE,KAAKoZ,MAAM02C,WAAU,SAAAx2C,GAAC,MAAU,WAANA,CAAc,KACvC,IAAjB6yD,IACJnsE,KAAKoZ,MAAM+yD,GAAe9yD,EAAKha,KAC/BW,KAAK+wD,SAASob,IAAY1jC,EAAAA,GAAAA,GAAA,GAAOpvB,GACjCrZ,KAAK8rD,SAAWzyC,EAChBrZ,KAAKk1D,WAAahE,EAClBlxD,KAAKu4D,aAAe,EACxB,GAAC,CAAAv6D,IAAA,gBAAAmD,MAED,SAAqBoqE,GACjBvrE,KAAK0/D,eAAe0M,SAASb,EAAavrE,MAC1CA,KAAK8iE,SAAW9iE,KAAK0/D,eAAe9jB,YAAY57C,KAAKm5C,QACzD,KAAC8wB,CAAA,CA1ac,CAAStiB,ICAtB3mD,GAAM6pC,GAAY5oC,IAAI,GAEfoqE,GAAS,WAIlB,SAAAA,EAAYpZ,EAAmBkC,IAAsBl0D,EAAAA,EAAAA,GAAA,KAAAorE,GAAA,KAHrDpZ,aAAO,EAAiB,KACxBkC,iBAAW,EAGPn1D,KAAKizD,QAAUA,EACfjzD,KAAKm1D,YAAcA,CACvB,CA+/CC,OA//CAj0D,EAAAA,EAAAA,GAAAmrE,EAAA,EAAAruE,IAAA,QAAAmD,MAED,WACI,OAAO,IAAIkrE,EACPrsE,KAAKizD,QAAQxwD,KAAI,SAAAklE,GAAM,OAAIA,EAAOloE,OAAO,IACzCO,KAAKm1D,YAEb,GAAC,CAAAn3D,IAAA,SAAAiE,IAED,WACI,OAAOjC,KAAKizD,QAAQxwD,KAAI,SAAAklE,GAAM,OAAIA,EAAOx8B,KAAK,GAClD,GAAC,CAAAntC,IAAA,aAAAmD,MAED,SAAkBC,GACd,OAAOpB,KAAKizD,QAAQ7xD,EACxB,GAAC,CAAApD,IAAA,cAAAmD,MAED,SAAmBC,EAAYo3C,GAAsW,IAAD8zB,EAArVf,EAA2C5rE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,QAAGE,EAAW0sE,EAAa5sE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAG+gD,EAAe/gD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAU+rD,EAAyB/rD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAU66C,EAAmB76C,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAE8mE,EAA4DhnE,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAE2sE,EAAuB7sE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAU0X,EAAe1X,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAUm5D,EAAyBn5D,UAAAC,OAAA,SAAAC,IAAAF,UAAA,KAAAA,UAAA,IAAU8sE,EAAmB9sE,UAAAC,OAAA,SAAAC,IAAAF,UAAA,KAAAA,UAAA,IAChX4yC,EAAUvyC,KAAK40D,WAAWxzD,GAC1BsrE,EAAan6B,EAAQ4V,cACrBwkB,EAAsBp6B,EAAQmtB,eAAejgE,QACnD,GAA8B,IAA1B8yC,EAAQ4V,cAAZ,CAOI5V,EAAQukB,aAAegC,EACvBvmB,EAAQukB,WAAavkB,EAAQukB,YAAc,OAAIj3D,EAAY0yC,EAAQukB,WAAate,EAEhFjG,EAAQwhB,YAAYvb,EAAQ+yB,GAOhC,IAJA,IAAMpyB,EAAQ5G,EAAQ4G,QAChByzB,EAAmB,IAAPxrE,EAAW,CAAC,EAAE,EAAE,EAAE,GAAK,CAAC,GACtCyrE,GAAU,EACV3L,EAAU3uB,EAAQ4V,eAAiB,EACvC9lD,EAAA,EAAAyqE,EAAcF,EAASvqE,EAAAyqE,EAAAltE,OAAAyC,IAAE,CAApB,IAAIvC,EAACgtE,EAAAzqE,GACN,GAAIrC,KAAK40D,WAAW90D,GAAG8yC,WAAW,WAAY,CAAEi6B,GAAU,EAAM,KAAO,CAC3E,CACA,GAAIN,EAAQ,GAAK/zB,EAAS,EAAG,CAKzB,GAJIA,EAAS,IACTjG,EAAQyS,UAAYzS,EAAQyS,UAAY,GAGxCzS,EAAQK,WAAW,cAAgBL,EAAQuB,WAAavB,EAAQlzC,KAAKonC,SAAS,WAA8B,aAAjBkgC,EAM3F,OALAp0B,EAAQsuB,WAAW,gBACnBtuB,EAAQuB,WAAY,EACpBvB,EAAQ4V,cAAgBukB,EACxBn6B,EAAQmtB,eAAiBiN,OACzBzL,GAAU,GAGd,GAAI3uB,EAAQK,WAAW,cAAgBL,EAAQuB,WAAavB,EAAQlzC,KAAKonC,SAAS,WAQ9E,OAPA8L,EAAQuB,WAAY,EACpBvB,EAAQ4V,cAAgBukB,EACxBn6B,EAAQmtB,eAAiBiN,EACzBp6B,EAAQwhB,YAAYljB,KAAKC,MAAMyB,EAAQ4G,QAAQ,SACjB,IAA1B5G,EAAQ4V,eACRnoD,KAAK+sE,MAAM3rE,IAgBnB,IAZqB,eAAjBmxC,EAAQnD,MAAyBmD,EAAQK,WAAW,YAChDL,EAAQ4V,eAAiB,GAAKukB,IAAevzB,IAC7C5G,EAAQ4V,cAAgB,EACA,WAApB5V,EAAQ2D,SAAwBl2C,KAAK00D,YAAYtzD,EAAImxC,EAAQnD,MAAO,EAAMo9B,GAC9EtL,GAAU,GAGG,gBAAjB3uB,EAAQnD,MACRpvC,KAAKg/C,SAAS59C,GAAI,EAAMorE,GAIxB9gB,EACA,GAAKwV,GAA4B,oBAAjB3uB,EAAQnD,MAEjB,IAAKy9B,EACR,OAAQt6B,EAAQnD,MACZ,IAAK,eACDpvC,KAAK00D,YAAYtzD,EAAImxC,EAAQnD,MAAM,EAAMo9B,GACzC,MACJ,IAAK,aACgB,SAAbhyB,GAAuBx6C,KAAK00D,YAAYtzD,EAAImxC,EAAQnD,MAAM,EAAMo9B,GACpE,MACJ,IAAK,eACgB,UAAbhyB,GAAwBx6C,KAAK00D,YAAYtzD,EAAImxC,EAAQnD,MAAM,EAAMo9B,GACrE,MACJ,IAAK,cACgB,aAAbhyB,GAA2Bx6C,KAAK00D,YAAYtzD,EAAImxC,EAAQnD,MAAM,EAAMo9B,GACxE,MACJ,IAAK,cACgB,UAAbhyB,GAAwBx6C,KAAK00D,YAAYtzD,EAAImxC,EAAQnD,MAAM,EAAMo9B,GACrE,MACJ,IAAK,cACgB,QAAbhyB,GAAsBx6C,KAAK00D,YAAYtzD,EAAImxC,EAAQnD,MAAM,EAAMo9B,GACnE,MACJ,IAAK,eACgB,aAAbhyB,GAA2Bx6C,KAAK00D,YAAYtzD,EAAImxC,EAAQnD,MAAM,EAAMo9B,GACxE,MACJ,IAAK,cACgB,WAAbhyB,GAAyBx6C,KAAK00D,YAAYtzD,EAAImxC,EAAQnD,MAAM,EAAMo9B,GACtE,MACJ,IAAK,cACgB,WAAbhyB,GAAyBx6C,KAAK00D,YAAYtzD,EAAImxC,EAAQnD,MAAM,EAAMo9B,GACtE,MACJ,IAAK,aACgB,WAAbhyB,GAAyBx6C,KAAK00D,YAAYtzD,EAAImxC,EAAQnD,MAAM,EAAMo9B,GACtE,MACJ,IAAK,eACgB,YAAbhyB,GAA0Bx6C,KAAK00D,YAAYtzD,EAAImxC,EAAQnD,MAAM,EAAMo9B,GACvE,MACJ,IAAK,cACgB,QAAbhyB,GAAsBx6C,KAAK00D,YAAYtzD,EAAImxC,EAAQnD,MAAM,EAAMo9B,GACnE,MACJ,IAAK,eACgB,SAAbhyB,GAAuBx6C,KAAK00D,YAAYtzD,EAAImxC,EAAQnD,MAAM,EAAMo9B,GACpE,MACJ,IAAK,cACgB,UAAbhyB,GAAwBx6C,KAAK00D,YAAYtzD,EAAImxC,EAAQnD,MAAM,EAAMo9B,GACrE,MACJ,IAAK,cACgB,WAAbhyB,GAAyBx6C,KAAK00D,YAAYtzD,EAAImxC,EAAQnD,MAAM,EAAMo9B,GACtE,MACJ,IAAK,eACgB,SAAbhyB,GAAuBx6C,KAAK00D,YAAYtzD,EAAImxC,EAAQnD,MAAM,EAAMo9B,GACpE,MACJ,IAAK,eACgB,UAAbhyB,GAAwBx6C,KAAK00D,YAAYtzD,EAAImxC,EAAQnD,MAAM,EAAMo9B,GACrE,MACJ,IAAK,eACgB,UAAbhyB,GAAwBx6C,KAAK00D,YAAYtzD,EAAImxC,EAAQnD,MAAM,EAAMo9B,SAvD7ExsE,KAAK00D,YAAYtzD,EAAImxC,EAAQnD,MAAM,EAAMo9B,GAiFjD,KAnBOK,GAA4B,iBAAjBt6B,EAAQnD,MAAwC,WAAboL,GAC9B,gBAAjBjI,EAAQnD,MAAuC,UAAboL,GACjB,iBAAjBjI,EAAQnD,MAAwC,aAAboL,GAClB,kBAAjBjI,EAAQnD,MAAyC,UAAboL,GACnB,aAAjBjI,EAAQnD,MAAoC,QAAboL,GACd,cAAjBjI,EAAQnD,MAAyC,aAAjBu3B,IAAgC8F,GAC/C,kBAAjBl6B,EAAQnD,MAA6C,YAAjBu3B,IAA+B8F,IAErEzsE,KAAK00D,YAAYtzD,EAAImxC,EAAQnD,MAAM,EAAMo9B,GAIzCj6B,EAAQK,WAAW,cACnB5yC,KAAK28D,aAAa,SAAUpqB,EAAQC,QAAQ,oBAAsB,EAAI,GAC/DD,EAAQK,WAAW,cAC1B5yC,KAAK08D,aAAa,OAAQnqB,EAAQC,QAAQ,eAAiB,EAAI,GAI/D0uB,EAA2B,YAAhBlhE,KAAK+sE,MAAM3rE,GAE1B,GAAIs/C,GAAUnO,EAAQK,WAAW,eAAgB,CAE7C5yC,KAAKg1D,gBAAgB5zD,EADP,CAACqQ,IAAK,KACY,EAAMrQ,EAC1C,MAAO,GAAkB,SAAbo5C,GAAoC,UAAbA,IAA0BjI,EAAQK,WAAW,gBAGzE,GAAiB,UAAb4H,GAAwBjI,EAAQK,WAAW,oBAAqB,CAEvE5yC,KAAKg1D,gBAAgB5zD,EADP,CAACsQ,IAAK,IACY,EAAMtQ,EAC1C,MAAO,GAAiB,SAAbo5C,GAAuBjI,EAAQK,WAAW,aAAc,CAE/D5yC,KAAKg1D,gBAAgB5zD,EADP,CAACqQ,IAAK,IACY,EAAMrQ,EAC1C,MAAO,GAAiB,SAAbo5C,GAAuBjI,EAAQK,WAAW,oBAAqB,CAEtE5yC,KAAKg1D,gBAAgB5zD,EADP,CAACqQ,IAAK,IACY,EAAMrQ,EAC1C,MAAQ,GAAqB,aAAjBulE,GAA+Bp0B,EAAQK,WAAW,cAAe,CAEzE5yC,KAAKg1D,gBAAgB5zD,EADP,CAACsQ,KAAM,EAAG80B,IAAK,IACG,EAAMplC,EAC1C,MAAO,GAAImxC,EAAQK,WAAW,WAAY,CAEtC5yC,KAAKg1D,gBAAgB5zD,EADP,CAACsQ,IAAK,IACY,EAAMtQ,EAC1C,MAAO,GAAImxC,EAAQK,WAAW,iBAAmB65B,GAAuBC,EAAavzB,EAAM,GAAK5G,EAAQ4V,eAAiBhP,EAAM,EAAG,CAE9Hn5C,KAAKg1D,gBAAgB5zD,EADP,CAACqQ,IAAK,EAAGtB,IAAK,EAAGq2B,IAAK,IACJ,EAAMplC,EAC1C,MAAO,GAAImxC,EAAQK,WAAW,aAAe65B,GAAuBC,EAAavzB,EAAM,GAAK5G,EAAQ4V,eAAiBhP,EAAM,EAAG,CAE1Hn5C,KAAKg1D,gBAAgB5zD,EADP,CAAC+O,IAAK,IACY,EAAM/O,EAC1C,MAAO,GAAImxC,EAAQK,WAAY,oBAC3BL,EAAQpH,MAAMmB,aAAauC,WAAY,OACpC,GAAI0D,EAAQK,WAAW,YAAc,CAAC,OAAQ,QAAS,OAAOnM,SAAS+T,GAAY,IAAK,CAE3Fx6C,KAAKg1D,gBAAgB5zD,EADP,CAAColC,IAAK,IACY,EAAMplC,EAC1C,MAAWmxC,EAAQK,WAAW,eAAiBv7B,IAC3Ck7B,EAAQpH,MAAMmB,aAAauC,WAAY,OA9BsD,CAE7F7uC,KAAKg1D,gBAAgB5zD,EADP,CAAColC,IAAK,IACY,EAAMplC,EAC1C,CA6BJ,CAWA,GARImxC,EAAQK,WAAW,iBAAmBL,EAAQlzC,KAAKonC,SAAS,YACxD8L,EAAQ4V,cAAgBhP,EAAM,GAA8B,kBAAzB5G,EAAQzL,QAAQznC,KACnDkzC,EAAQsuB,WAAW,UACZtuB,EAAQ4V,eAAiBhP,EAAM,GAA8B,WAAzB5G,EAAQzL,QAAQznC,MAC3DkzC,EAAQsuB,WAAW,mBAItBgM,GAAWt6B,EAAQnD,MAAoB,QAAhBk9B,EAAI/5B,EAAQnD,YAAI,IAAAk9B,GAAZA,EAAc7lC,SAAS,WAE/C8L,EAAQ4V,eAAiBhP,EAAQ,IACZ,iBAAjB5G,EAAQnD,MAA4C,eAAjBmD,EAAQnD,MAC3CpvC,KAAK00D,YAAYtzD,EAAImxC,EAAQnD,MAAkB,EAAMo9B,IAIxDj6B,EAAQ4V,eAAiBhP,EAAQ,GAAO5G,EAAQK,WAAW,aAAgBL,EAAQ4V,eAAiBhP,EAAQ,GAC7G,OAAQ5G,EAAQnD,MACZ,IAAK,eACL,IAAK,eACL,IAAK,eACL,IAAK,eACL,IAAK,cACL,IAAK,eACL,IAAK,cACL,IAAK,cACL,IAAK,aACL,IAAK,eACL,IAAK,aACL,IAAK,aACDpvC,KAAK00D,YAAYtzD,EAAImxC,EAAQnD,MAAkB,EAAMo9B,GAMjEtL,GAAWlhE,KAAK+sE,MAAM3rE,EAjN1B,MAJmB,IAAXo3C,GAAgB+yB,GAChBh5B,EAAQm5B,cAAcH,EAqNlC,GAAC,CAAAvtE,IAAA,cAAAmD,MAED,SAAmBC,EAAYguC,GAA+D,IAA/C49B,IAAartE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAAS6sE,EAAc7sE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACzE4yC,EAAUvyC,KAAK40D,WAAWxzD,GAChC,OAAQguC,GACJ,IAAK,aACD,IAAK,IAAIqB,KAAQ8B,EAAQriC,OAAQ,CAC7B,IAAM6tD,EAASttB,GACV8B,EAAQriC,OAAO6tD,IAAW,GAAK,IAChCxrB,EAAQriC,OAAO6tD,GAAU,EACzBxrB,EAAQ4mB,iBAAmB/pB,EAEnC,CACA,MAEJ,IAAK,cACsB,QAAnBmD,EAAQwB,SACRxB,EAAQwB,OAAS,GACjBxB,EAAQ4mB,iBAAmB/pB,EACvBmD,EAAQK,WAAW,cAAeL,EAAQ6mB,UAAY,IAE9D,MACJ,IAAK,eACsB,QAAnB7mB,EAAQwB,SACRxB,EAAQwB,OAAS,GACjBxB,EAAQ4mB,iBAAmB/pB,EACvBmD,EAAQK,WAAW,cAAeL,EAAQ6mB,UAAY,IAE9D,MACJ,IAAK,cACsB,QAAnB7mB,EAAQwB,SACRxB,EAAQwB,OAAS,GACjBxB,EAAQ4mB,iBAAmB/pB,EACvBmD,EAAQK,WAAW,cAAeL,EAAQ6mB,UAAY,IAE9D,MACJ,IAAK,cACsB,QAAnB7mB,EAAQwB,SACRxB,EAAQwB,OAAS,GACjBxB,EAAQ4mB,iBAAmB/pB,EACvBmD,EAAQK,WAAW,cAAeL,EAAQ6mB,UAAY,IAE9D,MACJ,IAAK,eACsB,QAAnB7mB,EAAQwB,SACRxB,EAAQwB,OAAS,GACjBxB,EAAQ4mB,iBAAmB/pB,EACvBmD,EAAQK,WAAW,cAAeL,EAAQ6mB,UAAY,IAE9D,MACJ,IAAK,YACsB,KAAnB7mB,EAAQwB,SACRxB,EAAQwB,OAAS,GACjBxB,EAAQ4mB,iBAAmB/pB,EACvBmD,EAAQK,WAAW,cAAeL,EAAQ6mB,UAAY,IAE1D7mB,EAAQ6V,eAAe3hB,SAAS,eAChC8L,EAAQ6V,eAAiB7V,EAAQ6V,eAAeriD,QAAO,SAAAguC,GAAM,MAAe,cAAXA,CAAsB,IACvFxB,EAAQ4mB,iBAAmB/pB,EACvBmD,EAAQK,WAAW,cAAeL,EAAQ6mB,UAAY,IAE9D,MACJ,IAAK,eACG7mB,EAAQ6V,eAAe3hB,SAAS,eAChC8L,EAAQ6V,eAAiB7V,EAAQ6V,eAAeriD,QAAO,SAAAguC,GAAM,MAAe,cAAXA,CAAsB,IACvFxB,EAAQ4mB,iBAAmB/pB,EACvBmD,EAAQK,WAAW,cAAeL,EAAQ6mB,UAAY,IAE9D,MAEJ,IAAK,eACep5D,KAAKg1D,gBAAgB5zD,EAAI,CAACqQ,IAAM8gC,EAAQK,WAAW,SAAW,EAAI,IACtEnhC,MACR8gC,EAAQ4mB,iBAAmB/pB,EACvBmD,EAAQK,WAAW,cAAeL,EAAQ6mB,UAAY,IAE9D,MACJ,IAAK,YACL,IAAK,eACep5D,KAAKg1D,gBAAgB5zD,EAAI,CAACsQ,IAAM6gC,EAAQK,WAAW,SAAW,EAAI,IACtElhC,MACR6gC,EAAQ4mB,iBAAmB/pB,EACvBmD,EAAQK,WAAW,cAAeL,EAAQ6mB,UAAY,IAE9D,MACJ,IAAK,eACep5D,KAAKg1D,gBAAgB5zD,EAAI,CAAC+O,IAAMoiC,EAAQK,WAAW,SAAW,EAAI,IACtEziC,MACRoiC,EAAQ4mB,iBAAmB/pB,EACvBmD,EAAQK,WAAW,cAAeL,EAAQ6mB,UAAY,IAE9D,MACJ,IAAK,gBACL,IAAK,eACep5D,KAAKg1D,gBAAgB5zD,EAAI,CAACmlC,IAAMgM,EAAQK,WAAW,SAAW,EAAI,IACtErM,MACRgM,EAAQ4mB,iBAAmB/pB,EACvBmD,EAAQK,WAAW,cAAeL,EAAQ6mB,UAAY,IAE9D,MACJ,IAAK,cACep5D,KAAKg1D,gBAAgB5zD,EAAI,CAAColC,IAAM+L,EAAQK,WAAW,SAAW,EAAI,IACtEpM,MACR+L,EAAQ4mB,iBAAmB/pB,EACvBmD,EAAQK,WAAW,cAAeL,EAAQ6mB,UAAY,IAE9D,MACJ,IAAK,cACD7mB,EAAQqF,cAAgBrF,EAAQ6tB,kBAAoB7tB,EAAQK,WAAW,SAAW,EAAI,GACtFL,EAAQ4mB,iBAAmB/pB,EACvBmD,EAAQK,WAAW,cAAeL,EAAQ6mB,UAAY,GAC1D,MACJ,IAAK,eACI7mB,EAAQ8R,WACT9R,EAAQ4mB,iBAAmB/pB,EACvBmD,EAAQK,WAAW,cAAeL,EAAQ6mB,UAAY,IAE9D7mB,EAAQ8R,SAAW,EACnB,MACJ,IAAK,cACI9R,EAAQ2V,UACT3V,EAAQ4mB,iBAAmB/pB,EACvBmD,EAAQK,WAAW,cAAeL,EAAQ6mB,UAAY,IAE9D7mB,EAAQ2V,SAAU,EAClB,MAEJ,IAAK,eACL,IAAK,eACD,IAAI+kB,EAAQ16B,EAAQ4G,QAChB5G,EAAQ4V,cAAgB8kB,IACxB16B,EAAQwhB,aAAaljB,KAAKC,MAAMm8B,GAAS16B,EAAQK,WAAW,SAAW,EAAI,SAAK/yC,GAAW,GAC3F0yC,EAAQ4mB,iBAAmB/pB,EACvBmD,EAAQK,WAAW,cAAeL,EAAQ6mB,UAAY,IAE9D,MACJ,IAAK,aACG7mB,EAAQ4V,cAAgB5V,EAAQ4G,UAChC5G,EAAQwhB,aAAaljB,KAAKkC,IAAIR,EAAQ4G,QAAS5G,EAAQ4V,eAAiB5V,EAAQK,WAAW,SAAW,GAAK,UAAM/yC,GAAW,GAC5H0yC,EAAQ4mB,iBAAmB/pB,EACvBmD,EAAQK,WAAW,cAAeL,EAAQ6mB,UAAY,IAE9D,MACJ,IAAK,cACL,IAAK,aACL,IAAK,eACL,IAAK,aACL,IAAK,aAED,GADA6T,EAAQ16B,EAAQ4G,QACZ5G,EAAQ4V,cAAgB8kB,EAAO,CAC/B16B,EAAQwhB,aAAaljB,KAAKC,MAAMyB,EAAQ4G,SAAW5G,EAAQK,WAAW,SAAW,EAAI,GAAK,QAAI/yC,GAAW,GACzG0yC,EAAQ4mB,iBAAmB/pB,EACvBmD,EAAQK,WAAW,cAAeL,EAAQ6mB,UAAY,GAC1D,IAAMxuB,EAAS5pC,GAAIiqC,QAAQhpC,IAAI/E,EAAKq1C,EAAQ3H,UAC9B,gBAATwE,GAA6C,QAAjBxE,EAAQF,MAAoC,QAAlBE,EAAQD,OACrD,eAATyE,GAA6C,QAAjBxE,EAAQF,MAAoC,QAAlBE,EAAQD,OACrD,iBAATyE,GAA6C,QAAjBxE,EAAQF,MAAoC,QAAlBE,EAAQD,OACrD,eAATyE,GAA6C,QAAjBxE,EAAQF,MAAoC,QAAlBE,EAAQD,OACrD,eAATyE,GAA6C,QAAjBxE,EAAQF,MAAoC,QAAlBE,EAAQD,QAE/D3qC,KAAKs8D,oBAAoBl7D,EAAI,aAAa,EAAOA,EAEzD,CACA,MAEJ,IAAK,gBACL,IAAK,cACcpB,KAAKg1D,gBAAgB5zD,EAAI,CAACsQ,IAAK,IAAI,EAAMtQ,GAC7CsQ,MACP6gC,EAAQ4mB,iBAAmB/pB,GAE/B,MACJ,IAAK,eACL,IAAK,aACcpvC,KAAKg1D,gBAAgB5zD,EAAI,CAACmlC,IAAK,IAAI,EAAMnlC,GAC7CmlC,MACPgM,EAAQ4mB,iBAAmB/pB,GAE/B,MAEJ,IAAK,kBACD,IAAM89B,EAASltE,KAAKg1D,gBAAgB5zD,EAAI,CAACqQ,IAAK,EAAGtB,IAAK,IAAI,EAAM/O,IAC5D8rE,EAAOz7D,KAAOy7D,EAAO/8D,OACrBoiC,EAAQ4mB,iBAAmB/pB,GAE/B,MACJ,IAAK,cACL,IAAK,eACcpvC,KAAKg1D,gBAAgB5zD,EAAI,CAAC+O,IAAK,IAAI,EAAM/O,GAC7C+O,MACPoiC,EAAQ4mB,iBAAmB/pB,GAE/B,MACJ,IAAK,gBACcpvC,KAAKg1D,gBAAgB5zD,EAAI,CAACmlC,IAAK,IAAI,EAAMnlC,GAC7CmlC,MACPgM,EAAQ4mB,iBAAmB/pB,GAE/B,MACJ,IAAK,eACL,IAAK,WACcpvC,KAAKg1D,gBAAgB5zD,EAAI,CAACqQ,IAAK,IAAI,EAAMrQ,GAC7CqQ,MACP8gC,EAAQ4mB,iBAAmB/pB,GAE/B,MAEJ,IAAK,cACD,IAAM+9B,EAAQ56B,EAAQ6V,eAAexoD,OACrC2yC,EAAQ6V,gBAAiBzhB,EAAAA,GAAAA,GAAI4L,EAAQ6V,gBAAgBriD,QAAO,SAAAguC,GAAM,OAAK,CAAC,cAAe,QAAS,SAAU,UAAW,UAAW,cAActN,SAASsN,EAAO,IAC1JxB,EAAQ6V,eAAexoD,OAASutE,IAChC56B,EAAQ4mB,iBAAmB/pB,GAE/B,MACJ,QACImD,EAAQ4mB,iBAAmB/pB,EAG/B49B,GAAQhtE,KAAKg/C,SAAS59C,GAAI,EAAMorE,EACxC,GAAC,CAAAxuE,IAAA,kBAAAmD,MAED,SAAuBC,EAAY8O,GAAoJ,IAAvHk9D,IAAiBztE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAAS0tE,EAAgB1tE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGyB,EAAI85D,EAAsBv7D,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAU2tE,EAAe3tE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACtJ4yC,EAAUvyC,KAAK40D,WAAWxzD,GAC1BmsE,EAAWnsE,IAAOisE,EAClBG,EAAoB,IAAPpsE,EAA0B,IAAbisE,EAAgC,IAAbA,EAC7CI,EAAYl7B,EAAQ6tB,iBAE1B,IAAKmN,IAAaD,IAAoBpS,GAAiB3oB,EAAQK,WAAW,gBACtE,IAAK,IAAMnC,KAAQvgC,EAAQ,CACvB,IAAMw9D,EAAsC,CAAC,EACvC3P,EAASttB,GACVvgC,EAAO6tD,IAAW,GAAK,IACxB2P,EAAe3P,GAAU7tD,EAAO6tD,GAChC7tD,EAAO6tD,GAAU,GAErB/9D,KAAKg1D,gBAAgBqY,EAAUK,GAAgB,EAAOtsE,GAAI,GAAO,EACrE,CAGJ,IAAKmsE,IAA8B,iBAAjBh7B,EAAQnD,OAA6B8rB,GAAiB3oB,EAAQK,WAAW,aAAc,cAAe,oBACpH,IAAK,IAAMnC,KAAQvgC,EAAQ,CACvB,IAAM6tD,EAASttB,GACTvgC,EAAO6tD,IAAW,GAAK0P,EAAa,IACtCv9D,EAAO6tD,GAAU,EAEzB,CAEJ,IAAKwP,IAAarS,IACV3oB,EAAQK,WAAW,WAAY,cAC/B1iC,EAAY,IAAI2gC,KAAKmC,IAAI,EAAG9iC,EAAY,KAAK,GAExCqiC,EAAQK,WAAW,gBACxB1iC,EAAY,IAAI2gC,KAAKmC,IAAI,EAAG9iC,EAAY,KAAK,GAExCqiC,EAAQK,WAAW,eACxB1iC,EAAY,IAAI2gC,KAAKmC,IAAI,EAAG9iC,EAAY,KAAK,IAE7CqiC,EAAQpH,MAAMmB,aAAa2C,cAAgBsD,EAAQI,QAAQ,UAC3D,IAAK,IAAMlC,KAAQvgC,EAAQ,CACvB,IAAM6tD,EAASttB,GACTvgC,EAAO6tD,IAAW,GAAK0P,EAAa,IACtCv9D,EAAO6tD,GAAU,EAEzB,CAIR,IAAM4N,EAAOp5B,EAAQyiB,gBAAgB9kD,EAAQgrD,GAE7C,IAAKqS,GAAYC,IAActS,GAAkB3oB,EAAQK,WAAW,UAAW,eAAiB,CAC5F,IAAM+6B,EAAoB1vE,OAAOuyD,OAAOmb,GAAMlb,QAAO,SAACvqD,EAAGo5C,GAAC,OAAKp5C,GAAKo5C,EAAI,EAAI,EAAI,EAAE,GAAE,GACpF,GAAIquB,EAAoB,EAAG,CACvB,IAAM31B,EAAQzF,EAAQK,WAAW,WAAa,CAACnhC,IAAK,EAAIk8D,GAAqB,CAACx9D,IAAK,EAAIw9D,GACvF3tE,KAAKg1D,gBAAgB5zD,EAAI42C,GAAO,EAAM52C,EAC1C,CACJ,CAEA,GAAIgsE,EAEA,IADA,IACAl0D,EAAA,EAAA00D,EAD2B,IAAPxsE,EAAW,CAAC,EAAE,EAAE,EAAE,GAAK,CAAC,GACR8X,EAAA00D,EAAAhuE,OAAAsZ,IAAE,CAAjC,IAAM20D,EAAUD,EAAA10D,GACX40D,EAAW9tE,KAAK40D,WAAWiZ,GAC3BE,EAA+B,gBAAlBD,EAAS1+B,KACtB4+B,EAAcF,EAASl7B,WAAW,eACxC,GAAIm7B,GAAcC,EAAc,CAC5B,IAAMC,EAAOF,GAAcC,EACrBE,GAAYzlC,EAAAA,GAAAA,GAAA,GAAOkjC,GACrBwC,GAAmB,EACvB,IAAK,IAAM19B,KAAQy9B,EAAc,CAC7B,IAAMnQ,EAASttB,EACXw9B,IACAC,EAAanQ,IAAW,IAEvBmQ,EAAanQ,IAAW,IAAM,EAC/BmQ,EAAanQ,GAAU,EAEvBoQ,GAAmB,CAE3B,CACA,GAAIA,EAAkB,CAClB,IAAMC,EAAUpuE,KAAKg1D,gBAAgB6Y,EAAYK,GAAc,EAAO9sE,GAClEnD,OAAOuyD,OAAO4d,GAAS7X,MAAK,SAAAhY,GAAG,OAAIA,EAAM,CAAC,KAAuB,gBAAlBuvB,EAAS1+B,MACxDpvC,KAAK00D,YAAYmZ,EAAYC,EAAS1+B,KAE9C,CACJ,CACJ,CAOJ,MAJqB,eAAjBmD,EAAQnD,MAAyBnxC,OAAOuyD,OAAOmb,GAAMpV,MAAK,SAAAhY,GAAG,OAAIA,EAAM,CAAC,KACxEv+C,KAAK00D,YAAYtzD,EAAImxC,EAAQnD,MAAM,GAGhCu8B,CACX,GAAC,CAAA3tE,IAAA,cAAAmD,MAED,SAAmBC,EAAY2yC,EAAoBoB,GAAiJ,IAADshB,EAAA,KAAhI4F,EAA0B18D,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAU0uE,EAAiC1uE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAU0tD,EAAuC1tD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,MAClL4yC,EAAUvyC,KAAK40D,WAAWxzD,GAC1B+pC,EAAQoH,EAAQpH,MAChBmjC,EAAatuE,KAAK40D,WAAWzf,GAC7Bo5B,EAAgBD,EAAWhmB,sBAAmBzoD,EAAYyuE,EAAWp4B,QACrEgO,GAA2BlkD,KAAK40D,WAAWzf,GAAQmT,mBAAqBtoD,KAAK40D,WAAWzf,GAAQmT,kBAAoB,CAAC,eAAgB,WAAY,cAAc7hB,SAAS8nC,GAAiB,MAAQh8B,EAAQC,QAAQ,mBAAuB87B,EAAW17B,WAAW,oBAAsBypB,EACpRmS,EAAgBptE,IAAO+zC,EAE7B,GNziBD,SAAqB5C,GACxB,MAA0B,KAAnBA,EAAQwB,aAAoCl0C,IAAnB0yC,EAAQwB,MAC5C,CMuiBY06B,CAAYl8B,GAAU,CACtB,IAAIm8B,GAAU,EAETF,IAAiBnS,GAAuC,iBAAjB9pB,EAAQnD,OAA2BmD,EAAQK,WAAW,iBAAmB87B,GAAU,GAE3Hn8B,EAAQK,WAAW,oBAAqB87B,GAAU,GAElDF,EACIH,GAAiBljC,EAAMyK,WAAW,UAAYgW,GAAkBrZ,EAASpH,KAAWujC,GAAU,IAE7FvjC,EAAMmB,aAAayC,aAAiC,gBAAlBw/B,GAAqCpjC,EAAMyK,WAAW,UAAYgW,GAAkBrZ,EAASpH,IAAWA,EAAMmB,aAAaoB,eAAeghC,GAAU,GAEhL,QAAX36B,GAAqB5I,EAAMyK,WAAW,aAAegW,GAAkBrZ,EAASpH,KAAWujC,GAAU,GAE1F,QAAX36B,IAAqBxB,EAAQI,QAAQ,SAAWJ,EAAQK,WAAW,eAAiBL,EAAQK,WAAW,qBAAuBL,EAAQK,WAAW,mBAAoB87B,GAAU,GACpK,QAAX36B,IAAqBxB,EAAQpH,MAAM4T,WAAW,QAAUxM,EAAQI,QAAQ,SAAYuR,GAA0B3R,EAAQK,WAAW,kBAAoB87B,GAAU,GACnJ,QAAX36B,GAA+B,QAAXA,MAAwBmQ,GAA0B3R,EAAQK,WAAW,aAAmC,cAAlB27B,GAAiCh8B,EAAQI,QAAQ,SAAU,YAAc+7B,GAAU,GAClL,QAAX36B,IAAqBxB,EAAQI,QAAQ,cAAiBuR,GAA0B3R,EAAQK,WAAW,aAAgB87B,GAAU,GACnH,QAAX36B,GAAqBmQ,IACrB,CAAC,WAAY,gBAAgBzd,SAAS8L,EAAQ2D,YACtC,IAAP90C,EAAW,CAAC,GAAK,CAAC,EAAE,EAAE,EAAE,IAAIqB,KAAI,SAAA3C,GAAC,OAAI22D,EAAK7B,WAAW90D,EAAE,IAAEy2D,MAAK,SAAAoY,GAAI,OAAIA,EAAK/7B,WAAW,aAAa,MACnG87B,GAAU,GACXn8B,EAAQpH,MAAM4T,WAAW,SAAWmF,GAA0B3R,EAAQK,WAAW,gBAAiB87B,GAAU,GAE5GA,IACAn8B,EAAQwB,OAASA,EACF,QAAXA,EACAxB,EAAQkjB,QAAmB,QAATpI,EAAiB,EAAa,QAATA,EAAiB,EAAI,EAC1C,QAAXtZ,IACPxB,EAAQmjB,SAAoB,QAATrI,EAAiB,GAAc,QAATA,EAAiB,EAAI,GAG1E,EAGuB,gBAAjB9a,EAAQnD,MAA6C,QAAnBmD,EAAQwB,QACzB,iBAAjBxB,EAAQnD,MAA8C,QAAnBmD,EAAQwB,QAC1B,gBAAjBxB,EAAQnD,MAA6C,QAAnBmD,EAAQwB,QACzB,gBAAjBxB,EAAQnD,MAA6C,QAAnBmD,EAAQwB,QACzB,iBAAjBxB,EAAQnD,MAA8C,QAAnBmD,EAAQwB,QAC1B,cAAjBxB,EAAQnD,MAA2C,KAAnBmD,EAAQwB,SAC1C/zC,KAAK00D,YAAYtzD,EAAImxC,EAAQnD,MAAM,EAE3C,GAAC,CAAApxC,IAAA,sBAAAmD,MAED,SAA2BC,EAAYqqD,GAA2F,IAA1E4Q,EAA0B18D,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAUw1C,EAAcx1C,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAE+uE,EAAmBjvE,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrH0yC,EAAUvyC,KAAK40D,WAAWxzD,GAC1B+pC,EAAQoH,EAAQpH,MAChBmjC,EAAatuE,KAAK40D,WAAWzf,GAC7Bo5B,EAAgBD,EAAWhmB,sBAAmBzoD,EAAYyuE,EAAWp4B,QACrEgO,EAA0B,CAAC,eAAgB,WAAY,cAAczd,SAAS8nC,GAAiB,MAAQh8B,EAAQC,QAAQ,mBAAuB87B,EAAW17B,WAAW,oBAAsBypB,EAC1LmS,EAAgBptE,IAAO+zC,EAE7B,IAAK5C,EAAQ6V,eAAe3hB,SAASglB,GAAU,CAC3C,IAAIijB,GAAU,EAEE,SAAZjjB,IAA2C,KAAnBlZ,EAAQwB,QAAkB5I,EAAMyK,WAAW,aAAezK,EAAMmB,aAAayC,eAAgB2/B,GAAU,GAEnH,cAAZjjB,IAA6BtgB,EAAMmB,aAAayC,aAAiC,gBAAlBw/B,GAAqCpjC,EAAMyK,WAAW,UAAYgW,GAAkBrZ,EAASpH,MAAYujC,GAAU,GAEtK,cAAZjjB,GAA4B+iB,IAAiBnS,GAAuC,iBAAjB9pB,EAAQnD,MAA+C,gBAApBmD,EAAQ2D,UAA8Bw4B,GAAU,GAEtJvjC,EAAMmB,aAAa0C,aAAe,CAAC,YAAa,QAAS,SAAU,UAAW,cAAe,QAAQvI,SAASglB,KAGtGvH,GAA0B3R,EAAQK,WAAW,cAA4B,cAAZ6Y,EAFrEijB,GAAU,EAKFxqB,IAA0B3R,EAAQK,WAAW,cAA6B,UAAZ6Y,GAAmC,gBAAZA,EAG1E,SAAZA,IAAuBvH,IAA2B3R,EAAQK,WAAW,eAAgB,aAAgBL,EAAQK,WAAW,eAAiBL,EAAQpH,MAAM4T,WAAW,UACzK2vB,GAAU,GAHVA,GAAU,EAMVA,IACAn8B,EAAQ6V,eAAerlD,KAAM0oD,GACb,UAAZA,EACAlZ,EAAQqjB,QAAWgZ,EAAY,EAAI,EAChB,WAAZnjB,EACPlZ,EAAQk0B,SAAW,EACA,YAAZhb,EACPlZ,EAAQm0B,WAAY,EACD,YAAZjb,GAAyBlZ,EAAQuZ,UACxCvZ,EAAQsjB,UAAY,EACpBtjB,EAAQujB,aAAevjB,EAAQuZ,SAAUzsD,MACtB,SAAZosD,EACPlZ,EAAQwoB,OAAS,EACE,YAAZtP,IACPlZ,EAAQE,WAAY,GAGhC,EAGMF,EAAQC,QAAQ,eAAgB,cAAgBD,EAAQ6V,eAAe3hB,SAAS,cAChF8L,EAAQC,QAAQ,gBAAkB,CAAC,cAAe,QAAS,SAAU,UAAW,UAAW,cAAc/L,SAASglB,KACpHzrD,KAAK00D,YAAYtzD,EAAImxC,EAAQnD,MAAO,EAE5C,GAAC,CAAApxC,IAAA,WAAAmD,MAED,SAAgBC,GAAyE,IAA7DytE,EAAiBlvE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAU6sE,EAAuB7sE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACpE4yC,EAAUvyC,KAAK40D,WAAWxzD,GAMhC,GALKytE,GACDt8B,EAAQmtB,eAAeoP,0BAA0Bv8B,EAAQnD,MAE7DmD,EAAQyM,WAEJ59C,EAAK,IAAMorE,EAAgB,CAE3B,IADA,IAAMuC,EAAyB,GACtBC,EAAI,EAAGA,EAAI,EAAGA,IACfA,IAAQ5tE,GAAMpB,KAAK40D,WAAWoa,GAAKp8B,WAAW,mBAA8C/yC,IAA9BG,KAAK40D,WAAWoa,GAAK5/B,MACnF2/B,EAAahsE,KAAKisE,GAG1B,GAAID,EAAanvE,OAAS,EAAG,CAKzB,IAHA,IAAIqvE,EAAgBF,EAAa,GAC7BG,EAAkBlvE,KAAK40D,WAAWqa,GAClCE,EAAmBD,EAAgB1H,eAC9B1nE,EAAE,EAAGA,EAAEivE,EAAanvE,OAAQE,IAAK,CACtC,IAAM6uE,EAAO3uE,KAAK40D,WAAWma,EAAajvE,IACpC8zC,EAAQf,GAAgB87B,EAAKp7B,MAAM/M,IAAKmoC,EAAKz+D,OAAOs2B,IAAKxlC,IAI1D4yC,EAAQu7B,IACTF,EAAgBF,EAAajvE,GAC7BovE,EAAkBP,EAClBQ,EAAmBv7B,EAE3B,CAEA,IAAMw7B,EAAaF,EAAgB9/B,KACnC8/B,EAAgB9/B,UAAOvvC,EACvBqvE,EAAgBjO,gBAAiB,EACjCiO,EAAgBxP,eAAeoP,0BAA0BM,GAEzDpvE,KAAKg5D,YAAY53D,EAAIguE,EACzB,CACJ,CACJ,GAAC,CAAApxE,IAAA,cAAAmD,MAED,SAAmBC,EAAYguC,GAC3B,IAAMmD,EAAUvyC,KAAK40D,WAAWxzD,GAKhC,GAJAmxC,EAAQnD,KAAOA,EACfmD,EAAQmtB,eAAe2P,uBAAuBjgC,GAGzB,mBAAjBmD,EAAQnD,MAA6BmD,EAAQK,WAAW,iBAAkB,iBAAmBL,EAAQuB,UAAW,CAChHvB,EAAQuB,WAAY,EACpB,IAAMiqB,EAAS9pB,GAAiB1B,EAASvxC,IACzCuxC,EAAQwE,YAAcgnB,EACtBxrB,EAAQ0V,mBAAoB,EAC5BjoD,KAAKg/C,SAAS59C,EAClB,CAEIguC,GAAQA,EAAK3I,SAAS,SACtBzmC,KAAK28D,aAAapqB,EAAQpH,MAAMI,QAASgH,EAAQpH,MAAMK,sBAAuB,CAACpqC,IAGnFpB,KAAK+zD,YAAY3yD,EAAI,EACzB,GAAC,CAAApD,IAAA,eAAAmD,MAED,SAAoBoqC,GAAiG,IAE/FhpC,EAF8CmnE,EAAa/pE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAG2vE,EAAa3vE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,GACtG4vE,EAA8B,kBAAZhkC,EAA4B7oC,GAAAC,EAAAA,EAAAA,GACrC2sE,GAAG,IAAlB,IAAA5sE,EAAAE,MAAAL,EAAAG,EAAAG,KAAAb,MAAoB,CAAC,IAAZZ,EAAEmB,EAAApB,MACDoxC,EAAUvyC,KAAK40D,WAAWxzD,GAQhC,GAPImuE,EACAh9B,EAAQpH,MAAMkB,gBAAiB,EACtBd,IACTgH,EAAQpH,MAAMI,QAAUA,EACxBgH,EAAQpH,MAAMK,sBAAwBk+B,GAGtCn3B,EAAQK,WAAW,iBAAmBL,EAAQ0V,kBAC9C,GAAI1V,EAAQpH,MAAMyK,WAAW,cAAgBrD,EAAQuB,UAAW,CAC5DvB,EAAQuB,WAAY,EACpB,IAAMiqB,EAAS9pB,GAAiB1B,EAASvxC,IACzCuxC,EAAQwE,YAAcgnB,CAC1B,MAAYxrB,EAAQpH,MAAMyK,WAAW,aAAerD,EAAQuB,YACxDvB,EAAQuB,WAAY,EACpBvB,EAAQwE,iBAAcl3C,EACD,mBAAjB0yC,EAAQnD,MAA6BpvC,KAAKg5D,YAAY53D,EAAI,oBAI/C,kBAAjBmxC,EAAQnD,MAA4BmD,EAAQpH,MAAMyK,WAAW,aAC5C,gBAAjBrD,EAAQnD,MAA0BmD,EAAQpH,MAAMyK,WAAW,WAC1C,iBAAjBrD,EAAQnD,MAA2BmD,EAAQpH,MAAMyK,WAAW,YAC3C,eAAjBrD,EAAQnD,MAAyBmD,EAAQpH,MAAMyK,WAAW,WAC5D51C,KAAK00D,YAAYtzD,EAAImxC,EAAQnD,MAAM,EAE3C,CAAC,OAAA7xC,IAAAmF,EAAAxD,EAAA3B,GAAA,SAAAmF,EAAAI,GAAA,CACL,GAAC,CAAA9E,IAAA,eAAAmD,MAED,SAAoBkqC,GAAsF,IAEpFoL,EAF2CizB,EAAK/pE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAG2vE,EAAa3vE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,GAC3F6vE,EAA2B,eAAZnkC,EAAyBsL,GAAAh0C,EAAAA,EAAAA,GAC/B2sE,GAAG,IAAlB,IAAA34B,EAAA/zC,MAAA6zC,EAAAE,EAAA9zC,KAAAb,MAAoB,CAAC,IAAZZ,EAAEq1C,EAAAt1C,MACDoxC,EAAUvyC,KAAK40D,WAAWxzD,GAQhC,GAPIouE,EACAj9B,EAAQpH,MAAMiB,aAAc,EACnBf,IACTkH,EAAQpH,MAAME,QAAUA,EACxBkH,EAAQpH,MAAMG,sBAAwBo+B,GAGtCn3B,EAAQK,WAAW,oBAAsBL,EAAQ0V,kBACjD,GAAI1V,EAAQpH,MAAM4T,WAAW,SAAWxM,EAAQuB,UAAW,CACvDvB,EAAQuB,WAAY,EACpB,IAAMiqB,EAAS9pB,GAAiB1B,EAASvxC,IACzCuxC,EAAQwE,YAAcgnB,CAC1B,MAAYxrB,EAAQpH,MAAM4T,WAAW,QAAUxM,EAAQuB,YACnDvB,EAAQuB,WAAY,EACpBvB,EAAQwE,iBAAcl3C,EACD,mBAAjB0yC,EAAQnD,MAA6BpvC,KAAKg5D,YAAY53D,EAAI,oBAIrD,SAAZiqC,GAAkC,SAAZA,IAAuBkH,EAAQK,WAAW,aAAeL,EAAQlzC,KAAKonC,SAAS,WAAa8L,EAAQuB,YAC3HvB,EAAQsuB,WAAW,UACnBtuB,EAAQuB,WAAY,EAG5B,CAAC,OAAAv2C,IAAAo5C,EAAAz3C,EAAA3B,GAAA,SAAAo5C,EAAA7zC,GAAA,CACL,GAAC,CAAA9E,IAAA,eAAAmD,MAED,SAAoBC,GAChB,IAAMmxC,EAAUvyC,KAAK40D,WAAWxzD,GAC1BquE,EAAel9B,EAAQ4yB,eAS7B,OARIsK,IACIl9B,EAAQlzC,KAAKonC,SAAS,cACtBzmC,KAAKi5D,cAAc73D,EAAI,iBAEvBmxC,EAAQlzC,KAAKonC,SAAS,YACtBzmC,KAAKwoE,sBAAsBpnE,EAAImxC,EAAQ2D,UAGxCu5B,CACX,GAAC,CAAAzxE,IAAA,gBAAAmD,MAED,SAAqBC,EAAY80C,GAAsE,IAA/Bw5B,EAAoB/vE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAClF4yC,EAAUvyC,KAAK40D,WAAWxzD,GAChC,IAAImxC,EAAQC,QAAQ,oBACfk9B,IAAe3W,GAAAA,GAAoCtyB,SAAS8L,EAAQ2D,SAAW,KAApF,CACA,IAAMy5B,EAAap9B,EAAQ2D,QAC3B3D,EAAQ2D,QAAUA,EAClB3D,EAAQuB,WAAY,EAEfvB,EAAQ+V,kBACTtoD,KAAKo+D,yBAAyBh9D,EAAIuuE,GAEtCp9B,EAAQ+V,sBAAmBzoD,EAE3BG,KAAKwoE,sBAAsBpnE,EAAI80C,EAVoE,CAWvG,GAAC,CAAAl4C,IAAA,iBAAAmD,MAED,SAAsBC,GAClB,IAAMmxC,EAAUvyC,KAAK40D,WAAWxzD,GAChC,IAAImxC,EAAQC,QAAQ,kBAApB,CACA,IAAMm9B,EAAap9B,EAAQ2D,QAE3B3D,EAAQuB,WAAY,EAEpB9zC,KAAKo+D,yBAAyBh9D,EAAIuuE,EALe,CAMrD,GAAC,CAAA3xE,IAAA,wBAAAmD,MAED,SAA6BC,EAAY80C,GAA0F,IAAvC05B,EAAgBjwE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAClG4yC,EAAUvyC,KAAK40D,WAAWxzD,GAC1BgX,EAAoB,CAAC,GAAG,GAAG,GAAG,GAAG,IACvC,GAAIm6B,EAAQ+V,iBAAoB,OAAOlwC,EAEvC,GAAgB,aAAZ89B,EAAwB,CACxB,IAAMx2C,EAAgB,IAAP0B,EAAWpB,KAAKizD,QAAQ,GAAKjzD,KAAKizD,QAAQ,GACzDjzD,KAAK4gE,UAAUx/D,EAAI1B,EAAO0B,IAC1BgX,EAAMhX,GAAI2B,KAAK,uBAAyBwvC,EAAQlzC,KAAO,SAAWK,EAAOL,KAC7E,CAQA,GANgB,eAAZ62C,GAAqD,cAAzB3D,EAAQzL,QAAQznC,OAC5CkzC,EAAQsuB,WAAW,sBACnBtuB,EAAQ4V,cAAgB5V,EAAQ4G,QAChC/gC,EAAMhX,GAAI2B,KAAK,4DAGH,UAAZmzC,EAEA,IADA,IACA4B,EAAA,EAAA+3B,EAD2B,IAAPzuE,EAAW,CAAC,EAAE,EAAE,EAAE,GAAK,CAAC,GACjB02C,EAAA+3B,EAAAjwE,OAAAk4C,IAAE,CAAxB,IAAIg4B,EAAGD,EAAA/3B,GACFi4B,EAAgB/vE,KAAKizD,QAAQ6c,GAAK55B,QACxC,GAAI65B,IAAkB/vE,KAAKizD,QAAQ6c,GAAKxnB,mBAAqByQ,GAAAA,GAA+BtyB,SAASspC,GAAgB,CACjHx9B,EAAQ2D,QAAU65B,EAClB75B,EAAU65B,EACV33D,EAAMhX,GAAI2B,KAAK,gBAAkBgtE,GACjC,KACJ,CACJ,CAOJ,GAHAx9B,EAAQmtB,eAAeC,uBAAuBzpB,IAGzC05B,EACD,OAAQ15B,GAER,IAAK,UAC8B,QAA3Bl2C,KAAKw1D,OAAO,GAAGnqB,UACfrrC,KAAK08D,aAAa,MAAwB,cAAjBnqB,EAAQnD,KAAuB,EAAI,GAC5Dh3B,EAAMhX,GAAI2B,KAAK,4BAEnB,MACJ,IAAK,UAC8B,SAA3B/C,KAAKw1D,OAAO,GAAGnqB,UACfrrC,KAAK08D,aAAa,OAAyB,cAAjBnqB,EAAQnD,KAAuB,EAAI,GAC7Dh3B,EAAMhX,GAAI2B,KAAK,6BAEnB,MACJ,IAAK,cAC8B,SAA3B/C,KAAKw1D,OAAO,GAAGnqB,UACfrrC,KAAK08D,aAAa,OAAyB,gBAAjBnqB,EAAQnD,KAAyB,EAAI,GAC/Dh3B,EAAMhX,GAAI2B,KAAK,oCAEnB,MACJ,IAAK,eAC8B,SAA3B/C,KAAKw1D,OAAO,GAAGnqB,UACfrrC,KAAK08D,aAAa,OAAyB,aAAjBnqB,EAAQnD,KAAsB,EAAI,GAC5Dh3B,EAAMhX,GAAI2B,KAAK,qCAEnB,MACJ,IAAK,mBAC8B,QAA3B/C,KAAKw1D,OAAO,GAAGnqB,UACfrrC,KAAK08D,aAAa,MAAwB,cAAjBnqB,EAAQnD,KAAuB,EAAI,GAC5Dh3B,EAAMhX,GAAI2B,KAAK,qCAEnB,MAEJ,IAAK,eAC8B,WAA3B/C,KAAKw1D,OAAO,GAAGjqB,UACfvrC,KAAK28D,aAAa,SAA2B,qBAAjBpqB,EAAQnD,KAA8B,EAAI,GACtEh3B,EAAMhX,GAAI2B,KAAK,wCAEnB,MACJ,IAAK,iBAC8B,aAA3B/C,KAAKw1D,OAAO,GAAGjqB,UACfvrC,KAAK28D,aAAa,WAA6B,qBAAjBpqB,EAAQnD,KAA8B,EAAI,GACxEh3B,EAAMhX,GAAI2B,KAAK,4CAEnB,MACJ,IAAK,cAC8B,UAA3B/C,KAAKw1D,OAAO,GAAGjqB,UACfvrC,KAAK28D,aAAa,QAA0B,qBAAjBpqB,EAAQnD,KAA8B,EAAI,GACrEh3B,EAAMhX,GAAI2B,KAAK,sCAEnB,MACJ,IAAK,gBAC8B,YAA3B/C,KAAKw1D,OAAO,GAAGjqB,UACfvrC,KAAK28D,aAAa,UAA4B,qBAAjBpqB,EAAQnD,KAA8B,EAAI,GACvEh3B,EAAMhX,GAAI2B,KAAK,0CAEnB,MACJ,IAAK,gBAC8B,aAA3B/C,KAAKw1D,OAAO,GAAGjqB,UACfvrC,KAAK28D,aAAa,WAA6B,qBAAjBpqB,EAAQnD,KAA8B,EAAI,GACxEh3B,EAAMhX,GAAI2B,KAAK,2CAEnB,MAEJ,IAAK,gBAAgB,IACY42D,EADbC,GAAAj3D,EAAAA,EAAAA,GACE3C,KAAKw1D,QAAM,IAA7B,IAAAoE,EAAAh3D,MAAA+2D,EAAAC,EAAA/2D,KAAAb,MAA+B,CAAjB23D,EAAAx4D,MACJ6qC,eAAgB,CAC1B,CAAC,OAAAzuC,IAAAq8D,EAAA16D,EAAA3B,GAAA,SAAAq8D,EAAA92D,GAAA,CACDsV,EAAMhX,GAAI2B,KAAK,iCACf,MACJ,IAAK,gBAAgB,IACYi3D,EADbC,GAAAt3D,EAAAA,EAAAA,GACE3C,KAAKw1D,QAAM,IAA7B,IAAAyE,EAAAr3D,MAAAo3D,EAAAC,EAAAp3D,KAAAb,MAA+B,CAAjBg4D,EAAA74D,MACJ4qC,eAAgB,CAC1B,CAAC,OAAAxuC,IAAA08D,EAAA/6D,EAAA3B,GAAA,SAAA08D,EAAAn3D,GAAA,CACDsV,EAAMhX,GAAI2B,KAAK,yCACf,MACJ,IAAK,iBAAiB,IACWm3D,EADZC,GAAAx3D,EAAAA,EAAAA,GACC3C,KAAKw1D,QAAM,IAA7B,IAAA2E,EAAAv3D,MAAAs3D,EAAAC,EAAAt3D,KAAAb,MAA+B,CAAjBk4D,EAAA/4D,MACJ+qC,gBAAiB,CAC3B,CAAC,OAAA3uC,IAAA48D,EAAAj7D,EAAA3B,GAAA,SAAA48D,EAAAr3D,GAAA,CACDsV,EAAMhX,GAAI2B,KAAK,yCACf,MACJ,IAAK,kBAAkB,IACUq3D,EADXG,GAAA53D,EAAAA,EAAAA,GACA3C,KAAKw1D,QAAM,IAA7B,IAAA+E,EAAA33D,MAAAw3D,EAAAG,EAAA13D,KAAAb,MAA+B,CAAjBo4D,EAAAj5D,MACJ8qC,iBAAkB,CAC5B,CAAC,OAAA1uC,IAAAg9D,EAAAr7D,EAAA3B,GAAA,SAAAg9D,EAAAz3D,GAAA,CACDsV,EAAMhX,GAAI2B,KAAK,kCACf,MAEJ,IAAK,mBACD,IACsC03D,EADhCuV,EAA2B,IAAP5uE,EAAWpB,KAAKizD,QAAQ5V,MAAM,GAAK,CAACr9C,KAAKizD,QAAQ,IAAI4H,GAAAl4D,EAAAA,EAAAA,GAC1DqtE,GAAiB,IAAtC,IAAAnV,EAAAj4D,MAAA63D,EAAAI,EAAAh4D,KAAAb,MAAwC,CAAC,IAAhC8rE,EAAQrT,EAAAt5D,MACP8uE,EAAUnC,EAAS59D,OAAOy8C,KAAO,EACvC3sD,KAAKg1D,gBAAgB8Y,EAAS1sE,GAAI,CAACurD,KAAM,IAAI,EAAMvrD,GACnDgX,EAAM01D,EAAS1sE,IAAI2B,KAAK,QAAUktE,EAAU,WAAQnC,EAAS59D,OAAOy8C,IAAM,sBAC9E,CAAC,OAAApvD,IAAAs9D,EAAA37D,EAAA3B,GAAA,SAAAs9D,EAAA/3D,GAAA,CACD,MACJ,IAAK,cACD,GAAW,IAAP1B,EAAU,CACV,IACuBg6D,EADjB8U,EAASlwE,KAAKizD,QAAQ5V,MAAM,GAAG0S,OAAO3uD,EAAG,EAAG,GAAGi6D,GAAA14D,EAAAA,EAAAA,GACpCutE,GAAM,IAAvB,IAAA7U,EAAAz4D,MAAAw4D,EAAAC,EAAAx4D,KAAAb,MAAyB,CAAC,IAAjBy+D,EAAIrF,EAAAj6D,MACHk0D,EAAUxkB,KAAKC,MAAM2vB,EAAKtnB,QAAU,GAC1Cn5C,KAAK+zD,YAAY0M,EAAKr/D,IAAKi0D,EAC/B,CAAC,OAAA93D,IAAA89D,EAAAn8D,EAAA3B,GAAA,SAAA89D,EAAAv4D,GAAA,CACL,CACA,MACJ,IAAK,WACD,IAAMpD,EAAgB,IAAP0B,EAAWpB,KAAKizD,QAAQ,GAAKjzD,KAAKizD,QAAQ,GACrDvhD,EAAMhS,EAAO6zC,MAAM7hC,IACnB60B,EAAM7mC,EAAO6zC,MAAMhN,IAGvB,GAFA70B,EAAMmhC,GAAgBnhC,EAAKhS,EAAOwQ,OAAOwB,IAAKhS,EAAOsB,MACrDulC,EAAMsM,GAAgBtM,EAAK7mC,EAAOwQ,OAAOq2B,IAAK7mC,EAAOsB,OAC1C0Q,EAAK,CACZ,IAAMy+D,EAAU59B,EAAQriC,OAAOC,IAC/BnQ,KAAKg1D,gBAAgB5zD,EAAI,CAAC+O,IAAK,IAAI,EAAM/O,GACzCgX,EAAMhX,GAAI2B,KAAK,QAAUotE,EAAU,YAAS59B,EAAQriC,OAAOC,IAAM,EAAI,IAAM,IAAMoiC,EAAQriC,OAAOC,IAAM,cAC1G,KAAO,CACH,IAAMigE,EAAU79B,EAAQriC,OAAOuB,IAC/BzR,KAAKg1D,gBAAgB5zD,EAAI,CAACqQ,IAAK,IAAI,EAAMrQ,GACzCgX,EAAMhX,GAAI2B,KAAK,QAAUqtE,EAAU,YAAS79B,EAAQriC,OAAOuB,IAAM,EAAI,IAAM,IAAM8gC,EAAQriC,OAAOuB,IAAM,cAC1G,CACA,MACJ,IAAK,iBACD,IAAM2+D,EAAU79B,EAAQriC,OAAOuB,IAC/BzR,KAAKg1D,gBAAgB5zD,EAAI,CAACqQ,IAAK,IAAI,EAAMrQ,GACzCgX,EAAMhX,GAAI2B,KAAK,QAAUqtE,EAAU,WAAQ79B,EAAQriC,OAAOuB,IAAM,qBAChE,MACJ,IAAK,mBACD,IAAM4+D,EAAU99B,EAAQriC,OAAOwB,IAC/B1R,KAAKg1D,gBAAgB5zD,EAAI,CAACsQ,IAAK,IAAI,EAAMtQ,GACzCgX,EAAMhX,GAAI2B,KAAK,QAAUstE,EAAU,WAAQ99B,EAAQriC,OAAOwB,IAAM,uBAChE,MACJ,IAAK,uBACD1R,KAAKg1D,gBAAgB5zD,EAAI,CAAColC,IAAK,IAAI,EAAMplC,GACzC,MACJ,IAAK,6BACDpB,KAAKg1D,gBAAgB5zD,EAAI,CAACmlC,IAAK,IAAI,EAAMnlC,GACzC,MACJ,IAAK,8BACDpB,KAAKg1D,gBAAgB5zD,EAAI,CAACqQ,IAAK,IAAI,EAAMrQ,GACzC,MACJ,IAAK,8BACDpB,KAAKg1D,gBAAgB5zD,EAAI,CAACsQ,IAAK,IAAI,EAAMtQ,GACzC,MACJ,IAAK,iBACL,IAAK,cACoB,mBAAjBmxC,EAAQnD,MAA8BmD,EAAQuB,WAC9C9zC,KAAKg5D,YAAY53D,EAAI,kBAEzB,MACJ,IAAK,aACDmxC,EAAQ41B,iBAAmB,EAC3B51B,EAAQuB,WAAY,EACpB,MACJ,IAAK,aACD,IACoC2nB,EAD9B6U,EAAyB,IAAPlvE,EAAWpB,KAAKizD,QAAQ5V,MAAM,GAAK,CAACr9C,KAAKizD,QAAQ,IAAIyI,GAAA/4D,EAAAA,EAAAA,GACxD2tE,GAAe,IAApC,IAAA5U,EAAA94D,MAAA64D,EAAAC,EAAA74D,KAAAb,MAAsC,CAAC,IAA9B8rE,EAAQrS,EAAAt6D,MACb,GAAI2sE,EAASl7B,WAAW,aAAc,CAClC,IAAMw9B,EAAUtC,EAAS59D,OAAOuB,KAAQ,EACxCzR,KAAKg1D,gBAAgB8Y,EAAS1sE,GAAI,CAACqQ,IAAK,IAAI,EAAMrQ,GAClDgX,EAAM01D,EAAS1sE,IAAI2B,KAAK,QAAUqtE,EAAU,WAAQtC,EAAS59D,OAAOuB,IAAM,eAC9E,MAAO,GAAIq8D,EAASxlB,mBAAqB,CAAC,YAAa,YAAa,cAAe,WAAW7hB,SAASqnC,EAAS53B,SAAW,IAAK,CAC5H,IAAMk6B,EAAUtC,EAAS59D,OAAOuB,KAAQ,EAClC8+D,EAAgBh+B,EAAQriC,OAAOuB,KAAO,EAC5CzR,KAAKg1D,gBAAgB8Y,EAAS1sE,GAAI,CAACqQ,KAAM,IAAI,EAAMrQ,GAC/C0sE,EAASl7B,WAAW,gBACpBx6B,EAAMhX,GAAI2B,KAAK,QAAUwtE,EAAgB,WAAQh+B,EAAQriC,OAAOuB,IAAM,mBAEtE2G,EAAM01D,EAAS1sE,IAAI2B,KAAK,QAAUqtE,EAAU,WAAQtC,EAAS59D,OAAOuB,IAAM,gBAElF,CACA,GAAIq8D,EAASl7B,WAAW,WAAY,CAChC,IAAMw1B,EAAU0F,EAAS59D,OAAOs2B,KAAO,EACvCxmC,KAAKg1D,gBAAgB8Y,EAAS1sE,GAAI,CAAColC,IAAK,IAAI,EAAMsnC,EAAS1sE,IAC3DgX,EAAM01D,EAAS1sE,IAAIgX,EAAM01D,EAAS1sE,IAAIxB,OAAO,IAAM,UAAYwoE,EAAU,WAAQ0F,EAAS59D,OAAOs2B,IAAM,YAC3G,CACJ,CAAC,OAAAjpC,IAAAm+D,EAAAx8D,EAAA3B,GAAA,SAAAm+D,EAAA54D,GAAA,EAIT,OAAQozC,GACJ,IAAK,mBACD,IAAK,IAAIp2C,EAAI,EAAGA,EAAI,EAAGA,IACnB,GAAIA,IAAMsB,EAAK,CACX,IAAM1B,EAASM,KAAKizD,QAAQnzD,GACtB0wE,EAAgBxwE,KAAKizD,QAAQnzD,GAAGo2C,QACtC,GACIx2C,EAAO8yC,QAAQ,mBACI,qBAAlBg+B,EAED,SAEJxwE,KAAKo+D,yBAAyBt+D,EAAGJ,EAAOw2C,SACxCx2C,EAAO4oD,kBAAoB,EAC3BlwC,EAAMtY,GAAGiD,KAAK,yCAClB,CAEJ,MACQ,IAAK,aACjB,IAAK,WACD/C,KAAK08D,aAAa,cAClBtkD,EAAMhX,GAAI2B,KAAKmzC,EAAU,wBACzB,MACJ,IAAK,gBACDl2C,KAAK08D,aAAa,cAClB18D,KAAK28D,aAAa,iBAClBvkD,EAAMhX,GAAI2B,KAAK,iDACf,MACJ,IAAK,gBACD,GAAW,IAAP3B,EAAU,CAAC,IACqCw6D,EADtCC,GAAAl5D,EAAAA,EAAAA,GACiB3C,KAAKw1D,OAAOib,WAAS,IAAhD,IAAA5U,EAAAj5D,MAAAg5D,EAAAC,EAAAh5D,KAAAb,MAAkD,CAAC,IAAD0uE,GAAAjmC,EAAAA,GAAAA,GAAAmxB,EAAAz6D,MAAA,GAAxC4oE,EAAK2G,EAAA,GAAEvlC,EAAKulC,EAAA,GACJ,IAAV3G,GAAeA,IAAU3oE,IACzB+pC,EAAMmB,aAAaqC,eAAiB,EAE5C,CAAC,OAAApxC,IAAAs+D,EAAA38D,EAAA3B,GAAA,SAAAs+D,EAAA/4D,GAAA,CACL,CACAsV,EAAMhX,GAAI2B,KAAK,mDACf,MACJ,IAAK,aACD,GAAW,IAAP3B,EACApB,KAAKw1D,OAAO,GAAGlpB,aAAa0C,aAAc,MACvC,CAAC,IACkCitB,EADnCC,GAAAv5D,EAAAA,EAAAA,GACe3C,KAAKw1D,OAAOnY,MAAM,IAAE,IAAtC,IAAA6e,EAAAt5D,MAAAq5D,EAAAC,EAAAr5D,KAAAb,MAAwC,CAA1Bi6D,EAAA96D,MACJmrC,aAAa0C,aAAc,CACrC,CAAC,OAAAzxC,IAAA2+D,EAAAh9D,EAAA3B,GAAA,SAAA2+D,EAAAp5D,GAAA,CACL,CACAsV,EAAMhX,GAAI2B,KAAK,8BACf,MACJ,IAAK,aACD,GAAW,IAAP3B,EAAU,CAAC,IACoCw7D,GADrCK,IAAAt6D,EAAAA,EAAAA,GACgB3C,KAAKw1D,OAAOib,WAAS,IAA/C,IAAAxT,GAAAr6D,MAAAg6D,GAAAK,GAAAp6D,KAAAb,MAAiD,CAAC,IAAD2uE,IAAAlmC,EAAAA,GAAAA,GAAAmyB,GAAAz7D,MAAA,GAAvC4oE,GAAK4G,GAAA,GAACxlC,GAAKwlC,GAAA,GACH,IAAV5G,IAAeA,KAAU3oE,IACzB+pC,GAAMmB,aAAaoC,YAAc,EAEzC,CAAC,OAAAnxC,IAAA0/D,GAAA/9D,EAAA3B,GAAA,SAAA0/D,GAAAn6D,GAAA,CACL,CACAsV,EAAMhX,GAAI2B,KAAK,kCACf,MACJ,IAAK,UACD,GAAU,IAAN3B,EAAU,CAAC,IACoCu8D,GADrCG,IAAAn7D,EAAAA,EAAAA,GACgB3C,KAAKw1D,OAAOib,WAAS,IAA/C,IAAA3S,GAAAl7D,MAAA+6D,GAAAG,GAAAj7D,KAAAb,MAAiD,CAAC,IAAD4uE,IAAAnmC,EAAAA,GAAAA,GAAAkzB,GAAAx8D,MAAA,GAAvC4oE,GAAK6G,GAAA,GAACzlC,GAAKylC,GAAA,GACH,IAAV7G,IAAeA,KAAU3oE,IACzB+pC,GAAMmB,aAAakC,WAAa,EAExC,CAAC,OAAAjxC,IAAAugE,GAAA5+D,EAAA3B,GAAA,SAAAugE,GAAAh7D,GAAA,CACL,CACAsV,EAAMhX,GAAI2B,KAAK,uCACf,MACJ,IAAK,eACD,GAAW,IAAP3B,EACA,IAAK,IAAIyvE,GAAI,EAAGA,GAAI,EAAGA,KACfzvE,IAAOyvE,KACP7wE,KAAKw1D,OAAOqb,IAAKvkC,aAAa+B,cAAgB,GAI1Dj2B,EAAMhX,GAAI2B,KAAK,6CACf,MACJ,IAAK,cACD,GAAW,IAAP3B,EACA,IAAK,IAAIyvE,GAAI,EAAGA,GAAI,EAAGA,KACnB7wE,KAAKw1D,OAAOqb,IAAKvkC,aAAa2C,cAAe,OAGjDjvC,KAAKw1D,OAAO,GAAGlpB,aAAa2C,cAAe,EAE/C,MACJ,IAAK,WACL,IAAK,kBACL,IAAK,aACD,GAAW,IAAP7tC,EACA,IAAK,IAAIyvE,GAAI,EAAGA,GAAI,EAAGA,KACnB7wE,KAAKw1D,OAAOqb,IAAKvkC,aAAa6B,YAAa,OAG/CnuC,KAAKw1D,OAAO,GAAGlpB,aAAa6B,YAAa,EAE7C,MACJ,IAAK,OACL,IAAK,QACD,IACkBywB,GADZ0B,GAAiB,IAAPl/D,EAAW,CAAC,EAAE,EAAE,EAAE,GAAG2E,QAAO,SAAAjG,GAAC,OAAIA,IAAMsB,CAAE,IAAI,GAAGy9D,IAAAl8D,EAAAA,EAAAA,GACrD29D,IAAO,IAAlB,IAAAzB,GAAAj8D,MAAAg8D,GAAAC,GAAAh8D,KAAAb,MAAoB,CAAfZ,EAAEw9D,GAAAz9D,MACH,IAAMs/D,GAAOzgE,KAAK40D,WAAWxzD,IACzBq/D,GAAKtY,cAAgB,GAAsB,UAAjBsY,GAAKvqB,SAAwC,SAAjBuqB,GAAKvqB,WAC3D3D,EAAQuB,WAAY,EACpB2sB,GAAK3sB,WAAY,EACjB17B,EAAMhX,GAAI2B,KAAKmzC,EAAU,cAEjC,CAAC,OAAA34C,IAAAshE,GAAA3/D,EAAA3B,GAAA,SAAAshE,GAAA/7D,GAAA,EAIT,OAAOsV,CACX,GAAC,CAAApa,IAAA,2BAAAmD,MAED,SAAgCC,EAAY80C,GAAoD,IAADshB,EAAA,KACrFmX,EAAO3uE,KAAK40D,WAAWxzD,GAC7B,QAAgBvB,IAAZq2C,GAAqC,iBAAZA,IAA8By4B,EAAKrmB,iBAGhE,OADAqmB,EAAKjP,eAAeiG,0BAA0BzvB,GACtCA,GAEJ,IAAK,mBACD,IACKl2C,KAAKizD,QACLltD,QAAO,SAAAu4C,GAAC,OAAIA,EAAEl9C,KAAOA,GAA0B,IAApBk9C,EAAE6J,aAAmB,IAChD1lD,KAAI,SAAA67C,GAAC,OAAIA,EAAEpI,OAAO,IAAEzP,SAAS,oBAE9B,IAAK,IAAI3mC,EAAI,EAAGA,EAAI,EAAGA,IACnB,GAAIA,IAAMsB,EAAK,CACX,IAAM1B,EAASM,KAAKizD,QAAQnzD,IACvBJ,EAAO4oD,kBAAoB,GAAK,GAAgC,iBAA3B5oD,EAAO8qE,kBAC7C9qE,EAAO4oD,sBAAmBzoD,EAC1BG,KAAKwoE,sBAAsB1oE,EAAGJ,EAAOw2C,SAAS,GAEtD,CAGR,MACJ,IAAK,aACL,IAAK,WACD,IACKl2C,KAAKizD,QACLltD,QAAO,SAAAu4C,GAAC,OAAIA,EAAEl9C,KAAOA,GAA0B,IAApBk9C,EAAE6J,aAAmB,IAChDoO,MAAK,SAAAjY,GAAC,MAAI,CAAC,aAAc,WAAY,iBAAiB7X,SAAS6X,EAAEpI,QAAuB,IAC3F,CAAC,IAC8B4oB,EAD/BC,GAAAp8D,EAAAA,EAAAA,GACoB3C,KAAKw1D,QAAM,IAA7B,IAAAuJ,EAAAn8D,MAAAk8D,EAAAC,EAAAl8D,KAAAb,MAA+B,CAAjB88D,EAAA39D,MACJirC,aAAc,CACxB,CAAC,OAAA7uC,IAAAwhE,EAAA7/D,EAAA3B,GAAA,SAAAwhE,EAAAj8D,GAAA,CACD9C,KAAK08D,kBAAa78D,EACtB,CACA,MACJ,IAAK,gBACD,IACKG,KAAKizD,QACLltD,QAAO,SAAAu4C,GAAC,OAAIA,EAAEl9C,KAAOA,GAA0B,IAApBk9C,EAAE6J,aAAmB,IAChDoO,MAAK,SAAAjY,GAAC,MAAI,CAAC,aAAc,WAAY,iBAAiB7X,SAAS6X,EAAEpI,QAAuB,IAC3F,CAAC,IAC8B8oB,EAD/BI,GAAAz8D,EAAAA,EAAAA,GACoB3C,KAAKw1D,QAAM,IAA7B,IAAA4J,EAAAx8D,MAAAo8D,EAAAI,EAAAv8D,KAAAb,MAA+B,CAAjBg9D,EAAA79D,MACJirC,aAAc,CACxB,CAAC,OAAA7uC,IAAA6hE,EAAAlgE,EAAA3B,GAAA,SAAA6hE,EAAAt8D,GAAA,CACD9C,KAAK08D,kBAAa78D,EACtB,CACA,IACKG,KAAKizD,QACLltD,QAAO,SAAAu4C,GAAC,OAAIA,EAAEl9C,KAAOA,GAA0B,IAApBk9C,EAAE6J,aAAmB,IAChD1lD,KAAI,SAAA67C,GAAC,OAAIA,EAAEpI,OAAO,IAAEzP,SAAS,iBAChC,CAAC,IAC8B44B,EAD/BC,GAAA38D,EAAAA,EAAAA,GACoB3C,KAAKw1D,QAAM,IAA7B,IAAA8J,EAAA18D,MAAAy8D,EAAAC,EAAAz8D,KAAAb,MAA+B,CAAjBq9D,EAAAl+D,MACJkrC,gBAAiB,CAC3B,CAAC,OAAA9uC,IAAA+hE,EAAApgE,EAAA3B,GAAA,SAAA+hE,EAAAx8D,GAAA,CACD9C,KAAK28D,kBAAa98D,EACtB,CAEA,MACJ,IAAK,gBACD,IACKG,KAAKizD,QACLltD,QAAO,SAAAu4C,GAAC,OAAIA,EAAEl9C,KAAOA,GAA0B,IAApBk9C,EAAE6J,aAAmB,IAChD1lD,KAAI,SAAA67C,GAAC,OAAIA,EAAEpI,OAAO,IAAEzP,SAAS,iBAChC,CAAC,IAC8B84B,EAD/BC,GAAA78D,EAAAA,EAAAA,GACoB3C,KAAKw1D,QAAM,IAA7B,IAAAgK,EAAA58D,MAAA28D,EAAAC,EAAA38D,KAAAb,MAA+B,CAAjBu9D,EAAAp+D,MACJ6qC,eAAgB,CAC1B,CAAC,OAAAzuC,IAAAiiE,EAAAtgE,EAAA3B,GAAA,SAAAiiE,EAAA18D,GAAA,CACL,CACA,MACJ,IAAK,gBACD,IACK9C,KAAKizD,QACLltD,QAAO,SAAAu4C,GAAC,OAAIA,EAAEl9C,KAAOA,GAA0B,IAApBk9C,EAAE6J,aAAmB,IAChD1lD,KAAI,SAAA67C,GAAC,OAAIA,EAAEpI,OAAO,IAAEzP,SAAS,iBAChC,CAAC,IAC8B45B,EAD/BE,GAAA59D,EAAAA,EAAAA,GACoB3C,KAAKw1D,QAAM,IAA7B,IAAA+K,EAAA39D,MAAAy9D,EAAAE,EAAA19D,KAAAb,MAA+B,CAAjBq+D,EAAAl/D,MACJ4qC,eAAgB,CAC1B,CAAC,OAAAxuC,IAAAgjE,EAAArhE,EAAA3B,GAAA,SAAAgjE,EAAAz9D,GAAA,CACL,CACA,MACJ,IAAK,iBACD,IACK9C,KAAKizD,QACLltD,QAAO,SAAAu4C,GAAC,OAAIA,EAAEl9C,KAAOA,GAA0B,IAApBk9C,EAAE6J,aAAmB,IAChD1lD,KAAI,SAAA67C,GAAC,OAAIA,EAAEpI,OAAO,IAAEzP,SAAS,kBAChC,CAAC,IAC8B66B,EAD/BC,GAAA5+D,EAAAA,EAAAA,GACoB3C,KAAKw1D,QAAM,IAA7B,IAAA+L,EAAA3+D,MAAA0+D,EAAAC,EAAA1+D,KAAAb,MAA+B,CAAjBs/D,EAAAngE,MACJ+qC,gBAAiB,CAC3B,CAAC,OAAA3uC,IAAAgkE,EAAAriE,EAAA3B,GAAA,SAAAgkE,EAAAz+D,GAAA,CACL,CACA,MACJ,IAAK,kBACD,IACK9C,KAAKizD,QACLltD,QAAO,SAAAu4C,GAAC,OAAIA,EAAEl9C,KAAOA,GAA0B,IAApBk9C,EAAE6J,aAAmB,IAChD1lD,KAAI,SAAA67C,GAAC,OAAIA,EAAEpI,OAAO,IAAEzP,SAAS,mBAChC,CAAC,IAC8Bg7B,EAD/BC,GAAA/+D,EAAAA,EAAAA,GACoB3C,KAAKw1D,QAAM,IAA7B,IAAAkM,EAAA9+D,MAAA6+D,EAAAC,EAAA7+D,KAAAb,MAA+B,CAAjBy/D,EAAAtgE,MACJ8qC,iBAAkB,CAC5B,CAAC,OAAA1uC,IAAAmkE,EAAAxiE,EAAA3B,GAAA,SAAAmkE,EAAA5+D,GAAA,CACL,CACA,MAEJ,IAAK,gBACD,GAAW,IAAP1B,EAAU,CAAC,IACoC0vE,EADrCC,GAAApuE,EAAAA,EAAAA,GACgB3C,KAAKw1D,OAAOib,WAAS,IAA/C,IAAAM,EAAAnuE,MAAAkuE,EAAAC,EAAAluE,KAAAb,MAAiD,CAAC,IAADgvE,GAAAvmC,EAAAA,GAAAA,GAAAqmC,EAAA3vE,MAAA,GAAvC4oE,EAAKiH,EAAA,GAAC7lC,EAAK6lC,EAAA,GACH,IAAVjH,GAAeA,IAAU3oE,IACzB+pC,EAAMmB,aAAaqC,eAAiB,EAE5C,CAAC,OAAApxC,IAAAwzE,EAAA7xE,EAAA3B,GAAA,SAAAwzE,EAAAjuE,GAAA,CACL,CACA,MACJ,IAAK,aACD,GAAW,IAAP1B,EAAU,CAAC,IACoC6vE,EADrCC,GAAAvuE,EAAAA,EAAAA,GACgB3C,KAAKw1D,OAAOib,WAAS,IAA/C,IAAAS,EAAAtuE,MAAAquE,EAAAC,EAAAruE,KAAAb,MAAiD,CAAC,IAADmvE,GAAA1mC,EAAAA,GAAAA,GAAAwmC,EAAA9vE,MAAA,GAAvC4oE,EAAKoH,EAAA,GAAChmC,EAAKgmC,EAAA,GACH,IAAVpH,GAAeA,IAAU3oE,IACzB+pC,EAAMmB,aAAaoC,YAAc,EAEzC,CAAC,OAAAnxC,IAAA2zE,EAAAhyE,EAAA3B,GAAA,SAAA2zE,EAAApuE,GAAA,CACL,CACA,MACJ,IAAK,UACD,GAAU,IAAN1B,EAAS,CAAC,IACqCgwE,EADtCC,GAAA1uE,EAAAA,EAAAA,GACiB3C,KAAKw1D,OAAOib,WAAS,IAA/C,IAAAY,EAAAzuE,MAAAwuE,EAAAC,EAAAxuE,KAAAb,MAAiD,CAAC,IAADsvE,GAAA7mC,EAAAA,GAAAA,GAAA2mC,EAAAjwE,MAAA,GAAvC4oE,EAAKuH,EAAA,GAACnmC,EAAKmmC,EAAA,GACH,IAAVvH,GAAeA,IAAU3oE,IACzB+pC,EAAMmB,aAAakC,WAAa,EACK,IAAjCrD,EAAMmB,aAAakC,YACnBrD,EAAMmB,aAAaiC,WAAY,GAG3C,CAAC,OAAAhxC,IAAA8zE,EAAAnyE,EAAA3B,GAAA,SAAA8zE,EAAAvuE,GAAA,CACL,CACA,MACJ,IAAK,eACD,GAAW,IAAP1B,EACA,IAAK,IAAIyvE,EAAI,EAAGA,EAAI,EAAGA,IACfzvE,IAAOyvE,IACP7wE,KAAKw1D,OAAOqb,GAAKvkC,aAAa+B,cAAgB,EAC1CruC,KAAKw1D,OAAOqb,GAAKvkC,aAAa+B,cAK9C,MAEJ,IAAK,aACD,GAAW,IAAPjtC,EACApB,KAAKw1D,OAAO,GAAGlpB,aAAa0C,aAAc,OACvC,IACFhvC,KAAKizD,QAAQ5V,MAAM,GACnBt3C,QAAO,SAAAu4C,GAAC,OAAIA,EAAEl9C,KAAOA,GAA0B,IAApBk9C,EAAE6J,aAAmB,IAChD1lD,KAAI,SAAA67C,GAAC,OAAIA,EAAEpI,OAAO,IAAEzP,SAAS,cAChC,CAAC,IACuC8qC,EADxCC,GAAA7uE,EAAAA,EAAAA,GACoB3C,KAAKw1D,OAAOnY,MAAM,IAAE,IAAtC,IAAAm0B,EAAA5uE,MAAA2uE,EAAAC,EAAA3uE,KAAAb,MAAwC,CAA1BuvE,EAAApwE,MACJmrC,aAAa0C,aAAc,CACrC,CAAC,OAAAzxC,IAAAi0E,EAAAtyE,EAAA3B,GAAA,SAAAi0E,EAAA1uE,GAAA,CACL,CACA,MACJ,IAAK,cACD,GAAW,IAAP1B,EACApB,KAAKw1D,OAAO,GAAGlpB,aAAa2C,cAAe,OACxC,IACFjvC,KAAKizD,QAAQ5V,MAAM,GACnBt3C,QAAO,SAAAu4C,GAAC,OAAIA,EAAEl9C,KAAOA,GAA0B,IAApBk9C,EAAE6J,aAAmB,IAChD1lD,KAAI,SAAA67C,GAAC,OAAIA,EAAEpI,OAAO,IAAEzP,SAAS,eAChC,CAAC,IACuCgrC,EADxCC,GAAA/uE,EAAAA,EAAAA,GACoB3C,KAAKw1D,OAAOnY,MAAM,IAAE,IAAtC,IAAAq0B,EAAA9uE,MAAA6uE,EAAAC,EAAA7uE,KAAAb,MAAwC,CAA1ByvE,EAAAtwE,MACJmrC,aAAa2C,cAAe,CACtC,CAAC,OAAA1xC,IAAAm0E,EAAAxyE,EAAA3B,GAAA,SAAAm0E,EAAA5uE,GAAA,CACL,CACA,MACJ,IAAK,WACL,IAAK,kBACL,IAAK,aACD,GAAW,IAAP1B,EACApB,KAAKw1D,OAAO,GAAGlpB,aAAa6B,YAAa,OACtC,IACFnuC,KAAKizD,QAAQ5V,MAAM,GACnBt3C,QAAO,SAAAu4C,GAAC,OAAIA,EAAEl9C,KAAOA,GAA0B,IAApBk9C,EAAE6J,aAAmB,IAChDoO,MAAK,SAAAjY,GAAC,MAAI,CAAC,WAAY,kBAAmB,cAAc7X,SAAS6X,EAAEpI,QAAuB,IAC7F,CAAC,IACuCy7B,EADxCC,GAAAjvE,EAAAA,EAAAA,GACoB3C,KAAKw1D,OAAOnY,MAAM,IAAE,IAAtC,IAAAu0B,EAAAhvE,MAAA+uE,EAAAC,EAAA/uE,KAAAb,MAAwC,CAA1B2vE,EAAAxwE,MACJmrC,aAAa6B,YAAa,CACpC,CAAC,OAAA5wC,IAAAq0E,EAAA1yE,EAAA3B,GAAA,SAAAq0E,EAAA9uE,GAAA,CACL,CACA,MAEJ,IAAK,OACL,IAAK,QACD,IAEkB+uE,EAFZvR,EAAiB,IAAPl/D,EAAW,CAAC,EAAE,EAAE,EAAE,GAAG2E,QAAO,SAAAjG,GAAC,OAAIA,IAAMsB,CAAE,IAAI,GACvD0wE,EAAiBxR,EAAQ7P,QAAO,SAACvqD,EAAGo5C,GAAC,OAAKp5C,GAAoC,UAA/BsxD,EAAK5C,WAAWtV,GAAGpJ,SAAsD,SAA/BshB,EAAK5C,WAAWtV,GAAGpJ,QAAqB,EAAI,EAAE,GAAE,GAAG67B,GAAApvE,EAAAA,EAAAA,GACvI29D,GAAO,IAAlB,IAAAyR,EAAAnvE,MAAAivE,EAAAE,EAAAlvE,KAAAb,MAAoB,CAAfZ,EAAEywE,EAAA1wE,MACH,IAAMs/D,EAAOzgE,KAAK40D,WAAWxzD,IACzBq/D,EAAKtY,cAAgB,GAAsB,UAAjBsY,EAAKvqB,SAAwC,SAAjBuqB,EAAKvqB,WAC3DuqB,EAAK3sB,UAAYg+B,EAAiB,EAE1C,CAAC,OAAAv0E,IAAAw0E,EAAA7yE,EAAA3B,GAAA,SAAAw0E,EAAAjvE,GAAA,CACD,MAEJ,IAAK,iBACL,IAAK,cACL,IAAK,mBACL,IAAK,gBACD6rE,EAAK53B,iBAAcl3C,EACnB8uE,EAAK3mB,MAAO,EACZ2mB,EAAK1mB,mBAAoB,EAIrC,GAAC,CAAAjqD,IAAA,QAAAmD,MAED,SAAaC,GAIT,IAHA,IAAImxC,EAAUvyC,KAAK40D,WAAWxzD,GACxB80C,EAAU3D,EAAQ2D,QAEfp2C,EAAE,EAAGA,EAAE,EAAGA,IACf,GAAIA,IAAMsB,EAAV,CACA,IAAMq/D,EAAOzgE,KAAK40D,WAAW90D,GACP,aAAjB2gE,EAAKvqB,SAA2C,qBAAjBuqB,EAAKvqB,SAA0D,IAAvBuqB,EAAKtY,eACzEjS,IAAY6iB,GAAAA,GAAkCtyB,SAASyP,KACvDuqB,EAAKvqB,QAAUA,EAJG,CAS9B,IAAK,IAAIp2C,EAAE,EAAGA,EAAE,EAAGA,IACf,GAAIA,IAAMsB,EAAV,CACA,IAAMutE,EAAO3uE,KAAK40D,WAAW90D,GACR,eAAjB6uE,EAAKz4B,SAAmD,IAAvBy4B,EAAKxmB,eACtCnoD,KAAKg1D,gBAAgBl1D,EAAG,CAACqQ,IAAK,IAAI,EAAMrQ,EAHlB,CAO1ByyC,EAAQpH,MAAMmB,aAAa2B,eAC3BsE,EAAQsT,oBAAsB,GAE9BtT,EAAQpH,MAAMmB,aAAamB,eAC3B8E,EAAQwT,oBAAsB,GAElCxT,EAAQpH,MAAMmB,aAAa2B,aAAe,EAC1CsE,EAAQpH,MAAMmB,aAAamB,aAAe,EAE1C8E,EAAQpH,MAAMmB,aAAa0B,eAAgB,EAC3CuE,EAAQpH,MAAMmB,aAAauC,WAAY,EACvC0D,EAAQpH,MAAMmB,aAAaoB,aAAc,EACzC6E,EAAQpH,MAAMmB,aAAaqB,aAAc,EACzC4E,EAAQpH,MAAMmB,aAAasB,cAAe,EAE1C,IAAM+8B,EAAkB,IAAIhjB,GAAQ,EAAGpV,EAAQo4B,iBAAmBp4B,EAAQlzC,KAAM,CAC5EixC,IAAKiC,EAAQjC,IACb6H,IAAK5F,EAAQ4F,IACbvN,OAAQ2H,EAAQ3H,OAChBid,gBAAiBtV,EAAQsV,gBACzBvM,eAAgB/I,EAAQ+I,iBAE5B/I,EAAQlzC,KAAOsrE,EAAgBtrE,KAC/BkzC,EAAQzL,QAAU6jC,EAAgB7jC,QAClCyL,EAAQx4B,SAAW4wD,EAAgB5wD,SACnCw4B,EAAQ/4B,MAAQmxD,EAAgBnxD,MAChC+4B,EAAQgB,MAAQo3B,EAAgBp3B,MAChChB,EAAQoB,SAAWg3B,EAAgBh3B,SACnCpB,EAAQk4B,eAAgB,EACxBl4B,EAAQm4B,eAAgB,EACxBn4B,EAAQi4B,gBAAkBj4B,EAAQs4B,oBAC9Bt4B,EAAQq4B,gBACRr4B,EAAQwe,SAAWxe,EAAQq4B,cAC3Br4B,EAAQn5B,MAAQm5B,EAAQq4B,cAAcnoE,KAAI,SAAA6W,GAAC,OAAIA,EAAEja,IAAI,KAEzDkzC,EAAQ2D,QAAU3D,EAAQi4B,gBAC1Bj4B,EAAQuB,WAAY,EACpBvB,EAAQriC,OAAS,CAACwJ,GAAI,EAAGjI,IAAK,EAAGC,IAAK,EAAGvB,IAAK,EAAGo2B,IAAK,EAAGC,IAAK,EAAGmmB,IAAK,EAAGF,IAAK,GAC9Ela,EAAQ8R,SAAW,EACnB9R,EAAQ2V,SAAU,EAClB3V,EAAQ0S,YAAa,EACrB1S,EAAQqF,aAAe,EACvBrF,EAAQwV,eAAiBxV,EAAQwV,eAAiB,GAAK,EACvDxV,EAAQwB,OAAS,GACjBxB,EAAQkjB,QAAU,EAClBljB,EAAQmjB,SAAW,EACnBnjB,EAAQwoB,OAAS,EACjBxoB,EAAQyoB,eAAiB,EACzBzoB,EAAQ6V,eAAiB,GACzB7V,EAAQ4V,cAAgB,EACxB5V,EAAQktB,UAAW,EACnBltB,EAAQqjB,QAAU,EAClBrjB,EAAQ4Z,YAAa,EACrB5Z,EAAQkhB,cAAe,EACvBlhB,EAAQ+V,sBAAmBzoD,EAC3B0yC,EAAQgmB,kBAAe14D,EACvB0yC,EAAQ0uB,gBAAiB,EACzB1uB,EAAQ0M,YAAa,EACrB1M,EAAQ0V,mBAAoB,EAC5B1V,EAAQwE,iBAAcl3C,EACtB0yC,EAAQE,WAAY,EACpBF,EAAQG,aAAc,EACtBH,EAAQwS,UAAY,EACpBxS,EAAQk0B,SAAW,EACnBl0B,EAAQm0B,WAAY,EACpBn0B,EAAQsjB,UAAY,EACpBtjB,EAAQujB,kBAAej2D,EACvB0yC,EAAQwjB,aAAe,EACvBxjB,EAAQ8V,cAAc,EACtB9V,EAAQukB,gBAAaj3D,EACrB0yC,EAAQwe,SAAWxe,EAAQq4B,eAAiBr4B,EAAQwe,SACpDxe,EAAQn5B,MAAQm5B,EAAQwe,SAAStuD,KAAI,SAAA6W,GAAC,OAAIA,EAAEja,IAAI,IAEhDkzC,EAAQsiB,wBAAqBh1D,EAC7B0yC,EAAQuiB,uBAAoBj1D,EAC5B0yC,EAAQwiB,iBAAcl1D,EAGtB0yC,EAAQ0H,cAAgB,EAGxBj6C,KAAKo+D,yBAAyBh9D,EAAI80C,EACtC,GAAC,CAAAl4C,IAAA,WAAAmD,MAED,SAAgBC,GACZ,IAAMmxC,EAAUvyC,KAAK40D,WAAWxzD,GAC5B80C,EAAU3D,EAAQ2D,QAEtB3D,EAAQ4V,cAAgB5V,EAAQ4G,QAChC5G,EAAQmtB,eAAiB,IAAIhQ,GAC7Bnd,EAAQmtB,eAAe2P,uBAAuB98B,EAAQnD,MAE9BpvC,KAAKizD,QAAQxC,QAAO,SAACvqD,EAAGo5C,GAAC,OAAKp5C,GAAmB,qBAAdo5C,EAAEpJ,OAA8B,IAAE,KACrE3D,EAAQC,QAAQ,mBAAiC,qBAAZ0D,IACzD3D,EAAQ+V,kBAAoB,GAGhC,IAAMlwC,EAAQpY,KAAKwoE,sBAAsBpnE,EAAI80C,GAkC7C,OAhCW,IAAP90C,GAA6B,QAAjBmxC,EAAQlzC,MAA2C,WAAzBW,KAAKizD,QAAQ,GAAG5zD,OACtDW,KAAKizD,QAAQ7xD,GAAM,IAAI6oE,GACnB7oE,EACAmxC,EAAQy1B,KACRz1B,EAAQ43B,OACR,EACA53B,EAAQpH,MAAM1rC,QACd,IAAIkoD,GACA3mD,GACAuxC,EAAQlzC,MAAIopC,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAA,GAEL8J,GAAO,IACVoB,cAAU9zC,EACV0zC,WAAO1zC,EACPgoD,gBAAiB,CACbnuC,GAAI,IACJjI,IAAK,IACLC,IAAK,IACLvB,IAAK,IACLo2B,IAAK,IACLC,IAAK,SAGhBG,EAAAA,GAAAA,GACG4L,EAAQwe,WAAQpqB,EAAAA,GAAAA,GACf4L,EAAQ83B,YAAc,KAAE1jC,EAAAA,GAAAA,GACxB4L,EAAQi0B,eAAiB,KAGlCxmE,KAAKizD,QAAQ7xD,GAAI+mD,cAAgBnoD,KAAKizD,QAAQ7xD,GAAI+3C,QAClD/gC,EAAMhX,GAAI2B,KAAKwvC,EAAQlzC,KAAO,8DAE3B+Y,CACX,GAAC,CAAApa,IAAA,YAAAmD,MAED,SAAiBC,EAAW1B,GACxB,IAAM6yC,EAAUvyC,KAAK40D,WAAWxzD,GAC1B4wE,EAAgBhyE,KAAK40D,WAAWl1D,GACtC,OAAK6yC,EAAQk4B,gBAAkBuH,EAAcvH,gBACzCl4B,EAAQ0/B,cAAcD,GACtBhyE,KAAKi5D,cAAc73D,EAAI4wE,EAAc97B,SAAW,iBACzC,EAIf,KAACm2B,CAAA,CAtgDiB,GCuDtB,SAAS6F,GAAaC,EAAeC,GAUjC,QARID,EAAMjiE,OAAOuB,MAAQ2gE,EAAMliE,OAAOuB,KAClC0gE,EAAMjiE,OAAOwB,MAAQ0gE,EAAMliE,OAAOwB,KAClCygE,EAAMjiE,OAAOC,MAAQiiE,EAAMliE,OAAOC,KAClCgiE,EAAMjiE,OAAOq2B,MAAQ6rC,EAAMliE,OAAOq2B,KAClC4rC,EAAMjiE,OAAOs2B,MAAQ4rC,EAAMliE,OAAOs2B,KAClC2rC,EAAMjiE,OAAOu8C,MAAQ2lB,EAAMliE,OAAOu8C,KAClC0lB,EAAMjiE,OAAOy8C,MAAQylB,EAAMliE,OAAOy8C,MAIlCwlB,EAAM/iC,OAASgjC,EAAMhjC,MACrB+iC,EAAMp+B,SAAWq+B,EAAMr+B,QACvBo+B,EAAMj8B,UAAYk8B,EAAMl8B,SACxBi8B,EAAMr+B,YAAcs+B,EAAMt+B,WAC1Bq+B,EAAMruB,SAAWsuB,EAAMtuB,QACvBquB,EAAMnqB,OAASoqB,EAAMpqB,MACrBmqB,EAAM9tB,WAAa+tB,EAAM/tB,UACzB8tB,EAAMjqB,UAAYkqB,EAAMlqB,SACxBiqB,EAAMv6B,eAAiBw6B,EAAMx6B,cAC7Bu6B,EAAMl4B,eAAiBm4B,EAAMn4B,cAC7Bk4B,EAAMvc,UAAYwc,EAAMxc,SACxBuc,EAAM1S,WAAa2S,EAAM3S,UACzB0S,EAAMpX,SAAWqX,EAAMrX,QACvBoX,EAAMnX,iBAAmBoX,EAAMpX,gBAC9BmX,EAAM/4D,MAAMqtB,SAAS,cAA6B0rC,EAAMntB,YAAcotB,EAAMptB,WAC7EmtB,EAAMzc,WAAa0c,EAAM1c,UACzByc,EAAMlR,iBAAmBmR,EAAMnR,gBAC/BkR,EAAM1L,WAAa2L,EAAM3L,UACzB0L,EAAMzL,YAAc0L,EAAM1L,WAC1ByL,EAAMtc,YAAcuc,EAAMvc,WAC1Bsc,EAAM1/B,YAAc2/B,EAAM3/B,WAC1B0/B,EAAM7pB,mBAAqB8pB,EAAM9pB,kBACjC6pB,EAAMhnC,MAAMI,UAAY6mC,EAAMjnC,MAAMI,SACpC4mC,EAAMhnC,MAAME,UAAY+mC,EAAMjnC,MAAME,SACpC8mC,EAAMhnC,MAAMgB,cAAgBimC,EAAMjnC,MAAMgB,aACxCgmC,EAAMhnC,MAAMO,eAAiB0mC,EAAMjnC,MAAMO,cACzCymC,EAAMhnC,MAAMM,cAAgB2mC,EAAMjnC,MAAMM,aACxC0mC,EAAMhnC,MAAMiB,cAAgBgmC,EAAMjnC,MAAMiB,aACxC+lC,EAAMhnC,MAAMa,gBAAkBomC,EAAMjnC,MAAMa,eAC1CmmC,EAAMhnC,MAAMY,gBAAkBqmC,EAAMjnC,MAAMY,eAC1ComC,EAAMhnC,MAAMe,iBAAmBkmC,EAAMjnC,MAAMe,gBAC3CimC,EAAMhnC,MAAMc,kBAAoBmmC,EAAMjnC,MAAMc,iBAC5CkmC,EAAMhnC,MAAMmB,aAAagC,eAAiB8jC,EAAMjnC,MAAMmB,aAAagC,cACnE6jC,EAAMhnC,MAAMmB,aAAaiB,YAAc6kC,EAAMjnC,MAAMmB,aAAaiB,WAChE4kC,EAAMhnC,MAAMmB,aAAakB,gBAAkB4kC,EAAMjnC,MAAMmB,aAAakB,eACpE2kC,EAAMhnC,MAAMmB,aAAayC,cAAgBqjC,EAAMjnC,MAAMmB,aAAayC,aAClEojC,EAAMhnC,MAAMmB,aAAawC,SAAWsjC,EAAMjnC,MAAMmB,aAAawC,QAC7DqjC,EAAMhnC,MAAMmB,aAAayB,aAAeqkC,EAAMjnC,MAAMmB,aAAayB,YACjEokC,EAAMhnC,MAAMmB,aAAauB,WAAaukC,EAAMjnC,MAAMmB,aAAauB,UAC/DskC,EAAMhnC,MAAMmB,aAAaoC,aAAe0jC,EAAMjnC,MAAMmB,aAAaoC,YACjEyjC,EAAMhnC,MAAMmB,aAAaqC,gBAAkByjC,EAAMjnC,MAAMmB,aAAaqC,eACpEwjC,EAAMhnC,MAAMmB,aAAa+B,eAAiB+jC,EAAMjnC,MAAMmB,aAAa+B,cACnE8jC,EAAMhnC,MAAMmB,aAAakC,YAAc4jC,EAAMjnC,MAAMmB,aAAakC,SAExE,CAGA,SAAS6jC,GAAkBC,EAAyBC,GAChD,IAAMrhB,EAAWqhB,EAAQvN,aAAa9T,SAChCshB,EAAUF,EAAQld,MAAMnC,QAAQ/B,GAChCuhB,EAAUF,EAAQnd,MAAMnC,QAAQ/B,GAChCwhB,EAAQJ,EAAQld,MAAMnC,QAAQ,GAC9B0f,EAAQJ,EAAQnd,MAAMnC,QAAQ,GAIpC,OAFoBqf,EAAQrM,mBAAqBsM,EAAQtM,kBAIrDiM,GAAaM,EAASC,IACtBP,GAAaQ,EAAOC,EAE5B,CA8DA,SAASC,GAAY3P,EAAsB4P,EAAgC9hB,GACvE,IAAI+hB,EAAoBD,EACpB5P,EAAK0F,OAAO/oE,OAAS,IACrBkzE,EAAoB,IAAIrK,IAAUhgC,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAC,CAAC,EAAGw6B,GAAI,IAAE0F,OAAQ1F,EAAK0F,OAAOtrB,MAAM,GAAG,KAAKy1B,GAAmB5yB,UAEtG,IAAM6yB,EAAY9P,EAAK0F,OAAO1F,EAAK0F,OAAO/oE,OAAO,GAC7CmzE,EAAUrJ,MAAM9pE,OAAS,IACzBkzE,EAAoB,IAAIrK,IAAUhgC,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAC,CAAC,EAAGw6B,GAAI,IAAE0F,OAAQ,EAAAlgC,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAA,GAAKsqC,GAAS,IAAErJ,MAAOqJ,EAAUrJ,MAAMrsB,MAAM,GAAG,QAAOw1B,GAAa3yB,UAG7H,IAAM4L,EAAWinB,EAAUrJ,MAAMqJ,EAAUrJ,MAAM9pE,OAAO,GAClD6pE,EAAeqJ,EAAkB1J,YAAYxpE,OAASkzE,EAAkB1J,YAAY0J,EAAkB1J,YAAYxpE,OAAS,QAAKC,EAChImzE,EAvEV,SAA8B5d,EAAkByU,EAAoB3G,EAAoBnS,GAMpF,IALA,IAAMqY,EAAgC,GAClC6J,GAAa,IACbC,GAA+B,EAC/BC,EAAcC,IACdC,GAAgC,EAC3BvzE,EAAE,EAAGA,EAAEixD,EAASnxD,OAAQE,IAAK,CAClC,IAAMwZ,EAAIy3C,EAASjxD,GACbwzE,GAAsB7qC,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAA,GACrBohC,GAAI,IACP7E,cAAYv8B,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAA,GACLohC,EAAK7E,cAAY,IACpBjU,SAAUz3C,MAGZ4mC,EAAS,IAAI8iB,GAAS5N,EAAOke,EAAUpQ,GAAYhjB,SACnDgR,EAAW2Y,EAAK/E,SAAS7T,OACzBzY,EAAS4c,EAAMnC,QAAQ/B,GAAU/I,cAAgBjI,EAAOkV,MAAMnC,QAAQ/B,GAAU/I,cAClF3P,EAASy6B,IACTA,EAAaz6B,EACb06B,EAAsBpzE,GAEtB04C,EAAS26B,IACTA,EAAc36B,EACd66B,EAAuBvzE,GAE3BspE,EAAYrmE,KAAKm9C,EACrB,CACA,IAAMqzB,EAA2C,CAACnK,EAAY8J,IAC1DG,IAAyBH,GACzBK,EAAuBxwE,KAAKqmE,EAAYiK,IAG5C,IADA,IAAIG,EAAU,EACPA,EAAUziB,EAASnxD,QAAQ,CAC9B,GAAI4zE,IAAYN,GAAuBM,IAAYH,EAAsB,CACrE,IACoC58B,EADhCg9B,GAAiB,EAAK98B,GAAAh0C,EAAAA,EAAAA,GACZ4wE,GAAsB,IAApC,IAAA58B,EAAA/zC,MAAA6zC,EAAAE,EAAA9zC,KAAAb,MACI,IAAKqwE,GADC57B,EAAAt1C,MACoBioE,EAAYoK,IAAW,CAC7CC,GAAiB,EACjB,KACJ,CACH,OAAAl2E,IAAAo5C,EAAAz3C,EAAA3B,GAAA,SAAAo5C,EAAA7zC,GAAA,CACG2wE,GACAF,EAAuBxwE,KAAKqmE,EAAYoK,GAEhD,CACAA,GACJ,CAQA,OANIN,GAAuB,IAAMK,EAAuBhd,MAAK,SAACjY,GAAC,OAAKA,EAAE0mB,aAAajU,SAAS1xD,OAAS0xD,EAASmiB,GAAqB7zE,IAAI,KACnIk0E,EAAuBxwE,KAAKqmE,EAAY8J,IAEN,IAAlCK,EAAuB3zE,QACvB2zE,EAAuBxwE,KAAKqmE,EAAY,IAErCmK,CACX,CAe8BG,CACtBZ,EAAkB7J,SAClBnd,EACA2d,EAAgBA,EAAavG,YAAsD,cAAxCuG,EAAa3E,SAAS/T,SAAS1xD,KAAuB,EAAI,GAAM,EAC3G0xD,GAEE4iB,EAAgBX,EAAkBvwE,KAAI,SAACwD,GAQzC,MAP+B,CAC3BgjE,SAAUhjE,EAAEmvD,MACZgU,YAAY,GAAD/oE,QAAAsmC,EAAAA,GAAAA,GAAMksC,EAAYzJ,aAAW,CAAEnjE,IAC1CijE,cAAe2J,EAAY3J,cAC3BC,cAAe0J,EAAY1J,cAC3BI,cAAesJ,EAAYtJ,cAGnC,IACA,OAAOoK,CACX,CAGA,SAASC,GAAkBC,EAAiChB,EAAkC9hB,GAC1F,GAA4B,IAAxB8iB,EAAaj0E,QACkF,IAA9Fi0E,EAAapjB,QAAO,SAAChE,EAAKnN,GAAC,OAAKmN,EAAMnN,EAAEmR,QAAO,SAACqjB,EAAMC,GAAC,OAAKD,EAAOC,EAAErK,MAAM9pE,MAAM,GAAE,EAAE,GAAE,GAExF,OAAOizE,EAEX,GAA4B,IAAxBgB,EAAaj0E,OAAc,CAC3B,IAAMmzE,EAAYc,EAAa,GAAGA,EAAa,GAAGj0E,OAAO,GAEzD,GAA4C,mBAD3BmzE,EAAUrJ,MAAMqJ,EAAUrJ,MAAM9pE,OAAO,GAC3ColE,aAAajU,SAAS1xD,KAC/B,OAAOwzE,EAAYpwE,KAAI,SAACuxE,GACpB,IAAM/Q,EAAuB,CACzByF,cAAesL,EAAG/K,SAClBN,OAAQkL,EAAa,IAEzB,OAAO,IAAIpL,GAAWxF,EAAM+Q,GAAI9zB,QACpC,GAER,CASA,OARsB2yB,EAAYpwE,KAAI,SAACuxE,EAAIl0E,GACvC,IAIMm0E,EAAcrB,GAJe,CAC/BlK,cAAesL,EAAG/K,SAClBN,OAAQkL,EAAa,IAEmBG,EAAIjjB,GAChD,OAAO6iB,GAAkBC,EAAax2B,MAAM,GAAI42B,EAAaljB,EACjE,IAAGmjB,MAEP,CAcO,SAASC,GAAkBlhB,EAAmB0V,GACjD,IAAMD,EAAgB,IAAI2D,GAAUpZ,GAK9BmhB,EAAiB,IAAI3L,GAJU,CACjCC,cAAeA,EACfC,OAAQ,KAEwCzoB,SAE9C2zB,EAnQV,SAAqBlL,GAGjB,IAFA,IAAM0L,EAAkC,GACpCC,EAAgC,GAC3Bx0E,EAAI,EAAGA,EAAI6oE,EAAO/oE,OAAQE,IAAK,CACpC,IAAIi0E,EAAIpL,EAAO7oE,GACf,GACIi0E,EAAErK,MAAMnT,MAAK,SAACtwD,GAAC,MAAsC,mBAAjCA,EAAE++D,aAAajU,SAAS1xD,IAAyB,IAOrE,IALA,IAAIk1E,EAA8B,CAC9BnzE,GAAI2yE,EAAE3yE,GACNsoE,MAAO,GACPC,QAASoK,EAAEpK,SAENptB,EAAI,EAAGA,EAAIw3B,EAAErK,MAAM9pE,OAAQ28C,IAAK,CACrC,IAAMt2C,EAAI8tE,EAAErK,MAAMntB,GAClBg4B,EAAa7K,MAAM3mE,KAAKkD,GAEc,mBAAjCA,EAAE++D,aAAajU,SAAS1xD,MAEzBi1E,EAAavxE,KAAKwxE,GAClBF,EAAatxE,KAAKuxE,GAClBC,EAAe,CACXnzE,GAAI2yE,EAAE3yE,GACNsoE,MAAO,GACPC,QAASoK,EAAEpK,SAEf2K,EAAe,IACR/3B,IAAMw3B,EAAErK,MAAM9pE,OAAO,GAC5B00E,EAAavxE,KAAKwxE,EAE1B,MAEAD,EAAavxE,KAAKgxE,GACdj0E,IAAM6oE,EAAO/oE,OAAO,GACpBy0E,EAAatxE,KAAKuxE,EAG9B,CACA,OAAOD,CACX,CA4NyBG,CAnRzB,SAAuB7L,GACnB,IACoBpmE,EADdkyE,EAA6B,GAAG/xE,GAAAC,EAAAA,EAAAA,GACxBgmE,GAAM,IAApB,IAAAjmE,EAAAE,MAAAL,EAAAG,EAAAG,KAAAb,MACI,IADmB,IAAd+xE,EAACxxE,EAAApB,MACGrB,EAAE,EAAGA,GAAGi0E,EAAEpK,SAAW,GAAI7pE,IAC9B20E,EAAU1xE,MAAI0lC,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAC,CAAD,EAEHsrC,GAAC,IACJpK,QAAS,IAIxB,OAAApsE,IAAAmF,EAAAxD,EAAA3B,GAAA,SAAAmF,EAAAI,GAAA,CACD,OAAO2xE,CACX,CAsQqCC,CAAc/L,GAAQ5iE,QAAO,SAACguE,GAAC,OAAKA,EAAErK,MAAM9pE,OAAS,CAAC,KACjF+zE,EAAgBC,GAAkBC,EAAc,CAACO,GAAiBnhB,EAAQ,GAAGlC,UAC7E4jB,EAAehB,EAAclxE,KAAI,SAAC67C,GAAC,QAtBpB4B,EAsByC5B,GArBxC2qB,SAAShW,QAAQ,GAAG9K,eAAiB,EAQzC,EAAI,KAA2B,IAP/BjI,EAAO+oB,SAAShW,QAAQ5V,MAAM,GAAGoT,QAAO,SAAChE,EAAKnO,GAAC,OAAKmO,EAAMnO,EAAErE,YAAY,GAAE,GAOf,IANrDiG,EAAO+oB,SAAShW,QAAQ5V,MAAM,GAAGoT,QAAO,SAAChE,EAAKnO,GAClE,IAAMwkB,EAAWxkB,EAAEohB,eAAe9jB,YAAY0C,EAAEnF,UAAY,EAE5D,OAAOsT,GADoB,IAAbqW,EAAiB,EAAIjyB,KAAKmC,IAAI,EAAG8vB,GAEnD,GAAG,GACc5iB,EAAO+oB,SAAShW,QAAQ5V,MAAM,GAAGoT,QAAO,SAAChE,EAAKnO,GAAC,OAAKmO,EAAMnO,EAAE6J,aAAa,GAAE,GARhG,IAAyBjI,CAsB2C,IAGhE,OAFAxiD,QAAQC,IAAI,kDAAoDg2E,EAAc/zE,QAC3D+zE,EAAcgB,EAAah/B,QAAQ9E,KAAKmC,IAAGkB,MAARrD,MAAIlK,EAAAA,GAAAA,GAAQguC,KAEtE,CCvRA,IAAM3zE,GAAM6pC,GAAY5oC,IAAI,GAE5BgO,KAAK2kE,UAAY,SAACC,GACd,IACM5hB,EADiB4hB,EAAM18D,KAAK86C,QACHxwD,KAAI,SAAC67C,GAAC,OAAK,IAAI2rB,GAAO3rB,EAAEl9C,GAAIk9C,EAAE0pB,KAAM1pB,EAAE6rB,OAAO,EAAO,IAAIj/B,GAAS,IAAIyc,GAAQ3mD,GAAKs9C,EAAEj/C,KAAM,CACrH8xC,MAAOmN,EAAEnN,MACT52B,OAAQ+jC,EAAE/jC,OACV+gC,eAAgBgD,EAAEhD,eAClBpF,QAASoI,EAAEpI,QACXtL,OAAQ0T,EAAE1T,OACVuN,IAAKmG,EAAEnG,IACP7H,IAAKgO,EAAEhO,IACPlB,KAAMkP,EAAElP,KACR+P,SAAUb,EAAEa,SACZ/lC,MAAOklC,EAAEllC,MACTstC,WAAYpI,EAAEoI,aACdpI,EAAEyS,SAAUzS,EAAE+rB,WAAY/rB,EAAEkoB,cAAc,IAE9CvT,EAAQ,GAAGnP,QAAS,EACpB,IAAK,IAAIhkD,EAAI,EAAGA,EAAImzD,EAAQrzD,OAAQE,IAChCmzD,EAAQnzD,GAAGqrC,MAAMC,SAAW,UAGhC,IAAM0pC,EAAeD,EAAM18D,KAAKwwD,OAAOlmE,KAAI,SAACsxE,GAAC,OAAKA,EAAErK,MAAMjnE,KAAI,SAACwD,GAAC,MAAsC,mBAAjCA,EAAE++D,aAAajU,SAAS1xD,KAA4B,EAAI,CAAC,GAAC,IAAE60E,OAAoBzjB,QAAO,SAAChE,EAAKsoB,GAAC,OAAKtoB,EAAMsoB,CAAC,GAAE,GACjL,GAAID,EAAc,GAAK7hB,EAAQ,GAAGlC,SAAShrD,QAAO,SAAAuT,GAAC,MAAe,cAAXA,EAAEja,IAAoB,IAAEO,OAAS,EACpFqQ,KAAK+kE,YAAYC,KAAKC,MAAMD,KAAKE,UAAUhB,GAAkBlhB,EAAS4hB,EAAM18D,KAAKwwD,eAC9E,CACH,IACU1F,EAAuB,CACzByF,cAFM,IAAI2D,GAAUpZ,GAGpB0V,OAAQkM,EAAM18D,KAAKwwD,QAIjBzoB,EADS,IAAIuoB,GAAWxF,GACR/iB,SACtBjwC,KAAK+kE,YAAYC,KAAKC,MAAMD,KAAKE,UAAUj1B,IACnD,CACJ,C,GC9CIk1B,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBz1E,IAAjB01E,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,EAAyBE,GAAY,CAGjDE,QAAS,CAAC,GAOX,OAHAE,EAAoBJ,GAAUG,EAAQA,EAAOD,QAASH,GAG/CI,EAAOD,OACf,CAGAH,EAAoB/7D,EAAIo8D,EAGxBL,EAAoBM,EAAI,WAGvB,IAAIC,EAAsBP,EAAoBQ,OAAEh2E,EAAW,CAAC,OAAO,WAAa,OAAOw1E,EAAoB,MAAQ,IAEnH,OADAO,EAAsBP,EAAoBQ,EAAED,EAE7C,E,WClCA,IAAIE,EAAW,GACfT,EAAoBQ,EAAI,SAAS31B,EAAQ61B,EAAUC,EAAIxpE,GACtD,IAAGupE,EAAH,CAMA,IAAIE,EAAe7C,IACnB,IAAStzE,EAAI,EAAGA,EAAIg2E,EAASl2E,OAAQE,IAAK,CACrCi2E,EAAWD,EAASh2E,GAAG,GACvBk2E,EAAKF,EAASh2E,GAAG,GACjB0M,EAAWspE,EAASh2E,GAAG,GAE3B,IAJA,IAGIo2E,GAAY,EACP35B,EAAI,EAAGA,EAAIw5B,EAASn2E,OAAQ28C,MACpB,EAAX/vC,GAAsBypE,GAAgBzpE,IAAavO,OAAO6D,KAAKuzE,EAAoBQ,GAAGzlB,OAAM,SAASpyD,GAAO,OAAOq3E,EAAoBQ,EAAE73E,GAAK+3E,EAASx5B,GAAK,IAChKw5B,EAAShmB,OAAOxT,IAAK,IAErB25B,GAAY,EACT1pE,EAAWypE,IAAcA,EAAezpE,IAG7C,GAAG0pE,EAAW,CACbJ,EAAS/lB,OAAOjwD,IAAK,GACrB,IAAIw+C,EAAI03B,SACEn2E,IAANy+C,IAAiB4B,EAAS5B,EAC/B,CACD,CACA,OAAO4B,CArBP,CAJC1zC,EAAWA,GAAY,EACvB,IAAI,IAAI1M,EAAIg2E,EAASl2E,OAAQE,EAAI,GAAKg2E,EAASh2E,EAAI,GAAG,GAAK0M,EAAU1M,IAAKg2E,EAASh2E,GAAKg2E,EAASh2E,EAAI,GACrGg2E,EAASh2E,GAAK,CAACi2E,EAAUC,EAAIxpE,EAwB/B,C,IC5BA6oE,EAAoB/3B,EAAI,SAASk4B,EAASW,GACzC,IAAI,IAAIn4E,KAAOm4E,EACXd,EAAoBe,EAAED,EAAYn4E,KAASq3E,EAAoBe,EAAEZ,EAASx3E,IAC5EC,OAAOo4E,eAAeb,EAASx3E,EAAK,CAAEs4E,YAAY,EAAMr0E,IAAKk0E,EAAWn4E,IAG3E,ECPAq3E,EAAoBvyE,EAAI,CAAC,EAGzBuyE,EAAoBn2E,EAAI,SAASq3E,GAChC,OAAOC,QAAQC,IAAIx4E,OAAO6D,KAAKuzE,EAAoBvyE,GAAG2tD,QAAO,SAASimB,EAAU14E,GAE/E,OADAq3E,EAAoBvyE,EAAE9E,GAAKu4E,EAASG,GAC7BA,CACR,GAAG,IACJ,ECPArB,EAAoBsB,EAAI,SAASJ,GAEhC,MAAO,aAAeA,EAAf,oBACR,ECHAlB,EAAoBuB,SAAW,SAASL,GAGxC,ECJAlB,EAAoBe,EAAI,SAASz3E,EAAKk4E,GAAQ,OAAO54E,OAAOC,UAAUC,eAAeC,KAAKO,EAAKk4E,EAAO,ECAtGxB,EAAoBnvE,EAAI,sB,WCIxB,IAAI4wE,EAAkB,CACrB,KAAM,GAkBPzB,EAAoBvyE,EAAEhD,EAAI,SAASy2E,EAASG,GAEvCI,EAAgBP,IAElBQ,cAAc1B,EAAoBnvE,EAAImvE,EAAoBsB,EAAEJ,GAG/D,EAEA,IAAIS,EAAqB/mE,KAAoC,8BAAIA,KAAoC,+BAAK,GACtGgnE,EAA6BD,EAAmBj0E,KAAKm0E,KAAKF,GAC9DA,EAAmBj0E,KAzBA,SAASoV,GAC3B,IAAI49D,EAAW59D,EAAK,GAChBg/D,EAAch/D,EAAK,GACnBi/D,EAAUj/D,EAAK,GACnB,IAAI,IAAIm9D,KAAY6B,EAChB9B,EAAoBe,EAAEe,EAAa7B,KACrCD,EAAoB/7D,EAAEg8D,GAAY6B,EAAY7B,IAIhD,IADG8B,GAASA,EAAQ/B,GACdU,EAASn2E,QACdk3E,EAAgBf,EAASsB,OAAS,EACnCJ,EAA2B9+D,EAC5B,C,eCtBA,IAAIvW,EAAOyzE,EAAoBM,EAC/BN,EAAoBM,EAAI,WACvB,OAAON,EAAoBn2E,EAAE,MAAMo4E,KAAK11E,EACzC,C,ICF0ByzE,EAAoBM,G","sources":["calc/util.ts","calc/data/abilities.ts","calc/data/items.ts","calc/data/moves.ts","calc/data/species.ts","calc/data/types.ts","calc/data/natures.ts","calc/data/index.ts","calc/field.ts","calc/items.ts","calc/stats.ts","calc/mechanics/util.ts","calc/desc.ts","calc/result.ts","calc/mechanics/gen12.ts","calc/mechanics/gen4.ts","calc/mechanics/gen56.ts","calc/mechanics/gen789.ts","calc/calc.ts","calc/mechanics/gen3.ts","calc/pokemon.ts","calc/move.ts","calc/state.ts","calc/index.ts","raidcalc/util.ts","raidcalc/rolls.ts","raidcalc/RaidMove.ts","raidcalc/RaidTurn.ts","raidcalc/RaidBattle.ts","raidcalc/Raider.ts","raidcalc/RaidState.ts","raidcalc/optmoves.ts","workers/raidcalc.worker.ts","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["/* eslint-disable eqeqeq, @typescript-eslint/unbound-method, @typescript-eslint/ban-types */\nimport {ID} from './data/interface';\n\nexport function toID(text: any): ID {\n  return ('' + text).toLowerCase().replace(/[^a-z0-9]+/g, '') as ID;\n}\n\nexport function error(err: boolean, msg: string) {\n  if (err) {\n    throw new Error(msg);\n  } else {\n    console.log(msg);\n  }\n}\n\nexport function assignWithout(\n  a: {[key: string]: any}, b: {[key: string]: any}, exclude: Set<string>\n) {\n  for (const key in b) {\n    if (Object.prototype.hasOwnProperty.call(b, key) && !exclude.has(key)) {\n      a[key] = b[key];\n    }\n  }\n}\n\n// https://github.com/krzkaczor/ts-essentials v6.0.5\n// MIT License Copyright 2018-2019 Chris Kaczor\nexport type Primitive = string | number | boolean | bigint | symbol | undefined | null;\nexport type Builtin = Primitive | Function | Date | Error | RegExp;\n\nexport type IsTuple<T> =\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  T extends [infer A] ? T\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  : T extends [infer A, infer B] ? T\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  : T extends [infer A, infer B, infer C] ? T\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  : T extends [infer A, infer B, infer C, infer D] ? T\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  : T extends [infer A, infer B, infer C, infer D, infer E] ? T\n  : never;\n\nexport type DeepPartial<T> =\n  T extends Builtin ? T\n  : T extends Map<infer K, infer V> ? Map<DeepPartial<K>, DeepPartial<V>>\n  : T extends ReadonlyMap<infer K, infer V> ? ReadonlyMap<DeepPartial<K>, DeepPartial<V>>\n  : T extends Set<infer U> ? Set<DeepPartial<U>>\n  : T extends ReadonlySet<infer U> ? ReadonlySet<DeepPartial<U>>\n  : T extends Array<infer U> ? T extends IsTuple<T>\n    ? { [K in keyof T]?: DeepPartial<T[K]> }\n    : Array<DeepPartial<U>>\n  : T extends Promise<infer U> ? Promise<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\n// jQuery JavaScript Library v2.0.3\n// Copyright 2005, 2013 jQuery Foundation, Inc. and other contributors\nconst class2Type: {[c: string]: string} = {\n  '[object Boolean]': 'boolean',\n  '[object Number]': 'number',\n  '[object String]': 'string',\n  '[object Function]': 'function',\n  '[object Array]': 'array',\n  '[object Date]': 'date',\n  '[object RegExp]': 'regexp',\n  '[object Object]': 'object',\n  '[object Error]': 'error',\n};\n\nconst coreToString = class2Type.toString;\nconst coreHasOwn = class2Type.hasOwnProperty;\n\nfunction isFunction(obj: any) {\n  return getType(obj) === 'function';\n}\n\nfunction isWindow(obj: any) {\n  return obj != null && obj === obj.window;\n}\n\nfunction getType(obj: any) {\n  if (obj == null) {\n    return String(obj);\n  }\n  return typeof obj === 'object' || typeof obj === 'function'\n    ? class2Type[coreToString.call(obj)] || 'object'\n    : typeof obj;\n}\n\nfunction isPlainObject(obj: any) {\n  if (getType(obj) !== 'object' || obj.nodeType || isWindow(obj)) {\n    return false;\n  }\n\n  try {\n    if (obj.constructor && !coreHasOwn.call(obj.constructor.prototype, 'isPrototypeOf')) {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function extend(this: any, ...args: any[]) {\n  let options, name, src, copy, copyIsArray, clone;\n  let target = args[0] || {};\n  let i = 1;\n  let deep = false;\n  const length = args.length;\n\n  if (typeof target === 'boolean') {\n    deep = target;\n    target = args[1] || {};\n    i = 2;\n  }\n\n  if (typeof target !== 'object' && !isFunction(target)) {\n    target = {};\n  }\n\n  if (length === i) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    target = this;\n    --i;\n  }\n\n  for (; i < length; i++) {\n    if ((options = args[i]) != null) {\n      // tslint:disable-next-line: forin\n      for (name in options) {\n        src = target[name];\n        copy = options[name];\n\n        if (target === copy) {\n          continue;\n        }\n\n        if (deep && copy && (isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n          if (copyIsArray) {\n            copyIsArray = false;\n            clone = src && Array.isArray(src) ? src : [];\n          } else {\n            clone = src && isPlainObject(src) ? src : {};\n          }\n\n          target[name] = extend(deep, clone, copy);\n        } else if (copy !== undefined) {\n          target[name] = copy;\n        }\n      }\n    }\n  }\n\n  return target;\n}\n","import * as I from './interface';\nimport {toID} from '../util';\n\nconst RBY: string[] = [];\n\nconst GSC: string[] = [];\n\nconst ADV = [\n  'Air Lock',\n  'Arena Trap',\n  'Battle Armor',\n  'Blaze',\n  'Chlorophyll',\n  'Clear Body',\n  'Cloud Nine',\n  'Color Change',\n  'Compound Eyes',\n  'Cute Charm',\n  'Drizzle',\n  'Damp',\n  'Drought',\n  'Early Bird',\n  'Effect Spore',\n  'Flame Body',\n  'Flash Fire',\n  'Forecast',\n  'Guts',\n  'Huge Power',\n  'Hustle',\n  'Hyper Cutter',\n  'Illuminate',\n  'Immunity',\n  'Inner Focus',\n  'Insomnia',\n  'Intimidate',\n  'Keen Eye',\n  'Levitate',\n  'Lightning Rod',\n  'Limber',\n  'Liquid Ooze',\n  'Magma Armor',\n  'Magnet Pull',\n  'Marvel Scale',\n  'Minus',\n  'Natural Cure',\n  'Oblivious',\n  'Overgrow',\n  'Own Tempo',\n  'Pickup',\n  'Plus',\n  'Poison Point',\n  'Pressure',\n  'Pure Power',\n  'Rain Dish',\n  'Rock Head',\n  'Rough Skin',\n  'Run Away',\n  'Sand Stream',\n  'Sand Veil',\n  'Serene Grace',\n  'Shadow Tag',\n  'Shed Skin',\n  'Shell Armor',\n  'Shield Dust',\n  'Soundproof',\n  'Speed Boost',\n  'Static',\n  'Stench',\n  'Sticky Hold',\n  'Sturdy',\n  'Suction Cups',\n  'Swarm',\n  'Swift Swim',\n  'Synchronize',\n  'Thick Fat',\n  'Torrent',\n  'Trace',\n  'Truant',\n  'Vital Spirit',\n  'Volt Absorb',\n  'Water Absorb',\n  'Water Veil',\n  'White Smoke',\n  'Wonder Guard',\n];\n\nconst DPP = ADV.concat([\n  'Adaptability',\n  'Aftermath',\n  'Anger Point',\n  'Anticipation',\n  'Bad Dreams',\n  'Download',\n  'Dry Skin',\n  'Filter',\n  'Flower Gift',\n  'Forewarn',\n  'Frisk',\n  'Gluttony',\n  'Heatproof',\n  'Honey Gather',\n  'Hydration',\n  'Ice Body',\n  'Iron Fist',\n  'Klutz',\n  'Leaf Guard',\n  'Magic Guard',\n  'Mold Breaker',\n  'Motor Drive',\n  'Mountaineer',\n  'Multitype',\n  'No Guard',\n  'Normalize',\n  'Persistent',\n  'Poison Heal',\n  'Quick Feet',\n  'Rebound',\n  'Reckless',\n  'Rivalry',\n  'Scrappy',\n  'Simple',\n  'Skill Link',\n  'Slow Start',\n  'Sniper',\n  'Snow Cloak',\n  'Snow Warning',\n  'Solar Power',\n  'Solid Rock',\n  'Stall',\n  'Steadfast',\n  'Storm Drain',\n  'Super Luck',\n  'Tangled Feet',\n  'Technician',\n  'Tinted Lens',\n  'Unaware',\n  'Unburden',\n]);\n\nconst BW = DPP.concat([\n  'Analytic',\n  'Big Pecks',\n  'Contrary',\n  'Cursed Body',\n  'Defeatist',\n  'Defiant',\n  'Flare Boost',\n  'Friend Guard',\n  'Harvest',\n  'Healer',\n  'Heavy Metal',\n  'Illusion',\n  'Imposter',\n  'Infiltrator',\n  'Iron Barbs',\n  'Light Metal',\n  'Justified',\n  'Magic Bounce',\n  'Moody',\n  'Moxie',\n  'Multiscale',\n  'Mummy',\n  'Overcoat',\n  'Pickpocket',\n  'Poison Touch',\n  'Prankster',\n  'Rattled',\n  'Regenerator',\n  'Sand Force',\n  'Sand Rush',\n  'Sap Sipper',\n  'Sheer Force',\n  'Telepathy',\n  'Teravolt',\n  'Toxic Boost',\n  'Turboblaze',\n  'Unnerve',\n  'Victory Star',\n  'Weak Armor',\n  'Wonder Skin',\n  'Zen Mode',\n]);\n\nconst XY = BW.concat([\n  'Aerilate',\n  'Aura Break',\n  'Aroma Veil',\n  'Bulletproof',\n  'Cheek Pouch',\n  'Competitive',\n  'Dark Aura',\n  'Delta Stream',\n  'Desolate Land',\n  'Fairy Aura',\n  'Flower Veil',\n  'Fur Coat',\n  'Gale Wings',\n  'Gooey',\n  'Grass Pelt',\n  'Magician',\n  'Mega Launcher',\n  'Parental Bond',\n  'Pixilate',\n  'Primordial Sea',\n  'Protean',\n  'Refrigerate',\n  'Stance Change',\n  'Strong Jaw',\n  'Sweet Veil',\n  'Symbiosis',\n  'Tough Claws',\n]);\n\nconst SM = XY.concat([\n  'Battery',\n  'Battle Bond',\n  'Beast Boost',\n  'Berserk',\n  'Comatose',\n  'Corrosion',\n  'Dancer',\n  'Dazzling',\n  'Disguise',\n  'Electric Surge',\n  'Emergency Exit',\n  'Fluffy',\n  'Full Metal Body',\n  'Galvanize',\n  'Grassy Surge',\n  'Innards Out',\n  'Liquid Voice',\n  'Long Reach',\n  'Merciless',\n  'Misty Surge',\n  'Neuroforce',\n  'Power Construct',\n  'Power of Alchemy',\n  'Prism Armor',\n  'Psychic Surge',\n  'Queenly Majesty',\n  'RKS System',\n  'Receiver',\n  'Schooling',\n  'Shadow Shield',\n  'Shields Down',\n  'Slush Rush',\n  'Stamina',\n  'Stakeout',\n  'Steelworker',\n  'Soul-Heart',\n  'Surge Surfer',\n  'Tangling Hair',\n  'Triage',\n  'Water Bubble',\n  'Water Compaction',\n  'Wimp Out',\n]);\n\nconst SS = SM.concat([\n  'As One (Glastrier)',\n  'As One (Spectrier)',\n  'Ball Fetch',\n  'Chilling Neigh',\n  'Cotton Down',\n  'Curious Medicine',\n  'Dauntless Shield',\n  'Dragon\\'s Maw',\n  'Gorilla Tactics',\n  'Grim Neigh',\n  'Gulp Missile',\n  'Hunger Switch',\n  'Ice Face',\n  'Ice Scales',\n  'Intrepid Sword',\n  'Libero',\n  'Mimicry',\n  'Mirror Armor',\n  'Neutralizing Gas',\n  'Pastel Veil',\n  'Perish Body',\n  'Power Spot',\n  'Propeller Tail',\n  'Punk Rock',\n  'Quick Draw',\n  'Ripen',\n  'Sand Spit',\n  'Screen Cleaner',\n  'Stalwart',\n  'Steam Engine',\n  'Steely Spirit',\n  'Transistor',\n  'Unseen Fist',\n  'Wandering Spirit',\n]);\n\nconst SV = SS.concat([\n  'Anger Shell',\n  'Armor Tail',\n  'Beads of Ruin',\n  'Commander',\n  'Costar',\n  'Cud Chew',\n  'Earth Eater',\n  'Electromorphosis',\n  'Embody Aspect (Cornerstone)',\n  'Embody Aspect (Hearthflame)',\n  'Embody Aspect (Teal)',\n  'Embody Aspect (Wellspring)',\n  'Good as Gold',\n  'Guard Dog',\n  'Hadron Engine',\n  'Hospitality',\n  'Lingering Aroma',\n  \"Mind's Eye\",\n  'Mycelium Might',\n  'Opportunist',\n  'Orichalcum Pulse',\n  'Poison Puppeteer',\n  'Protosynthesis',\n  'Purifying Salt',\n  'Quark Drive',\n  'Rocky Payload',\n  'Seed Sower',\n  'Sharpness',\n  'Supersweet Syrup',\n  'Supreme Overlord',\n  'Sword of Ruin',\n  'Tablets of Ruin',\n  'Tera Shell',\n  'Tera Shift',\n  'Teraform Zero',\n  'Thermal Exchange',\n  'Toxic Chain',\n  'Toxic Debris',\n  'Vessel of Ruin',\n  'Well-Baked Body',\n  'Wind Power',\n  'Wind Rider',\n  'Zero to Hero',\n]);\n\nexport const ABILITIES = [[], RBY, GSC, ADV, DPP, BW, XY, SM, SS, SV];\n\nexport class Abilities implements I.Abilities {\n  private readonly gen: I.GenerationNum;\n\n  constructor(gen: I.GenerationNum) {\n    this.gen = gen;\n  }\n\n  get(id: I.ID) {\n    return ABILITIES_BY_ID[this.gen][id];\n  }\n\n  *[Symbol.iterator]() {\n    for (const id in ABILITIES_BY_ID[this.gen]) {\n      yield this.get(id as I.ID)!;\n    }\n  }\n}\n\nclass Ability implements I.Ability {\n  readonly kind: 'Ability';\n  readonly id: I.ID;\n  readonly name: I.AbilityName;\n\n  constructor(name: string) {\n    this.kind = 'Ability';\n    this.id = toID(name);\n    this.name = name as I.AbilityName;\n  }\n}\n\nconst ABILITIES_BY_ID: Array<{[id: string]: Ability}> = [];\n\nfor (const abilities of ABILITIES) {\n  const map: {[id: string]: Ability} = {};\n  for (const ability of abilities) {\n    const a = new Ability(ability);\n    map[a.id] = a;\n  }\n  ABILITIES_BY_ID.push(map);\n}\n","import * as I from './interface';\nimport {toID} from '../util';\n\nconst RBY: string[] = [];\n\nconst GSC = [\n  // 'Berry Juice',\n  // 'Berry',\n  // 'Berserk Gene',\n  // 'Bitter Berry',\n  'Black Belt',\n  'Black Glasses',\n  'Bright Powder',\n  // 'Burnt Berry',\n  'Charcoal',\n  'Dragon Fang',\n  'Dragon Scale',\n  'Fast Ball',\n  'Fire Stone',\n  'Focus Band',\n  'Friend Ball',\n  // 'Gold Berry',\n  'Great Ball',\n  'Hard Stone',\n  'Heavy Ball',\n  // 'Ice Berry',\n  'King\\'s Rock',\n  'Leaf Stone',\n  'Leftovers',\n  'Level Ball',\n  'Light Ball',\n  'Love Ball',\n  // 'Lucky Punch',\n  'Lure Ball',\n  'Magnet',\n  // 'Mail',\n  'Master Ball',\n  'Metal Coat',\n  // 'Metal Powder',\n  // 'Mint Berry',\n  // 'Miracle Berry',\n  'Miracle Seed',\n  'Moon Ball',\n  'Moon Stone',\n  // 'Mystery Berry',\n  'Mystic Water',\n  'Never-Melt Ice',\n  'Nugget',\n  // 'Pink Bow',\n  'Poison Barb',\n  // 'Poke Ball',\n  'Pokeball',\n  // 'Polkadot Bow',\n  // 'PRZ Cure Berry',\n  // 'PSN Cure Berry',\n  'Quick Claw',\n  'Safari Ball',\n  'Scope Lens',\n  'Sharp Beak',\n  'Silver Powder',\n  'Soft Sand',\n  'Spell Tag',\n  'Sport Ball',\n  // 'Stick',\n  'Sun Stone',\n  // 'Thick Club',\n  'Thunder Stone',\n  'Twisted Spoon',\n  'Ultra Ball',\n  // 'Up-Grade',\n  'Water Stone',\n];\n\n// const GSC_ONLY = [\n  // 'Berry',\n  // 'Berserk Gene',\n  // 'Bitter Berry',\n  // 'Burnt Berry',\n  // 'Ice Berry',\n  // 'Mint Berry',\n  // 'Miracle Berry',\n  // 'Mystery Berry',\n  // 'PRZ Cure Berry',\n  // 'Gold Berry',\n  // 'Pink Bow',\n  // 'Polkadot Bow',\n  // 'PSN Cure Berry',\n  // 'Enigma Berry',\n// ];\n\nconst ADV = GSC.concat([  //GSC.filter(i => !GSC_ONLY.includes(i)).concat([\n  'Aguav Berry',\n  'Apicot Berry',\n  'Aspear Berry',\n  'Belue Berry',\n  'Bluk Berry',\n  'Cheri Berry',\n  'Chesto Berry',\n  'Choice Band',\n  // 'Claw Fossil',\n  'Cornn Berry',\n  // 'Deep Sea Scale',\n  // 'Deep Sea Tooth',\n  'Dive Ball',\n  // 'Dome Fossil',\n  'Durin Berry',\n  'Enigma Berry',\n  'Figy Berry',\n  'Ganlon Berry',\n  'Grepa Berry',\n  // 'Helix Fossil',\n  'Hondew Berry',\n  'Iapapa Berry',\n  'Kelpsy Berry',\n  'Lansat Berry',\n  'Lax Incense',\n  'Leppa Berry',\n  'Liechi Berry',\n  'Lum Berry',\n  'Luxury Ball',\n  // 'Macho Brace',\n  'Mago Berry',\n  'Magost Berry',\n  'Mental Herb',\n  'Nanab Berry',\n  'Nest Ball',\n  'Net Ball',\n  'Nomel Berry',\n  // 'Old Amber',\n  'Oran Berry',\n  'Pamtre Berry',\n  'Pecha Berry',\n  'Persim Berry',\n  'Petaya Berry',\n  // 'Pinap Berry',\n  'Pomeg Berry',\n  'Premier Ball',\n  'Qualot Berry',\n  // 'Rabuta Berry',\n  'Rawst Berry',\n  'Razz Berry',\n  'Repeat Ball',\n  // 'Root Fossil',\n  'Salac Berry',\n  'Sea Incense',\n  'Shell Bell',\n  'Silk Scarf',\n  'Sitrus Berry',\n  'Soul Dew',\n  'Spelon Berry',\n  'Starf Berry',\n  'Tamato Berry',\n  'Timer Ball',\n  'Watmel Berry',\n  'Wepear Berry',\n  'White Herb',\n  'Wiki Berry',\n]);\n\nconst DPP = ADV.concat([\n  'Adamant Orb',\n  // 'Armor Fossil',\n  'Babiri Berry',\n  'Big Root',\n  'Black Sludge',\n  'Charti Berry',\n  'Cherish Ball',\n  'Chilan Berry',\n  'Choice Scarf',\n  'Choice Specs',\n  'Chople Berry',\n  'Coba Berry',\n  'Colbur Berry',\n  'Custap Berry',\n  'Damp Rock',\n  'Dawn Stone',\n  'Destiny Knot',\n  'Draco Plate',\n  'Dread Plate',\n  'Dubious Disc',\n  'Dusk Ball',\n  'Dusk Stone',\n  'Earth Plate',\n  'Electirizer',\n  'Expert Belt',\n  'Fist Plate',\n  'Flame Orb',\n  'Flame Plate',\n  'Focus Sash',\n  'Full Incense',\n  'Grip Claw',\n  'Griseous Orb',\n  'Haban Berry',\n  'Heal Ball',\n  'Heat Rock',\n  'Icicle Plate',\n  'Icy Rock',\n  'Insect Plate',\n  'Iron Ball',\n  'Iron Plate',\n  'Jaboca Berry',\n  'Kasib Berry',\n  'Kebia Berry',\n  'Lagging Tail',\n  'Life Orb',\n  'Light Clay',\n  'Lustrous Orb',\n  'Magmarizer',\n  'Meadow Plate',\n  'Metronome',\n  'Micle Berry',\n  'Mind Plate',\n  'Muscle Band',\n  'Occa Berry',\n  'Odd Incense',\n  'Oval Stone',\n  'Park Ball',\n  'Passho Berry',\n  'Payapa Berry',\n  'Power Anklet',\n  'Power Band',\n  'Power Belt',\n  'Power Bracer',\n  'Power Herb',\n  'Power Lens',\n  'Power Weight',\n  'Protector',\n  'Quick Ball',\n  // 'Quick Powder',\n  'Rare Bone',\n  'Razor Claw',\n  'Razor Fang',\n  'Reaper Cloth',\n  'Rindo Berry',\n  'Rock Incense',\n  'Rose Incense',\n  'Rowap Berry',\n  'Shed Shell',\n  'Shiny Stone',\n  'Shuca Berry',\n  // 'Skull Fossil',\n  'Sky Plate',\n  'Smooth Rock',\n  'Splash Plate',\n  'Spooky Plate',\n  'Sticky Barb',\n  'Stone Plate',\n  'Tanga Berry',\n  'Toxic Orb',\n  'Toxic Plate',\n  'Wacan Berry',\n  'Wave Incense',\n  'Wide Lens',\n  'Wise Glasses',\n  'Yache Berry',\n  'Zap Plate',\n  'Zoom Lens',\n]);\n\nconst BW = DPP.concat([\n  'Absorb Bulb',\n  'Air Balloon',\n  'Binding Band',\n  'Big Nugget',\n  // 'Bug Gem',\n  // 'Burn Drive',\n  'Cell Battery',\n  // 'Chill Drive',\n  // 'Cover Fossil',\n  // 'Dark Gem',\n  // 'Douse Drive',\n  // 'Dragon Gem',\n  'Dream Ball',\n  'Eject Button',\n  // 'Electric Gem',\n  'Eviolite',\n  // 'Fighting Gem',\n  // 'Fire Gem',\n  'Float Stone',\n  // 'Flying Gem',\n  // 'Ghost Gem',\n  // 'Grass Gem',\n  // 'Ground Gem',\n  // 'Ice Gem',\n  'Normal Gem',\n  // 'Plume Fossil',\n  // 'Poison Gem',\n  'Prism Scale',\n  // 'Psychic Gem',\n  'Red Card',\n  'Ring Target',\n  // 'Rock Gem',\n  'Rocky Helmet',\n  // 'Shock Drive',\n  // 'Steel Gem',\n  // 'Water Gem',\n]);\n\nexport const MEGA_STONES: {[species: string]: string} = {\n  Absolite: 'Absol',\n  Abomasite: 'Abomasnow',\n  Aerodactylite: 'Aerodactyl',\n  Aggronite: 'Aggron',\n  Alakazite: 'Alakazam',\n  Altarianite: 'Altaria',\n  Ampharosite: 'Ampharos',\n  Audinite: 'Audino',\n  Banettite: 'Banette',\n  Beedrillite: 'Beedrill',\n  Blastoisinite: 'Blastoise',\n  Blazikenite: 'Blaziken',\n  Cameruptite: 'Camerupt',\n  'Charizardite X': 'Charizard',\n  'Charizardite Y': 'Charizard',\n  Crucibellite: 'Crucibelle',\n  Diancite: 'Diancie',\n  Galladite: 'Gallade',\n  Garchompite: 'Garchomp',\n  Gardevoirite: 'Gardevoir',\n  Gengarite: 'Gengar',\n  Glalitite: 'Glalie',\n  Gyaradosite: 'Gyarados',\n  Heracronite: 'Heracross',\n  Houndoominite: 'Houndoom',\n  Kangaskhanite: 'Kangaskhan',\n  Latiasite: 'Latias',\n  Latiosite: 'Latios',\n  Lopunnite: 'Lopunny',\n  Lucarionite: 'Lucario',\n  Manectite: 'Manectric',\n  Mawilite: 'Mawile',\n  Medichamite: 'Medicham',\n  Metagrossite: 'Metagross',\n  'Mewtwonite X': 'Mewtwo',\n  'Mewtwonite Y': 'Mewtwo',\n  Pidgeotite: 'Pidgeot',\n  Pinsirite: 'Pinsir',\n  Sablenite: 'Sableye',\n  Salamencite: 'Salamence',\n  Sceptilite: 'Sceptile',\n  Scizorite: 'Scizor',\n  Sharpedonite: 'Sharpedo',\n  Slowbronite: 'Slowbro',\n  Steelixite: 'Steelix',\n  Swampertite: 'Swampert',\n  Tyranitarite: 'Tyranitar',\n  Venusaurite: 'Venusaur',\n};\n\nconst XY = BW.concat(\n  [\n    // ...Object.keys(MEGA_STONES),\n    'Assault Vest',\n    // 'Blue Orb',\n    // 'Fairy Gem',\n    // 'Jaw Fossil',\n    'Kee Berry',\n    'Luminous Moss',\n    'Maranga Berry',\n    'Pixie Plate',\n    // 'Red Orb',\n    'Roseli Berry',\n    // 'Sachet',\n    'Safety Goggles',\n    // 'Sail Fossil',\n    'Snowball',\n    'Weakness Policy',\n    // 'Whipped Dream',\n  ].sort()\n);\n\nconst SM = XY.filter(i => i !== 'Old Amber').concat([\n  'Adrenaline Orb',\n  // 'Aloraichium Z',\n  'Beast Ball',\n  'Bottle Cap',\n  // 'Bug Memory',\n  // 'Buginium Z',\n  // 'Dark Memory',\n  // 'Darkinium Z',\n  // 'Decidium Z',\n  // 'Dragon Memory',\n  // 'Dragonium Z',\n  // 'Eevium Z',\n  // 'Electric Memory',\n  'Electric Seed',\n  // 'Electrium Z',\n  // 'Fairium Z',\n  // 'Fairy Memory',\n  // 'Fighting Memory',\n  // 'Fightinium Z',\n  // 'Fire Memory',\n  // 'Firium Z',\n  // 'Flying Memory',\n  // 'Flyinium Z',\n  // 'Ghost Memory',\n  // 'Ghostium Z',\n  // 'Gold Bottle Cap',\n  // 'Grass Memory',\n  // 'Grassium Z',\n  'Grassy Seed',\n  // 'Ground Memory',\n  // 'Groundium Z',\n  // 'Ice Memory',\n  'Ice Stone',\n  // 'Icium Z',\n  // 'Incinium Z',\n  // 'Kommonium Z',\n  // 'Lunalium Z',\n  // 'Lycanium Z',\n  // 'Marshadium Z',\n  // 'Mewnium Z',\n  // 'Mimikium Z',\n  'Misty Seed',\n  // 'Normalium Z',\n  // 'Pikanium Z',\n  // 'Pikashunium Z',\n  // 'Poison Memory',\n  // 'Poisonium Z',\n  // 'Primarium Z',\n  'Protective Pads',\n  // 'Psychic Memory',\n  'Psychic Seed',\n  // 'Psychium Z',\n  // 'Rock Memory',\n  // 'Rockium Z',\n  // 'Snorlium Z',\n  // 'Solganium Z',\n  // 'Steel Memory',\n  // 'Steelium Z',\n  // 'Tapunium Z',\n  'Terrain Extender',\n  // 'Ultranecrozium Z',\n  // 'Water Memory',\n  // 'Waterium Z',\n]);\n\nconst SS = SM.concat([\n  'Berry Sweet',\n  'Blunder Policy',\n  'Chipped Pot',\n  'Clover Sweet',\n  'Cracked Pot',\n  'Eject Pack',\n  'Flower Sweet',\n  // 'Fossilized Bird',\n  // 'Fossilized Dino',\n  // 'Fossilized Drake',\n  // 'Fossilized Fish',\n  'Galarica Cuff',\n  'Galarica Wreath',\n  'Heavy-Duty Boots',\n  // 'Leek',\n  'Love Sweet',\n  'Ribbon Sweet',\n  'Room Service',\n  'Rusted Shield',\n  'Rusted Sword',\n  'Star Sweet',\n  'Strawberry Sweet',\n  'Sweet Apple',\n  'Tart Apple',\n  'Throat Spray',\n  'Upgrade',\n]);\n\n// for (let i = 0; i < 100; i++) {\n//   SS.push(`TR${i < 10 ? `0${i}` : i}`);\n// }\n\n// Added after the TRs to maintain sort order\n// SS.push('Utility Umbrella', 'Vile Vial');\nSS.push('Utility Umbrella');\n\n\n// Because we support National Dex all Past items are added back in\n// SS.push(...GSC_ONLY, 'Old Amber');\n\nconst SV = SS.concat([\n  'Adamant Crystal',\n  'Auspicious Armor',\n  'Ability Shield',\n  'Booster Energy',\n  'Clear Amulet',\n  'Cornerstone Mask',\n  'Covert Cloak',\n  'Fairy Feather',\n  'Hearthflame Mask',\n  'Loaded Dice',\n  'Malicious Armor',\n  'Masterpiece Teacup',\n  'Mirror Herb',\n  'Punching Glove',\n  'Lustrous Globe',\n  'Griseous Core',\n  'Strange Ball',\n  'Syrupy Apple',\n  'Unremarkable Teacup',\n  'Wellspring Mask',\n  \"Poke Doll\"\n]);\n\nconst BERRIES: {[berry: string]: {t: I.TypeName; p: number}} = {\n  'Aguav Berry': {t: 'Dragon', p: 80},\n  'Apicot Berry': {t: 'Ground', p: 100},\n  'Aspear Berry': {t: 'Ice', p: 80},\n  'Babiri Berry': {t: 'Steel', p: 80},\n  'Belue Berry': {t: 'Electric', p: 100},\n  Berry: {t: 'Poison', p: 80},\n  'Bitter Berry': {t: 'Ground', p: 80},\n  'Bluk Berry': {t: 'Fire', p: 90},\n  'Burnt Berry': {t: 'Ice', p: 80},\n  'Charti Berry': {t: 'Rock', p: 80},\n  'Cheri Berry': {t: 'Fire', p: 80},\n  'Chesto Berry': {t: 'Water', p: 80},\n  'Chilan Berry': {t: 'Normal', p: 80},\n  'Chople Berry': {t: 'Fighting', p: 80},\n  'Coba Berry': {t: 'Flying', p: 80},\n  'Colbur Berry': {t: 'Dark', p: 80},\n  'Cornn Berry': {t: 'Bug', p: 90},\n  'Custap Berry': {t: 'Ghost', p: 100},\n  'Durin Berry': {t: 'Water', p: 100},\n  'Enigma Berry': {t: 'Bug', p: 100},\n  'Figy Berry': {t: 'Bug', p: 80},\n  'Ganlon Berry': {t: 'Ice', p: 100},\n  'Gold Berry': {t: 'Psychic', p: 80},\n  'Grepa Berry': {t: 'Flying', p: 90},\n  'Haban Berry': {t: 'Dragon', p: 80},\n  'Hondew Berry': {t: 'Ground', p: 90},\n  'Iapapa Berry': {t: 'Dark', p: 80},\n  'Ice Berry': {t: 'Grass', p: 80},\n  'Jaboca Berry': {t: 'Dragon', p: 100},\n  'Kasib Berry': {t: 'Ghost', p: 80},\n  'Kebia Berry': {t: 'Poison', p: 80},\n  'Kee Berry': {t: 'Fairy', p: 100},\n  'Kelpsy Berry': {t: 'Fighting', p: 90},\n  'Lansat Berry': {t: 'Flying', p: 100},\n  'Leppa Berry': {t: 'Fighting', p: 80},\n  'Liechi Berry': {t: 'Grass', p: 100},\n  'Lum Berry': {t: 'Flying', p: 80},\n  'Mago Berry': {t: 'Ghost', p: 80},\n  'Magost Berry': {t: 'Rock', p: 90},\n  'Maranga Berry': {t: 'Dark', p: 100},\n  'Micle Berry': {t: 'Rock', p: 100},\n  'Mint Berry': {t: 'Water', p: 80},\n  'Miracle Berry': {t: 'Flying', p: 80},\n  'Mystery Berry': {t: 'Fighting', p: 80},\n  'Nanab Berry': {t: 'Water', p: 90},\n  'Nomel Berry': {t: 'Dragon', p: 90},\n  'Occa Berry': {t: 'Fire', p: 80},\n  'Oran Berry': {t: 'Poison', p: 80},\n  'Pamtre Berry': {t: 'Steel', p: 90},\n  'Passho Berry': {t: 'Water', p: 80},\n  'Payapa Berry': {t: 'Psychic', p: 80},\n  'Pecha Berry': {t: 'Electric', p: 80},\n  'Persim Berry': {t: 'Ground', p: 80},\n  'Petaya Berry': {t: 'Poison', p: 100},\n  'Pinap Berry': {t: 'Grass', p: 90},\n  'Pomeg Berry': {t: 'Ice', p: 90},\n  'PRZ Cure Berry': {t: 'Fire', p: 80},\n  'PSN Cure Berry': {t: 'Electric', p: 80},\n  'Qualot Berry': {t: 'Poison', p: 90},\n  'Rabuta Berry': {t: 'Ghost', p: 90},\n  'Rawst Berry': {t: 'Grass', p: 80},\n  'Razz Berry': {t: 'Steel', p: 80},\n  'Rindo Berry': {t: 'Grass', p: 80},\n  'Roseli Berry': {t: 'Fairy', p: 80},\n  'Rowap Berry': {t: 'Dark', p: 100},\n  'Salac Berry': {t: 'Fighting', p: 100},\n  'Shuca Berry': {t: 'Ground', p: 80},\n  'Sitrus Berry': {t: 'Psychic', p: 80},\n  'Spelon Berry': {t: 'Dark', p: 90},\n  'Starf Berry': {t: 'Psychic', p: 100},\n  'Tamato Berry': {t: 'Psychic', p: 90},\n  'Tanga Berry': {t: 'Bug', p: 80},\n  'Wacan Berry': {t: 'Electric', p: 80},\n  'Watmel Berry': {t: 'Fire', p: 100},\n  'Wepear Berry': {t: 'Electric', p: 90},\n  'Wiki Berry': {t: 'Rock', p: 80},\n  'Yache Berry': {t: 'Ice', p: 80},\n};\n\nexport const ITEMS = [[], RBY, GSC, ADV, DPP, BW, XY, SM, SS, SV];\n\nexport class Items implements I.Items {\n  private readonly gen: I.GenerationNum;\n\n  constructor(gen: I.GenerationNum) {\n    this.gen = gen;\n  }\n\n  get(id: I.ID) {\n    return ITEMS_BY_ID[this.gen][id];\n  }\n\n  *[Symbol.iterator]() {\n    for (const id in ITEMS_BY_ID[this.gen]) {\n      yield this.get(id as I.ID)!;\n    }\n  }\n}\n\nclass Item implements I.Item {\n  readonly kind: 'Item';\n  readonly id: I.ID;\n  readonly name: I.ItemName;\n  readonly megaEvolves?: I.SpeciesName;\n  readonly isBerry?: boolean;\n  readonly naturalGift?: Readonly<{basePower: number; type: I.TypeName}>;\n\n  constructor(name: string, gen: number) {\n    this.kind = 'Item';\n    this.id = toID(name);\n    this.name = name as I.ItemName;\n    this.megaEvolves = MEGA_STONES[name] as I.SpeciesName;\n    const berry = BERRIES[name];\n    if (berry) {\n      this.isBerry = true;\n      this.naturalGift = {\n        basePower: gen < 6 ? berry.p - 20 : berry.p,\n        type: berry.t,\n      };\n    }\n  }\n}\n\nconst ITEMS_BY_ID: Array<{[id: string]: Item}> = [];\n\nlet gen = 0;\nfor (const items of ITEMS) {\n  const map: {[id: string]: Item} = {};\n  for (const item of items) {\n    const i = new Item(item, gen);\n    map[i.id] = i;\n  }\n  ITEMS_BY_ID.push(map);\n  gen++;\n}\n","import * as I from '../data/interface';\nimport {toID, DeepPartial, assignWithout, extend} from '../util';\n\nexport interface MoveData {\n  readonly name?: string;\n\n  readonly type: I.TypeName;\n  readonly category?: I.MoveCategory;\n  // readonly flags?: I.MoveFlags;\n  readonly secondaries?: boolean;\n  readonly target?: I.MoveTarget;\n  readonly recoil?: [number, number];\n  readonly hasCrashDamage?: boolean;\n  readonly mindBlownRecoil?: boolean;\n  readonly struggleRecoil?: boolean;\n  readonly highCritChance?: boolean;\n  readonly willCrit?: boolean;\n  readonly drain?: [number, number];\n  readonly priority?: number;\n  readonly self?: I.SelfOrSecondaryEffect | null;\n  readonly ignoreDefensive?: boolean;\n  readonly overrideOffensiveStat?: I.StatIDExceptHP;\n  readonly overrideDefensiveStat?: I.StatIDExceptHP;\n  readonly overrideOffensivePokemon?: 'target' | 'source';\n  readonly overrideDefensivePokemon?: 'target' | 'source';\n  readonly breaksProtect?: boolean;\n  readonly isZ?: boolean;\n  readonly isMax?: boolean;\n  readonly multihit?: number | number[];\n\n  readonly bp: number;\n  readonly zp?: number;\n  readonly maxPower?: number;\n\n  // FIXME: migrate these to flags (above) instead\n  readonly makesContact?: boolean;\n  readonly isPunch?: boolean;\n  readonly isBite?: boolean;\n  readonly isBullet?: boolean;\n  readonly isSound?: boolean;\n  readonly isPulse?: boolean;\n  readonly isSlicing?: boolean;\n  readonly isWind?: boolean;\n}\n\nconst RBY: {[name: string]: MoveData} = {\n  '(No Move)': {bp: 0, category: 'Status', type: 'Normal'},\n  Absorb: {bp: 20, type: 'Grass', drain: [1, 2]},\n  Acid: {bp: 40, type: 'Poison'},\n  Amnesia: {bp: 0, category: 'Status', type: 'Psychic'},\n  'Aurora Beam': {bp: 65, type: 'Ice'},\n  Barrage: {bp: 15, type: 'Normal', multihit: [2, 5]},\n  Bide: {bp: 0, type: '???'},\n  Bind: {bp: 15, type: 'Normal'},\n  Bite: {bp: 60, type: 'Normal'},\n  Blizzard: {bp: 120, type: 'Ice'},\n  Bonemerang: {bp: 50, type: 'Ground', multihit: 2},\n  Bubble: {bp: 20, type: 'Water'},\n  'Bubble Beam': {bp: 65, type: 'Water'},\n  Clamp: {bp: 35, type: 'Water'},\n  'Comet Punch': {bp: 18, type: 'Normal', multihit: [2, 5]},\n  Constrict: {bp: 10, type: 'Normal'},\n  Conversion: {bp: 0, category: 'Status', type: 'Normal'},\n  Counter: {bp: 1, type: 'Fighting'},\n  Crabhammer: {bp: 90, type: 'Water', highCritChance: true},\n  'Defense Curl': {bp: 0, category: 'Status', type: 'Normal'},\n  Dig: {bp: 100, type: 'Ground'},\n  Disable: {bp: 0, category: 'Status', type: 'Normal'},\n  'Dizzy Punch': {bp: 70, type: 'Normal'},\n  'Double-Edge': {bp: 100, type: 'Normal', recoil: [25, 100]},\n  'Double Kick': {bp: 30, type: 'Fighting', multihit: 2},\n  'Double Slap': {bp: 15, type: 'Normal', multihit: [2, 5]},\n  'Dragon Rage': {bp: 1, type: 'Dragon'},\n  'Dream Eater': {bp: 100, type: 'Psychic', drain: [1, 2]},\n  Earthquake: {bp: 100, type: 'Ground'},\n  Explosion: {bp: 170, type: 'Normal'},\n  'Fire Blast': {bp: 120, type: 'Fire'},\n  'Fire Spin': {bp: 15, type: 'Fire'},\n  Fissure: {bp: 0, type: 'Ground'},\n  Fly: {bp: 70, type: 'Flying'},\n  'Focus Energy': {bp: 0, category: 'Status', type: 'Normal'},\n  'Fury Attack': {bp: 15, type: 'Normal', multihit: [2, 5]},\n  'Fury Swipes': {bp: 18, type: 'Normal', multihit: [2, 5]},\n  Glare: {bp: 0, category: 'Status', type: 'Normal'},\n  Growth: {bp: 0, category: 'Status', type: 'Normal'},\n  Guillotine: {bp: 0, type: 'Normal'},\n  Gust: {bp: 40, type: 'Normal'},\n  Haze: {bp: 0, category: 'Status', type: 'Ice'},\n  'High Jump Kick': {bp: 85, type: 'Fighting', hasCrashDamage: true},\n  'Horn Drill': {bp: 0, type: 'Normal'},\n  'Hyper Beam': {bp: 150, type: 'Normal'},\n  'Jump Kick': {bp: 70, type: 'Fighting', hasCrashDamage: true},\n  'Karate Chop': {bp: 50, type: 'Normal', highCritChance: true},\n  'Leech Seed': {bp: 0, category: 'Status', type: 'Grass'},\n  'Light Screen': {bp: 0, category: 'Status', type: 'Psychic'},\n  Metronome: {bp: 0, category: 'Status', type: 'Normal'},\n  Mimic: {bp: 0, category: 'Status', type: 'Normal'},\n  Minimize: {bp: 0, category: 'Status', type: 'Normal'},\n  'Mirror Move': {bp: 0, category: 'Status', type: 'Flying'},\n  Mist: {bp: 0, category: 'Status', type: 'Ice'},\n  'Night Shade': {bp: 1, type: 'Ghost'},\n  'Petal Dance': {bp: 70, type: 'Grass'},\n  'Pin Missile': {bp: 14, type: 'Bug', multihit: [2, 5]},\n  'Poison Sting': {bp: 15, type: 'Poison'},\n  Psychic: {bp: 90, type: 'Psychic'},\n  Psywave: {bp: 1, type: 'Psychic'},\n  Rage: {bp: 20, type: 'Normal'},\n  'Razor Leaf': {bp: 55, type: 'Grass', highCritChance: true},\n  'Razor Wind': {bp: 80, type: 'Normal', highCritChance: true},\n  Recover: {bp: 0, category: 'Status', type: 'Normal'},\n  Reflect: {bp: 0, category: 'Status', type: 'Psychic'},\n  Rest: {bp: 0, category: 'Status', type: 'Psychic'},\n  Roar: {bp: 0, category: 'Status', type: 'Normal'},\n  'Rock Slide': {bp: 75, type: 'Rock'},\n  'Rock Throw': {bp: 50, type: 'Rock'},\n  'Sand Attack': {bp: 0, category: 'Status', type: 'Normal'},\n  'Seismic Toss': {bp: 1, type: 'Fighting'},\n  'Self-Destruct': {bp: 130, type: 'Normal'},\n  'Skull Bash': {bp: 100, type: 'Normal'},\n  Slash: {bp: 70, type: 'Normal', highCritChance: true},\n  Sludge: {bp: 65, type: 'Poison'},\n  'Soft-Boiled': {bp: 0, category: 'Status', type: 'Normal'},\n  'Solar Beam': {bp: 120, type: 'Grass'},\n  'Sonic Boom': {bp: 1, type: 'Normal'},\n  'Spike Cannon': {bp: 20, type: 'Normal', multihit: [2, 5]},\n  Stomp: {bp: 65, type: 'Normal'},\n  Struggle: {bp: 50, type: 'Normal', recoil: [1, 2]},\n  'Stun Spore': {bp: 0, category: 'Status', type: 'Grass'},\n  Submission: {bp: 80, type: 'Fighting', recoil: [1, 4]},\n  Substitute: {bp: 0, category: 'Status', type: 'Normal'},\n  'Super Fang': {bp: 1, type: 'Normal'},\n  Swift: {bp: 60, type: 'Normal'},\n  'Take Down': {bp: 90, type: 'Normal', recoil: [1, 4]},\n  Thrash: {bp: 90, type: 'Normal'},\n  Thunder: {bp: 120, type: 'Electric'},\n  'Thunder Wave': {bp: 0, category: 'Status', type: 'Electric'},\n  Transform: {bp: 0, category: 'Status', type: 'Normal'},\n  'Tri Attack': {bp: 80, type: 'Normal'},\n  Twineedle: {bp: 25, type: 'Bug', multihit: 2},\n  Whirlwind: {bp: 0, category: 'Status', type: 'Normal'},\n  'Wing Attack': {bp: 35, type: 'Flying'},\n  Wrap: {bp: 15, type: 'Normal'},\n  Growl: {bp: 0, category: 'Status', type: 'Normal'},\n  Leer: {bp: 0, category: 'Status', type: 'Normal'},\n  'Low Kick': {bp: 50, type: 'Fighting'},\n  'Poison Gas': {bp: 0, category: 'Status', type: 'Poison'},\n  'Poison Powder': {bp: 0, category: 'Status', type: 'Poison'},\n  'Sky Attack': {bp: 140, type: 'Flying', highCritChance: true},\n  'String Shot': {bp: 0, category: 'Status', type: 'Bug'},\n  Surf: {bp: 95, type: 'Water'},\n  'Tail Whip': {bp: 0, category: 'Status', type: 'Normal'},\n  Toxic: {bp: 0, category: 'Status', type: 'Poison'},\n  Flash: {bp: 0, category: 'Status', type: 'Normal'},\n  Hypnosis: {bp: 0, category: 'Status', type: 'Psychic'},\n  'Leech Life': {bp: 20, type: 'Bug', drain: [1, 2]},\n  'Mega Drain': {bp: 40, type: 'Grass', drain: [1, 2]},\n  'Vine Whip': {bp: 35, type: 'Grass'},\n  Waterfall: {bp: 80, type: 'Water'},\n  Tackle: {bp: 35, type: 'Normal'},\n  'Acid Armor': {bp: 0, category: 'Status', type: 'Poison'},\n  Barrier: {bp: 0, category: 'Status', type: 'Psychic'},\n  'Body Slam': {bp: 85, type: 'Normal'},\n  Flamethrower: {bp: 95, type: 'Fire'},\n  'Hydro Pump': {bp: 120, type: 'Water'},\n  'Ice Beam': {bp: 95, type: 'Ice'},\n  Lick: {bp: 20, type: 'Ghost'},\n  Screech: {bp: 0, category: 'Status', type: 'Normal'},\n  Sing: {bp: 0, category: 'Status', type: 'Normal'},\n  'Sleep Powder': {bp: 0, category: 'Status', type: 'Grass'},\n  Smog: {bp: 20, type: 'Poison'},\n  Spore: {bp: 0, category: 'Status', type: 'Grass'},\n  Supersonic: {bp: 0, category: 'Status', type: 'Normal'},\n  'Swords Dance': {bp: 0, category: 'Status', type: 'Normal'},\n  Thunderbolt: {bp: 95, type: 'Electric'},\n  'Bone Club': {bp: 65, type: 'Ground'},\n  'Egg Bomb': {bp: 100, type: 'Normal'},\n  'Hyper Fang': {bp: 80, type: 'Normal'},\n  Kinesis: {bp: 0, category: 'Status', type: 'Psychic'},\n  'Lovely Kiss': {bp: 0, category: 'Status', type: 'Normal'},\n  Meditate: {bp: 0, category: 'Status', type: 'Psychic'},\n  'Rolling Kick': {bp: 60, type: 'Fighting'},\n  Sharpen: {bp: 0, category: 'Status', type: 'Normal'},\n  Teleport: {bp: 0, category: 'Status', type: 'Psychic'},\n  Agility: {bp: 0, category: 'Status', type: 'Psychic'},\n  'Confuse Ray': {bp: 0, category: 'Status', type: 'Ghost'},\n  Confusion: {bp: 50, type: 'Psychic'},\n  Cut: {bp: 50, type: 'Normal'},\n  'Double Team': {bp: 0, category: 'Status', type: 'Normal'},\n  'Drill Peck': {bp: 80, type: 'Flying'},\n  Ember: {bp: 40, type: 'Fire'},\n  'Fire Punch': {bp: 75, type: 'Fire'},\n  Harden: {bp: 0, category: 'Status', type: 'Normal'},\n  Headbutt: {bp: 70, type: 'Normal'},\n  'Horn Attack': {bp: 65, type: 'Normal'},\n  'Ice Punch': {bp: 75, type: 'Ice'},\n  'Mega Kick': {bp: 120, type: 'Normal'},\n  'Mega Punch': {bp: 80, type: 'Normal'},\n  'Paleo Wave': {bp: 85, type: 'Rock'},\n  'Pay Day': {bp: 40, type: 'Normal'},\n  Peck: {bp: 35, type: 'Flying'},\n  Pound: {bp: 40, type: 'Normal'},\n  Psybeam: {bp: 65, type: 'Psychic'},\n  'Quick Attack': {bp: 40, type: 'Normal', priority: 1},\n  Scratch: {bp: 40, type: 'Normal'},\n  'Shadow Strike': {bp: 80, type: 'Ghost'},\n  Slam: {bp: 80, type: 'Normal'},\n  Smokescreen: {bp: 0, category: 'Status', type: 'Normal'},\n  Splash: {bp: 0, category: 'Status', type: 'Normal'},\n  Strength: {bp: 80, type: 'Normal'},\n  'Thunder Punch': {bp: 75, type: 'Electric'},\n  'Thunder Shock': {bp: 40, type: 'Electric'},\n  'Vise Grip': {bp: 55, type: 'Normal'},\n  'Water Gun': {bp: 40, type: 'Water'},\n  Withdraw: {bp: 0, category: 'Status', type: 'Water'},\n};\n\nconst GSC_PATCH: {[name: string]: DeepPartial<MoveData>} = {\n  Bide: {type: 'Normal'},\n  Counter: {bp: 0},\n  Dig: {bp: 60},\n  'Double-Edge': {bp: 120},\n  Explosion: {bp: 250},\n  Gust: {type: 'Flying'},\n  'Karate Chop': {type: 'Fighting'},\n  Psywave: {bp: 0},\n  'Self-Destruct': {bp: 200},\n  Struggle: {recoil: [1, 4]},\n  'Dragon Rage': {bp: 0},\n  Bite: {type: 'Dark'},\n  'Night Shade': {bp: 0},\n  'Sand Attack': {type: 'Ground'},\n  'Seismic Toss': {bp: 0},\n  'Sonic Boom': {bp: 0},\n  'Super Fang': {bp: 0},\n  'Wing Attack': {bp: 60},\n  Aeroblast: {bp: 100, type: 'Flying', highCritChance: true},\n  Attract: {bp: 0, category: 'Status', type: 'Normal'},\n  'Beat Up': {bp: 10, type: 'Dark'},\n  'Belly Drum': {bp: 0, category: 'Status', type: 'Normal'},\n  'Conversion 2': {bp: 0, category: 'Status', type: 'Normal'},\n  'Cross Chop': {bp: 100, type: 'Fighting', highCritChance: true},\n  Curse: {bp: 0, category: 'Status', type: '???'},\n  'Destiny Bond': {bp: 0, category: 'Status', type: 'Ghost'},\n  Detect: {bp: 0, category: 'Status', type: 'Fighting', priority: 2},\n  Encore: {bp: 0, category: 'Status', type: 'Normal'},\n  Endure: {bp: 0, category: 'Status', type: 'Normal', priority: 2},\n  Flail: {bp: 0, type: 'Normal'},\n  Foresight: {bp: 0, category: 'Status', type: 'Normal'},\n  'Future Sight': {bp: 80, type: 'Psychic'},\n  'Heal Bell': {bp: 0, category: 'Status', type: 'Normal'},\n  'Icy Wind': {bp: 55, type: 'Ice'},\n  'Lock-On': {bp: 0, category: 'Status', type: 'Normal'},\n  'Mind Reader': {bp: 0, category: 'Status', type: 'Normal'},\n  'Mirror Coat': {bp: 0, type: 'Psychic'},\n  Moonlight: {bp: 0, category: 'Status', type: 'Normal'},\n  'Morning Sun': {bp: 0, category: 'Status', type: 'Normal'},\n  Nightmare: {bp: 0, category: 'Status', type: 'Ghost'},\n  Outrage: {bp: 90, type: 'Dragon'},\n  'Powder Snow': {bp: 40, type: 'Ice'},\n  Present: {bp: 0, type: 'Normal'},\n  Protect: {bp: 0, category: 'Status', type: 'Normal', priority: 2},\n  'Psych Up': {bp: 0, category: 'Status', type: 'Normal'},\n  Pursuit: {bp: 40, type: 'Dark'},\n  'Rain Dance': {bp: 0, category: 'Status', type: 'Water'},\n  Reversal: {bp: 0, type: 'Fighting'},\n  Safeguard: {bp: 0, category: 'Status', type: 'Normal'},\n  Sandstorm: {bp: 0, category: 'Status', type: 'Rock'},\n  Sketch: {bp: 0, category: 'Status', type: 'Normal'},\n  'Sleep Talk': {bp: 0, category: 'Status', type: 'Normal'},\n  Spikes: {bp: 0, category: 'Status', type: 'Ground'},\n  Spite: {bp: 0, category: 'Status', type: 'Ghost'},\n  'Sunny Day': {bp: 0, category: 'Status', type: 'Fire'},\n  Swagger: {bp: 0, category: 'Status', type: 'Normal'},\n  'Sweet Scent': {bp: 0, category: 'Status', type: 'Normal'},\n  Synthesis: {bp: 0, category: 'Status', type: 'Grass'},\n  Thief: {bp: 40, type: 'Dark'},\n  'Triple Kick': {bp: 10, type: 'Fighting', multihit: [1, 3]},\n  Twister: {bp: 40, type: 'Dragon'},\n  'Ancient Power': {bp: 60, type: 'Rock'},\n  'Bone Rush': {bp: 25, type: 'Ground', multihit: [2, 5]},\n  Crunch: {bp: 80, type: 'Dark'},\n  'Feint Attack': {bp: 60, type: 'Dark'},\n  'Giga Drain': {bp: 60, type: 'Grass', drain: [1, 2]},\n  'Hidden Power': {bp: 0, type: 'Normal'},\n  'Mean Look': {bp: 0, category: 'Status', type: 'Normal'},\n  'Rapid Spin': {bp: 20, type: 'Normal'},\n  'Rock Smash': {bp: 20, type: 'Fighting'},\n  'Spider Web': {bp: 0, category: 'Status', type: 'Bug'},\n  Whirlpool: {bp: 15, type: 'Water'},\n  'Zap Cannon': {bp: 100, type: 'Electric'},\n  'Cotton Spore': {bp: 0, category: 'Status', type: 'Grass'},\n  'Extreme Speed': {bp: 80, type: 'Normal', priority: 1},\n  'Fury Cutter': {bp: 10, type: 'Bug'},\n  Magnitude: {bp: 0, type: 'Ground'},\n  'Milk Drink': {bp: 0, category: 'Status', type: 'Normal'},\n  'Scary Face': {bp: 0, category: 'Status', type: 'Normal'},\n  Charm: {bp: 0, category: 'Status', type: 'Normal'},\n  'Hidden Power Bug': {bp: 70, type: 'Bug'},\n  'Hidden Power Dark': {bp: 70, type: 'Dark'},\n  'Hidden Power Dragon': {bp: 70, type: 'Dragon'},\n  'Hidden Power Electric': {bp: 70, type: 'Electric'},\n  'Hidden Power Fighting': {bp: 70, type: 'Fighting'},\n  'Hidden Power Fire': {bp: 70, type: 'Fire'},\n  'Hidden Power Flying': {bp: 70, type: 'Flying'},\n  'Hidden Power Ghost': {bp: 70, type: 'Ghost'},\n  'Hidden Power Grass': {bp: 70, type: 'Grass'},\n  'Hidden Power Ground': {bp: 70, type: 'Ground'},\n  'Hidden Power Ice': {bp: 70, type: 'Ice'},\n  'Hidden Power Poison': {bp: 70, type: 'Poison'},\n  'Hidden Power Psychic': {bp: 70, type: 'Psychic'},\n  'Hidden Power Rock': {bp: 70, type: 'Rock'},\n  'Hidden Power Steel': {bp: 70, type: 'Steel'},\n  'Hidden Power Water': {bp: 70, type: 'Water'},\n  'Perish Song': {bp: 0, category: 'Status', type: 'Normal'},\n  Snore: {bp: 40, type: 'Normal'},\n  'Sweet Kiss': {bp: 0, category: 'Status', type: 'Normal'},\n  Rollout: {bp: 30, type: 'Rock'},\n  Frustration: {bp: 0, type: 'Normal'},\n  Return: {bp: 0, type: 'Normal'},\n  'Sacred Fire': {bp: 100, type: 'Fire'},\n  'Baton Pass': {bp: 0, category: 'Status', type: 'Normal'},\n  'Dragon Breath': {bp: 60, type: 'Dragon'},\n  'Dynamic Punch': {bp: 100, type: 'Fighting'},\n  'False Swipe': {bp: 40, type: 'Normal'},\n  'Flame Wheel': {bp: 60, type: 'Fire'},\n  'Iron Tail': {bp: 100, type: 'Steel'},\n  'Mach Punch': {bp: 40, type: 'Fighting', priority: 1},\n  Megahorn: {bp: 120, type: 'Bug'},\n  'Metal Claw': {bp: 50, type: 'Steel'},\n  'Mud-Slap': {bp: 20, type: 'Ground'},\n  Octazooka: {bp: 65, type: 'Water'},\n  'Pain Split': {bp: 0, category: 'Status', type: 'Normal'},\n  'Shadow Ball': {bp: 80, type: 'Ghost'},\n  'Sludge Bomb': {bp: 90, type: 'Poison'},\n  Spark: {bp: 65, type: 'Electric'},\n  'Steel Wing': {bp: 70, type: 'Steel'},\n  'Vital Throw': {bp: 70, type: 'Fighting'},\n};\n\nconst GSC: {[name: string]: MoveData} = extend(true, {}, RBY, GSC_PATCH);\n\nconst ADV_PATCH: {[name: string]: DeepPartial<MoveData>} = {\n  Acid: {target: 'allAdjacentFoes'},\n  'Ancient Power': {makesContact: true},\n  Bide: {makesContact: true},\n  Bind: {makesContact: true},\n  Blizzard: {target: 'allAdjacentFoes'},\n  Clamp: {makesContact: true},\n  'Comet Punch': {makesContact: true},\n  Counter: {makesContact: true},\n  Crunch: {makesContact: true},\n  Detect: {priority: 3},\n  Endure: {priority: 4},\n  Protect: {priority: 3},\n  Dig: {makesContact: true},\n  'Double Kick': {makesContact: true},\n  'Double Slap': {makesContact: true},\n  Explosion: {target: 'allAdjacent'},\n  Flail: {makesContact: true},\n  Fly: {makesContact: true},\n  'Fury Attack': {makesContact: true},\n  'Fury Swipes': {makesContact: true},\n  'High Jump Kick': {makesContact: true},\n  'Jump Kick': {makesContact: true},\n  'Leech Life': {makesContact: true},\n  Outrage: {makesContact: true},\n  'Petal Dance': {makesContact: true},\n  Pursuit: {makesContact: true},\n  Rage: {makesContact: true},\n  'Rapid Spin': {makesContact: true},\n  'Razor Wind': {target: 'allAdjacentFoes'},\n  Reversal: {makesContact: true},\n  'Rock Smash': {makesContact: true},\n  'Self-Destruct': {target: 'allAdjacent'},\n  'Skull Bash': {makesContact: true},\n  Stomp: {makesContact: true},\n  Struggle: {makesContact: true},\n  Surf: {target: 'allAdjacentFoes'},\n  Thief: {makesContact: true},\n  Thrash: {makesContact: true},\n  'Triple Kick': {makesContact: true, multihit: 3},\n  'Vine Whip': {makesContact: true},\n  Waterfall: {makesContact: true},\n  Wrap: {makesContact: true},\n  Crabhammer: {makesContact: true},\n  'Double-Edge': {recoil: [1, 3], makesContact: true},\n  Earthquake: {target: 'allAdjacent'},\n  'Extreme Speed': {makesContact: true},\n  'Fury Cutter': {makesContact: true},\n  'Heal Bell': {isSound: true},\n  Magnitude: {target: 'allAdjacent'},\n  Roar: {isSound: true},\n  Submission: {makesContact: true},\n  Tackle: {makesContact: true},\n  'Take Down': {makesContact: true},\n  Twister: {target: 'allAdjacentFoes'},\n  'Body Slam': {makesContact: true},\n  Bubble: {target: 'allAdjacentFoes'},\n  Growl: {isSound: true, target: 'allAdjacentFoes'},\n  Lick: {makesContact: true},\n  'Perish Song': {isSound: true},\n  Screech: {isSound: true},\n  Sing: {isSound: true},\n  Snore: {isSound: true},\n  'String Shot': {target: 'allAdjacentFoes'},\n  Supersonic: {isSound: true},\n  'Sweet Scent': {target: 'allAdjacentFoes'},\n  Rollout: {makesContact: true},\n  Constrict: {makesContact: true},\n  'Dizzy Punch': {makesContact: true},\n  Frustration: {makesContact: true},\n  'Hyper Fang': {makesContact: true},\n  'Karate Chop': {makesContact: true},\n  'Low Kick': {bp: 0, makesContact: true},\n  Return: {makesContact: true},\n  'Rolling Kick': {makesContact: true},\n  Bite: {makesContact: true},\n  'Cross Chop': {makesContact: true},\n  Cut: {makesContact: true},\n  'Drill Peck': {makesContact: true},\n  'Dynamic Punch': {makesContact: true},\n  'False Swipe': {makesContact: true},\n  'Fire Punch': {makesContact: true},\n  'Flame Wheel': {makesContact: true},\n  Guillotine: {makesContact: true},\n  Headbutt: {makesContact: true},\n  'Horn Attack': {makesContact: true},\n  'Horn Drill': {makesContact: true},\n  'Ice Punch': {makesContact: true},\n  'Icy Wind': {target: 'allAdjacentFoes'},\n  'Iron Tail': {makesContact: true},\n  Leer: {target: 'allAdjacentFoes'},\n  'Mach Punch': {makesContact: true},\n  Megahorn: {makesContact: true},\n  'Mega Kick': {makesContact: true},\n  'Mega Punch': {makesContact: true},\n  'Metal Claw': {makesContact: true},\n  Peck: {makesContact: true},\n  Pound: {makesContact: true},\n  'Powder Snow': {target: 'allAdjacentFoes'},\n  'Quick Attack': {makesContact: true},\n  'Razor Leaf': {target: 'allAdjacentFoes'},\n  'Rock Slide': {target: 'allAdjacentFoes'},\n  Scratch: {makesContact: true},\n  'Seismic Toss': {makesContact: true},\n  'Shadow Strike': {makesContact: true},\n  Slam: {makesContact: true},\n  Slash: {makesContact: true},\n  Spark: {makesContact: true},\n  'Steel Wing': {makesContact: true},\n  Strength: {makesContact: true},\n  'Super Fang': {makesContact: true},\n  Swift: {target: 'allAdjacentFoes'},\n  'Tail Whip': {target: 'allAdjacentFoes'},\n  'Thunder Punch': {makesContact: true},\n  'Vise Grip': {makesContact: true},\n  'Vital Throw': {makesContact: true},\n  'Wing Attack': {makesContact: true},\n  'Arm Thrust': {\n    bp: 15,\n    type: 'Fighting',\n    multihit: [2, 5],\n    makesContact: true,\n  },\n  Assist: {bp: 0, category: 'Status', type: 'Normal'},\n  Astonish: {bp: 30, type: 'Ghost', makesContact: true},\n  Block: {bp: 0, category: 'Status', type: 'Normal'},\n  Bounce: {bp: 85, type: 'Flying', makesContact: true},\n  'Bullet Seed': {bp: 10, type: 'Grass', multihit: [2, 5]},\n  Camouflage: {bp: 0, category: 'Status', type: 'Normal'},\n  Charge: {bp: 0, category: 'Status', type: 'Electric'},\n  Covet: {bp: 40, type: 'Normal'},\n  Dive: {bp: 60, type: 'Water', makesContact: true},\n  'Doom Desire': {bp: 120, type: 'Steel'},\n  Extrasensory: {bp: 80, type: 'Psychic'},\n  'Fake Out': {bp: 40, type: 'Normal', priority: 1},\n  'Follow Me': {bp: 0, category: 'Status', type: 'Normal', priority: 3},\n  Hail: {bp: 0, category: 'Status', type: 'Ice'},\n  'Icicle Spear': {bp: 10, type: 'Ice', multihit: [2, 5]},\n  Ingrain: {bp: 0, category: 'Status', type: 'Grass'},\n  'Knock Off': {bp: 20, type: 'Dark', makesContact: true},\n  'Leaf Blade': {bp: 70, type: 'Grass', makesContact: true, highCritChance: true},\n  'Magic Coat': {bp: 0, category: 'Status', type: 'Psychic', priority: 4},\n  Memento: {bp: 0, category: 'Status', type: 'Dark'},\n  'Nature Power': {bp: 0, category: 'Status', type: 'Normal'},\n  'Needle Arm': {bp: 60, type: 'Grass', makesContact: true},\n  'Odor Sleuth': {bp: 0, category: 'Status', type: 'Normal'},\n  Overheat: {bp: 140, type: 'Fire', self: {boosts: {spa: -2}}, makesContact: true},\n  Revenge: {bp: 60, type: 'Fighting', makesContact: true},\n  'Rock Blast': {bp: 25, type: 'Rock', multihit: [2, 5]},\n  'Role Play': {bp: 0, category: 'Status', type: 'Psychic'},\n  'Sand Tomb': {bp: 15, type: 'Ground'},\n  'Skill Swap': {bp: 0, category: 'Status', type: 'Psychic'},\n  'Smelling Salts': {bp: 60, type: 'Normal', makesContact: true},\n  'Spit Up': {bp: 0, type: 'Normal'},\n  Stockpile: {bp: 0, category: 'Status', type: 'Normal'},\n  Swallow: {bp: 0, category: 'Status', type: 'Normal'},\n  Taunt: {bp: 0, category: 'Status', type: 'Dark'},\n  'Teeter Dance': {bp: 0, category: 'Status', type: 'Normal', target: 'allAdjacent'},\n  Tickle: {bp: 0, category: 'Status', type: 'Normal'},\n  Trick: {bp: 0, category: 'Status', type: 'Psychic'},\n  Uproar: {bp: 50, type: 'Normal', isSound: true},\n  'Volt Tackle': {bp: 120, type: 'Electric', recoil: [1, 3], makesContact: true},\n  'Weather Ball': {bp: 50, type: 'Normal'},\n  Aromatherapy: {bp: 0, category: 'Status', type: 'Grass'},\n  'Brick Break': {bp: 75, type: 'Fighting', makesContact: true},\n  Endeavor: {bp: 0, type: 'Normal', makesContact: true},\n  'Focus Punch': {bp: 150, type: 'Fighting', makesContact: true},\n  Imprison: {bp: 0, category: 'Status', type: 'Psychic'},\n  'Mud Sport': {bp: 0, category: 'Status', type: 'Ground'},\n  Recycle: {bp: 0, category: 'Status', type: 'Normal'},\n  'Secret Power': {bp: 70, type: 'Normal'},\n  'Sky Uppercut': {bp: 85, type: 'Fighting', makesContact: true},\n  'Slack Off': {bp: 0, category: 'Status', type: 'Normal'},\n  Snatch: {bp: 0, category: 'Status', type: 'Dark', priority: 4},\n  'Tail Glow': {bp: 0, category: 'Status', type: 'Bug'},\n  Torment: {bp: 0, category: 'Status', type: 'Dark'},\n  'Water Sport': {bp: 0, category: 'Status', type: 'Water'},\n  Wish: {bp: 0, category: 'Status', type: 'Normal'},\n  'Air Cutter': {bp: 55, type: 'Flying', target: 'allAdjacentFoes', highCritChance: true},\n  Facade: {bp: 70, type: 'Normal', makesContact: true},\n  'Grass Whistle': {bp: 0, category: 'Status', type: 'Grass', isSound: true},\n  'Heat Wave': {bp: 100, type: 'Fire', target: 'allAdjacentFoes'},\n  'Hyper Voice': {bp: 90, type: 'Normal', isSound: true, target: 'allAdjacentFoes'},\n  'Metal Sound': {bp: 0, category: 'Status', type: 'Steel', isSound: true},\n  'Meteor Mash': {bp: 100, type: 'Steel', makesContact: true},\n  'Muddy Water': {bp: 95, type: 'Water', target: 'allAdjacentFoes'},\n  'Poison Fang': {bp: 50, type: 'Poison', makesContact: true},\n  'Rock Tomb': {bp: 50, type: 'Rock'},\n  'Will-O-Wisp': {bp: 0, category: 'Status', type: 'Fire'},\n  'Ice Ball': {bp: 30, type: 'Ice', makesContact: true},\n  'Sheer Cold': {bp: 0, type: 'Ice'},\n  Howl: {bp: 0, category: 'Status', type: 'Normal'},\n  'Luster Purge': {bp: 70, type: 'Psychic'},\n  'Mist Ball': {bp: 70, type: 'Psychic'},\n  'Psycho Boost': {bp: 140, type: 'Psychic', self: {boosts: {spa: -2}}},\n  Refresh: {bp: 0, category: 'Status', type: 'Normal'},\n  'Signal Beam': {bp: 75, type: 'Bug'},\n  'Silver Wind': {bp: 60, type: 'Bug'},\n  'Aerial Ace': {bp: 60, type: 'Flying', makesContact: true},\n  'Blast Burn': {bp: 150, type: 'Fire'},\n  'Blaze Kick': {bp: 85, type: 'Fire', makesContact: true, highCritChance: true},\n  'Bulk Up': {bp: 0, category: 'Status', type: 'Fighting'},\n  'Calm Mind': {bp: 0, category: 'Status', type: 'Psychic'},\n  'Cosmic Power': {bp: 0, category: 'Status', type: 'Psychic'},\n  'Crush Claw': {bp: 75, type: 'Normal', makesContact: true},\n  'Dragon Claw': {bp: 80, type: 'Dragon', makesContact: true},\n  'Dragon Dance': {bp: 0, category: 'Status', type: 'Dragon'},\n  Eruption: {bp: 150, type: 'Fire', target: 'allAdjacentFoes'},\n  'Fake Tears': {bp: 0, category: 'Status', type: 'Dark'},\n  'Feather Dance': {bp: 0, category: 'Status', type: 'Flying'},\n  Flatter: {bp: 0, category: 'Status', type: 'Dark'},\n  'Frenzy Plant': {bp: 150, type: 'Grass'},\n  Grudge: {bp: 0, category: 'Status', type: 'Ghost'},\n  'Helping Hand': {bp: 0, category: 'Status', type: 'Normal', priority: 5},\n  'Hydro Cannon': {bp: 150, type: 'Water'},\n  'Iron Defense': {bp: 0, category: 'Status', type: 'Steel'},\n  'Magical Leaf': {bp: 60, type: 'Grass'},\n  'Mud Shot': {bp: 55, type: 'Ground'},\n  'Poison Tail': {bp: 50, type: 'Poison', makesContact: true, highCritChance: true},\n  'Shadow Punch': {bp: 60, type: 'Ghost', makesContact: true},\n  'Shock Wave': {bp: 60, type: 'Electric'},\n  Superpower: {bp: 120, type: 'Fighting', self: {boosts: {atk: -1, def: -1}}, makesContact: true},\n  'Water Pulse': {bp: 60, type: 'Water'},\n  'Water Spout': {bp: 150, type: 'Water', target: 'allAdjacentFoes'},\n  Yawn: {bp: 0, category: 'Status', type: 'Normal'},\n};\n\nconst ADV: {[name: string]: MoveData} = extend(true, {}, GSC, ADV_PATCH);\n\nconst DPP_PATCH: {[name: string]: DeepPartial<MoveData>} = {\n  Absorb: {category: 'Special'},\n  'Arm Thrust': {category: 'Physical'},\n  Barrage: {category: 'Physical'},\n  'Beat Up': {category: 'Physical'},\n  Bide: {priority: 1, category: 'Physical'},\n  Bind: {category: 'Physical'},\n  'Bone Rush': {category: 'Physical'},\n  Bonemerang: {category: 'Physical'},\n  Bounce: {category: 'Physical'},\n  'Brick Break': {category: 'Physical'},\n  'Bullet Seed': {category: 'Physical'},\n  Clamp: {category: 'Physical'},\n  'Comet Punch': {isPunch: true, category: 'Physical'},\n  Counter: {category: 'Physical'},\n  Covet: {makesContact: true, category: 'Physical'},\n  Crabhammer: {category: 'Physical'},\n  Dig: {bp: 80, category: 'Physical'},\n  Dive: {bp: 80, category: 'Physical'},\n  'Doom Desire': {category: 'Special'},\n  'Double-Edge': {category: 'Physical'},\n  'Double Kick': {category: 'Physical'},\n  'Double Slap': {category: 'Physical'},\n  'Dream Eater': {category: 'Special'},\n  Earthquake: {category: 'Physical'},\n  Endeavor: {category: 'Physical'},\n  Explosion: {category: 'Physical'},\n  'Extreme Speed': {category: 'Physical'},\n  'Fake Out': {makesContact: true, category: 'Physical'},\n  'Fire Spin': {category: 'Special'},\n  Flail: {category: 'Physical'},\n  Fly: {bp: 90, category: 'Physical'},\n  'Focus Punch': {isPunch: true, category: 'Physical'},\n  'Fury Attack': {category: 'Physical'},\n  'Fury Cutter': {category: 'Physical'},\n  'Fury Swipes': {category: 'Physical'},\n  'Future Sight': {category: 'Special'},\n  'Giga Drain': {category: 'Special'},\n  Gust: {category: 'Special'},\n  'High Jump Kick': {bp: 100, category: 'Physical'},\n  'Icicle Spear': {category: 'Physical'},\n  'Jump Kick': {bp: 85, category: 'Physical'},\n  'Knock Off': {category: 'Physical'},\n  'Leech Life': {category: 'Physical'},\n  Magnitude: {category: 'Physical'},\n  'Mega Drain': {category: 'Special'},\n  'Mirror Coat': {category: 'Special'},\n  Outrage: {bp: 120, category: 'Physical'},\n  'Petal Dance': {bp: 90, category: 'Special'},\n  'Pin Missile': {category: 'Physical'},\n  Psywave: {category: 'Special'},\n  Pursuit: {category: 'Physical'},\n  'Rapid Spin': {category: 'Physical'},\n  'Razor Wind': {category: 'Special'},\n  Revenge: {category: 'Physical'},\n  Reversal: {category: 'Physical'},\n  'Rock Blast': {category: 'Physical'},\n  'Sand Tomb': {category: 'Physical'},\n  'Secret Power': {category: 'Physical'},\n  'Self-Destruct': {category: 'Physical'},\n  'Sky Uppercut': {isPunch: true, category: 'Physical'},\n  'Smelling Salts': {category: 'Physical'},\n  'Solar Beam': {category: 'Special'},\n  'Spike Cannon': {category: 'Physical'},\n  'Spit Up': {category: 'Special'},\n  Stomp: {category: 'Physical'},\n  Struggle: {category: 'Physical', struggleRecoil: true},\n  Submission: {category: 'Physical'},\n  Surf: {target: 'allAdjacent', category: 'Special'},\n  Tackle: {category: 'Physical'},\n  'Take Down': {category: 'Physical'},\n  Thief: {category: 'Physical'},\n  Thrash: {category: 'Physical'},\n  Thunder: {category: 'Special'},\n  'Triple Kick': {category: 'Physical'},\n  Twineedle: {category: 'Physical'},\n  Twister: {category: 'Special'},\n  Uproar: {category: 'Special'},\n  'Volt Tackle': {category: 'Physical'},\n  Whirlpool: {category: 'Special'},\n  Wrap: {category: 'Physical'},\n  'Air Cutter': {category: 'Special'},\n  Blizzard: {category: 'Special'},\n  'Body Slam': {category: 'Physical'},\n  Bubble: {category: 'Special'},\n  Extrasensory: {category: 'Special'},\n  Facade: {category: 'Physical'},\n  'Fire Blast': {category: 'Special'},\n  Flamethrower: {category: 'Special'},\n  'Heat Wave': {category: 'Special'},\n  'Hidden Power': {category: 'Special'},\n  'Hidden Power Bug': {category: 'Special'},\n  'Hidden Power Dark': {category: 'Special'},\n  'Hidden Power Dragon': {category: 'Special'},\n  'Hidden Power Electric': {category: 'Special'},\n  'Hidden Power Fighting': {category: 'Special'},\n  'Hidden Power Fire': {category: 'Special'},\n  'Hidden Power Flying': {category: 'Special'},\n  'Hidden Power Ghost': {category: 'Special'},\n  'Hidden Power Grass': {category: 'Special'},\n  'Hidden Power Ground': {category: 'Special'},\n  'Hidden Power Ice': {category: 'Special'},\n  'Hidden Power Poison': {category: 'Special'},\n  'Hidden Power Psychic': {category: 'Special'},\n  'Hidden Power Rock': {category: 'Special'},\n  'Hidden Power Steel': {category: 'Special'},\n  'Hidden Power Water': {category: 'Special'},\n  'Hydro Pump': {category: 'Special'},\n  'Hyper Voice': {category: 'Special'},\n  'Ice Beam': {category: 'Special'},\n  Lick: {category: 'Physical'},\n  'Meteor Mash': {isPunch: true, category: 'Physical'},\n  'Muddy Water': {category: 'Special'},\n  Overheat: {category: 'Special', makesContact: false},\n  'Poison Fang': {isBite: true, category: 'Physical'},\n  'Rock Tomb': {category: 'Physical'},\n  'Skull Bash': {category: 'Physical'},\n  Smog: {category: 'Special'},\n  Snore: {category: 'Special'},\n  Thunderbolt: {category: 'Special'},\n  'Vine Whip': {category: 'Physical'},\n  'Weather Ball': {category: 'Special'},\n  'Ice Ball': {category: 'Physical'},\n  Rollout: {category: 'Physical'},\n  'Sheer Cold': {category: 'Special'},\n  Aeroblast: {category: 'Special'},\n  'Bone Club': {category: 'Physical'},\n  Constrict: {category: 'Physical'},\n  'Dizzy Punch': {isPunch: true, category: 'Physical'},\n  'Dragon Rage': {category: 'Special'},\n  'Egg Bomb': {category: 'Physical'},\n  'Feint Attack': {makesContact: true, category: 'Physical'},\n  Frustration: {category: 'Physical'},\n  'Hyper Fang': {isBite: true, category: 'Physical'},\n  'Karate Chop': {category: 'Physical'},\n  'Low Kick': {category: 'Physical'},\n  'Luster Purge': {category: 'Special'},\n  'Mist Ball': {category: 'Special'},\n  'Needle Arm': {category: 'Physical'},\n  'Psycho Boost': {category: 'Special'},\n  Rage: {category: 'Physical'},\n  Return: {category: 'Physical'},\n  'Rolling Kick': {category: 'Physical'},\n  'Sacred Fire': {category: 'Physical'},\n  'Signal Beam': {category: 'Special'},\n  'Silver Wind': {category: 'Special'},\n  'Sonic Boom': {category: 'Special'},\n  Acid: {category: 'Special'},\n  'Aerial Ace': {category: 'Physical'},\n  'Ancient Power': {category: 'Special', makesContact: false},\n  Astonish: {category: 'Physical'},\n  'Aurora Beam': {category: 'Special'},\n  Bite: {isBite: true, category: 'Physical'},\n  'Blast Burn': {category: 'Special'},\n  'Blaze Kick': {category: 'Physical'},\n  'Bubble Beam': {category: 'Special'},\n  Confusion: {category: 'Special'},\n  'Cross Chop': {category: 'Physical'},\n  Crunch: {isBite: true, category: 'Physical'},\n  'Crush Claw': {category: 'Physical'},\n  Cut: {category: 'Physical'},\n  'Dragon Breath': {category: 'Special'},\n  'Dragon Claw': {category: 'Physical'},\n  'Drill Peck': {category: 'Physical'},\n  'Dynamic Punch': {isPunch: true, category: 'Physical'},\n  Ember: {category: 'Special'},\n  Eruption: {category: 'Special'},\n  'False Swipe': {category: 'Physical'},\n  'Fire Punch': {isPunch: true, category: 'Physical'},\n  Fissure: {category: 'Physical'},\n  'Flame Wheel': {category: 'Physical'},\n  'Frenzy Plant': {category: 'Special'},\n  Guillotine: {category: 'Physical'},\n  Headbutt: {category: 'Physical'},\n  'Horn Attack': {category: 'Physical'},\n  'Horn Drill': {category: 'Physical'},\n  'Hydro Cannon': {category: 'Special'},\n  'Hyper Beam': {category: 'Special'},\n  'Ice Punch': {isPunch: true, category: 'Physical'},\n  'Icy Wind': {category: 'Special'},\n  'Iron Tail': {category: 'Physical'},\n  'Leaf Blade': {bp: 90, category: 'Physical'},\n  'Mach Punch': {isPunch: true, category: 'Physical'},\n  'Magical Leaf': {category: 'Special'},\n  Megahorn: {category: 'Physical'},\n  'Mega Kick': {category: 'Physical'},\n  'Mega Punch': {isPunch: true, category: 'Physical'},\n  'Metal Claw': {category: 'Physical'},\n  'Mud Shot': {category: 'Special'},\n  'Mud-Slap': {category: 'Special'},\n  'Night Shade': {category: 'Special'},\n  Octazooka: {category: 'Special'},\n  'Paleo Wave': {category: 'Special'},\n  'Pay Day': {category: 'Physical'},\n  Peck: {category: 'Physical'},\n  'Poison Sting': {category: 'Physical'},\n  'Poison Tail': {category: 'Physical'},\n  Pound: {category: 'Physical'},\n  'Powder Snow': {category: 'Special'},\n  Present: {category: 'Physical'},\n  Psybeam: {category: 'Special'},\n  Psychic: {category: 'Special'},\n  'Quick Attack': {category: 'Physical'},\n  'Razor Leaf': {category: 'Physical'},\n  'Rock Slide': {category: 'Physical'},\n  'Rock Smash': {bp: 40, category: 'Physical'},\n  'Rock Throw': {category: 'Physical'},\n  Scratch: {category: 'Physical'},\n  'Seismic Toss': {category: 'Physical'},\n  'Shadow Ball': {category: 'Special'},\n  'Shadow Punch': {isPunch: true, category: 'Physical'},\n  'Shadow Strike': {category: 'Physical'},\n  'Shock Wave': {category: 'Special'},\n  'Sky Attack': {category: 'Physical'},\n  Slam: {category: 'Physical'},\n  Slash: {category: 'Physical'},\n  Sludge: {category: 'Special'},\n  'Sludge Bomb': {category: 'Special'},\n  Spark: {category: 'Physical'},\n  'Steel Wing': {category: 'Physical'},\n  Strength: {category: 'Physical'},\n  'Super Fang': {category: 'Physical'},\n  Superpower: {category: 'Physical'},\n  Swift: {category: 'Special'},\n  'Thunder Punch': {isPunch: true, category: 'Physical'},\n  'Thunder Shock': {category: 'Special'},\n  'Tri Attack': {category: 'Special'},\n  'Vise Grip': {category: 'Physical'},\n  'Vital Throw': {category: 'Physical'},\n  Waterfall: {category: 'Physical'},\n  'Water Gun': {category: 'Special'},\n  'Water Pulse': {category: 'Special'},\n  'Water Spout': {category: 'Special'},\n  'Wing Attack': {category: 'Physical'},\n  'Zap Cannon': {bp: 120, category: 'Special'},\n  Acupressure: {bp: 0, type: 'Normal'},\n  'Aqua Ring': {bp: 0, type: 'Water'},\n  Assurance: {\n    bp: 50,\n    type: 'Dark',\n    makesContact: true,\n    category: 'Physical',\n  },\n  Avalanche: {\n    bp: 60,\n    type: 'Ice',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Brave Bird': {\n    bp: 120,\n    type: 'Flying',\n    recoil: [1, 3],\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Bug Bite': {\n    bp: 60,\n    type: 'Bug',\n    makesContact: true,\n    category: 'Physical',\n  },\n  Chatter: {bp: 60, type: 'Flying', isSound: true, category: 'Special'},\n  Copycat: {bp: 0, type: 'Normal'},\n  'Crush Grip': {\n    bp: 0,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Physical',\n  },\n  Defog: {bp: 0, type: 'Flying'},\n  'Double Hit': {\n    bp: 35,\n    type: 'Normal',\n    multihit: 2,\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Drain Punch': {\n    bp: 60,\n    type: 'Fighting',\n    drain: [1, 2],\n    makesContact: true,\n    isPunch: true,\n    category: 'Physical',\n  },\n  Embargo: {bp: 0, type: 'Dark'},\n  Feint: {\n    bp: 50,\n    type: 'Normal',\n    priority: 2,\n    breaksProtect: true,\n    category: 'Physical',\n  },\n  'Fire Fang': {\n    bp: 65,\n    type: 'Fire',\n    makesContact: true,\n    isBite: true,\n    category: 'Physical',\n  },\n  'Flare Blitz': {\n    bp: 120,\n    type: 'Fire',\n    recoil: [1, 3],\n    makesContact: true,\n    category: 'Physical',\n  },\n  Fling: {bp: 0, type: 'Dark', category: 'Physical'},\n  Gravity: {bp: 0, type: 'Psychic'},\n  'Head Smash': {\n    bp: 150,\n    type: 'Rock',\n    recoil: [1, 2],\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Heal Block': {bp: 0, type: 'Psychic', target: 'allAdjacentFoes'},\n  'Healing Wish': {bp: 0, type: 'Psychic'},\n  'Heal Order': {bp: 0, type: 'Bug'},\n  'Last Resort': {\n    bp: 130,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Lucky Chant': {bp: 0, type: 'Normal'},\n  'Lunar Dance': {bp: 0, type: 'Psychic'},\n  'Magma Storm': {bp: 120, type: 'Fire', category: 'Special'},\n  'Magnet Rise': {bp: 0, type: 'Electric'},\n  'Me First': {bp: 0, type: 'Normal'},\n  'Metal Burst': {bp: 0, type: 'Steel', category: 'Physical'},\n  'Miracle Eye': {bp: 0, type: 'Psychic'},\n  'Natural Gift': {bp: 0, type: 'Normal', category: 'Physical'},\n  Payback: {\n    bp: 50,\n    type: 'Dark',\n    makesContact: true,\n    category: 'Physical',\n  },\n  Pluck: {\n    bp: 60,\n    type: 'Flying',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Power Trick': {bp: 0, type: 'Psychic'},\n  Roost: {bp: 0, type: 'Flying'},\n  'Stealth Rock': {bp: 0, type: 'Rock'},\n  'Sucker Punch': {\n    bp: 80,\n    type: 'Dark',\n    priority: 1,\n    makesContact: true,\n    category: 'Physical',\n  },\n  Switcheroo: {bp: 0, type: 'Dark'},\n  Tailwind: {bp: 0, type: 'Flying'},\n  'Toxic Spikes': {bp: 0, type: 'Poison'},\n  'Trick Room': {bp: 0, type: 'Psychic'},\n  'U-turn': {\n    bp: 70,\n    type: 'Bug',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Wake-Up Slap': {\n    bp: 60,\n    type: 'Fighting',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Wood Hammer': {\n    bp: 120,\n    type: 'Grass',\n    recoil: [1, 3],\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Worry Seed': {bp: 0, type: 'Grass'},\n  'Wring Out': {\n    bp: 0,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Special',\n  },\n  'Air Slash': {bp: 75, type: 'Flying', category: 'Special'},\n  'Aura Sphere': {bp: 90, type: 'Fighting', category: 'Special'},\n  'Bug Buzz': {bp: 90, type: 'Bug', isSound: true, category: 'Special'},\n  'Draco Meteor': {bp: 140, type: 'Dragon', self: {boosts: {spa: -2}}, category: 'Special'},\n  'Dragon Pulse': {bp: 90, type: 'Dragon', category: 'Special'},\n  'Dragon Rush': {\n    bp: 100,\n    type: 'Dragon',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Energy Ball': {bp: 80, type: 'Grass', category: 'Special'},\n  'Gunk Shot': {bp: 120, type: 'Poison', category: 'Physical'},\n  'Gyro Ball': {\n    bp: 0,\n    type: 'Steel',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Leaf Storm': {bp: 140, type: 'Grass', self: {boosts: {spa: -2}}, category: 'Special'},\n  'Power Gem': {bp: 70, type: 'Rock', category: 'Special'},\n  'Psycho Shift': {bp: 0, type: 'Psychic'},\n  'Shadow Force': {\n    bp: 120,\n    type: 'Ghost',\n    breaksProtect: true,\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Dark Void': {bp: 0, type: 'Dark', target: 'allAdjacentFoes'},\n  'Gastro Acid': {bp: 0, type: 'Poison'},\n  Captivate: {bp: 0, type: 'Normal', target: 'allAdjacentFoes'},\n  'Grass Knot': {\n    bp: 0,\n    type: 'Grass',\n    makesContact: true,\n    category: 'Special',\n  },\n  'Heart Swap': {bp: 0, type: 'Psychic'},\n  Judgment: {bp: 100, type: 'Normal', category: 'Special'},\n  'Magnet Bomb': {bp: 60, type: 'Steel', category: 'Physical'},\n  'Mirror Shot': {bp: 65, type: 'Steel', category: 'Special'},\n  'Mud Bomb': {bp: 65, type: 'Ground', category: 'Special'},\n  'Ominous Wind': {bp: 60, type: 'Ghost', category: 'Special'},\n  Punishment: {\n    bp: 0,\n    type: 'Dark',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Roar of Time': {bp: 150, type: 'Dragon', category: 'Special'},\n  'Rock Climb': {\n    bp: 90,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Seed Flare': {bp: 120, type: 'Grass', category: 'Special'},\n  'Spacial Rend': {bp: 100, type: 'Dragon', category: 'Special', highCritChance: true},\n  'Trump Card': {\n    bp: 0,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Special',\n  },\n  'Aqua Jet': {\n    bp: 40,\n    type: 'Water',\n    priority: 1,\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Aqua Tail': {\n    bp: 90,\n    type: 'Water',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Attack Order': {bp: 90, type: 'Bug', category: 'Physical', highCritChance: true},\n  Brine: {bp: 65, type: 'Water', category: 'Special'},\n  'Bullet Punch': {\n    bp: 40,\n    type: 'Steel',\n    priority: 1,\n    makesContact: true,\n    isPunch: true,\n    category: 'Physical',\n  },\n  'Charge Beam': {bp: 50, type: 'Electric', category: 'Special'},\n  'Close Combat': {\n    bp: 120,\n    type: 'Fighting',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Cross Poison': {\n    bp: 70,\n    type: 'Poison',\n    makesContact: true,\n    category: 'Physical',\n    highCritChance: true,\n  },\n  'Dark Pulse': {bp: 80, type: 'Dark', category: 'Special'},\n  'Defend Order': {bp: 0, type: 'Bug'},\n  Discharge: {\n    bp: 80,\n    type: 'Electric',\n    target: 'allAdjacent',\n    category: 'Special',\n  },\n  'Earth Power': {bp: 90, type: 'Ground', category: 'Special'},\n  'Flash Cannon': {bp: 80, type: 'Steel', category: 'Special'},\n  'Focus Blast': {bp: 120, type: 'Fighting', category: 'Special'},\n  'Force Palm': {\n    bp: 60,\n    type: 'Fighting',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Giga Impact': {\n    bp: 150,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Guard Swap': {bp: 0, type: 'Psychic'},\n  'Hammer Arm': {\n    bp: 100,\n    type: 'Fighting',\n    makesContact: true,\n    isPunch: true,\n    category: 'Physical',\n  },\n  'Ice Fang': {\n    bp: 65,\n    type: 'Ice',\n    makesContact: true,\n    isBite: true,\n    category: 'Physical',\n  },\n  'Ice Shard': {bp: 40, type: 'Ice', priority: 1, category: 'Physical'},\n  'Iron Head': {\n    bp: 80,\n    type: 'Steel',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Lava Plume': {\n    bp: 80,\n    type: 'Fire',\n    target: 'allAdjacent',\n    category: 'Special',\n  },\n  'Nasty Plot': {bp: 0, type: 'Dark'},\n  'Night Slash': {\n    bp: 70,\n    type: 'Dark',\n    makesContact: true,\n    category: 'Physical',\n    highCritChance: true,\n  },\n  'Poison Jab': {\n    bp: 80,\n    type: 'Poison',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Power Swap': {bp: 0, type: 'Psychic'},\n  'Power Whip': {\n    bp: 120,\n    type: 'Grass',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Psycho Cut': {bp: 70, type: 'Psychic', category: 'Physical', highCritChance: true},\n  'Rock Polish': {bp: 0, type: 'Rock'},\n  'Rock Wrecker': {bp: 150, type: 'Rock', category: 'Physical'},\n  'Seed Bomb': {bp: 80, type: 'Grass', category: 'Physical'},\n  'Shadow Claw': {\n    bp: 70,\n    type: 'Ghost',\n    makesContact: true,\n    category: 'Physical',\n    highCritChance: true,\n  },\n  'Shadow Sneak': {\n    bp: 40,\n    type: 'Ghost',\n    priority: 1,\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Stone Edge': {bp: 100, type: 'Rock', category: 'Physical', highCritChance: true},\n  'Thunder Fang': {\n    bp: 65,\n    type: 'Electric',\n    makesContact: true,\n    isBite: true,\n    category: 'Physical',\n  },\n  'Vacuum Wave': {\n    bp: 40,\n    type: 'Fighting',\n    priority: 1,\n    category: 'Special',\n  },\n  'X-Scissor': {\n    bp: 80,\n    type: 'Bug',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Zen Headbutt': {\n    bp: 80,\n    type: 'Psychic',\n    makesContact: true,\n    category: 'Physical',\n  },\n};\n\nconst DPP: {[name: string]: MoveData} = extend(true, {}, ADV, DPP_PATCH);\n\nconst BW_PATCH: {[name: string]: DeepPartial<MoveData>} = {\n  'Air Slash': {secondaries: true},\n  Blizzard: {secondaries: true},\n  'Body Slam': {secondaries: true},\n  Bounce: {secondaries: true},\n  Bubble: {secondaries: true},\n  'Brave Bird': {recoil: [33, 100]},\n  'Bug Buzz': {secondaries: true},\n  Chatter: {secondaries: true},\n  Covet: {bp: 60},\n  'Dragon Rush': {secondaries: true},\n  'Drain Punch': {bp: 75},\n  'Energy Ball': {secondaries: true},\n  Extrasensory: {secondaries: true},\n  Feint: {bp: 30},\n  Detect: {priority: 4},\n  'Double-Edge': {recoil: [33, 100]},\n  Protect: {priority: 4},\n  'Fire Blast': {secondaries: true},\n  'Fire Spin': {bp: 35},\n  Flamethrower: {secondaries: true},\n  'Fury Cutter': {bp: 20},\n  'Future Sight': {bp: 100, type: 'Psychic'},\n  'Giga Drain': {bp: 75},\n  'Gunk Shot': {secondaries: true},\n  'Heat Wave': {secondaries: true},\n  'Ice Beam': {secondaries: true},\n  Lick: {secondaries: true},\n  'Meteor Mash': {secondaries: true},\n  'Muddy Water': {secondaries: true},\n  Overheat: {},\n  'Poison Fang': {secondaries: true},\n  'Poison Gas': {target: 'allAdjacentFoes'},\n  'Rock Tomb': {secondaries: true},\n  'Sand Tomb': {bp: 35},\n  'Secret Power': {secondaries: true},\n  Smog: {secondaries: true},\n  Snore: {secondaries: true},\n  Stomp: {secondaries: true},\n  Thunder: {secondaries: true},\n  Thunderbolt: {secondaries: true},\n  Uproar: {bp: 90},\n  Whirlpool: {bp: 35},\n  'Petal Dance': {bp: 120},\n  Tackle: {bp: 50},\n  Thrash: {bp: 120},\n  'Bone Club': {secondaries: true},\n  Constrict: {secondaries: true},\n  'Dizzy Punch': {secondaries: true},\n  'Hyper Fang': {secondaries: true},\n  'Jump Kick': {bp: 100},\n  'Luster Purge': {secondaries: true},\n  'Mirror Shot': {secondaries: true},\n  'Mist Ball': {secondaries: true},\n  'Mud Bomb': {secondaries: true},\n  'Needle Arm': {secondaries: true},\n  'Ominous Wind': {secondaries: true},\n  'Rock Climb': {secondaries: true},\n  'Rolling Kick': {secondaries: true},\n  'Sacred Fire': {secondaries: true},\n  'Seed Flare': {secondaries: true},\n  'Signal Beam': {secondaries: true},\n  'Silver Wind': {secondaries: true},\n  Twineedle: {secondaries: true},\n  Acid: {secondaries: true},\n  'Ancient Power': {secondaries: true},\n  Astonish: {secondaries: true},\n  'Aurora Beam': {secondaries: true},\n  'Beat Up': {bp: 0},\n  Bite: {secondaries: true},\n  'Blaze Kick': {secondaries: true},\n  'Bubble Beam': {secondaries: true},\n  'Bullet Seed': {bp: 25},\n  'Charge Beam': {secondaries: true},\n  Confusion: {secondaries: true},\n  'Cross Poison': {secondaries: true},\n  Crunch: {secondaries: true},\n  'Crush Claw': {secondaries: true},\n  Curse: {type: 'Ghost'},\n  'Dark Pulse': {secondaries: true},\n  Discharge: {secondaries: true},\n  'Doom Desire': {bp: 140},\n  'Dragon Breath': {secondaries: true},\n  'Dynamic Punch': {secondaries: true},\n  'Earth Power': {secondaries: true},\n  'Extreme Speed': {priority: 2},\n  Ember: {secondaries: true},\n  'Fake Out': {secondaries: true, priority: 3},\n  'Fire Fang': {secondaries: true},\n  'Fire Punch': {secondaries: true},\n  'Flame Wheel': {secondaries: true},\n  'Flare Blitz': {secondaries: true, recoil: [33, 100]},\n  'Flash Cannon': {secondaries: true},\n  'Focus Blast': {secondaries: true},\n  'Force Palm': {secondaries: true},\n  Headbutt: {secondaries: true},\n  'High Jump Kick': {bp: 130},\n  'Ice Fang': {secondaries: true},\n  'Ice Punch': {secondaries: true},\n  'Icicle Spear': {bp: 25},\n  'Icy Wind': {secondaries: true},\n  'Iron Head': {secondaries: true},\n  'Iron Tail': {secondaries: true},\n  'Last Resort': {bp: 140},\n  'Lava Plume': {secondaries: true},\n  'Metal Claw': {secondaries: true},\n  'Mud Shot': {secondaries: true},\n  'Mud-Slap': {secondaries: true},\n  Octazooka: {secondaries: true},\n  'Paleo Wave': {secondaries: true},\n  'Poison Jab': {secondaries: true},\n  'Poison Sting': {secondaries: true},\n  'Poison Tail': {secondaries: true},\n  'Powder Snow': {secondaries: true},\n  Psybeam: {secondaries: true},\n  Psychic: {secondaries: true},\n  'Rock Slide': {secondaries: true},\n  'Rock Smash': {secondaries: true},\n  'Shadow Ball': {secondaries: true},\n  'Shadow Strike': {secondaries: true},\n  'Sky Attack': {secondaries: true},\n  Sludge: {secondaries: true},\n  'Sludge Bomb': {secondaries: true},\n  Spark: {secondaries: true},\n  'Steel Wing': {secondaries: true},\n  'Thunder Fang': {secondaries: true},\n  'Thunder Punch': {secondaries: true},\n  'Thunder Shock': {secondaries: true},\n  'Tri Attack': {secondaries: true},\n  Twister: {secondaries: true},\n  'Volt Tackle': {secondaries: true, recoil: [33, 100]},\n  'Wood Hammer': {recoil: [33, 100]},\n  Waterfall: {secondaries: true},\n  'Water Pulse': {secondaries: true},\n  'Zap Cannon': {secondaries: true},\n  'Zen Headbutt': {secondaries: true},\n  Autotomize: {bp: 0, type: 'Steel'},\n  Bestow: {bp: 0, type: 'Normal'},\n  'Echoed Voice': {bp: 40, type: 'Normal', isSound: true, category: 'Special'},\n  'Electro Ball': {bp: 0, type: 'Electric', category: 'Special'},\n  Entrainment: {bp: 0, type: 'Normal'},\n  'Final Gambit': {\n    bp: 0,\n    type: 'Fighting',\n    makesContact: true,\n    category: 'Special',\n  },\n  'Fire Pledge': {bp: 50, type: 'Fire', category: 'Special'},\n  'Frost Breath': {bp: 40, type: 'Ice', willCrit: true, category: 'Special'},\n  'Grass Pledge': {bp: 50, type: 'Grass', category: 'Special'},\n  'Heal Pulse': {bp: 0, type: 'Psychic'},\n  'Heat Crash': {\n    bp: 0,\n    type: 'Fire',\n    makesContact: true,\n    category: 'Physical',\n  },\n  Hex: {bp: 50, type: 'Ghost', category: 'Special'},\n  'Horn Leech': {\n    bp: 75,\n    type: 'Grass',\n    drain: [1, 2],\n    makesContact: true,\n    category: 'Physical',\n  },\n  Hurricane: {\n    bp: 120,\n    type: 'Flying',\n    category: 'Special',\n    secondaries: true,\n  },\n  Incinerate: {bp: 30, type: 'Fire', target: 'allAdjacentFoes', category: 'Special'},\n  'Low Sweep': {\n    bp: 60,\n    type: 'Fighting',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n  },\n  'Magic Room': {bp: 0, type: 'Psychic'},\n  'Quick Guard': {bp: 0, type: 'Fighting', priority: 3},\n  'Rage Powder': {bp: 0, type: 'Bug', priority: 3},\n  'Relic Song': {\n    bp: 75,\n    type: 'Normal',\n    isSound: true,\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    secondaries: true,\n  },\n  Round: {bp: 60, type: 'Normal', isSound: true, category: 'Special'},\n  'Sacred Sword': {\n    bp: 90,\n    type: 'Fighting',\n    makesContact: true,\n    category: 'Physical',\n    ignoreDefensive: true,\n  },\n  Scald: {\n    bp: 80,\n    type: 'Water',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Simple Beam': {bp: 0, type: 'Normal'},\n  'Sky Drop': {\n    bp: 60,\n    type: 'Flying',\n    makesContact: true,\n    category: 'Physical',\n  },\n  Snarl: {\n    bp: 55,\n    type: 'Dark',\n    isSound: true,\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    secondaries: true,\n  },\n  Soak: {bp: 0, type: 'Water'},\n  Steamroller: {\n    bp: 65,\n    type: 'Bug',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n  },\n  'Storm Throw': {\n    bp: 40,\n    type: 'Fighting',\n    willCrit: true,\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Struggle Bug': {\n    bp: 30,\n    type: 'Bug',\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    secondaries: true,\n  },\n  Synchronoise: {\n    bp: 70,\n    type: 'Psychic',\n    target: 'allAdjacent',\n    category: 'Special',\n  },\n  'Techno Blast': {bp: 85, type: 'Normal', category: 'Special'},\n  Telekinesis: {bp: 0, type: 'Psychic'},\n  'Water Pledge': {bp: 50, type: 'Water', category: 'Special'},\n  'Wide Guard': {bp: 0, type: 'Rock', priority: 3},\n  'Wonder Room': {bp: 0, type: 'Psychic'},\n  'Ally Switch': {bp: 0, type: 'Psychic', priority: 1},\n  'Flame Burst': {bp: 70, type: 'Fire', category: 'Special'},\n  'Heavy Slam': {\n    bp: 0,\n    type: 'Steel',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Reflect Type': {bp: 0, type: 'Normal'},\n  'Volt Switch': {bp: 70, type: 'Electric', category: 'Special'},\n  'Chip Away': {\n    bp: 70,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Physical',\n    ignoreDefensive: true,\n  },\n  'Fiery Dance': {\n    bp: 80,\n    type: 'Fire',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Head Charge': {\n    bp: 120,\n    type: 'Normal',\n    recoil: [1, 4],\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Heart Stamp': {\n    bp: 60,\n    type: 'Psychic',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n  },\n  Quash: {bp: 0, type: 'Dark'},\n  'Searing Shot': {\n    bp: 100,\n    type: 'Fire',\n    target: 'allAdjacent',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Acid Spray': {\n    bp: 40,\n    type: 'Poison',\n    category: 'Special',\n    secondaries: true,\n  },\n  Acrobatics: {\n    bp: 55,\n    type: 'Flying',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'After You': {bp: 0, type: 'Normal'},\n  'Blue Flare': {\n    bp: 130,\n    type: 'Fire',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Bolt Strike': {\n    bp: 130,\n    type: 'Electric',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n  },\n  Bulldoze: {\n    bp: 60,\n    type: 'Ground',\n    target: 'allAdjacent',\n    category: 'Physical',\n    secondaries: true,\n  },\n  'Circle Throw': {\n    bp: 60,\n    type: 'Fighting',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Clear Smog': {bp: 50, type: 'Poison', category: 'Special'},\n  Coil: {bp: 0, type: 'Poison'},\n  'Cotton Guard': {bp: 0, type: 'Grass'},\n  'Dragon Tail': {\n    bp: 60,\n    type: 'Dragon',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Drill Run': {\n    bp: 80,\n    type: 'Ground',\n    makesContact: true,\n    category: 'Physical',\n    highCritChance: true,\n  },\n  'Dual Chop': {\n    bp: 40,\n    type: 'Dragon',\n    multihit: 2,\n    makesContact: true,\n    category: 'Physical',\n  },\n  Electroweb: {\n    bp: 55,\n    type: 'Electric',\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Flame Charge': {\n    bp: 50,\n    type: 'Fire',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n  },\n  'Foul Play': {\n    bp: 95,\n    type: 'Dark',\n    makesContact: true,\n    category: 'Physical',\n    overrideOffensivePokemon: 'target',\n  },\n  'Freeze Shock': {\n    bp: 140,\n    type: 'Ice',\n    category: 'Physical',\n    secondaries: true,\n  },\n  'Fusion Bolt': {bp: 100, type: 'Electric', category: 'Physical'},\n  'Fusion Flare': {bp: 100, type: 'Fire', category: 'Special'},\n  'Gear Grind': {\n    bp: 50,\n    type: 'Steel',\n    multihit: 2,\n    makesContact: true,\n    category: 'Physical',\n  },\n  Glaciate: {\n    bp: 65,\n    type: 'Ice',\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Guard Split': {bp: 0, type: 'Psychic'},\n  'Hone Claws': {bp: 0, type: 'Dark'},\n  'Ice Burn': {\n    bp: 140,\n    type: 'Ice',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Icicle Crash': {\n    bp: 85,\n    type: 'Ice',\n    category: 'Physical',\n    secondaries: true,\n  },\n  Inferno: {\n    bp: 100,\n    type: 'Fire',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Leaf Tornado': {\n    bp: 65,\n    type: 'Grass',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Night Daze': {\n    bp: 85,\n    type: 'Dark',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Power Split': {bp: 0, type: 'Psychic'},\n  Psyshock: {\n    bp: 80,\n    type: 'Psychic',\n    category: 'Special',\n    overrideDefensiveStat: 'def',\n  },\n  Psystrike: {\n    bp: 100,\n    type: 'Psychic',\n    category: 'Special',\n    overrideDefensiveStat: 'def',\n  },\n  'Quiver Dance': {bp: 0, type: 'Bug'},\n  'Razor Shell': {\n    bp: 75,\n    type: 'Water',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n  },\n  Retaliate: {\n    bp: 70,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Secret Sword': {\n    bp: 85,\n    type: 'Fighting',\n    category: 'Special',\n    overrideDefensiveStat: 'def',\n  },\n  'Shell Smash': {bp: 0, type: 'Normal'},\n  'Shift Gear': {bp: 0, type: 'Steel'},\n  'Sludge Wave': {\n    bp: 95,\n    type: 'Poison',\n    target: 'allAdjacent',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Smack Down': {bp: 50, type: 'Rock', category: 'Physical'},\n  'Stored Power': {bp: 20, type: 'Psychic', category: 'Special'},\n  'Tail Slap': {\n    bp: 25,\n    type: 'Normal',\n    multihit: [2, 5],\n    makesContact: true,\n    category: 'Physical',\n  },\n  'V-create': {\n    bp: 180,\n    type: 'Fire',\n    makesContact: true,\n    category: 'Physical',\n  },\n  Venoshock: {bp: 65, type: 'Poison', category: 'Special'},\n  'Wild Charge': {\n    bp: 90,\n    type: 'Electric',\n    recoil: [1, 4],\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Work Up': {bp: 0, type: 'Normal'},\n};\n\nconst BW: {[name: string]: MoveData} = extend(true, {}, DPP, BW_PATCH);\n\ndelete BW['Faint Attack'];\n\nconst XY_PATCH: {[name: string]: DeepPartial<MoveData>} = {\n  'Ice Ball': {isBullet: true},\n  'Knock Off': {bp: 65},\n  Thief: {bp: 60},\n  Barrage: {isBullet: true},\n  Bubble: {bp: 40},\n  Chatter: {bp: 65},\n  'Egg Bomb': {isBullet: true},\n  'Follow Me': {priority: 2},\n  Hurricane: {bp: 110},\n  'Hidden Power': {bp: 60},\n  'Hidden Power Bug': {bp: 60},\n  'Hidden Power Dark': {bp: 60},\n  'Hidden Power Dragon': {bp: 60},\n  'Hidden Power Electric': {bp: 60},\n  'Hidden Power Fighting': {bp: 60},\n  'Hidden Power Fire': {bp: 60},\n  'Hidden Power Flying': {bp: 60},\n  'Hidden Power Ghost': {bp: 60},\n  'Hidden Power Grass': {bp: 60},\n  'Hidden Power Ground': {bp: 60},\n  'Hidden Power Ice': {bp: 60},\n  'Hidden Power Poison': {bp: 60},\n  'Hidden Power Psychic': {bp: 60},\n  'Hidden Power Rock': {bp: 60},\n  'Hidden Power Steel': {bp: 60},\n  'Hidden Power Water': {bp: 60},\n  'Magma Storm': {bp: 100},\n  'Magnet Bomb': {isBullet: true},\n  'Mist Ball': {isBullet: true},\n  Moonlight: {type: 'Fairy'},\n  'Mud Bomb': {isBullet: true},\n  'Searing Shot': {isBullet: true},\n  'Smelling Salts': {bp: 70},\n  Synchronoise: {bp: 120},\n  'Techno Blast': {bp: 120},\n  Thunder: {bp: 110},\n  'Wake-Up Slap': {bp: 70},\n  'Acid Spray': {isBullet: true},\n  'Air Cutter': {bp: 60},\n  'Ancient Power': {},\n  Assurance: {bp: 60},\n  'Aura Sphere': {bp: 80, isBullet: true, isPulse: true},\n  Blizzard: {bp: 110},\n  'Bullet Seed': {isBullet: true},\n  Charm: {type: 'Fairy'},\n  'Cotton Spore': {target: 'allAdjacentFoes'},\n  Crabhammer: {bp: 100},\n  'Dark Pulse': {isPulse: true},\n  'Draco Meteor': {bp: 130},\n  'Dragon Pulse': {bp: 85, isPulse: true},\n  'Electro Ball': {isBullet: true},\n  'Energy Ball': {bp: 90, isBullet: true},\n  'Final Gambit': {makesContact: false},\n  'Fire Blast': {bp: 110},\n  'Fire Pledge': {bp: 80},\n  Flamethrower: {bp: 90},\n  'Focus Blast': {isBullet: true},\n  'Frost Breath': {bp: 60},\n  'Fury Cutter': {bp: 40},\n  'Future Sight': {bp: 120},\n  'Grass Pledge': {bp: 80},\n  'Gyro Ball': {isBullet: true},\n  'Heal Pulse': {isPulse: true},\n  'Heat Wave': {bp: 95},\n  Hex: {bp: 65},\n  'Hydro Pump': {bp: 110},\n  'Ice Beam': {bp: 90},\n  Incinerate: {bp: 60},\n  'Leaf Storm': {bp: 130},\n  Lick: {bp: 30},\n  'Low Sweep': {bp: 65},\n  'Meteor Mash': {bp: 90},\n  'Muddy Water': {bp: 90},\n  Octazooka: {isBullet: true},\n  Overheat: {bp: 130},\n  'Pin Missile': {bp: 25},\n  'Power Gem': {bp: 80},\n  'Rage Powder': {priority: 2},\n  'Rock Tomb': {bp: 60},\n  'Rock Wrecker': {isBullet: true},\n  'Seed Bomb': {isBullet: true},\n  'Shadow Ball': {isBullet: true},\n  'Skull Bash': {bp: 130},\n  'Sludge Bomb': {isBullet: true},\n  Smog: {bp: 30},\n  Snore: {bp: 50},\n  'Storm Throw': {bp: 60},\n  'Struggle Bug': {bp: 50},\n  Surf: {bp: 90},\n  'Sweet Kiss': {type: 'Fairy'},\n  Thunderbolt: {bp: 90},\n  'Vine Whip': {bp: 45},\n  'Water Pledge': {bp: 80},\n  'Water Pulse': {isPulse: true},\n  'Weather Ball': {isBullet: true},\n  'Zap Cannon': {isBullet: true},\n  'Diamond Storm': {\n    bp: 100,\n    type: 'Rock',\n    target: 'allAdjacentFoes',\n    category: 'Physical',\n    secondaries: true,\n  },\n  'Fell Stinger': {\n    bp: 30,\n    type: 'Bug',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Flying Press': {\n    bp: 80,\n    type: 'Fighting',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Hyperspace Fury': {\n    bp: 100,\n    type: 'Dark',\n    breaksProtect: true,\n    category: 'Physical',\n  },\n  'Hyperspace Hole': {\n    bp: 80,\n    type: 'Psychic',\n    breaksProtect: true,\n    category: 'Special',\n  },\n  'King\\'s Shield': {bp: 0, type: 'Steel', priority: 4},\n  'Misty Terrain': {bp: 0, type: 'Fairy'},\n  'Mystical Fire': {\n    bp: 65,\n    type: 'Fire',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Parabolic Charge': {\n    bp: 50,\n    type: 'Electric',\n    drain: [1, 2],\n    target: 'allAdjacent',\n    category: 'Special',\n  },\n  'Parting Shot': {bp: 0, type: 'Dark', isSound: true},\n  'Phantom Force': {\n    bp: 90,\n    type: 'Ghost',\n    breaksProtect: true,\n    makesContact: true,\n    category: 'Physical',\n  },\n  Powder: {bp: 0, type: 'Bug', priority: 1},\n  'Spiky Shield': {bp: 0, type: 'Grass', priority: 4},\n  'Thousand Arrows': {bp: 90, type: 'Ground', target: 'allAdjacentFoes', category: 'Physical'},\n  'Thousand Waves': {bp: 90, type: 'Ground', target: 'allAdjacentFoes', category: 'Physical'},\n  'Water Shuriken': {\n    bp: 15,\n    type: 'Water',\n    multihit: [2, 5],\n    priority: 1,\n    category: 'Physical',\n  },\n  'Dragon Ascent': {\n    bp: 120,\n    type: 'Flying',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Electric Terrain': {bp: 0, type: 'Electric'},\n  Geomancy: {bp: 0, type: 'Fairy'},\n  'Grassy Terrain': {bp: 0, type: 'Grass'},\n  'Ion Deluge': {bp: 0, type: 'Electric', priority: 1},\n  'Land\\'s Wrath': {bp: 90, type: 'Ground', target: 'allAdjacentFoes', category: 'Physical'},\n  'Light of Ruin': {bp: 140, type: 'Fairy', recoil: [1, 2], category: 'Special'},\n  'Oblivion Wing': {\n    bp: 80,\n    type: 'Flying',\n    drain: [3, 4],\n    category: 'Special',\n  },\n  'Origin Pulse': {\n    bp: 110,\n    type: 'Water',\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    isPulse: true,\n  },\n  'Precipice Blades': {\n    bp: 120,\n    type: 'Ground',\n    target: 'allAdjacentFoes',\n    category: 'Physical',\n  },\n  Rototiller: {bp: 0, type: 'Ground'},\n  'Steam Eruption': {\n    bp: 110,\n    type: 'Water',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Aromatic Mist': {bp: 0, type: 'Fairy'},\n  'Baby-Doll Eyes': {bp: 0, type: 'Fairy', priority: 1},\n  Belch: {bp: 120, type: 'Poison', category: 'Special'},\n  Boomburst: {\n    bp: 140,\n    type: 'Normal',\n    isSound: true,\n    target: 'allAdjacent',\n    category: 'Special',\n  },\n  Celebrate: {bp: 0, type: 'Normal'},\n  Confide: {bp: 0, type: 'Normal', isSound: true},\n  'Crafty Shield': {bp: 0, type: 'Fairy', priority: 3},\n  'Dazzling Gleam': {bp: 80, type: 'Fairy', target: 'allAdjacentFoes', category: 'Special'},\n  'Disarming Voice': {\n    bp: 40,\n    type: 'Fairy',\n    isSound: true,\n    target: 'allAdjacentFoes',\n    category: 'Special',\n  },\n  'Draining Kiss': {\n    bp: 50,\n    type: 'Fairy',\n    drain: [3, 4],\n    makesContact: true,\n    category: 'Special',\n  },\n  'Eerie Impulse': {bp: 0, type: 'Electric'},\n  Electrify: {bp: 0, type: 'Electric'},\n  'Fairy Lock': {bp: 0, type: 'Fairy'},\n  'Fairy Wind': {bp: 40, type: 'Fairy', category: 'Special'},\n  'Flower Shield': {bp: 0, type: 'Fairy'},\n  'Forest\\'s Curse': {bp: 0, type: 'Grass'},\n  'Freeze-Dry': {\n    bp: 70,\n    type: 'Ice',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Happy Hour': {bp: 0, type: 'Normal'},\n  'Hold Back': {\n    bp: 40,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Physical',\n  },\n  'Hold Hands': {bp: 0, type: 'Normal'},\n  Infestation: {bp: 20, type: 'Bug', makesContact: true, category: 'Special'},\n  'Magnetic Flux': {bp: 0, type: 'Electric'},\n  'Mat Block': {bp: 0, type: 'Fighting'},\n  Moonblast: {\n    bp: 95,\n    type: 'Fairy',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Noble Roar': {bp: 0, type: 'Normal', isSound: true},\n  Nuzzle: {\n    bp: 20,\n    type: 'Electric',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n  },\n  'Petal Blizzard': {\n    bp: 90,\n    type: 'Grass',\n    target: 'allAdjacent',\n    category: 'Physical',\n  },\n  'Play Nice': {bp: 0, type: 'Normal'},\n  'Play Rough': {\n    bp: 90,\n    type: 'Fairy',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n  },\n  'Power-Up Punch': {\n    bp: 40,\n    type: 'Fighting',\n    makesContact: true,\n    isPunch: true,\n    category: 'Physical',\n    secondaries: true,\n  },\n  'Sticky Web': {bp: 0, type: 'Bug'},\n  'Topsy-Turvy': {bp: 0, type: 'Dark'},\n  'Trick-or-Treat': {bp: 0, type: 'Ghost'},\n  'Venom Drench': {bp: 0, type: 'Poison', target: 'allAdjacentFoes'},\n};\n\nconst XY: {[name: string]: MoveData} = extend(true, {}, BW, XY_PATCH);\n\nconst SM_PATCH: {[name: string]: DeepPartial<MoveData>} = {\n  'Ally Switch': {priority: 2},\n  Aeroblast: {zp: 180},\n  Barrage: {zp: 100},\n  Bide: {zp: 100},\n  'Bone Club': {zp: 120},\n  Bonemerang: {zp: 100},\n  Bubble: {zp: 100},\n  Chatter: {zp: 120},\n  'Chip Away': {zp: 140},\n  Clamp: {zp: 100},\n  'Comet Punch': {zp: 100},\n  Constrict: {zp: 100},\n  'Crush Grip': {zp: 190},\n  'Diamond Storm': {zp: 180},\n  'Dizzy Punch': {zp: 140},\n  'Double Slap': {zp: 100},\n  'Dragon Ascent': {zp: 190},\n  'Dragon Rage': {zp: 100},\n  'Egg Bomb': {zp: 180},\n  'Feint Attack': {zp: 120},\n  'Fiery Dance': {zp: 160},\n  'Flame Burst': {zp: 140},\n  Frustration: {zp: 160},\n  'Grass Knot': {zp: 160},\n  'Head Charge': {zp: 190},\n  'Heart Stamp': {zp: 120},\n  'Heat Crash': {zp: 160},\n  'Heavy Slam': {zp: 160},\n  Hurricane: {zp: 185},\n  'Hidden Power': {zp: 120},\n  'Hidden Power Bug': {zp: 120},\n  'Hidden Power Dark': {zp: 120},\n  'Hidden Power Dragon': {zp: 120},\n  'Hidden Power Electric': {zp: 120},\n  'Hidden Power Fighting': {zp: 120},\n  'Hidden Power Fire': {zp: 120},\n  'Hidden Power Flying': {zp: 120},\n  'Hidden Power Ghost': {zp: 120},\n  'Hidden Power Grass': {zp: 120},\n  'Hidden Power Ground': {zp: 120},\n  'Hidden Power Ice': {zp: 120},\n  'Hidden Power Poison': {zp: 120},\n  'Hidden Power Psychic': {zp: 120},\n  'Hidden Power Rock': {zp: 120},\n  'Hidden Power Steel': {zp: 120},\n  'Hidden Power Water': {zp: 120},\n  'Hyper Fang': {zp: 160},\n  'Hyperspace Fury': {zp: 180},\n  'Hyperspace Hole': {zp: 160},\n  'Ice Ball': {zp: 100},\n  Judgment: {zp: 180},\n  'Jump Kick': {zp: 180},\n  'Karate Chop': {zp: 100},\n  'Knock Off': {zp: 120},\n  'Land\\'s Wrath': {zp: 185},\n  'Light of Ruin': {zp: 200},\n  'Low Kick': {zp: 160},\n  'Luster Purge': {zp: 140},\n  'Magma Storm': {zp: 180},\n  'Magnet Bomb': {zp: 120},\n  Magnitude: {zp: 140},\n  'Mirror Shot': {zp: 120},\n  'Mist Ball': {zp: 140},\n  'Mud Bomb': {zp: 120},\n  'Natural Gift': {zp: 160},\n  'Needle Arm': {zp: 120},\n  'Oblivion Wing': {zp: 160},\n  'Ominous Wind': {zp: 120},\n  'Origin Pulse': {zp: 185},\n  'Precipice Blades': {zp: 190},\n  'Psycho Boost': {zp: 200},\n  Psywave: {zp: 100},\n  Punishment: {zp: 160},\n  Pursuit: {zp: 100},\n  Rage: {zp: 100},\n  'Rapid Spin': {zp: 100},\n  'Razor Wind': {zp: 160},\n  'Relic Song': {zp: 140},\n  Return: {zp: 160},\n  'Roar of Time': {zp: 200},\n  'Rock Climb': {zp: 175},\n  'Rolling Kick': {zp: 120},\n  'Sacred Fire': {zp: 180},\n  'Searing Shot': {zp: 180},\n  'Secret Power': {zp: 140},\n  'Seed Flare': {zp: 190},\n  'Shadow Force': {zp: 190},\n  'Signal Beam': {zp: 140},\n  'Silver Wind': {zp: 120},\n  'Sky Drop': {zp: 120},\n  'Sky Uppercut': {zp: 160},\n  'Smelling Salts': {zp: 140},\n  'Solar Beam': {zp: 190},\n  'Sonic Boom': {zp: 100},\n  'Spacial Rend': {zp: 180},\n  'Spike Cannon': {zp: 120},\n  'Steam Eruption': {zp: 185},\n  Steamroller: {zp: 120},\n  Synchronoise: {zp: 190},\n  'Techno Blast': {zp: 190},\n  'Thousand Arrows': {zp: 180},\n  'Thousand Waves': {zp: 175},\n  'Trump Card': {zp: 160},\n  Thunder: {zp: 185},\n  Twineedle: {zp: 100},\n  'Wake-Up Slap': {zp: 140},\n  'Wring Out': {zp: 190},\n  Absorb: {zp: 100},\n  Acid: {zp: 100},\n  'Acid Spray': {zp: 100},\n  Acrobatics: {zp: 100},\n  'Aerial Ace': {zp: 120},\n  'Air Cutter': {zp: 120},\n  'Air Slash': {zp: 140},\n  'Ancient Power': {zp: 120},\n  'Aqua Jet': {zp: 100},\n  'Aqua Tail': {zp: 175},\n  'Arm Thrust': {zp: 100},\n  Assurance: {zp: 120},\n  Astonish: {zp: 100},\n  'Attack Order': {zp: 175},\n  'Aura Sphere': {zp: 160},\n  'Aurora Beam': {zp: 120},\n  Avalanche: {zp: 120},\n  'Beat Up': {zp: 100},\n  Belch: {zp: 190},\n  Bind: {zp: 100},\n  Bite: {zp: 120},\n  'Blast Burn': {zp: 200},\n  'Blaze Kick': {zp: 160},\n  Blizzard: {zp: 185},\n  'Blue Flare': {zp: 195},\n  'Body Slam': {zp: 160},\n  'Bolt Strike': {zp: 195},\n  'Bone Rush': {zp: 140},\n  Boomburst: {zp: 200},\n  Bounce: {zp: 160},\n  'Brave Bird': {zp: 190},\n  'Brick Break': {zp: 140},\n  Brine: {zp: 120},\n  'Bubble Beam': {zp: 120},\n  'Bug Bite': {zp: 120},\n  'Bug Buzz': {zp: 175},\n  Bulldoze: {zp: 120},\n  'Bullet Punch': {zp: 100},\n  'Bullet Seed': {zp: 140},\n  'Charge Beam': {zp: 100},\n  'Circle Throw': {zp: 120},\n  'Clear Smog': {zp: 100},\n  'Close Combat': {zp: 190},\n  Confusion: {zp: 100},\n  Counter: {zp: 100},\n  Covet: {zp: 120},\n  Crabhammer: {zp: 180},\n  'Cross Chop': {zp: 180},\n  'Cross Poison': {zp: 140},\n  Crunch: {zp: 160},\n  'Crush Claw': {zp: 140},\n  Cut: {zp: 100},\n  'Dark Pulse': {zp: 160},\n  'Dazzling Gleam': {zp: 160},\n  Dig: {zp: 160},\n  'Disarming Voice': {zp: 100},\n  Discharge: {zp: 160},\n  Dive: {zp: 160},\n  'Doom Desire': {zp: 200},\n  'Double-Edge': {zp: 190},\n  'Double Hit': {zp: 140},\n  'Double Kick': {zp: 100},\n  'Draco Meteor': {zp: 195},\n  'Dragon Breath': {zp: 120},\n  'Dragon Claw': {zp: 160},\n  'Dragon Pulse': {zp: 160},\n  'Dragon Rush': {zp: 180},\n  'Dragon Tail': {zp: 120},\n  'Draining Kiss': {zp: 100},\n  'Drain Punch': {zp: 140},\n  'Dream Eater': {zp: 180},\n  'Drill Peck': {zp: 160},\n  'Drill Run': {zp: 160},\n  'Dual Chop': {zp: 100},\n  'Dynamic Punch': {zp: 180},\n  'Earth Power': {zp: 175},\n  Earthquake: {zp: 180},\n  'Echoed Voice': {zp: 100},\n  'Electro Ball': {zp: 160},\n  Electroweb: {zp: 100},\n  Ember: {zp: 100},\n  Endeavor: {zp: 160},\n  'Energy Ball': {zp: 175},\n  Eruption: {zp: 200},\n  Explosion: {zp: 200},\n  Extrasensory: {zp: 160},\n  'Extreme Speed': {zp: 160},\n  Facade: {zp: 140},\n  'Fairy Wind': {zp: 100},\n  'Fake Out': {zp: 100},\n  'False Swipe': {zp: 100},\n  Feint: {zp: 100},\n  'Fell Stinger': {bp: 50, zp: 100},\n  'Final Gambit': {zp: 180},\n  'Fire Blast': {zp: 185},\n  'Fire Fang': {zp: 120},\n  'Fire Pledge': {zp: 160},\n  'Fire Punch': {zp: 140},\n  'Fire Spin': {zp: 100},\n  Fissure: {zp: 180},\n  Flail: {zp: 160},\n  'Flame Charge': {zp: 100},\n  'Flame Wheel': {zp: 120},\n  Flamethrower: {zp: 175},\n  'Flare Blitz': {zp: 190},\n  'Flash Cannon': {zp: 160},\n  Fling: {zp: 100},\n  Fly: {zp: 175},\n  'Flying Press': {bp: 100, zp: 170},\n  'Focus Blast': {zp: 190},\n  'Focus Punch': {zp: 200},\n  'Force Palm': {zp: 120},\n  'Foul Play': {zp: 175},\n  'Freeze-Dry': {zp: 140},\n  'Freeze Shock': {zp: 200},\n  'Frenzy Plant': {zp: 200},\n  'Frost Breath': {zp: 120},\n  'Fury Attack': {zp: 100},\n  'Fury Cutter': {zp: 100},\n  'Fury Swipes': {zp: 100},\n  'Fusion Bolt': {zp: 180},\n  'Fusion Flare': {zp: 180},\n  'Future Sight': {zp: 190},\n  'Gear Grind': {zp: 180},\n  'Giga Drain': {zp: 140},\n  'Giga Impact': {zp: 200},\n  Glaciate: {zp: 120},\n  'Grass Pledge': {zp: 160},\n  Guillotine: {zp: 180},\n  'Gunk Shot': {zp: 190},\n  Gust: {zp: 100},\n  'Gyro Ball': {zp: 160},\n  'Hammer Arm': {zp: 180},\n  Headbutt: {zp: 140},\n  'Head Smash': {zp: 200},\n  'Heat Wave': {zp: 175},\n  Hex: {zp: 160},\n  'High Jump Kick': {zp: 195},\n  'Hold Back': {zp: 100},\n  'Horn Attack': {zp: 120},\n  'Horn Drill': {zp: 180},\n  'Horn Leech': {zp: 140},\n  'Hydro Cannon': {zp: 200},\n  'Hydro Pump': {zp: 185},\n  'Hyper Beam': {zp: 200},\n  'Hyper Voice': {zp: 175},\n  'Ice Beam': {zp: 175},\n  'Ice Burn': {zp: 200},\n  'Ice Fang': {zp: 120},\n  'Ice Punch': {zp: 140},\n  'Ice Shard': {zp: 100},\n  'Icicle Crash': {zp: 160},\n  'Icicle Spear': {zp: 140},\n  'Icy Wind': {zp: 100},\n  Incinerate: {zp: 120},\n  Inferno: {zp: 180},\n  Infestation: {zp: 100},\n  'Iron Head': {zp: 160},\n  'Iron Tail': {zp: 180},\n  'Last Resort': {zp: 200},\n  'Lava Plume': {zp: 160},\n  'Leaf Blade': {zp: 175},\n  'Leaf Storm': {zp: 195},\n  'Leaf Tornado': {zp: 120},\n  'Leech Life': {bp: 80, zp: 160},\n  Lick: {zp: 100},\n  'Low Sweep': {zp: 120},\n  'Mach Punch': {zp: 100},\n  'Magical Leaf': {zp: 120},\n  'Mega Drain': {zp: 120},\n  Megahorn: {zp: 190},\n  'Mega Kick': {zp: 190},\n  'Mega Punch': {zp: 160},\n  'Metal Burst': {zp: 100},\n  'Metal Claw': {zp: 100},\n  'Meteor Mash': {zp: 175},\n  'Mirror Coat': {zp: 100},\n  Moonblast: {zp: 175},\n  'Mud Shot': {zp: 100},\n  'Mud-Slap': {zp: 100},\n  'Muddy Water': {zp: 175},\n  'Mystical Fire': {bp: 75, zp: 140},\n  'Night Daze': {zp: 160},\n  'Night Shade': {zp: 100},\n  'Night Slash': {zp: 140},\n  Nuzzle: {zp: 100},\n  Octazooka: {zp: 120},\n  Outrage: {zp: 190},\n  Overheat: {zp: 195},\n  'Paleo Wave': {zp: 160},\n  'Parabolic Charge': {bp: 65, zp: 120},\n  Payback: {zp: 100},\n  'Pay Day': {zp: 100},\n  Peck: {zp: 100},\n  'Petal Blizzard': {zp: 175},\n  'Petal Dance': {zp: 190},\n  'Phantom Force': {zp: 175},\n  'Pin Missile': {zp: 140},\n  'Play Rough': {zp: 175},\n  Pluck: {zp: 120},\n  'Poison Fang': {zp: 100},\n  'Poison Jab': {zp: 160},\n  'Poison Sting': {zp: 100},\n  'Poison Tail': {zp: 100},\n  Pound: {zp: 100},\n  'Powder Snow': {zp: 100},\n  'Power Gem': {zp: 160},\n  'Power-Up Punch': {zp: 100},\n  'Power Whip': {zp: 190},\n  Present: {zp: 100},\n  Psybeam: {zp: 120},\n  Psychic: {zp: 175},\n  'Psycho Cut': {zp: 140},\n  Psyshock: {zp: 160},\n  Psystrike: {zp: 180},\n  'Quick Attack': {zp: 100},\n  'Razor Leaf': {zp: 100},\n  'Razor Shell': {zp: 140},\n  Retaliate: {zp: 140},\n  Revenge: {zp: 120},\n  Reversal: {zp: 160},\n  'Rock Blast': {isBullet: true, zp: 140},\n  'Rock Slide': {zp: 140},\n  'Rock Smash': {zp: 100},\n  'Rock Throw': {zp: 100},\n  'Rock Tomb': {zp: 120},\n  'Rock Wrecker': {zp: 200},\n  Rollout: {zp: 100},\n  Round: {zp: 120},\n  'Sacred Sword': {zp: 175},\n  'Sand Tomb': {zp: 100},\n  Scald: {zp: 160},\n  Scratch: {zp: 100},\n  'Secret Sword': {zp: 160},\n  'Seed Bomb': {zp: 160},\n  'Seismic Toss': {zp: 100},\n  'Self-Destruct': {zp: 200},\n  'Shadow Ball': {zp: 160},\n  'Shadow Claw': {zp: 140},\n  'Shadow Punch': {zp: 120},\n  'Shadow Sneak': {zp: 100},\n  'Shadow Strike': {zp: 160},\n  'Sheer Cold': {zp: 180},\n  'Shock Wave': {zp: 120},\n  'Skull Bash': {zp: 195},\n  'Sky Attack': {zp: 200},\n  Slam: {zp: 160},\n  Slash: {zp: 140},\n  Sludge: {zp: 120},\n  'Sludge Bomb': {zp: 175},\n  'Sludge Wave': {zp: 175},\n  'Smack Down': {zp: 100},\n  Smog: {zp: 100},\n  Snarl: {zp: 100},\n  Snore: {zp: 100},\n  Spark: {zp: 120},\n  'Spit Up': {zp: 100},\n  'Steel Wing': {zp: 140},\n  Stomp: {zp: 120},\n  'Stone Edge': {zp: 180},\n  'Stored Power': {zp: 160},\n  'Storm Throw': {zp: 120},\n  Strength: {zp: 160},\n  'Struggle Bug': {zp: 100},\n  Submission: {zp: 160},\n  'Sucker Punch': {bp: 70, zp: 140},\n  'Super Fang': {zp: 100},\n  Superpower: {zp: 190},\n  Surf: {zp: 175},\n  Swift: {zp: 120},\n  Tackle: {bp: 40, zp: 100},\n  'Tail Slap': {zp: 140},\n  'Take Down': {zp: 175},\n  Thief: {zp: 120},\n  Thrash: {zp: 190},\n  Thunderbolt: {zp: 175},\n  'Thunder Fang': {zp: 120},\n  'Thunder Punch': {zp: 140},\n  'Thunder Shock': {zp: 100},\n  'Tri Attack': {zp: 160},\n  'Triple Kick': {zp: 120},\n  Twister: {zp: 100},\n  'U-turn': {zp: 140},\n  Uproar: {zp: 175},\n  'Vacuum Wave': {zp: 100},\n  'V-create': {zp: 220},\n  Venoshock: {zp: 120},\n  'Vine Whip': {zp: 100},\n  'Vise Grip': {zp: 100},\n  'Vital Throw': {zp: 140},\n  'Volt Switch': {zp: 140},\n  'Volt Tackle': {zp: 190},\n  Waterfall: {zp: 160},\n  'Water Gun': {zp: 100},\n  'Water Pledge': {zp: 160},\n  'Water Pulse': {zp: 120},\n  'Water Shuriken': {category: 'Special', zp: 100},\n  'Water Spout': {zp: 200},\n  'Weather Ball': {zp: 160},\n  Whirlpool: {zp: 100},\n  'Wild Charge': {zp: 175},\n  'Wing Attack': {zp: 120},\n  'Wood Hammer': {zp: 190},\n  Wrap: {zp: 100},\n  'X-Scissor': {zp: 160},\n  'Zap Cannon': {zp: 190},\n  'Zen Headbutt': {zp: 160},\n  '10,000,000 Volt Thunderbolt': {bp: 195, type: 'Electric', category: 'Special', highCritChance: true, isZ: true},\n  'Acid Downpour': {bp: 1, type: 'Poison', category: 'Physical', isZ: true},\n  'All-Out Pummeling': {bp: 1, type: 'Fighting', category: 'Physical', isZ: true},\n  'Baddy Bad': {bp: 90, type: 'Dark', category: 'Special', zp: 175},\n  'Baneful Bunker': {bp: 0, type: 'Poison', priority: 4},\n  'Beak Blast': {\n    bp: 100,\n    type: 'Flying',\n    category: 'Physical',\n    isBullet: true,\n    zp: 180,\n  },\n  'Black Hole Eclipse': {bp: 1, type: 'Dark', category: 'Physical', isZ: true},\n  'Bloom Doom': {bp: 1, type: 'Grass', category: 'Physical', isZ: true},\n  'Bouncy Bubble': {\n    bp: 90,\n    type: 'Water',\n    drain: [1, 2],\n    category: 'Special',\n    zp: 175,\n  },\n  'Breakneck Blitz': {bp: 1, type: 'Normal', category: 'Physical', isZ: true},\n  'Buzzy Buzz': {\n    bp: 90,\n    type: 'Electric',\n    category: 'Special',\n    secondaries: true,\n    zp: 175,\n  },\n  Catastropika: {\n    bp: 210,\n    type: 'Electric',\n    makesContact: true,\n    category: 'Physical',\n    isZ: true,\n  },\n  'Clangorous Soulblaze': {\n    bp: 185,\n    type: 'Dragon',\n    isSound: true,\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    secondaries: true,\n    isZ: true,\n  },\n  'Continental Crush': {bp: 1, type: 'Rock', category: 'Physical', isZ: true},\n  'Core Enforcer': {\n    bp: 100,\n    type: 'Dragon',\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    zp: 140,\n  },\n  'Corkscrew Crash': {bp: 1, type: 'Steel', category: 'Physical', isZ: true},\n  'Devastating Drake': {bp: 1, type: 'Dragon', category: 'Physical', isZ: true},\n  'Double Iron Bash': {\n    bp: 60,\n    type: 'Steel',\n    multihit: 2,\n    makesContact: true,\n    isPunch: true,\n    category: 'Physical',\n    secondaries: true,\n    zp: 180,\n  },\n  'Dragon Hammer': {\n    bp: 90,\n    type: 'Dragon',\n    makesContact: true,\n    category: 'Physical',\n    zp: 175,\n  },\n  'Extreme Evoboost': {bp: 0, type: 'Normal', isZ: true},\n  'Fleur Cannon': {\n    bp: 130,\n    type: 'Fairy',\n    self: {boosts: {spa: -2}},\n    category: 'Special',\n    zp: 195,\n  },\n  'Floral Healing': {bp: 0, type: 'Fairy'},\n  'Freezy Frost': {bp: 90, type: 'Ice', category: 'Special', zp: 175},\n  'Genesis Supernova': {\n    bp: 185,\n    type: 'Psychic',\n    category: 'Special',\n    secondaries: true,\n    isZ: true,\n  },\n  'Gigavolt Havoc': {bp: 1, type: 'Electric', category: 'Physical', isZ: true},\n  'Glitzy Glow': {bp: 90, type: 'Psychic', category: 'Special', zp: 175},\n  'Guardian of Alola': {bp: 0, type: 'Fairy', category: 'Special', isZ: true},\n  'Hydro Vortex': {bp: 1, type: 'Water', category: 'Physical', isZ: true},\n  'Ice Hammer': {\n    bp: 100,\n    type: 'Ice',\n    makesContact: true,\n    isPunch: true,\n    category: 'Physical',\n    zp: 180,\n  },\n  'Inferno Overdrive': {bp: 1, type: 'Fire', category: 'Physical', isZ: true},\n  Instruct: {bp: 0, type: 'Psychic'},\n  'Let\\'s Snuggle Forever': {\n    bp: 190,\n    type: 'Fairy',\n    makesContact: true,\n    category: 'Physical',\n    isZ: true,\n  },\n  'Light That Burns the Sky': {\n    bp: 200,\n    type: 'Psychic',\n    category: 'Special',\n    isZ: true,\n  },\n  'Malicious Moonsault': {\n    bp: 180,\n    type: 'Dark',\n    makesContact: true,\n    category: 'Physical',\n    isZ: true,\n  },\n  'Menacing Moonraze Maelstrom': {bp: 200, type: 'Ghost', category: 'Special', isZ: true},\n  'Mind Blown': {\n    bp: 150,\n    type: 'Fire',\n    mindBlownRecoil: true,\n    target: 'allAdjacent',\n    category: 'Special',\n    zp: 200,\n  },\n  'Multi-Attack': {\n    bp: 90,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Physical',\n    zp: 185,\n  },\n  'Nature\\'s Madness': {bp: 0, type: 'Fairy', category: 'Special', zp: 100},\n  'Never-Ending Nightmare': {bp: 1, type: 'Ghost', category: 'Physical', isZ: true},\n  'Oceanic Operetta': {bp: 195, type: 'Water', category: 'Special', isZ: true},\n  'Psychic Terrain': {bp: 0, type: 'Psychic'},\n  'Pulverizing Pancake': {\n    bp: 210,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Physical',\n    isZ: true,\n  },\n  'Revelation Dance': {bp: 90, type: 'Normal', category: 'Special', zp: 175},\n  'Sappy Seed': {bp: 90, type: 'Grass', category: 'Physical', zp: 175},\n  'Savage Spin-Out': {bp: 1, type: 'Bug', category: 'Physical', isZ: true},\n  'Searing Sunraze Smash': {\n    bp: 200,\n    type: 'Steel',\n    makesContact: true,\n    category: 'Physical',\n    isZ: true,\n  },\n  'Shadow Bone': {\n    bp: 85,\n    type: 'Ghost',\n    category: 'Physical',\n    secondaries: true,\n    zp: 160,\n  },\n  'Shattered Psyche': {bp: 1, type: 'Psychic', category: 'Physical', isZ: true},\n  'Shore Up': {bp: 0, type: 'Ground'},\n  'Sinister Arrow Raid': {bp: 180, type: 'Ghost', category: 'Physical', isZ: true},\n  'Sizzly Slide': {\n    bp: 90,\n    type: 'Fire',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n    zp: 175,\n  },\n  'Solar Blade': {\n    bp: 125,\n    type: 'Grass',\n    makesContact: true,\n    category: 'Physical',\n    zp: 190,\n  },\n  'Soul-Stealing 7-Star Strike': {\n    bp: 195,\n    type: 'Ghost',\n    makesContact: true,\n    category: 'Physical',\n    isZ: true,\n  },\n  'Sparkly Swirl': {bp: 90, type: 'Fairy', category: 'Special', zp: 175},\n  'Splintered Stormshards': {bp: 190, type: 'Rock', category: 'Physical', isZ: true},\n  Spotlight: {bp: 0, type: 'Normal', priority: 3},\n  'Stoked Sparksurfer': {\n    bp: 175,\n    type: 'Electric',\n    category: 'Special',\n    secondaries: true,\n    isZ: true,\n  },\n  'Subzero Slammer': {bp: 1, type: 'Ice', category: 'Physical', isZ: true},\n  'Supersonic Skystrike': {bp: 1, type: 'Flying', category: 'Physical', isZ: true},\n  'Tectonic Rage': {bp: 1, type: 'Ground', category: 'Physical', isZ: true},\n  'Throat Chop': {\n    bp: 80,\n    type: 'Dark',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n    zp: 160,\n  },\n  'Toxic Thread': {bp: 0, type: 'Poison'},\n  'Twinkle Tackle': {bp: 1, type: 'Fairy', category: 'Physical', isZ: true},\n  'Zippy Zap': {\n    bp: 50,\n    type: 'Electric',\n    willCrit: true,\n    priority: 2,\n    makesContact: true,\n    category: 'Physical',\n    zp: 100,\n  },\n  Accelerock: {\n    bp: 40,\n    type: 'Rock',\n    priority: 1,\n    makesContact: true,\n    category: 'Physical',\n    zp: 100,\n  },\n  'Anchor Shot': {\n    bp: 80,\n    type: 'Steel',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n    zp: 160,\n  },\n  'Aurora Veil': {bp: 0, type: 'Ice'},\n  'Brutal Swing': {\n    bp: 60,\n    type: 'Dark',\n    makesContact: true,\n    target: 'allAdjacent',\n    category: 'Physical',\n    zp: 120,\n  },\n  'Burn Up': {bp: 130, type: 'Fire', category: 'Special', zp: 195},\n  'Clanging Scales': {\n    bp: 110,\n    type: 'Dragon',\n    isSound: true,\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    zp: 185,\n  },\n  'Darkest Lariat': {\n    bp: 85,\n    type: 'Dark',\n    makesContact: true,\n    category: 'Physical',\n    ignoreDefensive: true,\n    zp: 160,\n  },\n  'Fire Lash': {\n    bp: 80,\n    type: 'Fire',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n    zp: 160,\n  },\n  'First Impression': {\n    bp: 90,\n    type: 'Bug',\n    priority: 2,\n    makesContact: true,\n    category: 'Physical',\n    zp: 175,\n  },\n  'Floaty Fall': {\n    bp: 90,\n    type: 'Flying',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n    zp: 175,\n  },\n  'Gear Up': {bp: 0, type: 'Steel'},\n  'High Horsepower': {\n    bp: 95,\n    type: 'Ground',\n    makesContact: true,\n    category: 'Physical',\n    zp: 175,\n  },\n  'Laser Focus': {bp: 0, type: 'Normal'},\n  Leafage: {bp: 40, type: 'Grass', category: 'Physical', zp: 100},\n  Liquidation: {\n    bp: 85,\n    type: 'Water',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n    zp: 160,\n  },\n  Lunge: {\n    bp: 80,\n    type: 'Bug',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n    zp: 160,\n  },\n  'Moongeist Beam': {bp: 100, type: 'Ghost', category: 'Special', zp: 180},\n  'Photon Geyser': {\n    bp: 100,\n    type: 'Psychic',\n    category: 'Special',\n    zp: 180,\n  },\n  'Pika Papow': {bp: 0, type: 'Electric', category: 'Special', zp: 100},\n  'Plasma Fists': {\n    bp: 100,\n    type: 'Electric',\n    makesContact: true,\n    isPunch: true,\n    category: 'Physical',\n    zp: 180,\n  },\n  'Pollen Puff': {\n    bp: 90,\n    type: 'Bug',\n    category: 'Special',\n    isBullet: true,\n    zp: 175,\n  },\n  'Power Trip': {\n    bp: 20,\n    type: 'Dark',\n    makesContact: true,\n    category: 'Physical',\n    zp: 160,\n  },\n  'Prismatic Laser': {bp: 160, type: 'Psychic', category: 'Special', zp: 200},\n  'Psychic Fangs': {\n    bp: 85,\n    type: 'Psychic',\n    makesContact: true,\n    isBite: true,\n    category: 'Physical',\n    zp: 160,\n  },\n  Purify: {bp: 0, type: 'Poison'},\n  'Shell Trap': {\n    bp: 150,\n    type: 'Fire',\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    zp: 200,\n  },\n  'Smart Strike': {\n    bp: 70,\n    type: 'Steel',\n    makesContact: true,\n    category: 'Physical',\n    zp: 140,\n  },\n  'Sparkling Aria': {\n    bp: 90,\n    type: 'Water',\n    isSound: true,\n    target: 'allAdjacent',\n    category: 'Special',\n    secondaries: true,\n    zp: 175,\n  },\n  'Spectral Thief': {\n    bp: 90,\n    type: 'Ghost',\n    makesContact: true,\n    category: 'Physical',\n    zp: 175,\n  },\n  'Speed Swap': {bp: 0, type: 'Psychic'},\n  'Spirit Shackle': {\n    bp: 80,\n    type: 'Ghost',\n    category: 'Physical',\n    secondaries: true,\n    zp: 160,\n  },\n  'Splishy Splash': {\n    bp: 90,\n    type: 'Water',\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    secondaries: true,\n    zp: 175,\n  },\n  'Stomping Tantrum': {\n    bp: 75,\n    type: 'Ground',\n    makesContact: true,\n    category: 'Physical',\n    zp: 140,\n  },\n  'Strength Sap': {bp: 0, type: 'Grass'},\n  'Sunsteel Strike': {\n    bp: 100,\n    type: 'Steel',\n    makesContact: true,\n    category: 'Physical',\n    zp: 180,\n  },\n  'Tearful Look': {bp: 0, type: 'Normal'},\n  'Trop Kick': {\n    bp: 70,\n    type: 'Grass',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n    zp: 140,\n  },\n  'Veevee Volley': {\n    bp: 0,\n    type: 'Normal',\n    makesContact: true,\n    category: 'Physical',\n    zp: 100,\n  },\n  'Zing Zap': {\n    bp: 80,\n    type: 'Electric',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n    zp: 160,\n  },\n};\n\nconst SM: {[name: string]: MoveData} = extend(true, {}, XY, SM_PATCH);\n\nconst SS_PATCH: {[name: string]: DeepPartial<MoveData>} = {\n  'Apple Acid': {\n    bp: 80,\n    type: 'Grass',\n    category: 'Special',\n    secondaries: true,\n    zp: 160,\n    maxPower: 130,\n  },\n  'Astral Barrage': {\n    bp: 120,\n    type: 'Ghost',\n    category: 'Special',\n    target: 'allAdjacentFoes',\n    zp: 190,\n    maxPower: 140,\n  },\n  'Aura Wheel': {\n    bp: 110,\n    type: 'Electric',\n    category: 'Physical',\n    secondaries: true,\n    zp: 185,\n    maxPower: 140,\n  },\n  'Behemoth Bash': {\n    bp: 100,\n    type: 'Steel',\n    makesContact: true,\n    category: 'Physical',\n    zp: 180,\n    maxPower: 130,\n  },\n  'Behemoth Blade': {\n    bp: 100,\n    type: 'Steel',\n    makesContact: true,\n    category: 'Physical',\n    zp: 180,\n    maxPower: 130,\n  },\n  'Body Press': {\n    bp: 80,\n    type: 'Fighting',\n    makesContact: true,\n    category: 'Physical',\n    overrideOffensiveStat: 'def',\n    zp: 160,\n    maxPower: 90,\n  },\n  'Bolt Beak': {\n    bp: 85,\n    type: 'Electric',\n    makesContact: true,\n    category: 'Physical',\n    zp: 160,\n    maxPower: 130,\n  },\n  'Branch Poke': {\n    bp: 40,\n    type: 'Grass',\n    makesContact: true,\n    category: 'Physical',\n    zp: 100,\n    maxPower: 90,\n  },\n  'Breaking Swipe': {\n    bp: 60,\n    type: 'Dragon',\n    makesContact: true,\n    target: 'allAdjacentFoes',\n    category: 'Physical',\n    secondaries: true,\n    zp: 120,\n    maxPower: 110,\n  },\n  'Burning Jealousy': {\n    bp: 70,\n    type: 'Fire',\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    secondaries: true,\n    zp: 140,\n    maxPower: 120,\n  },\n  'Clangorous Soul': {bp: 0, type: 'Dragon', isSound: true},\n  'Coaching': {\n    bp: 0,\n    type: 'Fighting',\n    category: 'Status',\n  },\n  'Corrosive Gas': {\n    bp: 0,\n    type: 'Poison',\n    category: 'Status',\n    target: 'allAdjacent',\n  },\n  'Court Change': {bp: 0, type: 'Normal'},\n  Decorate: {bp: 0, type: 'Fairy'},\n  'Dragon Darts': {\n    bp: 50,\n    type: 'Dragon',\n    multihit: 2,\n    category: 'Physical',\n    zp: 100,\n    maxPower: 130,\n  },\n  'Dragon Energy': {\n    bp: 150,\n    type: 'Dragon',\n    category: 'Special',\n    target: 'allAdjacentFoes',\n    zp: 200,\n    maxPower: 150,\n  },\n  'Drum Beating': {\n    bp: 80,\n    type: 'Grass',\n    category: 'Physical',\n    secondaries: true,\n    zp: 160,\n    maxPower: 130,\n  },\n  'Dual Wingbeat': {\n    bp: 40,\n    type: 'Flying',\n    category: 'Physical',\n    makesContact: true,\n    multihit: 2,\n    zp: 100,\n    maxPower: 130,\n  },\n  'Dynamax Cannon': {\n    bp: 100,\n    type: 'Dragon',\n    category: 'Special',\n    zp: 180,\n    maxPower: 130,\n  },\n  'Eerie Spell': {\n    bp: 80,\n    type: 'Psychic',\n    category: 'Special',\n    isSound: true,\n    secondaries: true,\n    zp: 160,\n    maxPower: 130,\n  },\n  Eternabeam: {\n    bp: 160,\n    type: 'Dragon',\n    category: 'Special',\n    zp: 200,\n    maxPower: 150,\n  },\n  'Expanding Force': {\n    bp: 80,\n    type: 'Psychic',\n    category: 'Special',\n    zp: 160,\n    maxPower: 130,\n  },\n  'False Surrender': {\n    bp: 80,\n    type: 'Dark',\n    makesContact: true,\n    category: 'Physical',\n    zp: 160,\n    maxPower: 130,\n  },\n  'Fiery Wrath': {\n    bp: 90,\n    type: 'Dark',\n    category: 'Special',\n    target: 'allAdjacentFoes',\n    secondaries: true,\n    zp: 175,\n    maxPower: 130,\n  },\n  'Fishious Rend': {\n    bp: 85,\n    type: 'Water',\n    makesContact: true,\n    isBite: true,\n    category: 'Physical',\n    zp: 160,\n    maxPower: 130,\n  },\n  'Flip Turn': {\n    bp: 60,\n    type: 'Water',\n    category: 'Physical',\n    makesContact: true,\n    zp: 120,\n    maxPower: 110,\n  },\n  'Freezing Glare': {\n    bp: 90,\n    type: 'Psychic',\n    category: 'Special',\n    secondaries: true,\n    zp: 175,\n    maxPower: 130,\n  },\n  'Glacial Lance': {\n    bp: 130,\n    type: 'Ice',\n    category: 'Physical',\n    target: 'allAdjacentFoes',\n    zp: 195,\n    maxPower: 140,\n  },\n  'G-Max Befuddle': {\n    bp: 10,\n    type: 'Bug',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Centiferno': {\n    bp: 10,\n    type: 'Fire',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Cannonade': {\n    bp: 10,\n    type: 'Water',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Chi Strike': {\n    bp: 10,\n    type: 'Fighting',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Cuddle': {\n    bp: 10,\n    type: 'Normal',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Depletion': {\n    bp: 10,\n    type: 'Dragon',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Drum Solo': {\n    bp: 160,\n    type: 'Grass',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Fireball': {\n    bp: 160,\n    type: 'Fire',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Finale': {\n    bp: 10,\n    type: 'Fairy',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Foam Burst': {\n    bp: 10,\n    type: 'Water',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Gold Rush': {\n    bp: 10,\n    type: 'Normal',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Gravitas': {\n    bp: 10,\n    type: 'Psychic',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Hydrosnipe': {\n    bp: 160,\n    type: 'Water',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Malodor': {\n    bp: 10,\n    type: 'Poison',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Meltdown': {\n    bp: 10,\n    type: 'Steel',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max One Blow': {\n    bp: 10,\n    type: 'Dark',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Rapid Flow': {\n    bp: 10,\n    type: 'Water',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Replenish': {\n    bp: 10,\n    type: 'Normal',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Resonance': {\n    bp: 10,\n    type: 'Ice',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Sandblast': {\n    bp: 10,\n    type: 'Ground',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Smite': {\n    bp: 10,\n    type: 'Fairy',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Snooze': {\n    bp: 10,\n    type: 'Dark',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Steelsurge': {\n    bp: 10,\n    type: 'Steel',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Stonesurge': {\n    bp: 10,\n    type: 'Water',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Stun Shock': {\n    bp: 10,\n    type: 'Electric',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Sweetness': {\n    bp: 10,\n    type: 'Grass',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Tartness': {\n    bp: 10,\n    type: 'Grass',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Terror': {\n    bp: 10,\n    type: 'Ghost',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Vine Lash': {\n    bp: 10,\n    type: 'Grass',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Volcalith': {\n    bp: 10,\n    type: 'Rock',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Volt Crash': {\n    bp: 10,\n    type: 'Electric',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Wildfire': {\n    bp: 10,\n    type: 'Fire',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'G-Max Wind Rage': {\n    bp: 10,\n    type: 'Flying',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Grassy Glide': {\n    bp: 70,\n    type: 'Grass',\n    category: 'Physical',\n    makesContact: true,\n    zp: 140,\n    maxPower: 120,\n  },\n  'Grav Apple': {\n    bp: 80,\n    type: 'Grass',\n    category: 'Physical',\n    secondaries: true,\n    zp: 160,\n    maxPower: 130,\n  },\n  'Jaw Lock': {\n    bp: 80,\n    type: 'Dark',\n    makesContact: true,\n    isBite: true,\n    category: 'Physical',\n    zp: 160,\n    maxPower: 130,\n  },\n  'Jungle Healing': {\n    bp: 0,\n    type: 'Grass',\n    category: 'Status',\n  },\n  'Lash Out': {\n    bp: 75,\n    type: 'Dark',\n    makesContact: true,\n    category: 'Physical',\n    zp: 140,\n    maxPower: 130,\n  },\n  'Life Dew': {bp: 0, type: 'Water'},\n  'Magic Powder': {bp: 0, type: 'Psychic'},\n  'Max Airstream': {\n    bp: 10,\n    type: 'Flying',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Darkness': {\n    bp: 10,\n    type: 'Dark',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Flare': {\n    bp: 100,\n    type: 'Fire',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Flutterby': {\n    bp: 10,\n    type: 'Bug',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Geyser': {\n    bp: 10,\n    type: 'Water',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Guard': {bp: 0, type: 'Normal', priority: 4, isMax: true},\n  'Max Hailstorm': {\n    bp: 10,\n    type: 'Ice',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Knuckle': {\n    bp: 10,\n    type: 'Fighting',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Lightning': {\n    bp: 10,\n    type: 'Electric',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Mindstorm': {\n    bp: 10,\n    type: 'Psychic',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Ooze': {\n    bp: 10,\n    type: 'Poison',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Overgrowth': {\n    bp: 10,\n    type: 'Grass',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Phantasm': {\n    bp: 10,\n    type: 'Ghost',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Quake': {\n    bp: 10,\n    type: 'Ground',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Rockfall': {\n    bp: 10,\n    type: 'Rock',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Starfall': {\n    bp: 10,\n    type: 'Fairy',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Steelspike': {\n    bp: 10,\n    type: 'Steel',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Strike': {\n    bp: 10,\n    type: 'Normal',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Max Wyrmwind': {\n    bp: 10,\n    type: 'Dragon',\n    category: 'Physical',\n    isMax: true,\n    maxPower: 1,\n  },\n  'Meteor Assault': {\n    bp: 150,\n    type: 'Fighting',\n    category: 'Physical',\n    zp: 200,\n    maxPower: 100,\n  },\n  'Meteor Beam': {\n    bp: 120,\n    type: 'Rock',\n    category: 'Special',\n    zp: 190,\n    maxPower: 140,\n  },\n  'Misty Explosion': {\n    bp: 100,\n    type: 'Fairy',\n    category: 'Special',\n    target: 'allAdjacent',\n    zp: 180,\n    maxPower: 130,\n  },\n  'No Retreat': {bp: 0, type: 'Fighting'},\n  Obstruct: {bp: 0, type: 'Dark', priority: 4},\n  Octolock: {bp: 0, type: 'Fighting'},\n  Overdrive: {\n    bp: 80,\n    type: 'Electric',\n    isSound: true,\n    target: 'allAdjacentFoes',\n    category: 'Special',\n    zp: 160,\n    maxPower: 130,\n  },\n  Poltergeist: {\n    bp: 110,\n    type: 'Ghost',\n    category: 'Physical',\n    zp: 185,\n    maxPower: 140,\n  },\n  'Pyro Ball': {\n    bp: 120,\n    type: 'Fire',\n    category: 'Physical',\n    secondaries: true,\n    isBullet: true,\n    zp: 190,\n    maxPower: 140,\n  },\n  'Rising Voltage': {\n    bp: 70,\n    type: 'Electric',\n    category: 'Special',\n    zp: 140,\n    maxPower: 140,\n  },\n  'Scale Shot': {\n    bp: 25,\n    type: 'Dragon',\n    category: 'Physical',\n    multihit: [2, 5],\n    zp: 140,\n    maxPower: 130,\n  },\n  'Shell Side Arm': {\n    bp: 90,\n    type: 'Poison',\n    category: 'Special',\n    secondaries: true,\n    zp: 175,\n    maxPower: 90,\n  },\n  'Snap Trap': {\n    bp: 35,\n    type: 'Grass',\n    makesContact: true,\n    category: 'Physical',\n    zp: 100,\n    maxPower: 90,\n  },\n  'Snipe Shot': {\n    bp: 80,\n    type: 'Water',\n    category: 'Special',\n    zp: 160,\n    maxPower: 130,\n    highCritChance: true,\n  },\n  'Scorching Sands': {\n    bp: 70,\n    type: 'Ground',\n    category: 'Special',\n    secondaries: true,\n    zp: 140,\n    maxPower: 120,\n  },\n  'Skitter Smack': {\n    bp: 70,\n    type: 'Bug',\n    category: 'Physical',\n    makesContact: true,\n    secondaries: true,\n    zp: 140,\n    maxPower: 120,\n  },\n  'Spirit Break': {\n    bp: 75,\n    type: 'Fairy',\n    makesContact: true,\n    category: 'Physical',\n    secondaries: true,\n    zp: 140,\n    maxPower: 130,\n  },\n  'Steel Beam': {\n    bp: 140,\n    type: 'Steel',\n    mindBlownRecoil: true,\n    category: 'Special',\n    zp: 200,\n    maxPower: 140,\n  },\n  'Steel Roller': {\n    bp: 130,\n    type: 'Steel',\n    category: 'Physical',\n    makesContact: true,\n    zp: 195,\n    maxPower: 140,\n  },\n  'Strange Steam': {\n    bp: 90,\n    type: 'Fairy',\n    category: 'Special',\n    secondaries: true,\n    zp: 175,\n    maxPower: 130,\n  },\n  'Surging Strikes': {\n    bp: 25,\n    type: 'Water',\n    category: 'Physical',\n    makesContact: true,\n    willCrit: true,\n    isPunch: true,\n    multihit: 3,\n    zp: 140,\n    maxPower: 130,\n  },\n  'Terrain Pulse': {\n    bp: 50,\n    type: 'Normal',\n    category: 'Special',\n    isPulse: true,\n    zp: 160,\n    maxPower: 130,\n  },\n  'Triple Axel': {\n    bp: 20,\n    type: 'Ice',\n    category: 'Physical',\n    makesContact: true,\n    multihit: 3,\n    zp: 120,\n    maxPower: 140,\n  },\n  'Wicked Blow': {\n    bp: 80,\n    type: 'Dark',\n    category: 'Physical',\n    makesContact: true,\n    willCrit: true,\n    isPunch: true,\n    zp: 160,\n    maxPower: 130,\n  },\n  'Stuff Cheeks': {bp: 0, type: 'Normal'},\n  'Tar Shot': {bp: 0, type: 'Rock'},\n  Teatime: {bp: 0, type: 'Normal'},\n  'Thunder Cage': {\n    bp: 80,\n    type: 'Electric',\n    category: 'Special',\n    zp: 160,\n    maxPower: 130,\n  },\n  'Thunderous Kick': {\n    bp: 90,\n    type: 'Fighting',\n    category: 'Physical',\n    secondaries: true,\n    makesContact: true,\n    zp: 175,\n    maxPower: 90,\n  },\n  '10,000,000 Volt Thunderbolt': {maxPower: 1},\n  Absorb: {maxPower: 90},\n  Accelerock: {maxPower: 90},\n  Acid: {maxPower: 70},\n  'Acid Downpour': {maxPower: 1},\n  'Acid Spray': {maxPower: 70},\n  Acrobatics: {maxPower: 110},\n  'Aerial Ace': {maxPower: 110},\n  Aeroblast: {maxPower: 130},\n  'Air Cutter': {maxPower: 110},\n  'Air Slash': {maxPower: 130},\n  'All-Out Pummeling': {maxPower: 1},\n  'Anchor Shot': {maxPower: 130},\n  'Ancient Power': {maxPower: 110},\n  'Aqua Jet': {maxPower: 90},\n  'Aqua Tail': {maxPower: 130},\n  'Arm Thrust': {maxPower: 70},\n  Assurance: {maxPower: 110},\n  Astonish: {maxPower: 90},\n  'Attack Order': {maxPower: 130},\n  'Aura Sphere': {maxPower: 90},\n  'Aurora Beam': {maxPower: 120},\n  Avalanche: {maxPower: 110},\n  Barrage: {maxPower: 90},\n  'Beak Blast': {maxPower: 130},\n  'Beat Up': {maxPower: 100},\n  Belch: {maxPower: 95},\n  Bide: {maxPower: 100},\n  Bind: {maxPower: 90},\n  Bite: {maxPower: 110},\n  'Black Hole Eclipse': {maxPower: 1},\n  'Blast Burn': {maxPower: 150},\n  'Blaze Kick': {maxPower: 130},\n  Blizzard: {maxPower: 140},\n  'Bloom Doom': {maxPower: 1},\n  'Blue Flare': {maxPower: 140},\n  'Body Slam': {maxPower: 130},\n  'Bolt Strike': {maxPower: 140},\n  'Bone Club': {maxPower: 120},\n  Bonemerang: {maxPower: 130},\n  'Bone Rush': {maxPower: 130},\n  Boomburst: {maxPower: 140},\n  Bounce: {maxPower: 130},\n  'Brave Bird': {maxPower: 140},\n  'Breakneck Blitz': {maxPower: 1},\n  'Brick Break': {maxPower: 90},\n  Brine: {maxPower: 120},\n  'Brutal Swing': {maxPower: 110},\n  Bubble: {maxPower: 90},\n  'Bubble Beam': {maxPower: 120},\n  'Bug Bite': {maxPower: 110},\n  'Bug Buzz': {maxPower: 130},\n  Bulldoze: {maxPower: 110},\n  'Bullet Punch': {maxPower: 90},\n  'Bullet Seed': {maxPower: 130},\n  'Burn Up': {maxPower: 140},\n  Catastropika: {maxPower: 1},\n  'Charge Beam': {maxPower: 100},\n  Chatter: {maxPower: 120},\n  'Chip Away': {maxPower: 120},\n  'Circle Throw': {maxPower: 80},\n  Clamp: {maxPower: 90},\n  'Clanging Scales': {maxPower: 140},\n  'Clangorous Soulblaze': {maxPower: 1},\n  'Clear Smog': {maxPower: 75},\n  'Close Combat': {maxPower: 95},\n  'Comet Punch': {maxPower: 100},\n  Confusion: {maxPower: 100},\n  Constrict: {maxPower: 90},\n  'Continental Crush': {maxPower: 1},\n  'Core Enforcer': {maxPower: 130},\n  'Corkscrew Crash': {maxPower: 1},\n  Counter: {maxPower: 75},\n  Covet: {maxPower: 110},\n  Crabhammer: {maxPower: 130},\n  'Cross Chop': {maxPower: 90},\n  'Cross Poison': {maxPower: 85},\n  Crunch: {maxPower: 130},\n  'Crush Claw': {maxPower: 130},\n  'Crush Grip': {maxPower: 140},\n  Cut: {maxPower: 100},\n  'Darkest Lariat': {maxPower: 130},\n  'Dark Pulse': {maxPower: 130},\n  'Dazzling Gleam': {maxPower: 130},\n  'Devastating Drake': {maxPower: 1},\n  'Diamond Storm': {maxPower: 130},\n  Dig: {maxPower: 130},\n  'Disarming Voice': {maxPower: 90},\n  Discharge: {maxPower: 130},\n  Dive: {maxPower: 130},\n  'Dizzy Punch': {maxPower: 120},\n  'Doom Desire': {maxPower: 140},\n  'Double-Edge': {maxPower: 140},\n  'Double Hit': {maxPower: 120},\n  'Double Iron Bash': {maxPower: 140},\n  'Double Kick': {maxPower: 80},\n  'Double Slap': {maxPower: 90},\n  'Draco Meteor': {maxPower: 140},\n  'Dragon Ascent': {maxPower: 140},\n  'Dragon Breath': {maxPower: 110},\n  'Dragon Claw': {maxPower: 130},\n  'Dragon Hammer': {maxPower: 130},\n  'Dragon Pulse': {maxPower: 130},\n  'Dragon Rage': {maxPower: 100},\n  'Dragon Rush': {maxPower: 130},\n  'Dragon Tail': {maxPower: 110},\n  'Draining Kiss': {maxPower: 100},\n  'Drain Punch': {maxPower: 90},\n  'Dream Eater': {maxPower: 130},\n  'Drill Peck': {maxPower: 130},\n  'Drill Run': {maxPower: 130},\n  'Dual Chop': {maxPower: 130},\n  'Dynamic Punch': {maxPower: 90},\n  'Earth Power': {maxPower: 130},\n  Earthquake: {maxPower: 130},\n  'Echoed Voice': {maxPower: 90},\n  'Egg Bomb': {maxPower: 130},\n  'Electro Ball': {maxPower: 130},\n  Electroweb: {maxPower: 110},\n  Ember: {maxPower: 90},\n  Endeavor: {maxPower: 130},\n  'Energy Ball': {maxPower: 130},\n  Eruption: {maxPower: 150},\n  Explosion: {maxPower: 150},\n  Extrasensory: {maxPower: 130},\n  'Extreme Speed': {maxPower: 130},\n  Facade: {maxPower: 120},\n  'Fairy Wind': {maxPower: 90},\n  'Fake Out': {maxPower: 90},\n  'False Swipe': {maxPower: 90},\n  Feint: {maxPower: 90},\n  'Feint Attack': {maxPower: 110},\n  'Fell Stinger': {maxPower: 100},\n  'Fiery Dance': {maxPower: 130},\n  'Final Gambit': {maxPower: 100},\n  'Fire Blast': {maxPower: 140},\n  'Fire Fang': {maxPower: 120},\n  'Fire Lash': {maxPower: 130},\n  'Fire Pledge': {maxPower: 130},\n  'Fire Punch': {maxPower: 130},\n  'Fire Spin': {maxPower: 90},\n  'First Impression': {maxPower: 130},\n  Fissure: {maxPower: 130},\n  Flail: {maxPower: 130},\n  'Flame Burst': {maxPower: 120},\n  'Flame Charge': {maxPower: 100},\n  'Flame Wheel': {maxPower: 110},\n  Flamethrower: {maxPower: 130},\n  'Flare Blitz': {maxPower: 140},\n  'Flash Cannon': {maxPower: 130},\n  'Fleur Cannon': {maxPower: 140},\n  Fling: {maxPower: 100},\n  Fly: {maxPower: 130},\n  'Flying Press': {maxPower: 90},\n  'Focus Blast': {maxPower: 95},\n  'Focus Punch': {maxPower: 100},\n  'Force Palm': {maxPower: 80},\n  'Foul Play': {maxPower: 130},\n  'Freeze-Dry': {maxPower: 120},\n  'Freeze Shock': {maxPower: 140},\n  'Frenzy Plant': {maxPower: 150},\n  'Frost Breath': {maxPower: 110},\n  Frustration: {maxPower: 130},\n  'Fury Attack': {maxPower: 90},\n  'Fury Cutter': {maxPower: 90},\n  'Fury Swipes': {maxPower: 100},\n  'Fusion Bolt': {maxPower: 130},\n  'Fusion Flare': {maxPower: 130},\n  'Future Sight': {maxPower: 140},\n  'Gear Grind': {maxPower: 130},\n  'Genesis Supernova': {maxPower: 1},\n  'Giga Drain': {maxPower: 130},\n  'Giga Impact': {maxPower: 150},\n  'Gigavolt Havoc': {maxPower: 1},\n  Glaciate: {maxPower: 120},\n  'Grass Knot': {maxPower: 130},\n  'Grass Pledge': {maxPower: 130},\n  'Guardian of Alola': {maxPower: 1},\n  Guillotine: {maxPower: 130},\n  'Gunk Shot': {maxPower: 95},\n  Gust: {maxPower: 90},\n  'Gyro Ball': {maxPower: 130},\n  'Hammer Arm': {maxPower: 90},\n  Headbutt: {maxPower: 120},\n  'Head Charge': {maxPower: 140},\n  'Head Smash': {maxPower: 150},\n  'Heart Stamp': {maxPower: 110},\n  'Heat Crash': {maxPower: 130},\n  'Heat Wave': {maxPower: 130},\n  'Heavy Slam': {maxPower: 130},\n  Hex: {maxPower: 120},\n  'Hidden Power': {maxPower: 110},\n  'Hidden Power Bug': {maxPower: 110},\n  'Hidden Power Dark': {maxPower: 110},\n  'Hidden Power Dragon': {maxPower: 110},\n  'Hidden Power Electric': {maxPower: 110},\n  'Hidden Power Fighting': {maxPower: 80},\n  'Hidden Power Fire': {maxPower: 110},\n  'Hidden Power Flying': {maxPower: 110},\n  'Hidden Power Ghost': {maxPower: 110},\n  'Hidden Power Grass': {maxPower: 110},\n  'Hidden Power Ground': {maxPower: 110},\n  'Hidden Power Ice': {maxPower: 110},\n  'Hidden Power Poison': {maxPower: 80},\n  'Hidden Power Psychic': {maxPower: 110},\n  'Hidden Power Rock': {maxPower: 110},\n  'Hidden Power Steel': {maxPower: 110},\n  'Hidden Power Water': {maxPower: 110},\n  'High Horsepower': {maxPower: 130},\n  'High Jump Kick': {maxPower: 95},\n  'Hold Back': {maxPower: 90},\n  'Horn Attack': {maxPower: 120},\n  'Horn Drill': {maxPower: 130},\n  'Horn Leech': {maxPower: 130},\n  Howl: {isSound: true},\n  Hurricane: {maxPower: 140},\n  'Hydro Cannon': {maxPower: 150},\n  'Hydro Pump': {maxPower: 140},\n  'Hydro Vortex': {maxPower: 1},\n  'Hyper Beam': {maxPower: 150},\n  'Hyper Fang': {maxPower: 130},\n  'Hyperspace Fury': {maxPower: 130},\n  'Hyperspace Hole': {maxPower: 130},\n  'Hyper Voice': {maxPower: 130},\n  'Ice Ball': {maxPower: 90},\n  'Ice Beam': {maxPower: 130},\n  'Ice Burn': {maxPower: 140},\n  'Ice Fang': {maxPower: 120},\n  'Ice Hammer': {maxPower: 130},\n  'Ice Punch': {maxPower: 130},\n  'Ice Shard': {maxPower: 90},\n  'Icicle Crash': {maxPower: 130},\n  'Icicle Spear': {maxPower: 130},\n  'Icy Wind': {maxPower: 110},\n  Incinerate: {maxPower: 110},\n  Inferno: {maxPower: 130},\n  'Inferno Overdrive': {maxPower: 1},\n  Infestation: {maxPower: 90},\n  'Iron Head': {maxPower: 130},\n  'Iron Tail': {maxPower: 130},\n  Judgment: {maxPower: 130},\n  'Jump Kick': {maxPower: 90},\n  'Karate Chop': {maxPower: 75},\n  'Knock Off': {maxPower: 120},\n  'Land\\'s Wrath': {maxPower: 130},\n  'Last Resort': {maxPower: 140},\n  'Lava Plume': {maxPower: 130},\n  Leafage: {maxPower: 90},\n  'Leaf Blade': {maxPower: 130},\n  'Leaf Storm': {maxPower: 140},\n  'Leaf Tornado': {maxPower: 120},\n  'Leech Life': {maxPower: 130},\n  'Let\\'s Snuggle Forever': {maxPower: 1},\n  Lick: {maxPower: 90},\n  'Light of Ruin': {maxPower: 140},\n  'Light That Burns the Sky': {maxPower: 1},\n  Liquidation: {maxPower: 130},\n  'Low Kick': {maxPower: 100},\n  'Low Sweep': {maxPower: 85},\n  Lunge: {maxPower: 130},\n  'Luster Purge': {maxPower: 120},\n  'Mach Punch': {maxPower: 70},\n  'Magical Leaf': {maxPower: 110},\n  'Magma Storm': {maxPower: 130},\n  'Magnet Bomb': {maxPower: 110},\n  Magnitude: {maxPower: 140},\n  'Malicious Moonsault': {maxPower: 1},\n  'Mega Drain': {maxPower: 90},\n  Megahorn: {maxPower: 140},\n  'Mega Kick': {maxPower: 140},\n  'Mega Punch': {maxPower: 130},\n  'Menacing Moonraze Maelstrom': {maxPower: 1},\n  'Metal Burst': {maxPower: 100},\n  'Metal Claw': {maxPower: 100},\n  'Meteor Mash': {maxPower: 130},\n  'Mind Blown': {maxPower: 150},\n  'Mirror Coat': {maxPower: 100},\n  'Mirror Shot': {maxPower: 120},\n  'Mist Ball': {maxPower: 120},\n  Moonblast: {maxPower: 130},\n  'Moongeist Beam': {maxPower: 130},\n  'Mud Bomb': {maxPower: 120},\n  'Mud Shot': {maxPower: 110},\n  'Mud-Slap': {maxPower: 90},\n  'Muddy Water': {maxPower: 130},\n  'Multi-Attack': {bp: 120, maxPower: 95},\n  'Mystical Fire': {maxPower: 130},\n  'Natural Gift': {maxPower: 130},\n  'Nature\\'s Madness': {maxPower: 100},\n  'Needle Arm': {maxPower: 110},\n  'Never-Ending Nightmare': {maxPower: 1},\n  'Night Daze': {maxPower: 130},\n  'Night Shade': {maxPower: 100},\n  'Night Slash': {maxPower: 120},\n  Nuzzle: {maxPower: 90},\n  'Oblivion Wing': {maxPower: 130},\n  'Oceanic Operetta': {maxPower: 1},\n  Octazooka: {maxPower: 120},\n  'Ominous Wind': {maxPower: 110},\n  'Origin Pulse': {maxPower: 140},\n  Outrage: {maxPower: 140},\n  Overheat: {maxPower: 140},\n  'Paleo Wave': {maxPower: 130},\n  'Parabolic Charge': {maxPower: 120},\n  Payback: {maxPower: 100},\n  'Pay Day': {maxPower: 90},\n  Peck: {maxPower: 90},\n  'Petal Blizzard': {maxPower: 130},\n  'Petal Dance': {maxPower: 140},\n  'Phantom Force': {maxPower: 130},\n  'Photon Geyser': {maxPower: 130},\n  'Pin Missile': {maxPower: 130},\n  'Plasma Fists': {maxPower: 130},\n  'Play Rough': {maxPower: 130},\n  Pluck: {maxPower: 110},\n  'Poison Fang': {maxPower: 75},\n  'Poison Jab': {maxPower: 90},\n  'Poison Sting': {maxPower: 70},\n  'Poison Tail': {maxPower: 75},\n  'Pollen Puff': {maxPower: 130},\n  Pound: {maxPower: 90},\n  'Powder Snow': {maxPower: 90},\n  'Power Gem': {maxPower: 130},\n  'Power Trip': {maxPower: 130},\n  'Power-Up Punch': {maxPower: 70},\n  'Power Whip': {maxPower: 140},\n  'Precipice Blades': {maxPower: 140},\n  Present: {maxPower: 100},\n  'Prismatic Laser': {maxPower: 150},\n  Psybeam: {maxPower: 120},\n  Psychic: {maxPower: 130},\n  'Psychic Fangs': {maxPower: 130},\n  'Psycho Boost': {maxPower: 140},\n  'Psycho Cut': {maxPower: 120},\n  Psyshock: {maxPower: 130},\n  Psystrike: {maxPower: 130},\n  Psywave: {maxPower: 100},\n  'Pulverizing Pancake': {maxPower: 1},\n  Punishment: {maxPower: 130},\n  Pursuit: {maxPower: 90},\n  'Quick Attack': {maxPower: 90},\n  Rage: {maxPower: 90},\n  'Rapid Spin': {bp: 50, secondaries: true, maxPower: 100},\n  'Razor Leaf': {maxPower: 110},\n  'Razor Shell': {maxPower: 130},\n  'Razor Wind': {maxPower: 130},\n  'Relic Song': {maxPower: 130},\n  Retaliate: {maxPower: 120},\n  Return: {maxPower: 130},\n  'Revelation Dance': {maxPower: 130},\n  Revenge: {maxPower: 80},\n  Reversal: {maxPower: 100},\n  'Roar of Time': {maxPower: 150},\n  'Rock Blast': {maxPower: 130},\n  'Rock Climb': {maxPower: 130},\n  'Rock Slide': {maxPower: 130},\n  'Rock Smash': {maxPower: 70},\n  'Rock Throw': {maxPower: 100},\n  'Rock Tomb': {maxPower: 110},\n  'Rock Wrecker': {maxPower: 150},\n  'Rolling Kick': {maxPower: 80},\n  Rollout: {maxPower: 90},\n  Round: {maxPower: 110},\n  'Sacred Fire': {maxPower: 130},\n  'Sacred Sword': {maxPower: 90},\n  'Sand Tomb': {maxPower: 90},\n  'Savage Spin-Out': {maxPower: 1},\n  Scald: {maxPower: 130},\n  Scratch: {maxPower: 90},\n  'Searing Shot': {maxPower: 130},\n  'Searing Sunraze Smash': {maxPower: 1},\n  'Secret Power': {maxPower: 120},\n  'Secret Sword': {maxPower: 90},\n  'Seed Bomb': {maxPower: 130},\n  'Seed Flare': {maxPower: 140},\n  'Seismic Toss': {maxPower: 75},\n  'Self-Destruct': {maxPower: 150},\n  'Shadow Ball': {maxPower: 130},\n  'Shadow Bone': {maxPower: 130},\n  'Shadow Claw': {maxPower: 120},\n  'Shadow Force': {maxPower: 140},\n  'Shadow Punch': {maxPower: 110},\n  'Shadow Sneak': {maxPower: 90},\n  'Shadow Strike': {maxPower: 130},\n  'Shattered Psyche': {maxPower: 1},\n  'Sheer Cold': {maxPower: 130},\n  'Shell Trap': {maxPower: 150},\n  'Shock Wave': {maxPower: 110},\n  'Signal Beam': {maxPower: 130},\n  'Silver Wind': {maxPower: 110},\n  'Sinister Arrow Raid': {maxPower: 1},\n  'Skull Bash': {maxPower: 140},\n  'Sky Attack': {maxPower: 140},\n  'Sky Drop': {maxPower: 110},\n  'Sky Uppercut': {maxPower: 90},\n  Slam: {maxPower: 130},\n  Slash: {maxPower: 120},\n  Sludge: {maxPower: 85},\n  'Sludge Bomb': {maxPower: 90},\n  'Sludge Wave': {maxPower: 90},\n  'Smack Down': {maxPower: 100},\n  'Smart Strike': {maxPower: 120},\n  'Smelling Salts': {maxPower: 120},\n  Smog: {maxPower: 70},\n  Snarl: {maxPower: 110},\n  Snore: {maxPower: 100},\n  'Solar Beam': {maxPower: 140},\n  'Solar Blade': {maxPower: 140},\n  'Sonic Boom': {maxPower: 100},\n  'Soul-Stealing 7-Star Strike': {maxPower: 1},\n  'Spacial Rend': {maxPower: 130},\n  Spark: {maxPower: 120},\n  'Sparkling Aria': {maxPower: 130},\n  'Spectral Thief': {maxPower: 130},\n  'Spike Cannon': {maxPower: 120},\n  'Spirit Shackle': {maxPower: 130},\n  'Spit Up': {maxPower: 100},\n  'Splintered Stormshards': {maxPower: 1},\n  'Steam Eruption': {maxPower: 140},\n  Steamroller: {maxPower: 120},\n  'Steel Wing': {maxPower: 120},\n  'Stoked Sparksurfer': {maxPower: 1},\n  Stomp: {maxPower: 120},\n  'Stomping Tantrum': {maxPower: 130},\n  'Stone Edge': {maxPower: 130},\n  'Stored Power': {maxPower: 130},\n  'Storm Throw': {maxPower: 80},\n  Strength: {maxPower: 130},\n  'Struggle Bug': {maxPower: 100},\n  Submission: {maxPower: 90},\n  'Subzero Slammer': {maxPower: 1},\n  'Sucker Punch': {maxPower: 120},\n  'Sunsteel Strike': {maxPower: 130},\n  'Super Fang': {maxPower: 100},\n  Superpower: {maxPower: 95},\n  'Supersonic Skystrike': {maxPower: 1},\n  Surf: {maxPower: 130},\n  Swift: {maxPower: 110},\n  Synchronoise: {maxPower: 140},\n  Tackle: {maxPower: 90},\n  'Tail Slap': {maxPower: 130},\n  'Take Down': {maxPower: 130},\n  'Techno Blast': {maxPower: 140},\n  'Tectonic Rage': {maxPower: 1},\n  Thief: {maxPower: 110},\n  'Thousand Arrows': {maxPower: 130},\n  'Thousand Waves': {maxPower: 130},\n  Thrash: {maxPower: 140},\n  'Throat Chop': {maxPower: 130},\n  Thunder: {maxPower: 140},\n  Thunderbolt: {maxPower: 130},\n  'Thunder Fang': {maxPower: 120},\n  'Thunder Punch': {maxPower: 130},\n  'Thunder Shock': {maxPower: 90},\n  'Tri Attack': {maxPower: 130},\n  'Triple Kick': {maxPower: 80},\n  'Trop Kick': {maxPower: 120},\n  'Trump Card': {maxPower: 130},\n  Twineedle: {maxPower: 100},\n  'Twinkle Tackle': {maxPower: 1},\n  Twister: {maxPower: 90},\n  'U-turn': {maxPower: 120},\n  Uproar: {maxPower: 130},\n  'Vacuum Wave': {maxPower: 70},\n  'V-create': {maxPower: 150},\n  Venoshock: {maxPower: 85},\n  'Vine Whip': {maxPower: 100},\n  'Vise Grip': {maxPower: 110},\n  'Vital Throw': {maxPower: 85},\n  'Volt Switch': {maxPower: 120},\n  'Volt Tackle': {maxPower: 140},\n  'Wake-Up Slap': {maxPower: 85},\n  Waterfall: {maxPower: 130},\n  'Water Gun': {maxPower: 90},\n  'Water Pledge': {maxPower: 130},\n  'Water Pulse': {maxPower: 110},\n  'Water Shuriken': {maxPower: 90},\n  'Water Spout': {maxPower: 150},\n  'Weather Ball': {maxPower: 130},\n  Whirlpool: {maxPower: 90},\n  'Wild Charge': {maxPower: 130},\n  'Wing Attack': {maxPower: 110},\n  'Wood Hammer': {maxPower: 140},\n  Wrap: {maxPower: 90},\n  'Wring Out': {maxPower: 140},\n  'X-Scissor': {maxPower: 130},\n  'Zap Cannon': {maxPower: 140},\n  'Zen Headbutt': {maxPower: 130},\n  'Zing Zap': {maxPower: 130},\n};\n\nconst SS: {[name: string]: MoveData} = extend(true, {}, SM, SS_PATCH);\n\nconst LGPE_MOVES = [\n  'Baddy Bad',\n  'Bouncy Bubble',\n  'Buzzy Buzz',\n  'Freezy Frost',\n  'Glitzy Glow',\n  'Sappy Seed',\n  'Sizzly Slide',\n  'Sparkly Swirl',\n  'Zippy Zap',\n  'Floaty Fall',\n  'Pika Papow',\n  'Splishy Splash',\n  'Veevee Volley',\n];\nfor (const m of LGPE_MOVES) {\n  delete SS[m];\n}\n\nconst SV_PATCH: {[name: string]: DeepPartial<MoveData>} = {\n  'Aerial Ace': {isSlicing: true},\n  Aeroblast: {isWind: true},\n  'Air Cutter': {isSlicing: true, isWind: true},\n  'Air Slash': {isSlicing: true},\n  'Behemoth Blade': {isSlicing: true},\n  Blizzard: {isWind: true},\n  'Cross Poison': {isSlicing: true},\n  Cut: {isSlicing: true},\n  'Fairy Wind': {isWind: true},\n  'Fury Cutter': {isSlicing: true},\n  'Glacial Lance': {bp: 120, zp: 190},\n  'Grassy Glide': {bp: 55, zp: 100, maxPower: 110},\n  Gust: {isWind: true},\n  'Heat Wave': {isWind: true},\n  Hurricane: {isWind: true},\n  'Icy Wind': {isWind: true},\n  'Leaf Blade': {isSlicing: true},\n  'Luster Purge': {bp: 95, zp: 175, maxPower: 130},\n  'Mist Ball': {bp: 95, zp: 175, maxPower: 130},\n  'Night Slash': {isSlicing: true},\n  'Petal Blizzard': {isWind: true},\n  'Psycho Cut': {isSlicing: true},\n  'Razor Leaf': {isSlicing: true},\n  'Razor Shell': {isSlicing: true},\n  'Sacred Sword': {isSlicing: true},\n  Sandstorm: {isWind: true},\n  Slash: {isSlicing: true},\n  'Solar Blade': {isSlicing: true},\n  Tailwind: {isWind: true},\n  Twister: {isWind: true},\n  Whirlwind: {isWind: true},\n  'Wicked Blow': {bp: 75, zp: 140},\n  'X-Scissor': {isSlicing: true},\n  'Alluring Voice': {\n    bp: 80,\n    type: 'Fairy',\n    category: 'Special',\n    secondaries: true,\n    isSound: true,\n    makesContact: true,\n  },\n  'Aqua Cutter': {\n    bp: 70,\n    type: 'Water',\n    category: 'Physical',\n    zp: 140,\n    maxPower: 120,\n    isSlicing: true,\n    highCritChance: true,\n  },\n  'Aqua Step': {\n    bp: 80,\n    type: 'Water',\n    category: 'Physical',\n    zp: 160,\n    maxPower: 130,\n    secondaries: true,\n    makesContact: true,\n  },\n  'Armor Cannon': {\n    bp: 120,\n    type: 'Fire',\n    category: 'Special',\n    zp: 190,\n    maxPower: 140,\n  },\n  'Axe Kick': {\n    bp: 120,\n    type: 'Fighting',\n    category: 'Physical',\n    zp: 190,\n    maxPower: 95,\n    secondaries: true,\n    hasCrashDamage: true,\n    makesContact: true,\n  },\n  'Barb Barrage': {\n    bp: 60,\n    type: 'Poison',\n    category: 'Physical',\n    zp: 120,\n    maxPower: 80,\n    secondaries: true,\n  },\n  'Bitter Blade': {\n    bp: 90,\n    type: 'Fire',\n    category: 'Physical',\n    zp: 175,\n    maxPower: 130,\n    makesContact: true,\n    isSlicing: true,\n    drain: [1, 2],\n  },\n  'Bitter Malice': {\n    bp: 75,\n    type: 'Ghost',\n    category: 'Special',\n    zp: 140,\n    maxPower: 130,\n    secondaries: true,\n  },\n  'Blazing Torque': {\n    bp: 80,\n    type: 'Fire',\n    category: 'Physical',\n    zp: 160,\n    maxPower: 130,\n    secondaries: true,\n  },\n  'Bleakwind Storm': {\n    bp: 100,\n    type: 'Flying',\n    category: 'Special',\n    zp: 180,\n    maxPower: 130,\n    secondaries: true,\n    isWind: true,\n    target: 'allAdjacentFoes',\n  },\n  'Blood Moon': {\n    bp: 140,\n    type: 'Normal',\n    category: 'Special',\n    zp: 200,\n    maxPower: 140,\n  },\n  'Burning Bulwark': {\n    bp: 0,\n    type: 'Fire',\n    category: 'Status',\n    priority: 4,\n  },\n  'Ceaseless Edge': {\n    bp: 65,\n    type: 'Dark',\n    category: 'Physical',\n    zp: 120,\n    maxPower: 120,\n    makesContact: true,\n    isSlicing: true,\n    secondaries: true,\n  },\n  'Chilling Water': {\n    bp: 50,\n    type: 'Water',\n    category: 'Special',\n    zp: 100,\n    maxPower: 100,\n    secondaries: true,\n  },\n  'Chilly Reception': {\n    bp: 0,\n    type: 'Ice',\n    category: 'Status',\n  },\n  'Chloroblast': {\n    bp: 150,\n    type: 'Grass',\n    mindBlownRecoil: true,\n    category: 'Special',\n    zp: 200,\n    maxPower: 150,\n  },\n  'Collision Course': {\n    bp: 100,\n    type: 'Fighting',\n    category: 'Physical',\n    zp: 180,\n    maxPower: 90,\n    makesContact: true, // Deals 1.3x on super effective\n  },\n  'Combat Torque': {\n    bp: 100,\n    type: 'Fighting',\n    category: 'Physical',\n    zp: 180,\n    maxPower: 90,\n    secondaries: true,\n  },\n  Comeuppance: {\n    bp: 0,\n    type: 'Dark',\n    category: 'Physical',\n    zp: 100,\n    maxPower: 100,\n    makesContact: true,\n  },\n  Doodle: {\n    bp: 0,\n    type: 'Normal',\n    category: 'Status',\n  },\n  'Double Shock': {\n    bp: 120,\n    type: 'Electric',\n    category: 'Physical',\n    zp: 190,\n    maxPower: 140,\n    makesContact: true,\n  },\n  'Dire Claw': {\n    bp: 80,\n    type: 'Poison',\n    category: 'Physical',\n    zp: 160,\n    maxPower: 90,\n    makesContact: true,\n    secondaries: true,\n    highCritChance: true,\n  },\n  'Dragon Cheer': {\n    bp: 0,\n    type: 'Dragon',\n    category: 'Status',\n  },\n  'Electro Drift': {\n    bp: 100,\n    type: 'Electric',\n    category: 'Special',\n    zp: 180,\n    maxPower: 130,\n    makesContact: true, // deals 1.3x on super effective\n  },\n  'Electro Shot':  {\n    bp: 130,\n    type: 'Electric',\n    category: 'Special',\n  },\n  'Esper Wing': {\n    bp: 80,\n    type: 'Psychic',\n    category: 'Special',\n    zp: 160,\n    maxPower: 130,\n    secondaries: true,\n    highCritChance: true,\n  },\n  'Fickle Beam': {\n    bp: 80,\n    type: 'Dragon',\n    category: 'Special',\n  },\n  'Fillet Away': {\n    bp: 0,\n    type: 'Normal',\n    category: 'Status',\n  },\n  'Flower Trick': {\n    bp: 70,\n    type: 'Grass',\n    category: 'Physical',\n    willCrit: true,\n    zp: 140,\n    maxPower: 120,\n  },\n  'Gigaton Hammer': {\n    bp: 160,\n    type: 'Steel',\n    category: 'Physical',\n    zp: 200,\n    maxPower: 150,\n  },\n  'Glaive Rush': {\n    bp: 120,\n    type: 'Dragon',\n    category: 'Physical',\n    zp: 190,\n    maxPower: 140,\n    makesContact: true,\n  },\n  'Hard Press': {\n    bp: 1,\n    type: 'Steel',\n    category: 'Physical',\n    makesContact: true,\n  },\n  'Headlong Rush': {\n    bp: 120,\n    type: 'Ground',\n    category: 'Physical',\n    zp: 190,\n    maxPower: 140,\n    makesContact: true,\n    isPunch: true,\n  },\n  'Hydro Steam': {\n    bp: 80,\n    type: 'Water',\n    category: 'Special',\n    zp: 160,\n    maxPower: 130,\n  },\n  'Hyper Drill': {\n    bp: 100,\n    type: 'Normal',\n    category: 'Physical',\n    zp: 180,\n    maxPower: 130,\n    makesContact: true,\n    breaksProtect: true,\n  },\n  'Ice Spinner': {\n    bp: 80,\n    type: 'Ice',\n    category: 'Physical',\n    zp: 160,\n    maxPower: 130,\n    makesContact: true,\n  },\n  'Infernal Parade': {\n    bp: 60,\n    type: 'Ghost',\n    category: 'Special',\n    zp: 120,\n    maxPower: 110,\n    secondaries: true,\n  },\n  'Ivy Cudgel': {\n    bp: 100,\n    type: 'Grass',\n    category: 'Physical',\n    zp: 180,\n    maxPower: 130,\n    highCritChance: true,\n  },\n  'Jet Punch': {\n    bp: 60,\n    type: 'Water',\n    category: 'Physical',\n    zp: 120,\n    maxPower: 110,\n    makesContact: true,\n    isPunch: true,\n    priority: 1,\n    // Sheer Force boost implemented in gen789.ts\n  },\n  'Kowtow Cleave': {\n    bp: 85,\n    type: 'Dark',\n    category: 'Physical',\n    zp: 160,\n    maxPower: 130,\n    makesContact: true,\n    isSlicing: true,\n  },\n  'Last Respects': {\n    bp: 50,\n    type: 'Ghost',\n    category: 'Physical',\n    zp: 100,\n    maxPower: 100,\n  },\n  'Lumina Crash': {\n    bp: 80,\n    type: 'Psychic',\n    category: 'Special',\n    zp: 160,\n    maxPower: 130,\n    secondaries: true,\n  },\n  'Lunar Blessing': {\n    bp: 0,\n    type: 'Psychic',\n    category: 'Status',\n  },\n  'Magical Torque': {\n    bp: 100,\n    type: 'Fairy',\n    category: 'Physical',\n    zp: 180,\n    maxPower: 130,\n    secondaries: true,\n  },\n  'Make It Rain': {\n    bp: 120,\n    type: 'Steel',\n    category: 'Special',\n    zp: 190,\n    maxPower: 140,\n    target: 'allAdjacentFoes',\n    self: {boosts: {spa: -1}},\n  },\n  'Malignant Chain': {\n    bp: 100,\n    type: 'Poison',\n    category: 'Special',\n    secondaries: true,\n  },\n  'Matcha Gotcha': {\n    bp: 80,\n    type: 'Grass',\n    category: 'Special',\n    target: 'allAdjacentFoes',\n    zp: 160,\n    maxPower: 130,\n    secondaries: true,\n    drain: [1, 2],\n  },\n  'Mighty Cleave': {\n    bp: 95,\n    type: 'Rock',\n    category: 'Physical',\n    makesContact: true,\n    isSlicing: true,\n  },\n  'Mortal Spin': {\n    bp: 30,\n    type: 'Poison',\n    category: 'Physical',\n    zp: 100,\n    maxPower: 70,\n    makesContact: true,\n    secondaries: true,\n    target: 'allAdjacentFoes',\n  },\n  'Mountain Gale': {\n    bp: 100,\n    type: 'Ice',\n    category: 'Physical',\n    zp: 180,\n    maxPower: 130,\n    secondaries: true,\n  },\n  'Mystical Power': {\n    bp: 70,\n    type: 'Psychic',\n    category: 'Special',\n    zp: 140,\n    maxPower: 120,\n    secondaries: true,\n  },\n  'Noxious Torque': {\n    bp: 100,\n    type: 'Poison',\n    category: 'Physical',\n    zp: 180,\n    maxPower: 90,\n    secondaries: true,\n  },\n  'Order Up': {\n    bp: 80,\n    type: 'Dragon',\n    category: 'Physical',\n    zp: 160,\n    maxPower: 130,\n    isPulse: true,\n    // Sheer Force boost implemented in gen789.ts\n  },\n  'Population Bomb': {\n    bp: 20,\n    type: 'Normal',\n    category: 'Physical',\n    zp: 100,\n    maxPower: 90,\n    makesContact: true,\n    isSlicing: true,\n    multihit: [2, 10],\n  },\n  Pounce: {\n    bp: 50,\n    type: 'Bug',\n    category: 'Physical',\n    zp: 100,\n    maxPower: 100,\n    makesContact: true,\n    secondaries: true,\n  },\n  'Power Shift': {\n    bp: 0,\n    type: 'Normal',\n    category: 'Status',\n  },\n  Psyblade: {\n    bp: 80,\n    type: 'Psychic',\n    category: 'Physical',\n    zp: 160,\n    maxPower: 130,\n    makesContact: true,\n    isSlicing: true,\n  },\n  'Psychic Noise': {\n    bp: 75,\n    type: 'Psychic',\n    category: 'Special',\n    secondaries: true,\n    isSound: true,\n  },\n  'Psyshield Bash': {\n    bp: 70,\n    type: 'Psychic',\n    category: 'Physical',\n    zp: 140,\n    maxPower: 120,\n    makesContact: true,\n    secondaries: true,\n  },\n  'Rage Fist': {\n    bp: 50,\n    type: 'Ghost',\n    category: 'Physical',\n    zp: 100,\n    maxPower: 100,\n    makesContact: true,\n    isPunch: true,\n  },\n  'Raging Bull': {\n    bp: 90,\n    type: 'Normal',\n    category: 'Physical',\n    zp: 175,\n    maxPower: 130,\n    makesContact: true,\n  },\n  'Raging Fury': {\n    bp: 120,\n    type: 'Fire',\n    category: 'Physical',\n    zp: 190,\n    maxPower: 140,\n  },\n  'Revival Blessing': {\n    bp: 0,\n    type: 'Normal',\n    category: 'Status',\n  },\n  Ruination: {\n    bp: 0,\n    type: 'Dark',\n    category: 'Special',\n    zp: 100,\n    maxPower: 100,\n  },\n  'Salt Cure': {\n    bp: 40,\n    type: 'Rock',\n    category: 'Physical',\n    zp: 100,\n    maxPower: 90,\n    secondaries: true,\n  },\n  'Sandsear Storm': {\n    bp: 100,\n    type: 'Ground',\n    category: 'Special',\n    zp: 180,\n    maxPower: 130,\n    secondaries: true,\n    isWind: true,\n    target: 'allAdjacentFoes',\n  },\n  'Shed Tail': {\n    bp: 0,\n    type: 'Normal',\n    category: 'Status',\n  },\n  Shelter: {\n    bp: 0,\n    type: 'Steel',\n    category: 'Status',\n  },\n  'Silk Trap': {\n    bp: 0,\n    type: 'Bug',\n    category: 'Status',\n    priority: 4,\n  },\n  Snowscape: {\n    bp: 0,\n    type: 'Ice',\n    category: 'Status',\n  },\n  'Spicy Extract': {\n    bp: 0,\n    type: 'Grass',\n    category: 'Status',\n  },\n  'Spin Out': {\n    bp: 100,\n    type: 'Steel',\n    category: 'Physical',\n    zp: 180,\n    maxPower: 130,\n    makesContact: true,\n  },\n  'Springtide Storm': {\n    bp: 100,\n    type: 'Fairy',\n    category: 'Special',\n    zp: 180,\n    maxPower: 130,\n    secondaries: true,\n    isWind: true,\n    target: 'allAdjacentFoes',\n  },\n  'Stone Axe': {\n    bp: 65,\n    type: 'Rock',\n    category: 'Physical',\n    zp: 120,\n    maxPower: 120,\n    makesContact: true,\n    isSlicing: true,\n    secondaries: true,\n  },\n  'Supercell Slam': {\n    bp: 100,\n    type: 'Electric',\n    category: 'Physical',\n    makesContact: true,\n    hasCrashDamage: true,\n  },\n  'Syrup Bomb': {\n    bp: 60,\n    type: 'Grass',\n    category: 'Special',\n    zp: 120,\n    maxPower: 110,\n    isBullet: true,\n    secondaries: true,\n  },\n  'Tachyon Cutter': {\n    bp: 50,\n    type: 'Steel',\n    category: 'Special',\n    multihit: 2,\n    isSlicing: true,\n  },\n  'Take Heart': {\n    bp: 0,\n    type: 'Psychic',\n    category: 'Status',\n  },\n  'Temper Flare': {\n    bp: 75,\n    type: 'Fire',\n    category: 'Physical',\n    makesContact: true,\n  },\n  'Tera Blast': {\n    bp: 80,\n    type: 'Normal',\n    category: 'Special',\n    zp: 160,\n    maxPower: 130,\n  },\n  'Tera Starstorm': {\n    bp: 120,\n    type: 'Normal',\n    category: 'Special',\n  },\n  Thunderclap: {\n    bp: 70,\n    type: 'Electric',\n    category: 'Special',\n    priority: 1,\n  },\n  'Tidy Up': {\n    bp: 0,\n    type: 'Normal',\n    category: 'Status',\n  },\n  'Torch Song': {\n    bp: 80,\n    type: 'Fire',\n    category: 'Special',\n    zp: 160,\n    maxPower: 130,\n    secondaries: true,\n    isSound: true,\n  },\n  Trailblaze: {\n    bp: 50,\n    type: 'Grass',\n    category: 'Physical',\n    zp: 100,\n    maxPower: 100,\n    secondaries: true,\n    makesContact: true,\n  },\n  'Triple Arrows': {\n    bp: 90,\n    type: 'Fighting',\n    category: 'Physical',\n    zp: 175,\n    maxPower: 90,\n    secondaries: true,\n    highCritChance: true,\n  },\n  'Triple Dive': {\n    bp: 30,\n    type: 'Water',\n    category: 'Physical',\n    zp: 100,\n    maxPower: 90,\n    makesContact: true,\n    multihit: 3,\n  },\n  'Twin Beam': {\n    bp: 40,\n    type: 'Psychic',\n    category: 'Special',\n    zp: 100,\n    maxPower: 90,\n    multihit: 2,\n  },\n  'Upper Hand': {\n    bp: 65,\n    type: 'Fighting',\n    category: 'Physical',\n    priority: 3,\n    secondaries: true,\n    makesContact: true,\n  },\n  'Victory Dance': {\n    bp: 0,\n    type: 'Fighting',\n    category: 'Status',\n  },\n  'Wave Crash': {\n    bp: 120,\n    type: 'Water',\n    category: 'Physical',\n    zp: 190,\n    maxPower: 140,\n    makesContact: true,\n    recoil: [33, 100],\n  },\n  'Wicked Torque': {\n    bp: 80,\n    type: 'Dark',\n    category: 'Physical',\n    zp: 160,\n    maxPower: 130,\n    secondaries: true,\n  },\n  'Wildbolt Storm': {\n    bp: 100,\n    type: 'Electric',\n    category: 'Special',\n    zp: 180,\n    maxPower: 130,\n    secondaries: true,\n    isWind: true,\n    target: 'allAdjacentFoes',\n  },\n};\n\nconst SV: {[name: string]: MoveData} = extend(true, {}, SS, SV_PATCH);\n\nconst RAID_CHEERS_PATCH: {[name: string]: DeepPartial<MoveData>} = {\n  'Attack Cheer': {\n    bp: 0,\n    type: '???',\n    category: 'Status',\n    priority: 10,\n  },\n  'Defense Cheer': {\n    bp: 0,\n    type: '???',\n    category: 'Status',\n    priority: 10,\n  },\n  'Heal Cheer': {\n    bp: 0,\n    type: '???',\n    category: 'Status',\n    priority: 10,\n  }\n}\n\nconst CONFUSION_PATCH: {[name: string]: DeepPartial<MoveData>} = {\n  'hurt itself in its confusion': {\n    bp: 40, \n    type: '???',\n    category: 'Physical',\n  }\n}\n\nconst RAID: {[name: string]: MoveData} = extend(true, {}, SV, RAID_CHEERS_PATCH, CONFUSION_PATCH);\n\nexport const MOVES = [{}, RBY, GSC, ADV, DPP, BW, XY, SM, SS, SV];\n\nexport class Moves implements I.Moves {\n  private readonly gen: I.GenerationNum;\n\n  constructor(gen: I.GenerationNum) {\n    this.gen = gen;\n  }\n\n  get(id: I.ID) {\n    return MOVES_BY_ID[this.gen][id];\n  }\n\n  *[Symbol.iterator]() {\n    for (const id in MOVES_BY_ID[this.gen]) {\n      yield this.get(id as I.ID)!;\n    }\n  }\n}\n\nclass Move implements I.Move {\n  readonly kind: 'Move';\n  readonly id: I.ID;\n  readonly name: I.MoveName;\n  readonly basePower!: number;\n  readonly type!: I.TypeName;\n  readonly category?: I.MoveCategory;\n  readonly flags: I.MoveFlags;\n  readonly secondaries?: boolean;\n  readonly target?: I.MoveTarget;\n  readonly recoil?: [number, number];\n  readonly hasCrashDamage?: boolean;\n  readonly mindBlownRecoil?: boolean;\n  readonly struggleRecoil?: boolean;\n  readonly willCrit?: boolean;\n  readonly highCritChance?: boolean;\n  readonly drain?: [number, number];\n  readonly priority?: number;\n  readonly self?: I.SelfOrSecondaryEffect | null;\n  readonly ignoreDefensive?: boolean;\n  readonly overrideOffensiveStat?: I.StatIDExceptHP;\n  readonly overrideDefensiveStat?: I.StatIDExceptHP;\n  readonly overrideOffensivePokemon?: 'target' | 'source';\n  readonly overrideDefensivePokemon?: 'target' | 'source';\n  readonly breaksProtect?: boolean;\n  readonly isZ?: boolean;\n  readonly zMove?: {\n    basePower?: number;\n  };\n  readonly isMax?: boolean;\n  readonly maxMove?: {\n    basePower: number;\n  };\n  readonly zp?: number;\n  readonly maxPower?: number;\n  readonly multihit?: number | number[];\n\n  private static readonly FLAGS = new Set([\n    'bp',\n    'makesContact',\n    'isPunch',\n    'isBite',\n    'isBullet',\n    'isSound',\n    'isPulse',\n    'zp',\n    'maxPower',\n    'isSlicing',\n    'isWind',\n  ]);\n\n  constructor(name: string, data: MoveData, gen: number) {\n    this.kind = 'Move';\n    this.id = toID(name);\n    this.name = name as I.MoveName;\n\n    // TODO: remove this once MoveData is migrated to flags and Object.assign just handles this\n    this.flags = {};\n    if (data.makesContact) this.flags.contact = 1;\n    if (data.isPunch) this.flags.punch = 1;\n    if (data.isBite) this.flags.bite = 1;\n    if (data.isBullet) this.flags.bullet = 1;\n    if (data.isSound) this.flags.sound = 1;\n    if (data.isPulse) this.flags.pulse = 1;\n    if (data.isSlicing) this.flags.slicing = 1;\n    if (data.isWind) this.flags.wind = 1;\n\n    assignWithout(this, data, Move.FLAGS);\n\n    this.basePower = data.bp;\n    if (data.zp) this.zMove = {basePower: data.zp};\n    if (data.maxPower) this.maxMove = {basePower: data.maxPower};\n\n    if (!this.category && gen >= 4) this.category = 'Status';\n    if (this.struggleRecoil) delete (this as any).recoil;\n  }\n}\n\nconst MOVES_BY_ID: Array<{[id: string]: Move}> = [];\n\nlet gen = 0;\nfor (const moves of MOVES) {\n  const map: {[id: string]: Move} = {};\n  for (const move in moves) {\n    const data = moves[move];\n    const m = new Move(move, data, gen);\n    map[m.id] = m;\n  }\n  MOVES_BY_ID.push(map);\n  gen++;\n}\n","import * as I from './interface';\nimport {toID, extend, DeepPartial, assignWithout} from '../util';\n\nexport interface SpeciesData {\n  readonly types: [I.TypeName] | [I.TypeName, I.TypeName];\n  // TODO: replace with baseStats\n  readonly bs: {\n    hp: number;\n    at: number;\n    df: number;\n    sa?: number;\n    sd?: number;\n    sp: number;\n    sl?: number;\n  };\n  readonly weightkg: number; // weight\n  readonly nfe?: boolean;\n  readonly gender?: I.GenderName;\n  readonly otherFormes?: string[];\n  readonly baseSpecies?: string;\n  readonly abilities?: {0: string}; // ability\n}\n\nconst RBY: {[name: string]: SpeciesData} = {\n  // Abra: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 25, at: 20, df: 15, sp: 90, sl: 105},\n  //   weightkg: 19.5,\n  //   nfe: true,\n  // },\n  // Aerodactyl: {\n  //   types: ['Rock', 'Flying'],\n  //   bs: {hp: 80, at: 105, df: 65, sp: 130, sl: 60},\n  //   weightkg: 59,\n  // },\n  // Alakazam: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 55, at: 50, df: 45, sp: 120, sl: 135},\n  //   weightkg: 48,\n  // },\n  Arbok: {types: ['Poison'], bs: {hp: 60, at: 85, df: 69, sp: 80, sl: 65}, weightkg: 65},\n  Arcanine: {\n    types: ['Fire'],\n    bs: {hp: 90, at: 110, df: 80, sp: 95, sl: 80},\n    weightkg: 155,\n  },\n  Articuno: {\n    types: ['Ice', 'Flying'],\n    bs: {hp: 90, at: 85, df: 100, sp: 85, sl: 125},\n    weightkg: 55.4,\n  },\n  // Beedrill: {\n  //   types: ['Bug', 'Poison'],\n  //   bs: {hp: 65, at: 80, df: 40, sp: 75, sl: 45},\n  //   weightkg: 29.5,\n  // },\n  Bellsprout: {\n    types: ['Grass', 'Poison'],\n    bs: {hp: 50, at: 75, df: 35, sp: 40, sl: 70},\n    weightkg: 4,\n    nfe: true,\n  },\n  Blastoise: {\n    types: ['Water'],\n    bs: {hp: 79, at: 83, df: 100, sp: 78, sl: 85},\n    weightkg: 85.5,\n  },\n  Bulbasaur: {\n    types: ['Grass', 'Poison'],\n    bs: {hp: 45, at: 49, df: 49, sp: 45, sl: 65},\n    weightkg: 6.9,\n    nfe: true,\n  },\n  // Butterfree: {\n  //   types: ['Bug', 'Flying'],\n  //   bs: {hp: 60, at: 45, df: 50, sp: 70, sl: 80},\n  //   weightkg: 32,\n  // },\n  // Caterpie: {\n  //   types: ['Bug'],\n  //   bs: {hp: 45, at: 30, df: 35, sp: 45, sl: 20},\n  //   weightkg: 2.9,\n  //   nfe: true,\n  // },\n  Chansey: {\n    types: ['Normal'],\n    bs: {hp: 250, at: 5, df: 5, sp: 50, sl: 105},\n    weightkg: 34.6,\n    gender: 'F',\n  },\n  Charizard: {\n    types: ['Fire', 'Flying'],\n    bs: {hp: 78, at: 84, df: 78, sp: 100, sl: 85},\n    weightkg: 90.5,\n  },\n  Charmander: {\n    types: ['Fire'],\n    bs: {hp: 39, at: 52, df: 43, sp: 65, sl: 50},\n    weightkg: 8.5,\n    nfe: true,\n  },\n  Charmeleon: {\n    types: ['Fire'],\n    bs: {hp: 58, at: 64, df: 58, sp: 80, sl: 65},\n    weightkg: 19,\n    nfe: true,\n  },\n  Clefable: {types: ['Normal'], bs: {hp: 95, at: 70, df: 73, sp: 60, sl: 85}, weightkg: 40},\n  Clefairy: {\n    types: ['Normal'],\n    bs: {hp: 70, at: 45, df: 48, sp: 35, sl: 60},\n    weightkg: 7.5,\n    nfe: true,\n  },\n  Cloyster: {\n    types: ['Water', 'Ice'],\n    bs: {hp: 50, at: 95, df: 180, sp: 70, sl: 85},\n    weightkg: 132.5,\n  },\n  // Cubone: {\n  //   types: ['Ground'],\n  //   bs: {hp: 50, at: 50, df: 95, sp: 35, sl: 40},\n  //   weightkg: 6.5,\n  //   nfe: true,\n  // },\n  Dewgong: {\n    types: ['Water', 'Ice'],\n    bs: {hp: 90, at: 70, df: 80, sp: 70, sl: 95},\n    weightkg: 120,\n  },\n  Diglett: {\n    types: ['Ground'],\n    bs: {hp: 10, at: 55, df: 25, sp: 95, sl: 45},\n    weightkg: 0.8,\n    nfe: true,\n  },\n  Ditto: {types: ['Normal'], bs: {hp: 48, at: 48, df: 48, sp: 48, sl: 48}, weightkg: 4},\n  Dodrio: {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 60, at: 110, df: 70, sp: 100, sl: 60},\n    weightkg: 85.2,\n  },\n  Doduo: {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 35, at: 85, df: 45, sp: 75, sl: 35},\n    weightkg: 39.2,\n    nfe: true,\n  },\n  Dragonair: {\n    types: ['Dragon'],\n    bs: {hp: 61, at: 84, df: 65, sp: 70, sl: 70},\n    weightkg: 16.5,\n    nfe: true,\n  },\n  Dragonite: {\n    types: ['Dragon', 'Flying'],\n    bs: {hp: 91, at: 134, df: 95, sp: 80, sl: 100},\n    weightkg: 210,\n  },\n  Dratini: {\n    types: ['Dragon'],\n    bs: {hp: 41, at: 64, df: 45, sp: 50, sl: 50},\n    weightkg: 3.3,\n    nfe: true,\n  },\n  Drowzee: {\n    types: ['Psychic'],\n    bs: {hp: 60, at: 48, df: 45, sp: 42, sl: 90},\n    weightkg: 32.4,\n    nfe: true,\n  },\n  Dugtrio: {\n    types: ['Ground'],\n    bs: {hp: 35, at: 80, df: 50, sp: 120, sl: 70},\n    weightkg: 33.3,\n  },\n  Eevee: {\n    types: ['Normal'],\n    bs: {hp: 55, at: 55, df: 50, sp: 55, sl: 65},\n    weightkg: 6.5,\n    nfe: true,\n  },\n  Ekans: {\n    types: ['Poison'],\n    bs: {hp: 35, at: 60, df: 44, sp: 55, sl: 40},\n    weightkg: 6.9,\n    nfe: true,\n  },\n  Electabuzz: {\n    types: ['Electric'],\n    bs: {hp: 65, at: 83, df: 57, sp: 105, sl: 85},\n    weightkg: 30,\n  },\n  Electrode: {\n    types: ['Electric'],\n    bs: {hp: 60, at: 50, df: 70, sp: 140, sl: 80},\n    weightkg: 66.6,\n  },\n  Exeggcute: {\n    types: ['Grass', 'Psychic'],\n    bs: {hp: 60, at: 40, df: 80, sp: 40, sl: 60},\n    weightkg: 2.5,\n    nfe: true,\n  },\n  Exeggutor: {\n    types: ['Grass', 'Psychic'],\n    bs: {hp: 95, at: 95, df: 85, sp: 55, sl: 125},\n    weightkg: 120,\n  },\n  // 'Farfetch\\u2019d': {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 52, at: 65, df: 55, sp: 60, sl: 58},\n  //   weightkg: 15,\n  // },\n  // Fearow: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 65, at: 90, df: 65, sp: 100, sl: 61},\n  //   weightkg: 38,\n  // },\n  Flareon: {types: ['Fire'], bs: {hp: 65, at: 130, df: 60, sp: 65, sl: 110}, weightkg: 25},\n  Gastly: {\n    types: ['Ghost', 'Poison'],\n    bs: {hp: 30, at: 35, df: 30, sp: 80, sl: 100},\n    weightkg: 0.1,\n    nfe: true,\n  },\n  Gengar: {\n    types: ['Ghost', 'Poison'],\n    bs: {hp: 60, at: 65, df: 60, sp: 110, sl: 130},\n    weightkg: 40.5,\n  },\n  Geodude: {\n    types: ['Rock', 'Ground'],\n    bs: {hp: 40, at: 80, df: 100, sp: 20, sl: 30},\n    weightkg: 20,\n    nfe: true,\n  },\n  Gloom: {\n    types: ['Grass', 'Poison'],\n    bs: {hp: 60, at: 65, df: 70, sp: 40, sl: 85},\n    weightkg: 8.6,\n    nfe: true,\n  },\n  // Golbat: {\n  //   types: ['Poison', 'Flying'],\n  //   bs: {hp: 75, at: 80, df: 70, sp: 90, sl: 75},\n  //   weightkg: 55,\n  // },\n  // Goldeen: {\n  //   types: ['Water'],\n  //   bs: {hp: 45, at: 67, df: 60, sp: 63, sl: 50},\n  //   weightkg: 15,\n  //   nfe: true,\n  // },\n  Golduck: {types: ['Water'], bs: {hp: 80, at: 82, df: 78, sp: 85, sl: 80}, weightkg: 76.6},\n  Golem: {\n    types: ['Rock', 'Ground'],\n    bs: {hp: 80, at: 110, df: 130, sp: 45, sl: 55},\n    weightkg: 300,\n  },\n  Graveler: {\n    types: ['Rock', 'Ground'],\n    bs: {hp: 55, at: 95, df: 115, sp: 35, sl: 45},\n    weightkg: 105,\n    nfe: true,\n  },\n  Grimer: {\n    types: ['Poison'],\n    bs: {hp: 80, at: 80, df: 50, sp: 25, sl: 40},\n    weightkg: 30,\n    nfe: true,\n  },\n  Growlithe: {\n    types: ['Fire'],\n    bs: {hp: 55, at: 70, df: 45, sp: 60, sl: 50},\n    weightkg: 19,\n    nfe: true,\n  },\n  Gyarados: {\n    types: ['Water', 'Flying'],\n    bs: {hp: 95, at: 125, df: 79, sp: 81, sl: 100},\n    weightkg: 235,\n  },\n  Haunter: {\n    types: ['Ghost', 'Poison'],\n    bs: {hp: 45, at: 50, df: 45, sp: 95, sl: 115},\n    weightkg: 0.1,\n    nfe: true,\n  },\n  Hitmonchan: {\n    types: ['Fighting'],\n    bs: {hp: 50, at: 105, df: 79, sp: 76, sl: 35},\n    weightkg: 50.2,\n    gender: 'M',\n  },\n  Hitmonlee: {\n    types: ['Fighting'],\n    bs: {hp: 50, at: 120, df: 53, sp: 87, sl: 35},\n    weightkg: 49.8,\n    gender: 'M',\n  },\n  Horsea: {\n    types: ['Water'],\n    bs: {hp: 30, at: 40, df: 70, sp: 60, sl: 70},\n    weightkg: 8,\n    nfe: true,\n  },\n  Hypno: {\n    types: ['Psychic'],\n    bs: {hp: 85, at: 73, df: 70, sp: 67, sl: 115},\n    weightkg: 75.6,\n  },\n  Ivysaur: {\n    types: ['Grass', 'Poison'],\n    bs: {hp: 60, at: 62, df: 63, sp: 60, sl: 80},\n    weightkg: 13,\n    nfe: true,\n  },\n  Jigglypuff: {\n    types: ['Normal'],\n    bs: {hp: 115, at: 45, df: 20, sp: 20, sl: 25},\n    weightkg: 5.5,\n    nfe: true,\n  },\n  Jolteon: {\n    types: ['Electric'],\n    bs: {hp: 65, at: 65, df: 60, sp: 130, sl: 110},\n    weightkg: 24.5,\n  },\n  // Jynx: {\n  //   types: ['Ice', 'Psychic'],\n  //   bs: {hp: 65, at: 50, df: 35, sp: 95, sl: 95},\n  //   weightkg: 40.6,\n  // },\n  // Kabuto: {\n  //   types: ['Rock', 'Water'],\n  //   bs: {hp: 30, at: 80, df: 90, sp: 55, sl: 45},\n  //   weightkg: 11.5,\n  //   nfe: true,\n  // },\n  // Kabutops: {\n  //   types: ['Rock', 'Water'],\n  //   bs: {hp: 60, at: 115, df: 105, sp: 80, sl: 70},\n  //   weightkg: 40.5,\n  // },\n  // Kadabra: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 40, at: 35, df: 30, sp: 105, sl: 120},\n  //   weightkg: 56.5,\n  //   nfe: true,\n  // },\n  // Kakuna: {\n  //   types: ['Bug', 'Poison'],\n  //   bs: {hp: 45, at: 25, df: 50, sp: 35, sl: 25},\n  //   weightkg: 10,\n  //   nfe: true,\n  // },\n  // Kangaskhan: {\n  //   types: ['Normal'],\n  //   bs: {hp: 105, at: 95, df: 80, sp: 90, sl: 40},\n  //   weightkg: 80,\n  // },\n  // Kingler: {types: ['Water'], bs: {hp: 55, at: 130, df: 115, sp: 75, sl: 50}, weightkg: 60},\n  Koffing: {\n    types: ['Poison'],\n    bs: {hp: 40, at: 65, df: 95, sp: 35, sl: 60},\n    weightkg: 1,\n    nfe: true,\n  },\n  // Krabby: {\n  //   types: ['Water'],\n  //   bs: {hp: 30, at: 105, df: 90, sp: 50, sl: 25},\n  //   weightkg: 6.5,\n  //   nfe: true,\n  // },\n  Lapras: {\n    types: ['Water', 'Ice'],\n    bs: {hp: 130, at: 85, df: 80, sp: 60, sl: 95},\n    weightkg: 220,\n  },\n  // Lickitung: {\n  //   types: ['Normal'],\n  //   bs: {hp: 90, at: 55, df: 75, sp: 30, sl: 60},\n  //   weightkg: 65.5,\n  // },\n  // Machamp: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 90, at: 130, df: 80, sp: 55, sl: 65},\n  //   weightkg: 130,\n  // },\n  // Machoke: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 80, at: 100, df: 70, sp: 45, sl: 50},\n  //   weightkg: 70.5,\n  //   nfe: true,\n  // },\n  // Machop: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 70, at: 80, df: 50, sp: 35, sl: 35},\n  //   weightkg: 19.5,\n  //   nfe: true,\n  // },\n  Magikarp: {\n    types: ['Water'],\n    bs: {hp: 20, at: 10, df: 55, sp: 80, sl: 20},\n    weightkg: 10,\n    nfe: true,\n  },\n  Magmar: {\n    types: ['Fire'],\n    bs: {hp: 65, at: 95, df: 57, sp: 93, sl: 85},\n    weightkg: 44.5,\n  },\n  Magnemite: {\n    types: ['Electric'],\n    bs: {hp: 25, at: 35, df: 70, sp: 45, sl: 95},\n    weightkg: 6,\n    nfe: true,\n  },\n  Magneton: {\n    types: ['Electric'],\n    bs: {hp: 50, at: 60, df: 95, sp: 70, sl: 120},\n    weightkg: 60,\n  },\n  Mankey: {\n    types: ['Fighting'],\n    bs: {hp: 40, at: 80, df: 35, sp: 70, sl: 35},\n    weightkg: 28,\n    nfe: true,\n  },\n  // Marowak: {types: ['Ground'], bs: {hp: 60, at: 80, df: 110, sp: 45, sl: 50}, weightkg: 45},\n  Meowth: {\n    types: ['Normal'],\n    bs: {hp: 40, at: 45, df: 35, sp: 90, sl: 40},\n    weightkg: 4.2,\n    nfe: true,\n  },\n  // Metapod: {\n  //   types: ['Bug'],\n  //   bs: {hp: 50, at: 20, df: 55, sp: 30, sl: 25},\n  //   weightkg: 9.9,\n  //   nfe: true,\n  // },\n  Mew: {\n    types: ['Psychic'],\n    bs: {hp: 100, at: 100, df: 100, sp: 100, sl: 100},\n    weightkg: 4,\n  },\n  Mewtwo: {\n    types: ['Psychic'],\n    bs: {hp: 106, at: 110, df: 90, sp: 130, sl: 154},\n    weightkg: 122,\n  },\n  Moltres: {\n    types: ['Fire', 'Flying'],\n    bs: {hp: 90, at: 100, df: 90, sp: 90, sl: 125},\n    weightkg: 60,\n  },\n  // 'Mr. Mime': {\n  //   types: ['Psychic'],\n  //   bs: {hp: 40, at: 45, df: 65, sp: 90, sl: 100},\n  //   weightkg: 54.5,\n  // },\n  Muk: {types: ['Poison'], bs: {hp: 105, at: 105, df: 75, sp: 50, sl: 65}, weightkg: 30},\n  // Nidoking: {\n  //   types: ['Poison', 'Ground'],\n  //   bs: {hp: 81, at: 92, df: 77, sp: 85, sl: 75},\n  //   weightkg: 62,\n  // },\n  // Nidoqueen: {\n  //   types: ['Poison', 'Ground'],\n  //   bs: {hp: 90, at: 82, df: 87, sp: 76, sl: 75},\n  //   weightkg: 60,\n  // },\n  // 'Nidoran-F': {\n  //   types: ['Poison'],\n  //   bs: {hp: 55, at: 47, df: 52, sp: 41, sl: 40},\n  //   weightkg: 7,\n  //   nfe: true,\n  // },\n  // 'Nidoran-M': {\n  //   types: ['Poison'],\n  //   bs: {hp: 46, at: 57, df: 40, sp: 50, sl: 40},\n  //   weightkg: 9,\n  //   nfe: true,\n  // },\n  // Nidorina: {\n  //   types: ['Poison'],\n  //   bs: {hp: 70, at: 62, df: 67, sp: 56, sl: 55},\n  //   weightkg: 20,\n  //   nfe: true,\n  // },\n  // Nidorino: {\n  //   types: ['Poison'],\n  //   bs: {hp: 61, at: 72, df: 57, sp: 65, sl: 55},\n  //   weightkg: 19.5,\n  //   nfe: true,\n  // },\n  Ninetales: {\n    types: ['Fire'],\n    bs: {hp: 73, at: 76, df: 75, sp: 100, sl: 100},\n    weightkg: 19.9,\n  },\n  Oddish: {\n    types: ['Grass', 'Poison'],\n    bs: {hp: 45, at: 50, df: 55, sp: 30, sl: 75},\n    weightkg: 5.4,\n    nfe: true,\n  },\n  // Omanyte: {\n  //   types: ['Rock', 'Water'],\n  //   bs: {hp: 35, at: 40, df: 100, sp: 35, sl: 90},\n  //   weightkg: 7.5,\n  //   nfe: true,\n  // },\n  // Omastar: {\n  //   types: ['Rock', 'Water'],\n  //   bs: {hp: 70, at: 60, df: 125, sp: 55, sl: 115},\n  //   weightkg: 35,\n  // },\n  // Onix: {\n  //   types: ['Rock', 'Ground'],\n  //   bs: {hp: 35, at: 45, df: 160, sp: 70, sl: 30},\n  //   weightkg: 210,\n  // },\n  // Paras: {\n  //   types: ['Bug', 'Grass'],\n  //   bs: {hp: 35, at: 70, df: 55, sp: 25, sl: 55},\n  //   weightkg: 5.4,\n  //   nfe: true,\n  // },\n  // Parasect: {\n  //   types: ['Bug', 'Grass'],\n  //   bs: {hp: 60, at: 95, df: 80, sp: 30, sl: 80},\n  //   weightkg: 29.5,\n  // },\n  Persian: {types: ['Normal'], bs: {hp: 65, at: 70, df: 60, sp: 115, sl: 65}, weightkg: 32},\n  // Pidgeot: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 83, at: 80, df: 75, sp: 91, sl: 70},\n  //   weightkg: 39.5,\n  // },\n  // Pidgeotto: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 63, at: 60, df: 55, sp: 71, sl: 50},\n  //   weightkg: 30,\n  //   nfe: true,\n  // },\n  // Pidgey: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 40, at: 45, df: 40, sp: 56, sl: 35},\n  //   weightkg: 1.8,\n  //   nfe: true,\n  // },\n  Pikachu: {\n    types: ['Electric'],\n    bs: {hp: 35, at: 55, df: 30, sp: 90, sl: 50},\n    weightkg: 6,\n    nfe: true,\n  },\n  // Pinsir: {types: ['Bug'], bs: {hp: 65, at: 125, df: 100, sp: 85, sl: 55}, weightkg: 55},\n  Poliwag: {\n    types: ['Water'],\n    bs: {hp: 40, at: 50, df: 40, sp: 90, sl: 40},\n    weightkg: 12.4,\n    nfe: true,\n  },\n  Poliwhirl: {\n    types: ['Water'],\n    bs: {hp: 65, at: 65, df: 65, sp: 90, sl: 50},\n    weightkg: 20,\n    nfe: true,\n  },\n  Poliwrath: {\n    types: ['Water', 'Fighting'],\n    bs: {hp: 90, at: 85, df: 95, sp: 70, sl: 70},\n    weightkg: 54,\n  },\n  // Ponyta: {\n  //   types: ['Fire'],\n  //   bs: {hp: 50, at: 85, df: 55, sp: 90, sl: 65},\n  //   weightkg: 30,\n  //   nfe: true,\n  // },\n  Porygon: {\n    types: ['Normal'],\n    bs: {hp: 65, at: 60, df: 70, sp: 40, sl: 75},\n    weightkg: 36.5,\n  },\n  Primeape: {\n    types: ['Fighting'],\n    bs: {hp: 65, at: 105, df: 60, sp: 95, sl: 60},\n    weightkg: 32,\n  },\n  Psyduck: {\n    types: ['Water'],\n    bs: {hp: 50, at: 52, df: 48, sp: 55, sl: 50},\n    weightkg: 19.6,\n    nfe: true,\n  },\n  Raichu: {\n    types: ['Electric'],\n    bs: {hp: 60, at: 90, df: 55, sp: 100, sl: 90},\n    weightkg: 30,\n  },\n  // Rapidash: {types: ['Fire'], bs: {hp: 65, at: 100, df: 70, sp: 105, sl: 80}, weightkg: 95},\n  // Raticate: {\n  //   types: ['Normal'],\n  //   bs: {hp: 55, at: 81, df: 60, sp: 97, sl: 50},\n  //   weightkg: 18.5,\n  // },\n  // Rattata: {\n  //   types: ['Normal'],\n  //   bs: {hp: 30, at: 56, df: 35, sp: 72, sl: 25},\n  //   weightkg: 3.5,\n  //   nfe: true,\n  // },\n  Rhydon: {\n    types: ['Ground', 'Rock'],\n    bs: {hp: 105, at: 130, df: 120, sp: 40, sl: 45},\n    weightkg: 120,\n  },\n  Rhyhorn: {\n    types: ['Ground', 'Rock'],\n    bs: {hp: 80, at: 85, df: 95, sp: 25, sl: 30},\n    weightkg: 115,\n    nfe: true,\n  },\n  Sandshrew: {\n    types: ['Ground'],\n    bs: {hp: 50, at: 75, df: 85, sp: 40, sl: 30},\n    weightkg: 12,\n    nfe: true,\n  },\n  Sandslash: {\n    types: ['Ground'],\n    bs: {hp: 75, at: 100, df: 110, sp: 65, sl: 55},\n    weightkg: 29.5,\n  },\n  Scyther: {\n    types: ['Bug', 'Flying'],\n    bs: {hp: 70, at: 110, df: 80, sp: 105, sl: 55},\n    weightkg: 56,\n  },\n  Seadra: {types: ['Water'], bs: {hp: 55, at: 65, df: 95, sp: 85, sl: 95}, weightkg: 25},\n  // Seaking: {types: ['Water'], bs: {hp: 80, at: 92, df: 65, sp: 68, sl: 80}, weightkg: 39},\n  Seel: {\n    types: ['Water'],\n    bs: {hp: 65, at: 45, df: 55, sp: 45, sl: 70},\n    weightkg: 90,\n    nfe: true,\n  },\n  Shellder: {\n    types: ['Water'],\n    bs: {hp: 30, at: 65, df: 100, sp: 40, sl: 45},\n    weightkg: 4,\n    nfe: true,\n  },\n  Slowbro: {\n    types: ['Water', 'Psychic'],\n    bs: {hp: 95, at: 75, df: 110, sp: 30, sl: 80},\n    weightkg: 78.5,\n  },\n  Slowpoke: {\n    types: ['Water', 'Psychic'],\n    bs: {hp: 90, at: 65, df: 65, sp: 15, sl: 40},\n    weightkg: 36,\n    nfe: true,\n  },\n  Snorlax: {\n    types: ['Normal'],\n    bs: {hp: 160, at: 110, df: 65, sp: 30, sl: 65},\n    weightkg: 460,\n  },\n  // Spearow: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 40, at: 60, df: 30, sp: 70, sl: 31},\n  //   weightkg: 2,\n  //   nfe: true,\n  // },\n  Squirtle: {\n    types: ['Water'],\n    bs: {hp: 44, at: 48, df: 65, sp: 43, sl: 50},\n    weightkg: 9,\n    nfe: true,\n  },\n  // Starmie: {\n  //   types: ['Water', 'Psychic'],\n  //   bs: {hp: 60, at: 75, df: 85, sp: 115, sl: 100},\n  //   weightkg: 80,\n  // },\n  // Staryu: {\n  //   types: ['Water'],\n  //   bs: {hp: 30, at: 45, df: 55, sp: 85, sl: 70},\n  //   weightkg: 34.5,\n  //   nfe: true,\n  // },\n  // Tangela: {\n  //   types: ['Grass'],\n  //   bs: {hp: 65, at: 55, df: 115, sp: 60, sl: 100},\n  //   weightkg: 35,\n  // },\n  Tauros: {\n    types: ['Normal'],\n    bs: {hp: 75, at: 100, df: 95, sp: 110, sl: 70},\n    weightkg: 88.4,\n    gender: 'M',\n  },\n  Tentacool: {\n    types: ['Water', 'Poison'],\n    bs: {hp: 40, at: 40, df: 35, sp: 70, sl: 100},\n    weightkg: 45.5,\n    nfe: true,\n  },\n  Tentacruel: {\n    types: ['Water', 'Poison'],\n    bs: {hp: 80, at: 70, df: 65, sp: 100, sl: 120},\n    weightkg: 55,\n  },\n  Vaporeon: {\n    types: ['Water'],\n    bs: {hp: 130, at: 65, df: 60, sp: 65, sl: 110},\n    weightkg: 29,\n  },\n  Venomoth: {\n    types: ['Bug', 'Poison'],\n    bs: {hp: 70, at: 65, df: 60, sp: 90, sl: 90},\n    weightkg: 12.5,\n  },\n  Venonat: {\n    types: ['Bug', 'Poison'],\n    bs: {hp: 60, at: 55, df: 50, sp: 45, sl: 40},\n    weightkg: 30,\n    nfe: true,\n  },\n  Venusaur: {\n    types: ['Grass', 'Poison'],\n    bs: {hp: 80, at: 82, df: 83, sp: 80, sl: 100},\n    weightkg: 100,\n  },\n  Victreebel: {\n    types: ['Grass', 'Poison'],\n    bs: {hp: 80, at: 105, df: 65, sp: 70, sl: 100},\n    weightkg: 15.5,\n  },\n  Vileplume: {\n    types: ['Grass', 'Poison'],\n    bs: {hp: 75, at: 80, df: 85, sp: 50, sl: 100},\n    weightkg: 18.6,\n  },\n  Voltorb: {\n    types: ['Electric'],\n    bs: {hp: 40, at: 30, df: 50, sp: 100, sl: 55},\n    weightkg: 10.4,\n    nfe: true,\n  },\n  Vulpix: {\n    types: ['Fire'],\n    bs: {hp: 38, at: 41, df: 40, sp: 65, sl: 65},\n    weightkg: 9.9,\n    nfe: true,\n  },\n  Wartortle: {\n    types: ['Water'],\n    bs: {hp: 59, at: 63, df: 80, sp: 58, sl: 65},\n    weightkg: 22.5,\n    nfe: true,\n  },\n  // Weedle: {\n  //   types: ['Bug', 'Poison'],\n  //   bs: {hp: 40, at: 35, df: 30, sp: 50, sl: 20},\n  //   weightkg: 3.2,\n  //   nfe: true,\n  // },\n  Weepinbell: {\n    types: ['Grass', 'Poison'],\n    bs: {hp: 65, at: 90, df: 50, sp: 55, sl: 85},\n    weightkg: 6.4,\n    nfe: true,\n  },\n  Weezing: {\n    types: ['Poison'],\n    bs: {hp: 65, at: 90, df: 120, sp: 60, sl: 85},\n    weightkg: 9.5,\n  },\n  Wigglytuff: {\n    types: ['Normal'],\n    bs: {hp: 140, at: 70, df: 45, sp: 45, sl: 50},\n    weightkg: 12,\n  },\n  Zapdos: {\n    types: ['Electric', 'Flying'],\n    bs: {hp: 90, at: 90, df: 85, sp: 100, sl: 125},\n    weightkg: 52.6,\n  },\n  // Zubat: {\n  //   types: ['Poison', 'Flying'],\n  //   bs: {hp: 40, at: 45, df: 35, sp: 55, sl: 40},\n  //   weightkg: 7.5,\n  //   nfe: true,\n  // },\n};\n\nconst GSC_PATCH: {[name: string]: DeepPartial<SpeciesData>} = {\n  // gen 1 pokemon changes\n  // Abra: {bs: {sa: 105, sd: 55}},\n  // Aerodactyl: {bs: {sa: 60, sd: 75}},\n  // Alakazam: {bs: {sa: 135, sd: 85}},\n  Arbok: {bs: {sa: 65, sd: 79}},\n  Arcanine: {bs: {sa: 100, sd: 80}},\n  Articuno: {bs: {sa: 95, sd: 125}, gender: 'N'},\n  // Beedrill: {bs: {sa: 45, sd: 80}},\n  Bellsprout: {bs: {sa: 70, sd: 30}},\n  Blastoise: {bs: {sa: 85, sd: 105}},\n  Bulbasaur: {bs: {sa: 65, sd: 65}},\n  // Butterfree: {bs: {sa: 80, sd: 80}},\n  // Caterpie: {bs: {sa: 20, sd: 20}},\n  Chansey: {bs: {sa: 35, sd: 105}, nfe: true},\n  Charizard: {bs: {sa: 109, sd: 85}},\n  Charmander: {bs: {sa: 60, sd: 50}},\n  Charmeleon: {bs: {sa: 80, sd: 65}},\n  Clefable: {bs: {sa: 85, sd: 90}},\n  Clefairy: {bs: {sa: 60, sd: 65}},\n  Cloyster: {bs: {sa: 85, sd: 45}},\n  // Cubone: {bs: {sa: 40, sd: 50}},\n  Dewgong: {bs: {sa: 70, sd: 95}},\n  Diglett: {bs: {sa: 35, sd: 45}},\n  Ditto: {bs: {sa: 48, sd: 48}, gender: 'N'},\n  Dodrio: {bs: {sa: 60, sd: 60}},\n  Doduo: {bs: {sa: 35, sd: 35}},\n  Dragonair: {bs: {sa: 70, sd: 70}},\n  Dragonite: {bs: {sa: 100, sd: 100}},\n  Dratini: {bs: {sa: 50, sd: 50}},\n  Drowzee: {bs: {sa: 43, sd: 90}},\n  Dugtrio: {bs: {sa: 50, sd: 70}},\n  Eevee: {bs: {sa: 45, sd: 65}},\n  Ekans: {bs: {sa: 40, sd: 54}},\n  Electabuzz: {bs: {sa: 95, sd: 85}},\n  Electrode: {bs: {sa: 80, sd: 80}, gender: 'N'},\n  Exeggcute: {bs: {sa: 60, sd: 45}},\n  Exeggutor: {bs: {sa: 125, sd: 65}},\n  // 'Farfetch\\u2019d': {bs: {sa: 58, sd: 62}},\n  // Fearow: {bs: {sa: 61, sd: 61}},\n  Flareon: {bs: {sa: 95, sd: 110}},\n  Gastly: {bs: {sa: 100, sd: 35}},\n  Gengar: {bs: {sa: 130, sd: 75}},\n  Geodude: {bs: {sa: 30, sd: 30}},\n  Gloom: {bs: {sa: 85, sd: 75}},\n  // Golbat: {bs: {sa: 65, sd: 75}, nfe: true},\n  // Goldeen: {bs: {sa: 35, sd: 50}},\n  Golduck: {bs: {sa: 95, sd: 80}},\n  Golem: {bs: {sa: 55, sd: 65}},\n  Graveler: {bs: {sa: 45, sd: 45}},\n  Grimer: {bs: {sa: 40, sd: 50}},\n  Growlithe: {bs: {sa: 70, sd: 50}},\n  Gyarados: {bs: {sa: 60, sd: 100}},\n  Haunter: {bs: {sa: 115, sd: 55}},\n  Hitmonchan: {bs: {sa: 35, sd: 110}},\n  Hitmonlee: {bs: {sa: 35, sd: 110}},\n  Horsea: {bs: {sa: 70, sd: 25}},\n  Hypno: {bs: {sa: 73, sd: 115}},\n  Ivysaur: {bs: {sa: 80, sd: 80}},\n  Jigglypuff: {bs: {sa: 45, sd: 25}},\n  Jolteon: {bs: {sa: 110, sd: 95}},\n  // Jynx: {bs: {sa: 115, sd: 95}},\n  // Kabuto: {bs: {sa: 55, sd: 45}},\n  // Kabutops: {bs: {sa: 65, sd: 70}},\n  // Kadabra: {bs: {sa: 120, sd: 70}},\n  // Kakuna: {bs: {sa: 25, sd: 25}},\n  // Kangaskhan: {bs: {sa: 40, sd: 80}},\n  // Kingler: {bs: {sa: 50, sd: 50}},\n  Koffing: {bs: {sa: 60, sd: 45}},\n  // Krabby: {bs: {sa: 25, sd: 25}},\n  Lapras: {bs: {sa: 85, sd: 95}},\n  // Lickitung: {bs: {sa: 60, sd: 75}},\n  // Machamp: {bs: {sa: 65, sd: 85}},\n  // Machoke: {bs: {sa: 50, sd: 60}},\n  // Machop: {bs: {sa: 35, sd: 35}},\n  Magikarp: {bs: {sa: 15, sd: 20}},\n  Magmar: {bs: {sa: 100, sd: 85}},\n  Magnemite: {types: ['Electric', 'Steel'], bs: {sa: 95, sd: 55}, gender: 'N'},\n  Magneton: {types: ['Electric', 'Steel'], bs: {sa: 120, sd: 70}, gender: 'N'},\n  Mankey: {bs: {sa: 35, sd: 45}},\n  // Marowak: {bs: {sa: 50, sd: 80}},\n  Meowth: {bs: {sa: 40, sd: 40}},\n  // Metapod: {bs: {sa: 25, sd: 25}},\n  Mew: {bs: {sa: 100, sd: 100}, gender: 'N'},\n  Mewtwo: {bs: {sa: 154, sd: 90}, gender: 'N'},\n  Moltres: {bs: {sa: 125, sd: 85}, gender: 'N'},\n  // 'Mr. Mime': {bs: {sa: 100, sd: 120}},\n  Muk: {bs: {sa: 65, sd: 100}},\n  // Nidoking: {bs: {sa: 85, sd: 75}},\n  // Nidoqueen: {bs: {sa: 75, sd: 85}},\n  // 'Nidoran-F': {bs: {sa: 40, sd: 40}},\n  // 'Nidoran-M': {bs: {sa: 40, sd: 40}},\n  // Nidorina: {bs: {sa: 55, sd: 55}},\n  // Nidorino: {bs: {sa: 55, sd: 55}},\n  Ninetales: {bs: {sa: 81, sd: 100}},\n  Oddish: {bs: {sa: 75, sd: 65}},\n  // Omanyte: {bs: {sa: 90, sd: 55}},\n  // Omastar: {bs: {sa: 115, sd: 70}},\n  // Onix: {bs: {sa: 30, sd: 45}, nfe: true},\n  // Paras: {bs: {sa: 45, sd: 55}},\n  // Parasect: {bs: {sa: 60, sd: 80}},\n  Persian: {bs: {sa: 65, sd: 65}},\n  // Pidgeot: {bs: {sa: 70, sd: 70}},\n  // Pidgeotto: {bs: {sa: 50, sd: 50}},\n  // Pidgey: {bs: {sa: 35, sd: 35}},\n  Pikachu: {bs: {sa: 50, sd: 40}},\n  // Pinsir: {bs: {sa: 55, sd: 70}},\n  Poliwag: {bs: {sa: 40, sd: 40}},\n  Poliwhirl: {bs: {sa: 50, sd: 50}},\n  Poliwrath: {bs: {sa: 70, sd: 90}},\n  // Ponyta: {bs: {sa: 65, sd: 65}},\n  Porygon: {bs: {sa: 85, sd: 75}, nfe: true, gender: 'N'},\n  Primeape: {bs: {sa: 60, sd: 70}},\n  Psyduck: {bs: {sa: 65, sd: 50}},\n  Raichu: {bs: {sa: 90, sd: 80}},\n  // Rapidash: {bs: {sa: 80, sd: 80}},\n  // Raticate: {bs: {sa: 50, sd: 70}},\n  // Rattata: {bs: {sa: 25, sd: 35}},\n  Rhydon: {bs: {sa: 45, sd: 45}},\n  Rhyhorn: {bs: {sa: 30, sd: 30}},\n  Sandshrew: {bs: {sa: 20, sd: 30}},\n  Sandslash: {bs: {sa: 45, sd: 55}},\n  Scyther: {bs: {sa: 55, sd: 80}, nfe: true},\n  Seadra: {bs: {sa: 95, sd: 45}, nfe: true},\n  // Seaking: {bs: {sa: 65, sd: 80}},\n  Seel: {bs: {sa: 45, sd: 70}},\n  Shellder: {bs: {sa: 45, sd: 25}},\n  Slowbro: {bs: {sa: 100, sd: 80}},\n  Slowpoke: {bs: {sa: 40, sd: 40}},\n  Snorlax: {bs: {sa: 65, sd: 110}},\n  // Spearow: {bs: {sa: 31, sd: 31}},\n  Squirtle: {bs: {sa: 50, sd: 64}},\n  // Starmie: {bs: {sa: 100, sd: 85}, gender: 'N'},\n  // Staryu: {bs: {sa: 70, sd: 55}, gender: 'N'},\n  // Tangela: {bs: {sa: 100, sd: 40}},\n  Tauros: {bs: {sa: 40, sd: 70}},\n  Tentacool: {bs: {sa: 50, sd: 100}},\n  Tentacruel: {bs: {sa: 80, sd: 120}},\n  Vaporeon: {bs: {sa: 110, sd: 95}},\n  Venomoth: {bs: {sa: 90, sd: 75}},\n  Venonat: {bs: {sa: 40, sd: 55}},\n  Venusaur: {bs: {sa: 100, sd: 100}},\n  Victreebel: {bs: {sa: 100, sd: 60}},\n  Vileplume: {bs: {sa: 100, sd: 90}},\n  Voltorb: {bs: {sa: 55, sd: 55}, gender: 'N'},\n  Vulpix: {bs: {sa: 50, sd: 65}},\n  Wartortle: {bs: {sa: 65, sd: 80}},\n  // Weedle: {bs: {sa: 20, sd: 20}},\n  Weepinbell: {bs: {sa: 85, sd: 45}},\n  Weezing: {bs: {sa: 85, sd: 70}},\n  Wigglytuff: {bs: {sa: 75, sd: 50}},\n  Zapdos: {bs: {sa: 125, sd: 90}, gender: 'N'},\n  // Zubat: {bs: {sa: 30, sd: 40}},\n  // gen 2 pokemon\n  Aipom: {types: ['Normal'], bs: {hp: 55, at: 70, df: 55, sa: 40, sd: 55, sp: 85}, weightkg: 11.5},\n  Ampharos: {\n    types: ['Electric'],\n    bs: {hp: 90, at: 75, df: 75, sa: 115, sd: 90, sp: 55},\n    weightkg: 61.5,\n  },\n  Ariados: {\n    types: ['Bug', 'Poison'],\n    bs: {hp: 70, at: 90, df: 70, sa: 60, sd: 60, sp: 40},\n    weightkg: 33.5,\n  },\n  Azumarill: {\n    types: ['Water'],\n    bs: {hp: 100, at: 50, df: 80, sa: 50, sd: 80, sp: 50},\n    weightkg: 28.5,\n  },\n  Bayleef: {\n    types: ['Grass'],\n    bs: {hp: 60, at: 62, df: 80, sa: 63, sd: 80, sp: 60},\n    weightkg: 15.8,\n    nfe: true,\n  },\n  Bellossom: {\n    types: ['Grass'],\n    bs: {hp: 75, at: 80, df: 85, sa: 90, sd: 100, sp: 50},\n    weightkg: 5.8,\n  },\n  Blissey: {\n    types: ['Normal'],\n    bs: {hp: 255, at: 10, df: 10, sa: 75, sd: 135, sp: 55},\n    weightkg: 46.8,\n    gender: 'F',\n  },\n  // Celebi: {\n  //   types: ['Psychic', 'Grass'],\n  //   bs: {hp: 100, at: 100, df: 100, sa: 100, sd: 100, sp: 100},\n  //   weightkg: 5,\n  //   gender: 'N',\n  // },\n  Chikorita: {\n    types: ['Grass'],\n    bs: {hp: 45, at: 49, df: 65, sa: 49, sd: 65, sp: 45},\n    weightkg: 6.4,\n    nfe: true,\n  },\n  Chinchou: {\n    types: ['Water', 'Electric'],\n    bs: {hp: 75, at: 38, df: 38, sa: 56, sd: 56, sp: 67},\n    weightkg: 12,\n    nfe: true,\n  },\n  Cleffa: {\n    types: ['Normal'],\n    bs: {hp: 50, at: 25, df: 28, sa: 45, sd: 55, sp: 15},\n    weightkg: 3,\n    nfe: true,\n  },\n  // Corsola: {\n  //   types: ['Water', 'Rock'],\n  //   bs: {hp: 55, at: 55, df: 85, sa: 65, sd: 85, sp: 35},\n  //   weightkg: 5,\n  // },\n  // Crobat: {\n  //   types: ['Poison', 'Flying'],\n  //   bs: {hp: 85, at: 90, df: 80, sa: 70, sd: 80, sp: 130},\n  //   weightkg: 75,\n  // },\n  Croconaw: {\n    types: ['Water'],\n    bs: {hp: 65, at: 80, df: 80, sa: 59, sd: 63, sp: 58},\n    weightkg: 25,\n    nfe: true,\n  },\n  Cyndaquil: {\n    types: ['Fire'],\n    bs: {hp: 39, at: 52, df: 43, sa: 60, sd: 50, sp: 65},\n    weightkg: 7.9,\n    nfe: true,\n  },\n  Delibird: {\n    types: ['Ice', 'Flying'],\n    bs: {hp: 45, at: 55, df: 45, sa: 65, sd: 45, sp: 75},\n    weightkg: 16,\n  },\n  Donphan: {\n    types: ['Ground'],\n    bs: {hp: 90, at: 120, df: 120, sa: 60, sd: 60, sp: 50},\n    weightkg: 120,\n  },\n  Dunsparce: {\n    types: ['Normal'],\n    bs: {hp: 100, at: 70, df: 70, sa: 65, sd: 65, sp: 45},\n    weightkg: 14,\n  },\n  Elekid: {\n    types: ['Electric'],\n    bs: {hp: 45, at: 63, df: 37, sa: 65, sd: 55, sp: 95},\n    weightkg: 23.5,\n    nfe: true,\n  },\n  Entei: {\n    types: ['Fire'],\n    bs: {hp: 115, at: 115, df: 85, sa: 90, sd: 75, sp: 100},\n    weightkg: 198,\n    gender: 'N',\n  },\n  Espeon: {\n    types: ['Psychic'],\n    bs: {hp: 65, at: 65, df: 60, sa: 130, sd: 95, sp: 110},\n    weightkg: 26.5,\n  },\n  Feraligatr: {\n    types: ['Water'],\n    bs: {hp: 85, at: 105, df: 100, sa: 79, sd: 83, sp: 78},\n    weightkg: 88.8,\n  },\n  Flaaffy: {\n    types: ['Electric'],\n    bs: {hp: 70, at: 55, df: 55, sa: 80, sd: 60, sp: 45},\n    weightkg: 13.3,\n    nfe: true,\n  },\n  Forretress: {\n    types: ['Bug', 'Steel'],\n    bs: {hp: 75, at: 90, df: 140, sa: 60, sd: 60, sp: 40},\n    weightkg: 125.8,\n  },\n  Furret: {types: ['Normal'], bs: {hp: 85, at: 76, df: 64, sa: 45, sd: 55, sp: 90}, weightkg: 32.5},\n  Girafarig: {\n    types: ['Normal', 'Psychic'],\n    bs: {hp: 70, at: 80, df: 65, sa: 90, sd: 65, sp: 85},\n    weightkg: 41.5,\n  },\n  Gligar: {\n    types: ['Ground', 'Flying'],\n    bs: {hp: 65, at: 75, df: 105, sa: 35, sd: 65, sp: 85},\n    weightkg: 64.8,\n  },\n  Granbull: {\n    types: ['Normal'],\n    bs: {hp: 90, at: 120, df: 75, sa: 60, sd: 60, sp: 45},\n    weightkg: 48.7,\n  },\n  Heracross: {\n    types: ['Bug', 'Fighting'],\n    bs: {hp: 80, at: 125, df: 75, sa: 40, sd: 95, sp: 85},\n    weightkg: 54,\n  },\n  Hitmontop: {\n    types: ['Fighting'],\n    bs: {hp: 50, at: 95, df: 95, sa: 35, sd: 110, sp: 70},\n    weightkg: 48,\n    gender: 'M',\n  },\n  'Ho-Oh': {\n    types: ['Fire', 'Flying'],\n    bs: {hp: 106, at: 130, df: 90, sa: 110, sd: 154, sp: 90},\n    weightkg: 199,\n    gender: 'N',\n  },\n  Hoothoot: {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 60, at: 30, df: 30, sa: 36, sd: 56, sp: 50},\n    weightkg: 21.2,\n    nfe: true,\n  },\n  Hoppip: {\n    types: ['Grass', 'Flying'],\n    bs: {hp: 35, at: 35, df: 40, sa: 35, sd: 55, sp: 50},\n    weightkg: 0.5,\n    nfe: true,\n  },\n  Houndoom: {\n    types: ['Dark', 'Fire'],\n    bs: {hp: 75, at: 90, df: 50, sa: 110, sd: 80, sp: 95},\n    weightkg: 35,\n  },\n  Houndour: {\n    types: ['Dark', 'Fire'],\n    bs: {hp: 45, at: 60, df: 30, sa: 80, sd: 50, sp: 65},\n    weightkg: 10.8,\n    nfe: true,\n  },\n  Igglybuff: {\n    types: ['Normal'],\n    bs: {hp: 90, at: 30, df: 15, sa: 40, sd: 20, sp: 15},\n    weightkg: 1,\n    nfe: true,\n  },\n  Jumpluff: {\n    types: ['Grass', 'Flying'],\n    bs: {hp: 75, at: 55, df: 70, sa: 55, sd: 85, sp: 110},\n    weightkg: 3,\n  },\n  Kingdra: {\n    types: ['Water', 'Dragon'],\n    bs: {hp: 75, at: 95, df: 95, sa: 95, sd: 95, sp: 85},\n    weightkg: 152,\n  },\n  Lanturn: {\n    types: ['Water', 'Electric'],\n    bs: {hp: 125, at: 58, df: 58, sa: 76, sd: 76, sp: 67},\n    weightkg: 22.5,\n  },\n  Larvitar: {\n    types: ['Rock', 'Ground'],\n    bs: {hp: 50, at: 64, df: 50, sa: 45, sd: 50, sp: 41},\n    weightkg: 72,\n    nfe: true,\n  },\n  // Ledian: {\n  //   types: ['Bug', 'Flying'],\n  //   bs: {hp: 55, at: 35, df: 50, sa: 55, sd: 110, sp: 85},\n  //   weightkg: 35.6,\n  // },\n  // Ledyba: {\n  //   types: ['Bug', 'Flying'],\n  //   bs: {hp: 40, at: 20, df: 30, sa: 40, sd: 80, sp: 55},\n  //   weightkg: 10.8,\n  //   nfe: true,\n  // },\n  Lugia: {\n    types: ['Psychic', 'Flying'],\n    bs: {hp: 106, at: 90, df: 130, sa: 90, sd: 154, sp: 110},\n    weightkg: 216,\n    gender: 'N',\n  },\n  Magby: {\n    types: ['Fire'],\n    bs: {hp: 45, at: 75, df: 37, sa: 70, sd: 55, sp: 83},\n    weightkg: 21.4,\n    nfe: true,\n  },\n  Magcargo: {\n    types: ['Fire', 'Rock'],\n    bs: {hp: 50, at: 50, df: 120, sa: 80, sd: 80, sp: 30},\n    weightkg: 55,\n  },\n  // Mantine: {\n  //   types: ['Water', 'Flying'],\n  //   bs: {hp: 65, at: 40, df: 70, sa: 80, sd: 140, sp: 70},\n  //   weightkg: 220,\n  // },\n  Mareep: {\n    types: ['Electric'],\n    bs: {hp: 55, at: 40, df: 40, sa: 65, sd: 45, sp: 35},\n    weightkg: 7.8,\n    nfe: true,\n  },\n  Marill: {\n    types: ['Water'],\n    bs: {hp: 70, at: 20, df: 50, sa: 20, sd: 50, sp: 40},\n    weightkg: 8.5,\n    nfe: true,\n  },\n  Meganium: {\n    types: ['Grass'],\n    bs: {hp: 80, at: 82, df: 100, sa: 83, sd: 100, sp: 80},\n    weightkg: 100.5,\n  },\n  // Miltank: {\n  //   types: ['Normal'],\n  //   bs: {hp: 95, at: 80, df: 105, sa: 40, sd: 70, sp: 100},\n  //   weightkg: 75.5,\n  // },\n  Misdreavus: {\n    types: ['Ghost'],\n    bs: {hp: 60, at: 60, df: 60, sa: 85, sd: 85, sp: 85},\n    weightkg: 1,\n  },\n  Murkrow: {\n    types: ['Dark', 'Flying'],\n    bs: {hp: 60, at: 85, df: 42, sa: 85, sd: 42, sp: 91},\n    weightkg: 2.1,\n  },\n  // Natu: {\n  //   types: ['Psychic', 'Flying'],\n  //   bs: {hp: 40, at: 50, df: 45, sa: 70, sd: 45, sp: 70},\n  //   weightkg: 2,\n  //   nfe: true,\n  // },\n  Noctowl: {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 100, at: 50, df: 50, sa: 76, sd: 96, sp: 70},\n    weightkg: 40.8,\n  },\n  // Octillery: {\n  //   types: ['Water'],\n  //   bs: {hp: 75, at: 105, df: 75, sa: 105, sd: 75, sp: 45},\n  //   weightkg: 28.5,\n  // },\n  Phanpy: {\n    types: ['Ground'],\n    bs: {hp: 90, at: 60, df: 60, sa: 40, sd: 40, sp: 40},\n    weightkg: 33.5,\n    nfe: true,\n  },\n  Pichu: {\n    types: ['Electric'],\n    bs: {hp: 20, at: 40, df: 15, sa: 35, sd: 35, sp: 60},\n    weightkg: 2,\n    nfe: true,\n  },\n  Piloswine: {\n    types: ['Ice', 'Ground'],\n    bs: {hp: 100, at: 100, df: 80, sa: 60, sd: 60, sp: 50},\n    weightkg: 55.8,\n  },\n  Pineco: {\n    types: ['Bug'],\n    bs: {hp: 50, at: 65, df: 90, sa: 35, sd: 35, sp: 15},\n    weightkg: 7.2,\n    nfe: true,\n  },\n  Politoed: {\n    types: ['Water'],\n    bs: {hp: 90, at: 75, df: 75, sa: 90, sd: 100, sp: 70},\n    weightkg: 33.9,\n  },\n  Porygon2: {\n    types: ['Normal'],\n    bs: {hp: 85, at: 80, df: 90, sa: 105, sd: 95, sp: 60},\n    weightkg: 32.5,\n    gender: 'N',\n  },\n  Pupitar: {\n    types: ['Rock', 'Ground'],\n    bs: {hp: 70, at: 84, df: 70, sa: 65, sd: 70, sp: 51},\n    weightkg: 152,\n    nfe: true,\n  },\n  Quagsire: {\n    types: ['Water', 'Ground'],\n    bs: {hp: 95, at: 85, df: 85, sa: 65, sd: 65, sp: 35},\n    weightkg: 75,\n  },\n  Quilava: {\n    types: ['Fire'],\n    bs: {hp: 58, at: 64, df: 58, sa: 80, sd: 65, sp: 80},\n    weightkg: 19,\n    nfe: true,\n  },\n  Qwilfish: {\n    types: ['Water', 'Poison'],\n    bs: {hp: 65, at: 95, df: 75, sa: 55, sd: 55, sp: 85},\n    weightkg: 3.9,\n  },\n  Raikou: {\n    types: ['Electric'],\n    bs: {hp: 90, at: 85, df: 75, sa: 115, sd: 100, sp: 115},\n    weightkg: 178,\n    gender: 'N',\n  },\n  // Remoraid: {\n  //   types: ['Water'],\n  //   bs: {hp: 35, at: 65, df: 35, sa: 65, sd: 35, sp: 65},\n  //   weightkg: 12,\n  //   nfe: true,\n  // },\n  Scizor: {\n    types: ['Bug', 'Steel'],\n    bs: {hp: 70, at: 130, df: 100, sa: 55, sd: 80, sp: 65},\n    weightkg: 118,\n  },\n  Sentret: {\n    types: ['Normal'],\n    bs: {hp: 35, at: 46, df: 34, sa: 35, sd: 45, sp: 20},\n    weightkg: 6,\n    nfe: true,\n  },\n  // Shuckle: {\n  //   types: ['Bug', 'Rock'],\n  //   bs: {hp: 20, at: 10, df: 230, sa: 10, sd: 230, sp: 5},\n  //   weightkg: 20.5,\n  // },\n  Skarmory: {\n    types: ['Steel', 'Flying'],\n    bs: {hp: 65, at: 80, df: 140, sa: 40, sd: 70, sp: 70},\n    weightkg: 50.5,\n  },\n  Skiploom: {\n    types: ['Grass', 'Flying'],\n    bs: {hp: 55, at: 45, df: 50, sa: 45, sd: 65, sp: 80},\n    weightkg: 1,\n    nfe: true,\n  },\n  Slowking: {\n    types: ['Water', 'Psychic'],\n    bs: {hp: 95, at: 75, df: 80, sa: 100, sd: 110, sp: 30},\n    weightkg: 79.5,\n  },\n  Slugma: {\n    types: ['Fire'],\n    bs: {hp: 40, at: 40, df: 40, sa: 70, sd: 40, sp: 20},\n    weightkg: 35,\n    nfe: true,\n  },\n  Smeargle: {types: ['Normal'], bs: {hp: 55, at: 20, df: 35, sa: 20, sd: 45, sp: 75}, weightkg: 58},\n  // Smoochum: {\n  //   types: ['Ice', 'Psychic'],\n  //   bs: {hp: 45, at: 30, df: 15, sa: 85, sd: 65, sp: 65},\n  //   weightkg: 6,\n  //   nfe: true,\n  // },\n  Sneasel: {\n    types: ['Dark', 'Ice'],\n    bs: {hp: 55, at: 95, df: 55, sa: 35, sd: 75, sp: 115},\n    weightkg: 28,\n  },\n  Snubbull: {\n    types: ['Normal'],\n    bs: {hp: 60, at: 80, df: 50, sa: 40, sd: 40, sp: 30},\n    weightkg: 7.8,\n    nfe: true,\n  },\n  Spinarak: {\n    types: ['Bug', 'Poison'],\n    bs: {hp: 40, at: 60, df: 40, sa: 40, sd: 40, sp: 30},\n    weightkg: 8.5,\n    nfe: true,\n  },\n  Stantler: {\n    types: ['Normal'],\n    bs: {hp: 73, at: 95, df: 62, sa: 85, sd: 65, sp: 85},\n    weightkg: 71.2,\n  },\n  // Steelix: {\n  //   types: ['Steel', 'Ground'],\n  //   bs: {hp: 75, at: 85, df: 200, sa: 55, sd: 65, sp: 30},\n  //   weightkg: 400,\n  // },\n  Sudowoodo: {\n    types: ['Rock'],\n    bs: {hp: 70, at: 100, df: 115, sa: 30, sd: 65, sp: 30},\n    weightkg: 38,\n  },\n  Suicune: {\n    types: ['Water'],\n    bs: {hp: 100, at: 75, df: 115, sa: 90, sd: 115, sp: 85},\n    weightkg: 187,\n    gender: 'N',\n  },\n  Sunflora: {\n    types: ['Grass'],\n    bs: {hp: 75, at: 75, df: 55, sa: 105, sd: 85, sp: 30},\n    weightkg: 8.5,\n  },\n  Sunkern: {\n    types: ['Grass'],\n    bs: {hp: 30, at: 30, df: 30, sa: 30, sd: 30, sp: 30},\n    weightkg: 1.8,\n    nfe: true,\n  },\n  Swinub: {\n    types: ['Ice', 'Ground'],\n    bs: {hp: 50, at: 50, df: 40, sa: 30, sd: 30, sp: 50},\n    weightkg: 6.5,\n    nfe: true,\n  },\n  Teddiursa: {\n    types: ['Normal'],\n    bs: {hp: 60, at: 80, df: 50, sa: 50, sd: 50, sp: 40},\n    weightkg: 8.8,\n    nfe: true,\n  },\n  // Togepi: {\n  //   types: ['Normal'],\n  //   bs: {hp: 35, at: 20, df: 65, sa: 40, sd: 65, sp: 20},\n  //   weightkg: 1.5,\n  //   nfe: true,\n  // },\n  // Togetic: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 55, at: 40, df: 85, sa: 80, sd: 105, sp: 40},\n  //   weightkg: 3.2,\n  // },\n  Totodile: {\n    types: ['Water'],\n    bs: {hp: 50, at: 65, df: 64, sa: 44, sd: 48, sp: 43},\n    weightkg: 9.5,\n    nfe: true,\n  },\n  Typhlosion: {\n    types: ['Fire'],\n    bs: {hp: 78, at: 84, df: 78, sa: 109, sd: 85, sp: 100},\n    weightkg: 79.5,\n  },\n  Tyranitar: {\n    types: ['Rock', 'Dark'],\n    bs: {hp: 100, at: 134, df: 110, sa: 95, sd: 100, sp: 61},\n    weightkg: 202,\n  },\n  Tyrogue: {\n    types: ['Fighting'],\n    bs: {hp: 35, at: 35, df: 35, sa: 35, sd: 35, sp: 35},\n    weightkg: 21,\n    nfe: true,\n    gender: 'M',\n  },\n  Umbreon: {types: ['Dark'], bs: {hp: 95, at: 65, df: 110, sa: 60, sd: 130, sp: 65}, weightkg: 27},\n  // Unown: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 48, at: 72, df: 48, sa: 72, sd: 48, sp: 48},\n  //   weightkg: 5,\n  //   gender: 'N',\n  // },\n  Ursaring: {\n    types: ['Normal'],\n    bs: {hp: 90, at: 130, df: 75, sa: 75, sd: 75, sp: 55},\n    weightkg: 125.8,\n  },\n  // Wobbuffet: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 190, at: 33, df: 58, sa: 33, sd: 58, sp: 33},\n  //   weightkg: 28.5,\n  // },\n  Wooper: {\n    types: ['Water', 'Ground'],\n    bs: {hp: 55, at: 45, df: 45, sa: 25, sd: 25, sp: 15},\n    weightkg: 8.5,\n    nfe: true,\n  },\n  // Xatu: {\n  //   types: ['Psychic', 'Flying'],\n  //   bs: {hp: 65, at: 75, df: 70, sa: 95, sd: 70, sp: 95},\n  //   weightkg: 15,\n  // },\n  Yanma: {\n    types: ['Bug', 'Flying'],\n    bs: {hp: 65, at: 65, df: 45, sa: 75, sd: 45, sp: 95},\n    weightkg: 38,\n  },\n};\nconst GSC: {[name: string]: SpeciesData} = extend(true, {}, RBY, GSC_PATCH);\n\nconst ADV_PATCH: {[name: string]: DeepPartial<SpeciesData>} = {\n  // gen 1 pokemon changes\n  // Abra: {abilities: {0: 'Synchronize'}},\n  // Aerodactyl: {abilities: {0: 'Rock Head'}},\n  // Alakazam: {abilities: {0: 'Synchronize'}},\n  Arbok: {abilities: {0: 'Intimidate'}},\n  Arcanine: {abilities: {0: 'Intimidate'}},\n  Articuno: {abilities: {0: 'Pressure'}},\n  // Beedrill: {abilities: {0: 'Swarm'}},\n  Bellsprout: {abilities: {0: 'Chlorophyll'}},\n  Blastoise: {abilities: {0: 'Torrent'}},\n  Bulbasaur: {abilities: {0: 'Overgrow'}},\n  // Butterfree: {abilities: {0: 'Compound Eyes'}},\n  // Caterpie: {abilities: {0: 'Shield Dust'}},\n  Chansey: {abilities: {0: 'Natural Cure'}},\n  Charizard: {abilities: {0: 'Blaze'}},\n  Charmander: {abilities: {0: 'Blaze'}},\n  Charmeleon: {abilities: {0: 'Blaze'}},\n  Clefable: {abilities: {0: 'Cute Charm'}},\n  Clefairy: {abilities: {0: 'Cute Charm'}},\n  Cloyster: {abilities: {0: 'Shell Armor'}},\n  // Cubone: {abilities: {0: 'Rock Head'}},\n  Dewgong: {abilities: {0: 'Thick Fat'}},\n  Diglett: {abilities: {0: 'Sand Veil'}},\n  Ditto: {abilities: {0: 'Limber'}},\n  Dodrio: {abilities: {0: 'Run Away'}},\n  Doduo: {abilities: {0: 'Run Away'}},\n  Dragonair: {abilities: {0: 'Shed Skin'}},\n  Dragonite: {abilities: {0: 'Inner Focus'}},\n  Dratini: {abilities: {0: 'Shed Skin'}},\n  Drowzee: {abilities: {0: 'Insomnia'}},\n  Dugtrio: {abilities: {0: 'Sand Veil'}},\n  Eevee: {abilities: {0: 'Run Away'}},\n  Ekans: {abilities: {0: 'Intimidate'}},\n  Electabuzz: {abilities: {0: 'Static'}},\n  Electrode: {abilities: {0: 'Soundproof'}},\n  Exeggcute: {abilities: {0: 'Chlorophyll'}},\n  Exeggutor: {abilities: {0: 'Chlorophyll'}},\n  // 'Farfetch\\u2019d': {abilities: {0: 'Keen Eye'}},\n  // Fearow: {abilities: {0: 'Keen Eye'}},\n  Flareon: {abilities: {0: 'Flash Fire'}},\n  Gastly: {abilities: {0: 'Levitate'}},\n  Gengar: {abilities: {0: 'Levitate'}},\n  Geodude: {abilities: {0: 'Rock Head'}},\n  Gloom: {abilities: {0: 'Chlorophyll'}},\n  // Golbat: {abilities: {0: 'Inner Focus'}},\n  // Goldeen: {abilities: {0: 'Swift Swim'}},\n  Golduck: {abilities: {0: 'Damp'}},\n  Golem: {abilities: {0: 'Rock Head'}},\n  Graveler: {abilities: {0: 'Rock Head'}},\n  Grimer: {abilities: {0: 'Stench'}},\n  Growlithe: {abilities: {0: 'Intimidate'}},\n  Gyarados: {abilities: {0: 'Intimidate'}},\n  Haunter: {abilities: {0: 'Levitate'}},\n  Hitmonchan: {abilities: {0: 'Keen Eye'}},\n  Hitmonlee: {abilities: {0: 'Limber'}},\n  Horsea: {abilities: {0: 'Swift Swim'}},\n  Hypno: {abilities: {0: 'Insomnia'}},\n  Ivysaur: {abilities: {0: 'Overgrow'}},\n  Jigglypuff: {abilities: {0: 'Cute Charm'}},\n  Jolteon: {abilities: {0: 'Volt Absorb'}},\n  // Jynx: {abilities: {0: 'Oblivious'}},\n  // Kabuto: {abilities: {0: 'Swift Swim'}},\n  // Kabutops: {abilities: {0: 'Swift Swim'}},\n  // Kadabra: {abilities: {0: 'Synchronize'}},\n  // Kakuna: {abilities: {0: 'Shed Skin'}},\n  // Kangaskhan: {abilities: {0: 'Early Bird'}},\n  // Kingler: {abilities: {0: 'Hyper Cutter'}},\n  Koffing: {abilities: {0: 'Levitate'}},\n  // Krabby: {abilities: {0: 'Hyper Cutter'}},\n  Lapras: {abilities: {0: 'Water Absorb'}},\n  // Lickitung: {abilities: {0: 'Own Tempo'}},\n  // Machamp: {abilities: {0: 'Guts'}},\n  // Machoke: {abilities: {0: 'Guts'}},\n  // Machop: {abilities: {0: 'Guts'}},\n  Magikarp: {abilities: {0: 'Swift Swim'}},\n  Magmar: {abilities: {0: 'Flame Body'}},\n  Magnemite: {abilities: {0: 'Magnet Pull'}},\n  Magneton: {abilities: {0: 'Magnet Pull'}},\n  Mankey: {abilities: {0: 'Vital Spirit'}},\n  // Marowak: {abilities: {0: 'Rock Head'}},\n  Meowth: {abilities: {0: 'Pickup'}},\n  // Metapod: {abilities: {0: 'Shed Skin'}},\n  Mew: {abilities: {0: 'Synchronize'}},\n  Mewtwo: {abilities: {0: 'Pressure'}},\n  Moltres: {abilities: {0: 'Pressure'}},\n  // 'Mr. Mime': {abilities: {0: 'Soundproof'}},\n  Muk: {abilities: {0: 'Stench'}},\n  // Nidoking: {abilities: {0: 'Poison Point'}},\n  // Nidoqueen: {abilities: {0: 'Poison Point'}},\n  // 'Nidoran-F': {abilities: {0: 'Poison Point'}},\n  // 'Nidoran-M': {abilities: {0: 'Poison Point'}},\n  // Nidorina: {abilities: {0: 'Poison Point'}},\n  // Nidorino: {abilities: {0: 'Poison Point'}},\n  Ninetales: {abilities: {0: 'Flash Fire'}},\n  Oddish: {abilities: {0: 'Chlorophyll'}},\n  // Omanyte: {abilities: {0: 'Swift Swim'}},\n  // Omastar: {abilities: {0: 'Swift Swim'}},\n  // Onix: {abilities: {0: 'Rock Head'}},\n  // Paras: {abilities: {0: 'Effect Spore'}},\n  // Parasect: {abilities: {0: 'Effect Spore'}},\n  Persian: {abilities: {0: 'Limber'}},\n  // Pidgeot: {abilities: {0: 'Keen Eye'}},\n  // Pidgeotto: {abilities: {0: 'Keen Eye'}},\n  // Pidgey: {abilities: {0: 'Keen Eye'}},\n  Pikachu: {abilities: {0: 'Static'}},\n  // Pinsir: {abilities: {0: 'Hyper Cutter'}},\n  Poliwag: {abilities: {0: 'Water Absorb'}},\n  Poliwhirl: {abilities: {0: 'Water Absorb'}},\n  Poliwrath: {abilities: {0: 'Water Absorb'}},\n  // Ponyta: {abilities: {0: 'Run Away'}},\n  Porygon: {abilities: {0: 'Trace'}},\n  Primeape: {abilities: {0: 'Vital Spirit'}},\n  Psyduck: {abilities: {0: 'Damp'}},\n  Raichu: {abilities: {0: 'Static'}},\n  // Rapidash: {abilities: {0: 'Run Away'}},\n  // Raticate: {abilities: {0: 'Run Away'}},\n  // Rattata: {abilities: {0: 'Run Away'}},\n  Rhydon: {abilities: {0: 'Lightning Rod'}},\n  Rhyhorn: {abilities: {0: 'Lightning Rod'}},\n  Sandshrew: {abilities: {0: 'Sand Veil'}},\n  Sandslash: {abilities: {0: 'Sand Veil'}},\n  Scyther: {abilities: {0: 'Swarm'}},\n  Seadra: {abilities: {0: 'Poison Point'}},\n  // Seaking: {abilities: {0: 'Swift Swim'}},\n  Seel: {abilities: {0: 'Thick Fat'}},\n  Shellder: {abilities: {0: 'Shell Armor'}},\n  Slowbro: {abilities: {0: 'Oblivious'}},\n  Slowpoke: {abilities: {0: 'Oblivious'}},\n  Snorlax: {abilities: {0: 'Immunity'}},\n  // Spearow: {abilities: {0: 'Keen Eye'}},\n  Squirtle: {abilities: {0: 'Torrent'}},\n  // Starmie: {abilities: {0: 'Illuminate'}},\n  // Staryu: {abilities: {0: 'Illuminate'}},\n  // Tangela: {abilities: {0: 'Chlorophyll'}},\n  Tauros: {abilities: {0: 'Intimidate'}},\n  Tentacool: {abilities: {0: 'Clear Body'}},\n  Tentacruel: {abilities: {0: 'Clear Body'}},\n  Vaporeon: {abilities: {0: 'Water Absorb'}},\n  Venomoth: {abilities: {0: 'Shield Dust'}},\n  Venonat: {abilities: {0: 'Compound Eyes'}},\n  Venusaur: {abilities: {0: 'Overgrow'}},\n  Victreebel: {abilities: {0: 'Chlorophyll'}},\n  Vileplume: {abilities: {0: 'Chlorophyll'}},\n  Voltorb: {abilities: {0: 'Soundproof'}},\n  Vulpix: {abilities: {0: 'Flash Fire'}},\n  Wartortle: {abilities: {0: 'Torrent'}},\n  // Weedle: {abilities: {0: 'Shield Dust'}},\n  Weepinbell: {abilities: {0: 'Chlorophyll'}},\n  Weezing: {abilities: {0: 'Levitate'}},\n  Wigglytuff: {abilities: {0: 'Cute Charm'}},\n  Zapdos: {abilities: {0: 'Pressure'}},\n  // Zubat: {abilities: {0: 'Inner Focus'}},\n  // gen 2 pokemon changes\n  Aipom: {abilities: {0: 'Run Away'}},\n  Ampharos: {abilities: {0: 'Static'}},\n  Ariados: {abilities: {0: 'Swarm'}},\n  Azumarill: {abilities: {0: 'Thick Fat'}},\n  Bayleef: {abilities: {0: 'Overgrow'}},\n  Bellossom: {abilities: {0: 'Chlorophyll'}},\n  Blissey: {abilities: {0: 'Natural Cure'}},\n  // Celebi: {abilities: {0: 'Natural Cure'}},\n  Chikorita: {abilities: {0: 'Overgrow'}},\n  Chinchou: {abilities: {0: 'Volt Absorb'}},\n  Cleffa: {abilities: {0: 'Cute Charm'}},\n  // Corsola: {abilities: {0: 'Hustle'}},\n  // Crobat: {abilities: {0: 'Inner Focus'}},\n  Croconaw: {abilities: {0: 'Torrent'}},\n  Cyndaquil: {abilities: {0: 'Blaze'}},\n  Delibird: {abilities: {0: 'Vital Spirit'}},\n  Donphan: {abilities: {0: 'Sturdy'}},\n  Dunsparce: {abilities: {0: 'Serene Grace'}},\n  Elekid: {abilities: {0: 'Static'}},\n  Entei: {abilities: {0: 'Pressure'}},\n  Espeon: {abilities: {0: 'Synchronize'}},\n  Feraligatr: {abilities: {0: 'Torrent'}},\n  Flaaffy: {abilities: {0: 'Static'}},\n  Forretress: {abilities: {0: 'Sturdy'}},\n  Furret: {abilities: {0: 'Run Away'}},\n  Girafarig: {abilities: {0: 'Inner Focus'}},\n  Gligar: {abilities: {0: 'Hyper Cutter'}},\n  Granbull: {abilities: {0: 'Intimidate'}},\n  Heracross: {abilities: {0: 'Swarm'}},\n  Hitmontop: {abilities: {0: 'Intimidate'}},\n  'Ho-Oh': {abilities: {0: 'Pressure'}},\n  Hoothoot: {abilities: {0: 'Insomnia'}},\n  Hoppip: {abilities: {0: 'Chlorophyll'}},\n  Houndoom: {abilities: {0: 'Early Bird'}},\n  Houndour: {abilities: {0: 'Early Bird'}},\n  Igglybuff: {abilities: {0: 'Cute Charm'}},\n  Jumpluff: {abilities: {0: 'Chlorophyll'}},\n  Kingdra: {abilities: {0: 'Swift Swim'}},\n  Lanturn: {abilities: {0: 'Volt Absorb'}},\n  Larvitar: {abilities: {0: 'Guts'}},\n  // Ledian: {abilities: {0: 'Swarm'}},\n  // Ledyba: {abilities: {0: 'Swarm'}},\n  Lugia: {abilities: {0: 'Pressure'}},\n  Magby: {abilities: {0: 'Flame Body'}},\n  Magcargo: {abilities: {0: 'Magma Armor'}},\n  // Mantine: {abilities: {0: 'Swift Swim'}},\n  Mareep: {abilities: {0: 'Static'}},\n  Marill: {abilities: {0: 'Thick Fat'}},\n  Meganium: {abilities: {0: 'Overgrow'}},\n  // Miltank: {abilities: {0: 'Thick Fat'}},\n  Misdreavus: {abilities: {0: 'Levitate'}},\n  Murkrow: {abilities: {0: 'Insomnia'}},\n  // Natu: {abilities: {0: 'Synchronize'}},\n  Noctowl: {abilities: {0: 'Insomnia'}},\n  // Octillery: {abilities: {0: 'Suction Cups'}},\n  Phanpy: {abilities: {0: 'Pickup'}},\n  Pichu: {abilities: {0: 'Static'}},\n  Piloswine: {abilities: {0: 'Oblivious'}},\n  Pineco: {abilities: {0: 'Sturdy'}},\n  Politoed: {abilities: {0: 'Water Absorb'}},\n  Porygon2: {abilities: {0: 'Trace'}},\n  Pupitar: {abilities: {0: 'Shed Skin'}},\n  Quagsire: {abilities: {0: 'Damp'}},\n  Quilava: {abilities: {0: 'Blaze'}},\n  Qwilfish: {abilities: {0: 'Poison Point'}},\n  Raikou: {abilities: {0: 'Pressure'}},\n  // Remoraid: {abilities: {0: 'Hustle'}},\n  Scizor: {abilities: {0: 'Swarm'}},\n  Sentret: {abilities: {0: 'Run Away'}},\n  // Shuckle: {abilities: {0: 'Sturdy'}},\n  Skarmory: {abilities: {0: 'Keen Eye'}},\n  Skiploom: {abilities: {0: 'Chlorophyll'}},\n  Slowking: {abilities: {0: 'Oblivious'}},\n  Slugma: {abilities: {0: 'Magma Armor'}},\n  Smeargle: {abilities: {0: 'Own Tempo'}},\n  // Smoochum: {abilities: {0: 'Oblivious'}},\n  Sneasel: {abilities: {0: 'Inner Focus'}},\n  Snubbull: {abilities: {0: 'Intimidate'}},\n  // Spinarak: {abilities: {0: 'Swarm'}},\n  Stantler: {abilities: {0: 'Intimidate'}},\n  // Steelix: {abilities: {0: 'Rock Head'}},\n  Sudowoodo: {abilities: {0: 'Sturdy'}},\n  Suicune: {abilities: {0: 'Pressure'}},\n  Sunflora: {abilities: {0: 'Chlorophyll'}},\n  Sunkern: {abilities: {0: 'Chlorophyll'}},\n  Swinub: {abilities: {0: 'Oblivious'}},\n  Teddiursa: {abilities: {0: 'Pickup'}},\n  // Togepi: {abilities: {0: 'Hustle'}},\n  // Togetic: {abilities: {0: 'Hustle'}},\n  Totodile: {abilities: {0: 'Torrent'}},\n  Typhlosion: {abilities: {0: 'Blaze'}},\n  Tyranitar: {abilities: {0: 'Sand Stream'}},\n  Tyrogue: {abilities: {0: 'Guts'}},\n  Umbreon: {abilities: {0: 'Synchronize'}},\n  // Unown: {abilities: {0: 'Levitate'}},\n  Ursaring: {abilities: {0: 'Guts'}},\n  // Wobbuffet: {abilities: {0: 'Shadow Tag'}},\n  Wooper: {abilities: {0: 'Damp'}},\n  // Xatu: {abilities: {0: 'Synchronize'}},\n  Yanma: {abilities: {0: 'Speed Boost'}},\n  // gen 3 pokemon\n  // Absol: {\n  //   types: ['Dark'],\n  //   bs: {hp: 65, at: 130, df: 60, sa: 75, sd: 60, sp: 75},\n  //   weightkg: 47,\n  //   abilities: {0: 'Pressure'},\n  // },\n  // Aggron: {\n  //   types: ['Steel', 'Rock'],\n  //   bs: {hp: 70, at: 110, df: 180, sa: 60, sd: 60, sp: 50},\n  //   weightkg: 360,\n  //   abilities: {0: 'Sturdy'},\n  // },\n  Altaria: {\n    types: ['Dragon', 'Flying'],\n    bs: {hp: 75, at: 70, df: 90, sa: 70, sd: 105, sp: 80},\n    weightkg: 20.6,\n    abilities: {0: 'Natural Cure'},\n  },\n  // Anorith: {\n  //   types: ['Rock', 'Bug'],\n  //   bs: {hp: 45, at: 95, df: 50, sa: 40, sd: 50, sp: 75},\n  //   weightkg: 12.5,\n  //   nfe: true,\n  //   abilities: {0: 'Battle Armor'},\n  // },\n  // Armaldo: {\n  //   types: ['Rock', 'Bug'],\n  //   bs: {hp: 75, at: 125, df: 100, sa: 70, sd: 80, sp: 45},\n  //   weightkg: 68.2,\n  //   abilities: {0: 'Battle Armor'},\n  // },\n  // Aron: {\n  //   types: ['Steel', 'Rock'],\n  //   bs: {hp: 50, at: 70, df: 100, sa: 40, sd: 40, sp: 30},\n  //   weightkg: 60,\n  //   nfe: true,\n  //   abilities: {0: 'Sturdy'},\n  // },\n  Azurill: {\n    types: ['Normal'],\n    bs: {hp: 50, at: 20, df: 40, sa: 20, sd: 40, sp: 20},\n    weightkg: 2,\n    nfe: true,\n    abilities: {0: 'Thick Fat'},\n  },\n  Bagon: {\n    types: ['Dragon'],\n    bs: {hp: 45, at: 75, df: 60, sa: 40, sd: 30, sp: 50},\n    weightkg: 42.1,\n    nfe: true,\n    abilities: {0: 'Rock Head'},\n  },\n  // Baltoy: {\n  //   types: ['Ground', 'Psychic'],\n  //   bs: {hp: 40, at: 40, df: 55, sa: 40, sd: 70, sp: 55},\n  //   weightkg: 21.5,\n  //   abilities: {0: 'Levitate'},\n  //   nfe: true,\n  //   gender: 'N',\n  // },\n  Banette: {\n    types: ['Ghost'],\n    bs: {hp: 64, at: 115, df: 65, sa: 83, sd: 63, sp: 65},\n    weightkg: 12.5,\n    abilities: {0: 'Insomnia'},\n  },\n  Barboach: {\n    types: ['Water', 'Ground'],\n    bs: {hp: 50, at: 48, df: 43, sa: 46, sd: 41, sp: 60},\n    weightkg: 1.9,\n    nfe: true,\n    abilities: {0: 'Oblivious'},\n  },\n  // Beautifly: {\n  //   types: ['Bug', 'Flying'],\n  //   bs: {hp: 60, at: 70, df: 50, sa: 90, sd: 50, sp: 65},\n  //   weightkg: 28.4,\n  //   abilities: {0: 'Swarm'},\n  // },\n  Beldum: {\n    types: ['Steel', 'Psychic'],\n    bs: {hp: 40, at: 55, df: 80, sa: 35, sd: 60, sp: 30},\n    weightkg: 95.2,\n    nfe: true,\n    gender: 'N',\n    abilities: {0: 'Clear Body'},\n  },\n  Blaziken: {\n    types: ['Fire', 'Fighting'],\n    bs: {hp: 80, at: 120, df: 70, sa: 110, sd: 70, sp: 80},\n    weightkg: 52,\n    abilities: {0: 'Blaze'},\n  },\n  Breloom: {\n    types: ['Grass', 'Fighting'],\n    bs: {hp: 60, at: 130, df: 80, sa: 60, sd: 60, sp: 70},\n    weightkg: 39.2,\n    abilities: {0: 'Effect Spore'},\n  },\n  Cacnea: {\n    types: ['Grass'],\n    bs: {hp: 50, at: 85, df: 40, sa: 85, sd: 40, sp: 35},\n    weightkg: 51.3,\n    nfe: true,\n    abilities: {0: 'Sand Veil'},\n  },\n  Cacturne: {\n    types: ['Grass', 'Dark'],\n    bs: {hp: 70, at: 115, df: 60, sa: 115, sd: 60, sp: 55},\n    weightkg: 77.4,\n    abilities: {0: 'Sand Veil'},\n  },\n  Camerupt: {\n    types: ['Fire', 'Ground'],\n    bs: {hp: 70, at: 100, df: 70, sa: 105, sd: 75, sp: 40},\n    weightkg: 220,\n    abilities: {0: 'Magma Armor'},\n  },\n  // Carvanha: {\n  //   types: ['Water', 'Dark'],\n  //   bs: {hp: 45, at: 90, df: 20, sa: 65, sd: 20, sp: 65},\n  //   weightkg: 20.8,\n  //   nfe: true,\n  //   abilities: {0: 'Rough Skin'},\n  // },\n  // Cascoon: {\n  //   types: ['Bug'],\n  //   bs: {hp: 50, at: 35, df: 55, sa: 25, sd: 25, sp: 15},\n  //   weightkg: 11.5,\n  //   abilities: {0: 'Shed Skin'},\n  //   nfe: true,\n  // },\n  // Castform: {\n  //   types: ['Normal'],\n  //   bs: {hp: 70, at: 70, df: 70, sa: 70, sd: 70, sp: 70},\n  //   weightkg: 0.8,\n  //   abilities: {0: 'Forecast'},\n  //   otherFormes: ['Castform-Rainy', 'Castform-Snowy', 'Castform-Sunny'],\n  // },\n  // 'Castform-Rainy': {\n  //   types: ['Water'],\n  //   bs: {hp: 70, at: 70, df: 70, sa: 70, sd: 70, sp: 70},\n  //   weightkg: 0.8,\n  //   abilities: {0: 'Forecast'},\n  //   baseSpecies: 'Castform',\n  // },\n  // 'Castform-Snowy': {\n  //   types: ['Ice'],\n  //   bs: {hp: 70, at: 70, df: 70, sa: 70, sd: 70, sp: 70},\n  //   weightkg: 0.8,\n  //   abilities: {0: 'Forecast'},\n  //   baseSpecies: 'Castform',\n  // },\n  // 'Castform-Sunny': {\n  //   types: ['Fire'],\n  //   bs: {hp: 70, at: 70, df: 70, sa: 70, sd: 70, sp: 70},\n  //   weightkg: 0.8,\n  //   abilities: {0: 'Forecast'},\n  //   baseSpecies: 'Castform',\n  // },\n  Chimecho: {\n    types: ['Psychic'],\n    bs: {hp: 65, at: 50, df: 70, sa: 95, sd: 80, sp: 65},\n    weightkg: 1,\n    abilities: {0: 'Levitate'},\n  },\n  // Clamperl: {\n  //   types: ['Water'],\n  //   bs: {hp: 35, at: 64, df: 85, sa: 74, sd: 55, sp: 32},\n  //   weightkg: 52.5,\n  //   nfe: true,\n  //   abilities: {0: 'Shell Armor'},\n  // },\n  // Claydol: {\n  //   types: ['Ground', 'Psychic'],\n  //   bs: {hp: 60, at: 70, df: 105, sa: 70, sd: 120, sp: 75},\n  //   weightkg: 108,\n  //   abilities: {0: 'Levitate'},\n  //   gender: 'N',\n  // },\n  Combusken: {\n    types: ['Fire', 'Fighting'],\n    bs: {hp: 60, at: 85, df: 60, sa: 85, sd: 60, sp: 55},\n    weightkg: 19.5,\n    nfe: true,\n    abilities: {0: 'Blaze'},\n  },\n  Corphish: {\n    types: ['Water'],\n    bs: {hp: 43, at: 80, df: 65, sa: 50, sd: 35, sp: 35},\n    weightkg: 11.5,\n    nfe: true,\n    abilities: {0: 'Hyper Cutter'},\n  },\n  // Cradily: {\n  //   types: ['Rock', 'Grass'],\n  //   bs: {hp: 86, at: 81, df: 97, sa: 81, sd: 107, sp: 43},\n  //   weightkg: 60.4,\n  //   abilities: {0: 'Suction Cups'},\n  // },\n  Crawdaunt: {\n    types: ['Water', 'Dark'],\n    bs: {hp: 63, at: 120, df: 85, sa: 90, sd: 55, sp: 55},\n    weightkg: 32.8,\n    abilities: {0: 'Hyper Cutter'},\n  },\n  // Delcatty: {\n  //   types: ['Normal'],\n  //   bs: {hp: 70, at: 65, df: 65, sa: 55, sd: 55, sp: 70},\n  //   weightkg: 32.6,\n  //   abilities: {0: 'Cute Charm'},\n  // },\n  Deoxys: {\n    types: ['Psychic'],\n    bs: {hp: 50, at: 150, df: 50, sa: 150, sd: 50, sp: 150},\n    weightkg: 60.8,\n    abilities: {0: 'Pressure'},\n    gender: 'N',\n    otherFormes: ['Deoxys-Attack', 'Deoxys-Defense', 'Deoxys-Speed'],\n  },\n  'Deoxys-Attack': {\n    types: ['Psychic'],\n    bs: {hp: 50, at: 180, df: 20, sa: 180, sd: 20, sp: 150},\n    weightkg: 60.8,\n    abilities: {0: 'Pressure'},\n    gender: 'N',\n    baseSpecies: 'Deoxys',\n  },\n  'Deoxys-Defense': {\n    types: ['Psychic'],\n    bs: {hp: 50, at: 70, df: 160, sa: 70, sd: 160, sp: 90},\n    weightkg: 60.8,\n    abilities: {0: 'Pressure'},\n    gender: 'N',\n    baseSpecies: 'Deoxys',\n  },\n  'Deoxys-Speed': {\n    types: ['Psychic'],\n    bs: {hp: 50, at: 95, df: 90, sa: 95, sd: 90, sp: 180},\n    weightkg: 60.8,\n    abilities: {0: 'Pressure'},\n    gender: 'N',\n    baseSpecies: 'Deoxys',\n  },\n  Dusclops: {\n    types: ['Ghost'],\n    bs: {hp: 40, at: 70, df: 130, sa: 60, sd: 130, sp: 25},\n    weightkg: 30.6,\n    abilities: {0: 'Pressure'},\n  },\n  Duskull: {\n    types: ['Ghost'],\n    bs: {hp: 20, at: 40, df: 90, sa: 30, sd: 90, sp: 25},\n    weightkg: 15,\n    nfe: true,\n    abilities: {0: 'Levitate'},\n  },\n  // Dustox: {\n  //   types: ['Bug', 'Poison'],\n  //   bs: {hp: 60, at: 50, df: 70, sa: 50, sd: 90, sp: 65},\n  //   weightkg: 31.6,\n  //   abilities: {0: 'Shield Dust'},\n  // },\n  // Electrike: {\n  //   types: ['Electric'],\n  //   bs: {hp: 40, at: 45, df: 40, sa: 65, sd: 40, sp: 65},\n  //   weightkg: 15.2,\n  //   nfe: true,\n  //   abilities: {0: 'Static'},\n  // },\n  // Exploud: {\n  //   types: ['Normal'],\n  //   bs: {hp: 104, at: 91, df: 63, sa: 91, sd: 63, sp: 68},\n  //   weightkg: 84,\n  //   abilities: {0: 'Soundproof'},\n  // },\n  Feebas: {\n    types: ['Water'],\n    bs: {hp: 20, at: 15, df: 20, sa: 10, sd: 55, sp: 80},\n    weightkg: 7.4,\n    nfe: true,\n    abilities: {0: 'Swift Swim'},\n  },\n  Flygon: {\n    types: ['Ground', 'Dragon'],\n    bs: {hp: 80, at: 100, df: 80, sa: 80, sd: 80, sp: 100},\n    weightkg: 82,\n    abilities: {0: 'Levitate'},\n  },\n  Gardevoir: {\n    types: ['Psychic'],\n    bs: {hp: 68, at: 65, df: 65, sa: 125, sd: 115, sp: 80},\n    weightkg: 48.4,\n    abilities: {0: 'Synchronize'},\n  },\n  Glalie: {\n    types: ['Ice'],\n    bs: {hp: 80, at: 80, df: 80, sa: 80, sd: 80, sp: 80},\n    weightkg: 256.5,\n    abilities: {0: 'Inner Focus'},\n  },\n  // Gorebyss: {\n  //   types: ['Water'],\n  //   bs: {hp: 55, at: 84, df: 105, sa: 114, sd: 75, sp: 52},\n  //   weightkg: 22.6,\n  //   abilities: {0: 'Swift Swim'},\n  // },\n  Groudon: {\n    types: ['Ground'],\n    bs: {hp: 100, at: 150, df: 140, sa: 100, sd: 90, sp: 90},\n    weightkg: 950,\n    abilities: {0: 'Drought'},\n    gender: 'N',\n  },\n  Grovyle: {\n    types: ['Grass'],\n    bs: {hp: 50, at: 65, df: 45, sa: 85, sd: 65, sp: 95},\n    weightkg: 21.6,\n    nfe: true,\n    abilities: {0: 'Overgrow'},\n  },\n  Grumpig: {\n    types: ['Psychic'],\n    bs: {hp: 80, at: 45, df: 65, sa: 90, sd: 110, sp: 80},\n    weightkg: 71.5,\n    abilities: {0: 'Thick Fat'},\n  },\n  Gulpin: {\n    types: ['Poison'],\n    bs: {hp: 70, at: 43, df: 53, sa: 43, sd: 53, sp: 40},\n    weightkg: 10.3,\n    nfe: true,\n    abilities: {0: 'Liquid Ooze'},\n  },\n  Hariyama: {\n    types: ['Fighting'],\n    bs: {hp: 144, at: 120, df: 60, sa: 40, sd: 60, sp: 50},\n    weightkg: 253.8,\n    abilities: {0: 'Thick Fat'},\n  },\n  // Huntail: {\n  //   types: ['Water'],\n  //   bs: {hp: 55, at: 104, df: 105, sa: 94, sd: 75, sp: 52},\n  //   weightkg: 27,\n  //   abilities: {0: 'Swift Swim'},\n  // },\n  Illumise: {\n    types: ['Bug'],\n    bs: {hp: 65, at: 47, df: 55, sa: 73, sd: 75, sp: 85},\n    abilities: {0: 'Oblivious'},\n    weightkg: 17.7,\n    gender: 'F',\n  },\n  Jirachi: {\n    types: ['Steel', 'Psychic'],\n    bs: {hp: 100, at: 100, df: 100, sa: 100, sd: 100, sp: 100},\n    weightkg: 1.1,\n    abilities: {0: 'Serene Grace'},\n    gender: 'N',\n  },\n  // Kecleon: {\n  //   types: ['Normal'],\n  //   bs: {hp: 60, at: 90, df: 70, sa: 60, sd: 120, sp: 40},\n  //   weightkg: 22,\n  //   abilities: {0: 'Color Change'},\n  // },\n  Kirlia: {\n    types: ['Psychic'],\n    bs: {hp: 38, at: 35, df: 35, sa: 65, sd: 55, sp: 50},\n    weightkg: 20.2,\n    nfe: true,\n    abilities: {0: 'Synchronize'},\n  },\n  Kyogre: {\n    types: ['Water'],\n    bs: {hp: 100, at: 100, df: 90, sa: 150, sd: 140, sp: 90},\n    weightkg: 352,\n    abilities: {0: 'Drizzle'},\n    gender: 'N',\n  },\n  // Lairon: {\n  //   types: ['Steel', 'Rock'],\n  //   bs: {hp: 60, at: 90, df: 140, sa: 50, sd: 50, sp: 40},\n  //   weightkg: 120,\n  //   nfe: true,\n  //   abilities: {0: 'Sturdy'},\n  // },\n  Latias: {\n    types: ['Dragon', 'Psychic'],\n    bs: {hp: 80, at: 80, df: 90, sa: 110, sd: 130, sp: 110},\n    weightkg: 40,\n    abilities: {0: 'Levitate'},\n    gender: 'F',\n  },\n  Latios: {\n    types: ['Dragon', 'Psychic'],\n    bs: {hp: 80, at: 90, df: 80, sa: 130, sd: 110, sp: 110},\n    weightkg: 60,\n    abilities: {0: 'Levitate'},\n    gender: 'M',\n  },\n  // Lileep: {\n  //   types: ['Rock', 'Grass'],\n  //   bs: {hp: 66, at: 41, df: 77, sa: 61, sd: 87, sp: 23},\n  //   weightkg: 23.8,\n  //   nfe: true,\n  //   abilities: {0: 'Suction Cups'},\n  // },\n  // Linoone: {\n  //   types: ['Normal'],\n  //   bs: {hp: 78, at: 70, df: 61, sa: 50, sd: 61, sp: 100},\n  //   weightkg: 32.5,\n  //   abilities: {0: 'Pickup'},\n  // },\n  Lombre: {\n    types: ['Water', 'Grass'],\n    bs: {hp: 60, at: 50, df: 50, sa: 60, sd: 70, sp: 50},\n    weightkg: 32.5,\n    nfe: true,\n    abilities: {0: 'Swift Swim'},\n  },\n  Lotad: {\n    types: ['Water', 'Grass'],\n    bs: {hp: 40, at: 30, df: 30, sa: 40, sd: 50, sp: 30},\n    weightkg: 2.6,\n    nfe: true,\n    abilities: {0: 'Swift Swim'},\n  },\n  // Loudred: {\n  //   types: ['Normal'],\n  //   bs: {hp: 84, at: 71, df: 43, sa: 71, sd: 43, sp: 48},\n  //   weightkg: 40.5,\n  //   nfe: true,\n  //   abilities: {0: 'Soundproof'},\n  // },\n  Ludicolo: {\n    types: ['Water', 'Grass'],\n    bs: {hp: 80, at: 70, df: 70, sa: 90, sd: 100, sp: 70},\n    weightkg: 55,\n    abilities: {0: 'Swift Swim'},\n  },\n  // Lunatone: {\n  //   types: ['Rock', 'Psychic'],\n  //   bs: {hp: 70, at: 55, df: 65, sa: 95, sd: 85, sp: 70},\n  //   weightkg: 168,\n  //   abilities: {0: 'Levitate'},\n  //   gender: 'N',\n  // },\n  Luvdisc: {\n    types: ['Water'],\n    bs: {hp: 43, at: 30, df: 55, sa: 40, sd: 65, sp: 97},\n    weightkg: 8.7,\n    abilities: {0: 'Swift Swim'},\n  },\n  Makuhita: {\n    types: ['Fighting'],\n    bs: {hp: 72, at: 60, df: 30, sa: 20, sd: 30, sp: 25},\n    weightkg: 86.4,\n    nfe: true,\n    abilities: {0: 'Thick Fat'},\n  },\n  // Manectric: {\n    // types: ['Electric'],\n    // bs: {hp: 70, at: 75, df: 60, sa: 105, sd: 60, sp: 105},\n    // weightkg: 40.2,\n    // abilities: {0: 'Static'},\n  // },\n  Marshtomp: {\n    types: ['Water', 'Ground'],\n    bs: {hp: 70, at: 85, df: 70, sa: 60, sd: 70, sp: 50},\n    weightkg: 28,\n    nfe: true,\n    abilities: {0: 'Torrent'},\n  },\n  Masquerain: {\n    types: ['Bug', 'Flying'],\n    bs: {hp: 70, at: 60, df: 62, sa: 80, sd: 82, sp: 60},\n    weightkg: 3.6,\n    abilities: {0: 'Intimidate'},\n  },\n  // Mawile: {\n    // types: ['Steel'],\n    // bs: {hp: 50, at: 85, df: 85, sa: 55, sd: 55, sp: 50},\n    // weightkg: 11.5,\n    // abilities: {0: 'Hyper Cutter'},\n  // },\n  Medicham: {\n    types: ['Fighting', 'Psychic'],\n    bs: {hp: 60, at: 60, df: 75, sa: 60, sd: 75, sp: 80},\n    weightkg: 31.5,\n    abilities: {0: 'Pure Power'},\n  },\n  Meditite: {\n    types: ['Fighting', 'Psychic'],\n    bs: {hp: 30, at: 40, df: 55, sa: 40, sd: 55, sp: 60},\n    weightkg: 11.2,\n    nfe: true,\n    abilities: {0: 'Pure Power'},\n  },\n  Metagross: {\n    types: ['Steel', 'Psychic'],\n    bs: {hp: 80, at: 135, df: 130, sa: 95, sd: 90, sp: 70},\n    weightkg: 550,\n    gender: 'N',\n    abilities: {0: 'Clear Body'},\n  },\n  Metang: {\n    types: ['Steel', 'Psychic'],\n    bs: {hp: 60, at: 75, df: 100, sa: 55, sd: 80, sp: 50},\n    weightkg: 202.5,\n    nfe: true,\n    gender: 'N',\n    abilities: {0: 'Clear Body'},\n  },\n  Mightyena: {\n    types: ['Dark'],\n    bs: {hp: 70, at: 90, df: 70, sa: 60, sd: 60, sp: 70},\n    weightkg: 37,\n    abilities: {0: 'Intimidate'},\n  },\n  Milotic: {\n    types: ['Water'],\n    bs: {hp: 95, at: 60, df: 79, sa: 100, sd: 125, sp: 81},\n    weightkg: 162,\n    abilities: {0: 'Marvel Scale'},\n  },\n  Minun: {\n    types: ['Electric'],\n    bs: {hp: 60, at: 40, df: 50, sa: 75, sd: 85, sp: 95},\n    weightkg: 4.2,\n    abilities: {0: 'Minus'},\n  },\n  Mudkip: {\n    types: ['Water'],\n    bs: {hp: 50, at: 70, df: 50, sa: 50, sd: 50, sp: 40},\n    weightkg: 7.6,\n    nfe: true,\n    abilities: {0: 'Torrent'},\n  },\n  // Nincada: {\n  //   types: ['Bug', 'Ground'],\n  //   bs: {hp: 31, at: 45, df: 90, sa: 30, sd: 30, sp: 40},\n  //   weightkg: 5.5,\n  //   nfe: true,\n  //   abilities: {0: 'Compound Eyes'},\n  // },\n  // Ninjask: {\n  //   types: ['Bug', 'Flying'],\n  //   bs: {hp: 61, at: 90, df: 45, sa: 50, sd: 50, sp: 160},\n  //   weightkg: 12,\n  //   abilities: {0: 'Speed Boost'},\n  // },\n  Nosepass: {\n    types: ['Rock'],\n    bs: {hp: 30, at: 45, df: 135, sa: 45, sd: 90, sp: 30},\n    weightkg: 97,\n    abilities: {0: 'Sturdy'},\n  },\n  Numel: {\n    types: ['Fire', 'Ground'],\n    bs: {hp: 60, at: 60, df: 40, sa: 65, sd: 45, sp: 35},\n    weightkg: 24,\n    nfe: true,\n    abilities: {0: 'Oblivious'},\n  },\n  Nuzleaf: {\n    types: ['Grass', 'Dark'],\n    bs: {hp: 70, at: 70, df: 40, sa: 60, sd: 40, sp: 60},\n    weightkg: 28,\n    nfe: true,\n    abilities: {0: 'Chlorophyll'},\n  },\n  Pelipper: {\n    types: ['Water', 'Flying'],\n    bs: {hp: 60, at: 50, df: 100, sa: 85, sd: 70, sp: 65},\n    weightkg: 28,\n    abilities: {0: 'Keen Eye'},\n  },\n  Plusle: {\n    types: ['Electric'],\n    bs: {hp: 60, at: 50, df: 40, sa: 85, sd: 75, sp: 95},\n    weightkg: 4.2,\n    abilities: {0: 'Plus'},\n  },\n  Poochyena: {\n    types: ['Dark'],\n    bs: {hp: 35, at: 55, df: 35, sa: 30, sd: 30, sp: 35},\n    weightkg: 13.6,\n    nfe: true,\n    abilities: {0: 'Run Away'},\n  },\n  Ralts: {\n    types: ['Psychic'],\n    bs: {hp: 28, at: 25, df: 25, sa: 45, sd: 35, sp: 40},\n    weightkg: 6.6,\n    nfe: true,\n    abilities: {0: 'Synchronize'},\n  },\n  Rayquaza: {\n    types: ['Dragon', 'Flying'],\n    bs: {hp: 105, at: 150, df: 90, sa: 150, sd: 90, sp: 95},\n    weightkg: 206.5,\n    abilities: {0: 'Air Lock'},\n    gender: 'N',\n  },\n  Regice: {\n    types: ['Ice'],\n    bs: {hp: 80, at: 50, df: 100, sa: 100, sd: 200, sp: 50},\n    weightkg: 175,\n    gender: 'N',\n    abilities: {0: 'Clear Body'},\n  },\n  Regirock: {\n    types: ['Rock'],\n    bs: {hp: 80, at: 100, df: 200, sa: 50, sd: 100, sp: 50},\n    weightkg: 230,\n    gender: 'N',\n    abilities: {0: 'Clear Body'},\n  },\n  Registeel: {\n    types: ['Steel'],\n    bs: {hp: 80, at: 75, df: 150, sa: 75, sd: 150, sp: 50},\n    weightkg: 205,\n    gender: 'N',\n    abilities: {0: 'Clear Body'},\n  },\n  // Relicanth: {\n  //   types: ['Water', 'Rock'],\n  //   bs: {hp: 100, at: 90, df: 130, sa: 45, sd: 65, sp: 55},\n  //   weightkg: 23.4,\n  //   abilities: {0: 'Swift Swim'},\n  // },\n  // Roselia: {\n  //   types: ['Grass', 'Poison'],\n  //   bs: {hp: 50, at: 60, df: 45, sa: 100, sd: 80, sp: 65},\n  //   weightkg: 2,\n  //   abilities: {0: 'Natural Cure'},\n  // },\n  Sableye: {\n    types: ['Dark', 'Ghost'],\n    bs: {hp: 50, at: 75, df: 75, sa: 65, sd: 65, sp: 50},\n    weightkg: 11,\n    abilities: {0: 'Keen Eye'},\n  },\n  Salamence: {\n    types: ['Dragon', 'Flying'],\n    bs: {hp: 95, at: 135, df: 80, sa: 110, sd: 80, sp: 100},\n    weightkg: 102.6,\n    abilities: {0: 'Intimidate'},\n  },\n  Sceptile: {\n    types: ['Grass'],\n    bs: {hp: 70, at: 85, df: 65, sa: 105, sd: 85, sp: 120},\n    weightkg: 52.2,\n    abilities: {0: 'Overgrow'},\n  },\n  // Sealeo: {\n  //   types: ['Ice', 'Water'],\n  //   bs: {hp: 90, at: 60, df: 70, sa: 75, sd: 70, sp: 45},\n  //   weightkg: 87.6,\n  //   nfe: true,\n  //   abilities: {0: 'Thick Fat'},\n  // },\n  Seedot: {\n    types: ['Grass'],\n    bs: {hp: 40, at: 40, df: 50, sa: 30, sd: 30, sp: 30},\n    weightkg: 4,\n    nfe: true,\n    abilities: {0: 'Chlorophyll'},\n  },\n  Seviper: {\n    types: ['Poison'],\n    bs: {hp: 73, at: 100, df: 60, sa: 100, sd: 60, sp: 65},\n    weightkg: 52.5,\n    abilities: {0: 'Shed Skin'},\n  },\n  // Sharpedo: {\n  //   types: ['Water', 'Dark'],\n  //   bs: {hp: 70, at: 120, df: 40, sa: 95, sd: 40, sp: 95},\n  //   weightkg: 88.8,\n  //   abilities: {0: 'Rough Skin'},\n  // },\n  // Shedinja: {\n  //   types: ['Bug', 'Ghost'],\n  //   bs: {hp: 1, at: 90, df: 45, sa: 30, sd: 30, sp: 40},\n  //   weightkg: 1.2,\n  //   abilities: {0: 'Wonder Guard'},\n  //   gender: 'N',\n  // },\n  Shelgon: {\n    types: ['Dragon'],\n    bs: {hp: 65, at: 95, df: 100, sa: 60, sd: 50, sp: 50},\n    weightkg: 110.5,\n    nfe: true,\n    abilities: {0: 'Rock Head'},\n  },\n  Shiftry: {\n    types: ['Grass', 'Dark'],\n    bs: {hp: 90, at: 100, df: 60, sa: 90, sd: 60, sp: 80},\n    weightkg: 59.6,\n    abilities: {0: 'Chlorophyll'},\n  },\n  Shroomish: {\n    types: ['Grass'],\n    bs: {hp: 60, at: 40, df: 60, sa: 40, sd: 60, sp: 35},\n    weightkg: 4.5,\n    nfe: true,\n    abilities: {0: 'Effect Spore'},\n  },\n  Shuppet: {\n    types: ['Ghost'],\n    bs: {hp: 44, at: 75, df: 35, sa: 63, sd: 33, sp: 45},\n    weightkg: 2.3,\n    nfe: true,\n    abilities: {0: 'Insomnia'},\n  },\n  // Silcoon: {\n  //   types: ['Bug'],\n  //   bs: {hp: 50, at: 35, df: 55, sa: 25, sd: 25, sp: 15},\n  //   weightkg: 10,\n  //   abilities: {0: 'Shed Skin'},\n  //   nfe: true,\n  // },\n  // Skitty: {\n  //   types: ['Normal'],\n  //   bs: {hp: 50, at: 45, df: 45, sa: 35, sd: 35, sp: 50},\n  //   weightkg: 11,\n  //   nfe: true,\n  //   abilities: {0: 'Cute Charm'},\n  // },\n  Slaking: {\n    types: ['Normal'],\n    bs: {hp: 150, at: 160, df: 100, sa: 95, sd: 65, sp: 100},\n    weightkg: 130.5,\n    abilities: {0: 'Truant'},\n  },\n  Slakoth: {\n    types: ['Normal'],\n    bs: {hp: 60, at: 60, df: 60, sa: 35, sd: 35, sp: 30},\n    weightkg: 24,\n    abilities: {0: 'Truant'},\n    nfe: true,\n  },\n  Snorunt: {\n    types: ['Ice'],\n    bs: {hp: 50, at: 50, df: 50, sa: 50, sd: 50, sp: 50},\n    weightkg: 16.8,\n    nfe: true,\n    abilities: {0: 'Inner Focus'},\n  },\n  // Solrock: {\n  //   types: ['Rock', 'Psychic'],\n  //   bs: {hp: 70, at: 95, df: 85, sa: 55, sd: 65, sp: 70},\n  //   weightkg: 154,\n  //   abilities: {0: 'Levitate'},\n  //   gender: 'N',\n  // },\n  // Spheal: {\n  //   types: ['Ice', 'Water'],\n  //   bs: {hp: 70, at: 40, df: 50, sa: 55, sd: 50, sp: 25},\n  //   weightkg: 39.5,\n  //   nfe: true,\n  //   abilities: {0: 'Thick Fat'},\n  // },\n  // Spinda: {\n  //   types: ['Normal'],\n  //   bs: {hp: 60, at: 60, df: 60, sa: 60, sd: 60, sp: 60},\n  //   weightkg: 5,\n  //   abilities: {0: 'Own Tempo'},\n  // },\n  Spoink: {\n    types: ['Psychic'],\n    bs: {hp: 60, at: 25, df: 35, sa: 70, sd: 80, sp: 60},\n    weightkg: 30.6,\n    nfe: true,\n    abilities: {0: 'Thick Fat'},\n  },\n  Surskit: {\n    types: ['Bug', 'Water'],\n    bs: {hp: 40, at: 30, df: 32, sa: 50, sd: 52, sp: 65},\n    weightkg: 1.7,\n    nfe: true,\n    abilities: {0: 'Swift Swim'},\n  },\n  Swablu: {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 45, at: 40, df: 60, sa: 40, sd: 75, sp: 50},\n    weightkg: 1.2,\n    nfe: true,\n    abilities: {0: 'Natural Cure'},\n  },\n  Swalot: {\n    types: ['Poison'],\n    bs: {hp: 100, at: 73, df: 83, sa: 73, sd: 83, sp: 55},\n    weightkg: 80,\n    abilities: {0: 'Liquid Ooze'},\n  },\n  Swampert: {\n    types: ['Water', 'Ground'],\n    bs: {hp: 100, at: 110, df: 90, sa: 85, sd: 90, sp: 60},\n    weightkg: 81.9,\n    abilities: {0: 'Torrent'},\n  },\n  // Swellow: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 60, at: 85, df: 60, sa: 50, sd: 50, sp: 125},\n  //   weightkg: 19.8,\n  //   abilities: {0: 'Guts'},\n  // },\n  // Taillow: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 40, at: 55, df: 30, sa: 30, sd: 30, sp: 85},\n  //   weightkg: 2.3,\n  //   nfe: true,\n  //   abilities: {0: 'Guts'},\n  // },\n  Torchic: {\n    types: ['Fire'],\n    bs: {hp: 45, at: 60, df: 40, sa: 70, sd: 50, sp: 45},\n    weightkg: 2.5,\n    nfe: true,\n    abilities: {0: 'Blaze'},\n  },\n  Torkoal: {\n    types: ['Fire'],\n    bs: {hp: 70, at: 85, df: 140, sa: 85, sd: 70, sp: 20},\n    weightkg: 80.4,\n    abilities: {0: 'White Smoke'},\n  },\n  Trapinch: {\n    types: ['Ground'],\n    bs: {hp: 45, at: 100, df: 45, sa: 45, sd: 45, sp: 10},\n    weightkg: 15,\n    nfe: true,\n    abilities: {0: 'Hyper Cutter'},\n  },\n  Treecko: {\n    types: ['Grass'],\n    bs: {hp: 40, at: 45, df: 35, sa: 65, sd: 55, sp: 70},\n    weightkg: 5,\n    nfe: true,\n    abilities: {0: 'Overgrow'},\n  },\n  Tropius: {\n    types: ['Grass', 'Flying'],\n    bs: {hp: 99, at: 68, df: 83, sa: 72, sd: 87, sp: 51},\n    weightkg: 100,\n    abilities: {0: 'Chlorophyll'},\n  },\n  Vibrava: {\n    types: ['Ground', 'Dragon'],\n    bs: {hp: 50, at: 70, df: 50, sa: 50, sd: 50, sp: 70},\n    weightkg: 15.3,\n    abilities: {0: 'Levitate'},\n    nfe: true,\n  },\n  Vigoroth: {\n    types: ['Normal'],\n    bs: {hp: 80, at: 80, df: 80, sa: 55, sd: 55, sp: 90},\n    weightkg: 46.5,\n    abilities: {0: 'Vital Spirit'},\n    nfe: true,\n  },\n  Volbeat: {\n    types: ['Bug'],\n    bs: {hp: 65, at: 73, df: 55, sa: 47, sd: 75, sp: 85},\n    weightkg: 17.7,\n    abilities: {0: 'Illuminate'},\n    gender: 'M',\n  },\n  // Wailmer: {\n  //   types: ['Water'],\n  //   bs: {hp: 130, at: 70, df: 35, sa: 70, sd: 35, sp: 60},\n  //   weightkg: 130,\n  //   nfe: true,\n  //   abilities: {0: 'Water Veil'},\n  // },\n  // Wailord: {\n  //   types: ['Water'],\n  //   bs: {hp: 170, at: 90, df: 45, sa: 90, sd: 45, sp: 60},\n  //   weightkg: 398,\n  //   abilities: {0: 'Water Veil'},\n  // },\n  // Walrein: {\n  //   types: ['Ice', 'Water'],\n  //   bs: {hp: 110, at: 80, df: 90, sa: 95, sd: 90, sp: 65},\n  //   weightkg: 150.6,\n  //   abilities: {0: 'Thick Fat'},\n  // },\n  Whiscash: {\n    types: ['Water', 'Ground'],\n    bs: {hp: 110, at: 78, df: 73, sa: 76, sd: 71, sp: 60},\n    weightkg: 23.6,\n    abilities: {0: 'Oblivious'},\n  },\n  // Whismur: {\n  //   types: ['Normal'],\n  //   bs: {hp: 64, at: 51, df: 23, sa: 51, sd: 23, sp: 28},\n  //   weightkg: 16.3,\n  //   nfe: true,\n  //   abilities: {0: 'Soundproof'},\n  // },\n  Wingull: {\n    types: ['Water', 'Flying'],\n    bs: {hp: 40, at: 30, df: 30, sa: 55, sd: 30, sp: 85},\n    weightkg: 9.5,\n    nfe: true,\n    abilities: {0: 'Keen Eye'},\n  },\n  // Wurmple: {\n  //   types: ['Bug'],\n  //   bs: {hp: 45, at: 45, df: 35, sa: 20, sd: 30, sp: 20},\n  //   weightkg: 3.6,\n  //   nfe: true,\n  //   abilities: {0: 'Shield Dust'},\n  // },\n  // Wynaut: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 95, at: 23, df: 48, sa: 23, sd: 48, sp: 23},\n  //   weightkg: 14,\n  //   nfe: true,\n  //   abilities: {0: 'Shadow Tag'},\n  // },\n  Zangoose: {\n    types: ['Normal'],\n    bs: {hp: 73, at: 115, df: 60, sa: 60, sd: 60, sp: 90},\n    weightkg: 40.3,\n    abilities: {0: 'Immunity'},\n  },\n  // Zigzagoon: {\n  //   types: ['Normal'],\n  //   bs: {hp: 38, at: 30, df: 41, sa: 30, sd: 41, sp: 60},\n  //   weightkg: 17.5,\n  //   nfe: true,\n  //   abilities: {0: 'Pickup'},\n  // },\n};\n\nconst ADV: {[name: string]: SpeciesData} = extend(true, {}, GSC, ADV_PATCH);\n\nconst DPP_PATCH: {[name: string]: DeepPartial<SpeciesData>} = {\n  Aipom: {nfe: true},\n  Dusclops: {nfe: true},\n  Electabuzz: {nfe: true},\n  Gligar: {nfe: true},\n  // Lickitung: {nfe: true},\n  Magmar: {nfe: true},\n  Magneton: {nfe: true},\n  Misdreavus: {nfe: true},\n  Murkrow: {nfe: true},\n  Nosepass: {nfe: true},\n  Piloswine: {nfe: true},\n  // Pichu: {otherFormes: ['Pichu-Spiky-eared']},\n  Porygon2: {nfe: true},\n  Rhydon: {nfe: true},\n  // Roselia: {nfe: true},\n  Sneasel: {nfe: true},\n  // Tangela: {nfe: true},\n  // Togetic: {nfe: true},\n  Yanma: {nfe: true},\n  Abomasnow: {\n    types: ['Grass', 'Ice'],\n    bs: {hp: 90, at: 92, df: 75, sa: 92, sd: 85, sp: 60},\n    weightkg: 135.5,\n    abilities: {0: 'Snow Warning'},\n  },\n  Ambipom: {\n    types: ['Normal'],\n    bs: {hp: 75, at: 100, df: 66, sa: 60, sd: 66, sp: 115},\n    weightkg: 20.3,\n    abilities: {0: 'Technician'},\n  },\n  Arceus: {\n    types: ['Normal'],\n    bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n    weightkg: 320,\n    abilities: {0: 'Multitype'},\n    gender: 'N',\n    otherFormes: [\n      'Arceus-Bug',\n      'Arceus-Dark',\n      'Arceus-Dragon',\n      'Arceus-Electric',\n      'Arceus-Fairy',\n      'Arceus-Fighting',\n      'Arceus-Fire',\n      'Arceus-Flying',\n      'Arceus-Ghost',\n      'Arceus-Grass',\n      'Arceus-Ground',\n      'Arceus-Ice',\n      'Arceus-Poison',\n      'Arceus-Psychic',\n      'Arceus-Rock',\n      'Arceus-Steel',\n      'Arceus-Water',\n    ],\n  },\n  'Arceus-Bug': {\n    types: ['Bug'],\n    bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n    weightkg: 320,\n    abilities: {0: 'Multitype'},\n    gender: 'N',\n    baseSpecies: 'Arceus',\n  },\n  'Arceus-Dark': {\n    types: ['Dark'],\n    bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n    weightkg: 320,\n    abilities: {0: 'Multitype'},\n    gender: 'N',\n    baseSpecies: 'Arceus',\n  },\n  'Arceus-Dragon': {\n    types: ['Dragon'],\n    bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n    weightkg: 320,\n    abilities: {0: 'Multitype'},\n    gender: 'N',\n    baseSpecies: 'Arceus',\n  },\n  'Arceus-Electric': {\n    types: ['Electric'],\n    bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n    weightkg: 320,\n    abilities: {0: 'Multitype'},\n    gender: 'N',\n    baseSpecies: 'Arceus',\n  },\n  'Arceus-Fighting': {\n    types: ['Fighting'],\n    bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n    weightkg: 320,\n    abilities: {0: 'Multitype'},\n    gender: 'N',\n    baseSpecies: 'Arceus',\n  },\n  'Arceus-Fire': {\n    types: ['Fire'],\n    bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n    weightkg: 320,\n    abilities: {0: 'Multitype'},\n    gender: 'N',\n    baseSpecies: 'Arceus',\n  },\n  'Arceus-Flying': {\n    types: ['Flying'],\n    bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n    weightkg: 320,\n    abilities: {0: 'Multitype'},\n    gender: 'N',\n    baseSpecies: 'Arceus',\n  },\n  'Arceus-Ghost': {\n    types: ['Ghost'],\n    bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n    weightkg: 320,\n    abilities: {0: 'Multitype'},\n    gender: 'N',\n    baseSpecies: 'Arceus',\n  },\n  'Arceus-Grass': {\n    types: ['Grass'],\n    bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n    weightkg: 320,\n    abilities: {0: 'Multitype'},\n    gender: 'N',\n    baseSpecies: 'Arceus',\n  },\n  'Arceus-Ground': {\n    types: ['Ground'],\n    bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n    weightkg: 320,\n    abilities: {0: 'Multitype'},\n    gender: 'N',\n    baseSpecies: 'Arceus',\n  },\n  'Arceus-Ice': {\n    types: ['Ice'],\n    bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n    weightkg: 320,\n    abilities: {0: 'Multitype'},\n    gender: 'N',\n    baseSpecies: 'Arceus',\n  },\n  'Arceus-Poison': {\n    types: ['Poison'],\n    bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n    weightkg: 320,\n    abilities: {0: 'Multitype'},\n    gender: 'N',\n    baseSpecies: 'Arceus',\n  },\n  'Arceus-Psychic': {\n    types: ['Psychic'],\n    bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n    weightkg: 320,\n    abilities: {0: 'Multitype'},\n    gender: 'N',\n    baseSpecies: 'Arceus',\n  },\n  'Arceus-Rock': {\n    types: ['Rock'],\n    bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n    weightkg: 320,\n    abilities: {0: 'Multitype'},\n    gender: 'N',\n    baseSpecies: 'Arceus',\n  },\n  'Arceus-Steel': {\n    types: ['Steel'],\n    bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n    weightkg: 320,\n    abilities: {0: 'Multitype'},\n    gender: 'N',\n    baseSpecies: 'Arceus',\n  },\n  'Arceus-Water': {\n    types: ['Water'],\n    bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n    weightkg: 320,\n    abilities: {0: 'Multitype'},\n    gender: 'N',\n    baseSpecies: 'Arceus',\n  },\n  // Arghonaut: {\n  //   types: ['Water', 'Fighting'],\n  //   bs: {hp: 105, at: 110, df: 95, sa: 70, sd: 100, sp: 75},\n  //   weightkg: 151,\n  //   abilities: {0: 'Unaware'},\n  // },\n  Azelf: {\n    types: ['Psychic'],\n    bs: {hp: 75, at: 125, df: 70, sa: 125, sd: 70, sp: 115},\n    weightkg: 0.3,\n    abilities: {0: 'Levitate'},\n    gender: 'N',\n  },\n  Bastiodon: {\n    types: ['Rock', 'Steel'],\n    bs: {hp: 60, at: 52, df: 168, sa: 47, sd: 138, sp: 30},\n    weightkg: 149.5,\n    abilities: {0: 'Sturdy'},\n  },\n  // Bibarel: {\n  //   types: ['Normal', 'Water'],\n  //   bs: {hp: 79, at: 85, df: 60, sa: 55, sd: 60, sp: 71},\n  //   weightkg: 31.5,\n  //   abilities: {0: 'Simple'},\n  // },\n  // Bidoof: {\n  //   types: ['Normal'],\n  //   bs: {hp: 59, at: 45, df: 40, sa: 35, sd: 40, sp: 31},\n  //   weightkg: 20,\n  //   nfe: true,\n  //   abilities: {0: 'Simple'},\n  // },\n  Bonsly: {\n    types: ['Rock'],\n    bs: {hp: 50, at: 80, df: 95, sa: 10, sd: 45, sp: 10},\n    weightkg: 15,\n    nfe: true,\n    abilities: {0: 'Sturdy'},\n  },\n  // Breezi: {\n  //   types: ['Poison', 'Flying'],\n  //   bs: {hp: 50, at: 46, df: 69, sa: 60, sd: 50, sp: 75},\n  //   weightkg: 0.6,\n  //   nfe: true,\n  //   abilities: {0: 'Unburden'},\n  // },\n  Bronzong: {\n    types: ['Steel', 'Psychic'],\n    bs: {hp: 67, at: 89, df: 116, sa: 79, sd: 116, sp: 33},\n    weightkg: 187,\n    gender: 'N',\n    abilities: {0: 'Levitate'},\n  },\n  Bronzor: {\n    types: ['Steel', 'Psychic'],\n    bs: {hp: 57, at: 24, df: 86, sa: 24, sd: 86, sp: 23},\n    weightkg: 60.5,\n    nfe: true,\n    gender: 'N',\n    abilities: {0: 'Levitate'},\n  },\n  // Budew: {\n  //   types: ['Grass', 'Poison'],\n  //   bs: {hp: 40, at: 30, df: 35, sa: 50, sd: 70, sp: 55},\n  //   weightkg: 1.2,\n  //   nfe: true,\n  //   abilities: {0: 'Natural Cure'},\n  // },\n  Buizel: {\n    types: ['Water'],\n    bs: {hp: 55, at: 65, df: 35, sa: 60, sd: 30, sp: 85},\n    weightkg: 29.5,\n    nfe: true,\n    abilities: {0: 'Swift Swim'},\n  },\n  // Buneary: {\n  //   types: ['Normal'],\n  //   bs: {hp: 55, at: 66, df: 44, sa: 44, sd: 56, sp: 85},\n  //   weightkg: 5.5,\n  //   nfe: true,\n  //   abilities: {0: 'Run Away'},\n  // },\n  // Burmy: {\n  //   types: ['Bug'],\n  //   bs: {hp: 40, at: 29, df: 45, sa: 29, sd: 45, sp: 36},\n  //   weightkg: 3.4,\n  //   nfe: true,\n  //   abilities: {0: 'Shed Skin'},\n  // },\n  // Carnivine: {\n  //   types: ['Grass'],\n  //   bs: {hp: 74, at: 100, df: 72, sa: 90, sd: 72, sp: 46},\n  //   weightkg: 27,\n  //   abilities: {0: 'Levitate'},\n  // },\n  // Chatot: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 76, at: 65, df: 45, sa: 92, sd: 42, sp: 91},\n  //   weightkg: 1.9,\n  //   abilities: {0: 'Keen Eye'},\n  // },\n  // Cherrim: {\n  //   types: ['Grass'],\n  //   bs: {hp: 70, at: 60, df: 70, sa: 87, sd: 78, sp: 85},\n  //   weightkg: 9.3,\n  //   abilities: {0: 'Flower Gift'},\n  //   otherFormes: ['Cherrim-Sunshine'],\n  // },\n  // 'Cherrim-Sunshine': {\n  //   types: ['Grass'],\n  //   bs: {hp: 70, at: 60, df: 70, sa: 87, sd: 78, sp: 85},\n  //   weightkg: 9.3,\n  //   abilities: {0: 'Flower Gift'},\n  //   baseSpecies: 'Cherrim',\n  // },\n  // Cherubi: {\n  //   types: ['Grass'],\n  //   bs: {hp: 45, at: 35, df: 45, sa: 62, sd: 53, sp: 35},\n  //   weightkg: 3.3,\n  //   abilities: {0: 'Chlorophyll'},\n  //   nfe: true,\n  // },\n  Chimchar: {\n    types: ['Fire'],\n    bs: {hp: 44, at: 58, df: 44, sa: 58, sd: 44, sp: 61},\n    weightkg: 6.2,\n    nfe: true,\n    abilities: {0: 'Blaze'},\n  },\n  Chingling: {\n    types: ['Psychic'],\n    bs: {hp: 45, at: 30, df: 50, sa: 65, sd: 50, sp: 45},\n    weightkg: 0.6,\n    abilities: {0: 'Levitate'},\n    nfe: true,\n  },\n  // Colossoil: {\n  //   types: ['Ground', 'Dark'],\n  //   bs: {hp: 133, at: 122, df: 72, sa: 71, sd: 72, sp: 95},\n  //   weightkg: 683.6,\n  //   abilities: {0: 'Rebound'},\n  // },\n  Combee: {\n    types: ['Bug', 'Flying'],\n    bs: {hp: 30, at: 30, df: 42, sa: 30, sd: 42, sp: 70},\n    weightkg: 5.5,\n    nfe: true,\n    abilities: {0: 'Honey Gather'},\n  },\n  Cranidos: {\n    types: ['Rock'],\n    bs: {hp: 67, at: 125, df: 40, sa: 30, sd: 30, sp: 58},\n    weightkg: 31.5,\n    nfe: true,\n    abilities: {0: 'Mold Breaker'},\n  },\n  Cresselia: {\n    types: ['Psychic'],\n    bs: {hp: 120, at: 70, df: 120, sa: 75, sd: 130, sp: 85},\n    weightkg: 85.6,\n    abilities: {0: 'Levitate'},\n    gender: 'F',\n  },\n  Croagunk: {\n    types: ['Poison', 'Fighting'],\n    bs: {hp: 48, at: 61, df: 40, sa: 61, sd: 40, sp: 50},\n    weightkg: 23,\n    nfe: true,\n    abilities: {0: 'Anticipation'},\n  },\n  // Cyclohm: {\n  //   types: ['Electric', 'Dragon'],\n  //   bs: {hp: 108, at: 60, df: 118, sa: 112, sd: 70, sp: 80},\n  //   weightkg: 59,\n  //   abilities: {0: 'Shield Dust'},\n  // },\n  Darkrai: {\n    types: ['Dark'],\n    bs: {hp: 70, at: 90, df: 90, sa: 135, sd: 90, sp: 125},\n    weightkg: 50.5,\n    abilities: {0: 'Bad Dreams'},\n    gender: 'N',\n  },\n  Dialga: {\n    types: ['Steel', 'Dragon'],\n    bs: {hp: 100, at: 120, df: 120, sa: 150, sd: 100, sp: 90},\n    weightkg: 683,\n    gender: 'N',\n    abilities: {0: 'Pressure'},\n  },\n  // Dorsoil: {\n  //   types: ['Ground'],\n  //   bs: {hp: 103, at: 72, df: 52, sa: 61, sd: 52, sp: 65},\n  //   weightkg: 145,\n  //   nfe: true,\n  //   abilities: {0: 'Oblivious'},\n  // },\n  // Drapion: {\n  //   types: ['Poison', 'Dark'],\n  //   bs: {hp: 70, at: 90, df: 110, sa: 60, sd: 75, sp: 95},\n  //   weightkg: 61.5,\n  //   abilities: {0: 'Battle Armor'},\n  // },\n  Drifblim: {\n    types: ['Ghost', 'Flying'],\n    bs: {hp: 150, at: 80, df: 44, sa: 90, sd: 54, sp: 80},\n    weightkg: 15,\n    abilities: {0: 'Aftermath'},\n  },\n  Drifloon: {\n    types: ['Ghost', 'Flying'],\n    bs: {hp: 90, at: 50, df: 34, sa: 60, sd: 44, sp: 70},\n    weightkg: 1.2,\n    nfe: true,\n    abilities: {0: 'Aftermath'},\n  },\n  // Duohm: {\n  //   types: ['Electric', 'Dragon'],\n  //   bs: {hp: 88, at: 40, df: 103, sa: 77, sd: 60, sp: 60},\n  //   weightkg: 19.2,\n  //   nfe: true,\n  //   abilities: {0: 'Shield Dust'},\n  // },\n  Dusknoir: {\n    types: ['Ghost'],\n    bs: {hp: 45, at: 100, df: 135, sa: 65, sd: 135, sp: 45},\n    weightkg: 106.6,\n    abilities: {0: 'Pressure'},\n  },\n  Electivire: {\n    types: ['Electric'],\n    bs: {hp: 75, at: 123, df: 67, sa: 95, sd: 85, sp: 95},\n    weightkg: 138.6,\n    abilities: {0: 'Motor Drive'},\n  },\n  // Embirch: {\n  //   types: ['Fire', 'Grass'],\n  //   bs: {hp: 60, at: 40, df: 55, sa: 65, sd: 40, sp: 60},\n  //   weightkg: 15,\n  //   nfe: true,\n  //   abilities: {0: 'Reckless'},\n  // },\n  Empoleon: {\n    types: ['Water', 'Steel'],\n    bs: {hp: 84, at: 86, df: 88, sa: 111, sd: 101, sp: 60},\n    weightkg: 84.5,\n    abilities: {0: 'Torrent'},\n  },\n  // Fidgit: {\n  //   types: ['Poison', 'Ground'],\n  //   bs: {hp: 95, at: 76, df: 109, sa: 90, sd: 80, sp: 105},\n  //   weightkg: 53,\n  //   abilities: {0: 'Persistent'},\n  // },\n  Finneon: {\n    types: ['Water'],\n    bs: {hp: 49, at: 49, df: 56, sa: 49, sd: 61, sp: 66},\n    weightkg: 7,\n    nfe: true,\n    abilities: {0: 'Swift Swim'},\n  },\n  // Flarelm: {\n  //   types: ['Fire', 'Grass'],\n  //   bs: {hp: 90, at: 50, df: 95, sa: 75, sd: 70, sp: 40},\n  //   weightkg: 73,\n  //   nfe: true,\n  //   abilities: {0: 'Rock Head'},\n  // },\n  Floatzel: {\n    types: ['Water'],\n    bs: {hp: 85, at: 105, df: 55, sa: 85, sd: 50, sp: 115},\n    weightkg: 33.5,\n    abilities: {0: 'Swift Swim'},\n  },\n  Froslass: {\n    types: ['Ice', 'Ghost'],\n    bs: {hp: 70, at: 80, df: 70, sa: 80, sd: 70, sp: 110},\n    weightkg: 26.6,\n    abilities: {0: 'Snow Cloak'},\n    gender: 'F',\n  },\n  Gabite: {\n    types: ['Dragon', 'Ground'],\n    bs: {hp: 68, at: 90, df: 65, sa: 50, sd: 55, sp: 82},\n    weightkg: 56,\n    nfe: true,\n    abilities: {0: 'Sand Veil'},\n  },\n  Gallade: {\n    types: ['Psychic', 'Fighting'],\n    bs: {hp: 68, at: 125, df: 65, sa: 65, sd: 115, sp: 80},\n    weightkg: 52,\n    abilities: {0: 'Steadfast'},\n    gender: 'M',\n  },\n  Garchomp: {\n    types: ['Dragon', 'Ground'],\n    bs: {hp: 108, at: 130, df: 95, sa: 80, sd: 85, sp: 102},\n    weightkg: 95,\n    abilities: {0: 'Sand Veil'},\n  },\n  Gastrodon: {\n    types: ['Water', 'Ground'],\n    bs: {hp: 111, at: 83, df: 68, sa: 92, sd: 82, sp: 39},\n    weightkg: 29.9,\n    abilities: {0: 'Sticky Hold'},\n  },\n  Gible: {\n    types: ['Dragon', 'Ground'],\n    bs: {hp: 58, at: 70, df: 45, sa: 40, sd: 45, sp: 42},\n    weightkg: 20.5,\n    nfe: true,\n    abilities: {0: 'Sand Veil'},\n  },\n  Giratina: {\n    types: ['Ghost', 'Dragon'],\n    bs: {hp: 150, at: 100, df: 120, sa: 100, sd: 120, sp: 90},\n    weightkg: 750,\n    gender: 'N',\n    otherFormes: ['Giratina-Origin'],\n    abilities: {0: 'Pressure'},\n  },\n  'Giratina-Origin': {\n    types: ['Ghost', 'Dragon'],\n    bs: {hp: 150, at: 120, df: 100, sa: 120, sd: 100, sp: 90},\n    weightkg: 650,\n    gender: 'N',\n    abilities: {0: 'Levitate'},\n    baseSpecies: 'Giratina',\n  },\n  Glaceon: {\n    types: ['Ice'],\n    bs: {hp: 65, at: 60, df: 110, sa: 130, sd: 95, sp: 65},\n    weightkg: 25.9,\n    abilities: {0: 'Snow Cloak'},\n  },\n  // Glameow: {\n  //   types: ['Normal'],\n  //   bs: {hp: 49, at: 55, df: 42, sa: 42, sd: 37, sp: 85},\n  //   weightkg: 3.9,\n  //   nfe: true,\n  //   abilities: {0: 'Limber'},\n  // },\n  Gliscor: {\n    types: ['Ground', 'Flying'],\n    bs: {hp: 75, at: 95, df: 125, sa: 45, sd: 75, sp: 95},\n    weightkg: 42.5,\n    abilities: {0: 'Hyper Cutter'},\n  },\n  Grotle: {\n    types: ['Grass'],\n    bs: {hp: 75, at: 89, df: 85, sa: 55, sd: 65, sp: 36},\n    weightkg: 97,\n    nfe: true,\n    abilities: {0: 'Overgrow'},\n  },\n  Happiny: {\n    types: ['Normal'],\n    bs: {hp: 100, at: 5, df: 5, sa: 15, sd: 65, sp: 30},\n    weightkg: 24.4,\n    nfe: true,\n    abilities: {0: 'Natural Cure'},\n    gender: 'F',\n  },\n  Heatran: {\n    types: ['Fire', 'Steel'],\n    bs: {hp: 91, at: 90, df: 106, sa: 130, sd: 106, sp: 77},\n    weightkg: 430,\n    abilities: {0: 'Flash Fire'},\n  },\n  Hippopotas: {\n    types: ['Ground'],\n    bs: {hp: 68, at: 72, df: 78, sa: 38, sd: 42, sp: 32},\n    weightkg: 49.5,\n    nfe: true,\n    abilities: {0: 'Sand Stream'},\n  },\n  Hippowdon: {\n    types: ['Ground'],\n    bs: {hp: 108, at: 112, df: 118, sa: 68, sd: 72, sp: 47},\n    weightkg: 300,\n    abilities: {0: 'Sand Stream'},\n  },\n  Honchkrow: {\n    types: ['Dark', 'Flying'],\n    bs: {hp: 100, at: 125, df: 52, sa: 105, sd: 52, sp: 71},\n    weightkg: 27.3,\n    abilities: {0: 'Insomnia'},\n  },\n  Infernape: {\n    types: ['Fire', 'Fighting'],\n    bs: {hp: 76, at: 104, df: 71, sa: 104, sd: 71, sp: 108},\n    weightkg: 55,\n    abilities: {0: 'Blaze'},\n  },\n  // Kitsunoh: {\n  //   types: ['Ghost', 'Steel'],\n  //   bs: {hp: 80, at: 103, df: 85, sa: 55, sd: 80, sp: 110},\n  //   weightkg: 51,\n  //   abilities: {0: 'Frisk'},\n  // },\n  Kricketot: {\n    types: ['Bug'],\n    bs: {hp: 37, at: 25, df: 41, sa: 25, sd: 41, sp: 25},\n    weightkg: 2.2,\n    nfe: true,\n    abilities: {0: 'Shed Skin'},\n  },\n  Kricketune: {\n    types: ['Bug'],\n    bs: {hp: 77, at: 85, df: 51, sa: 55, sd: 51, sp: 65},\n    weightkg: 25.5,\n    abilities: {0: 'Swarm'},\n  },\n  // Krilowatt: {\n  //   types: ['Electric', 'Water'],\n  //   bs: {hp: 151, at: 84, df: 73, sa: 83, sd: 74, sp: 105},\n  //   weightkg: 10.6,\n  //   abilities: {0: 'Trace'},\n  // },\n  Leafeon: {\n    types: ['Grass'],\n    bs: {hp: 65, at: 110, df: 130, sa: 60, sd: 65, sp: 95},\n    weightkg: 25.5,\n    abilities: {0: 'Leaf Guard'},\n  },\n  // Lickilicky: {\n  //   types: ['Normal'],\n  //   bs: {hp: 110, at: 85, df: 95, sa: 80, sd: 95, sp: 50},\n  //   weightkg: 140,\n  //   abilities: {0: 'Own Tempo'},\n  // },\n  // Lopunny: {\n  //   types: ['Normal'],\n  //   bs: {hp: 65, at: 76, df: 84, sa: 54, sd: 96, sp: 105},\n  //   weightkg: 33.3,\n  //   abilities: {0: 'Cute Charm'},\n  // },\n  Lucario: {\n    types: ['Fighting', 'Steel'],\n    bs: {hp: 70, at: 110, df: 70, sa: 115, sd: 70, sp: 90},\n    weightkg: 54,\n    abilities: {0: 'Steadfast'},\n  },\n  Lumineon: {\n    types: ['Water'],\n    bs: {hp: 69, at: 69, df: 76, sa: 69, sd: 86, sp: 91},\n    weightkg: 24,\n    abilities: {0: 'Swift Swim'},\n  },\n  Luxio: {\n    types: ['Electric'],\n    bs: {hp: 60, at: 85, df: 49, sa: 60, sd: 49, sp: 60},\n    weightkg: 30.5,\n    nfe: true,\n    abilities: {0: 'Rivalry'},\n  },\n  Luxray: {\n    types: ['Electric'],\n    bs: {hp: 80, at: 120, df: 79, sa: 95, sd: 79, sp: 70},\n    weightkg: 42,\n    abilities: {0: 'Rivalry'},\n  },\n  Magmortar: {\n    types: ['Fire'],\n    bs: {hp: 75, at: 95, df: 67, sa: 125, sd: 95, sp: 83},\n    weightkg: 68,\n    abilities: {0: 'Flame Body'},\n  },\n  Magnezone: {\n    types: ['Electric', 'Steel'],\n    bs: {hp: 70, at: 70, df: 115, sa: 130, sd: 90, sp: 60},\n    weightkg: 180,\n    gender: 'N',\n    abilities: {0: 'Magnet Pull'},\n  },\n  Mamoswine: {\n    types: ['Ice', 'Ground'],\n    bs: {hp: 110, at: 130, df: 80, sa: 70, sd: 60, sp: 80},\n    weightkg: 291,\n    abilities: {0: 'Oblivious'},\n  },\n  Manaphy: {\n    types: ['Water'],\n    bs: {hp: 100, at: 100, df: 100, sa: 100, sd: 100, sp: 100},\n    weightkg: 1.4,\n    abilities: {0: 'Hydration'},\n    gender: 'N',\n  },\n  // Mantyke: {\n  //   types: ['Water', 'Flying'],\n  //   bs: {hp: 45, at: 20, df: 50, sa: 60, sd: 120, sp: 50},\n  //   weightkg: 65,\n  //   nfe: true,\n  //   abilities: {0: 'Swift Swim'},\n  // },\n  Mesprit: {\n    types: ['Psychic'],\n    bs: {hp: 80, at: 105, df: 105, sa: 105, sd: 105, sp: 80},\n    weightkg: 0.3,\n    abilities: {0: 'Levitate'},\n    gender: 'N',\n  },\n  // 'Mime Jr.': {\n  //   types: ['Psychic'],\n  //   bs: {hp: 20, at: 25, df: 45, sa: 70, sd: 90, sp: 60},\n  //   weightkg: 13,\n  //   nfe: true,\n  //   abilities: {0: 'Soundproof'},\n  // },\n  Mismagius: {\n    types: ['Ghost'],\n    bs: {hp: 60, at: 60, df: 60, sa: 105, sd: 105, sp: 105},\n    weightkg: 4.4,\n    abilities: {0: 'Levitate'},\n  },\n  Monferno: {\n    types: ['Fire', 'Fighting'],\n    bs: {hp: 64, at: 78, df: 52, sa: 78, sd: 52, sp: 81},\n    weightkg: 22,\n    nfe: true,\n    abilities: {0: 'Blaze'},\n  },\n  // Monohm: {\n  //   types: ['Electric'],\n  //   bs: {hp: 53, at: 40, df: 58, sa: 67, sd: 55, sp: 55},\n  //   weightkg: 4.1,\n  //   nfe: true,\n  //   abilities: {0: 'Shield Dust'},\n  // },\n  // Mothim: {\n  //   types: ['Bug', 'Flying'],\n  //   bs: {hp: 70, at: 94, df: 50, sa: 94, sd: 50, sp: 66},\n  //   weightkg: 23.3,\n  //   abilities: {0: 'Swarm'},\n  // },\n  Munchlax: {\n    types: ['Normal'],\n    bs: {hp: 135, at: 85, df: 40, sa: 40, sd: 85, sp: 5},\n    weightkg: 105,\n    nfe: true,\n    abilities: {0: 'Pickup'},\n  },\n  // Nohface: {\n  //   types: ['Ghost'],\n  //   bs: {hp: 50, at: 73, df: 50, sa: 30, sd: 50, sp: 80},\n  //   weightkg: 5.9,\n  //   nfe: true,\n  //   abilities: {0: 'Frisk'},\n  // },\n  Pachirisu: {\n    types: ['Electric'],\n    bs: {hp: 60, at: 45, df: 70, sa: 45, sd: 90, sp: 95},\n    weightkg: 3.9,\n    abilities: {0: 'Run Away'},\n  },\n  Palkia: {\n    types: ['Water', 'Dragon'],\n    bs: {hp: 90, at: 120, df: 100, sa: 150, sd: 120, sp: 100},\n    weightkg: 336,\n    gender: 'N',\n    abilities: {0: 'Pressure'},\n  },\n  Phione: {\n    types: ['Water'],\n    bs: {hp: 80, at: 80, df: 80, sa: 80, sd: 80, sp: 80},\n    weightkg: 3.1,\n    abilities: {0: 'Hydration'},\n    gender: 'N',\n  },\n  // 'Pichu-Spiky-eared': {\n  //   types: ['Electric'],\n  //   bs: {hp: 20, at: 40, df: 15, sa: 35, sd: 35, sp: 60},\n  //   weightkg: 2,\n  //   abilities: {0: 'Static'},\n  //   baseSpecies: 'Pichu',\n  // },\n  Piplup: {\n    types: ['Water'],\n    bs: {hp: 53, at: 51, df: 53, sa: 61, sd: 56, sp: 40},\n    weightkg: 5.2,\n    nfe: true,\n    abilities: {0: 'Torrent'},\n  },\n  'Porygon-Z': {\n    types: ['Normal'],\n    bs: {hp: 85, at: 80, df: 70, sa: 135, sd: 75, sp: 90},\n    weightkg: 34,\n    gender: 'N',\n    abilities: {0: 'Adaptability'},\n  },\n  Prinplup: {\n    types: ['Water'],\n    bs: {hp: 64, at: 66, df: 68, sa: 81, sd: 76, sp: 50},\n    weightkg: 23,\n    nfe: true,\n    abilities: {0: 'Torrent'},\n  },\n  // Privatyke: {\n  //   types: ['Water', 'Fighting'],\n  //   bs: {hp: 65, at: 75, df: 65, sa: 40, sd: 60, sp: 45},\n  //   weightkg: 35,\n  //   nfe: true,\n  //   abilities: {0: 'Unaware'},\n  // },\n  Probopass: {\n    types: ['Rock', 'Steel'],\n    bs: {hp: 60, at: 55, df: 145, sa: 75, sd: 150, sp: 40},\n    weightkg: 340,\n    abilities: {0: 'Sturdy'},\n  },\n  // Protowatt: {\n  //   types: ['Electric', 'Water'],\n  //   bs: {hp: 51, at: 44, df: 33, sa: 43, sd: 34, sp: 65},\n  //   weightkg: 0.1,\n  //   nfe: true,\n  //   abilities: {0: 'Trace'},\n  // },\n  // Purugly: {\n  //   types: ['Normal'],\n  //   bs: {hp: 71, at: 82, df: 64, sa: 64, sd: 59, sp: 112},\n  //   weightkg: 43.8,\n  //   abilities: {0: 'Thick Fat'},\n  // },\n  // Pyroak: {\n  //   types: ['Fire', 'Grass'],\n  //   bs: {hp: 120, at: 70, df: 105, sa: 95, sd: 90, sp: 60},\n  //   weightkg: 168,\n  //   abilities: {0: 'Rock Head'},\n  // },\n  Rampardos: {\n    types: ['Rock'],\n    bs: {hp: 97, at: 165, df: 60, sa: 65, sd: 50, sp: 58},\n    weightkg: 102.5,\n    abilities: {0: 'Mold Breaker'},\n  },\n  // Rebble: {\n  //   types: ['Rock'],\n  //   bs: {hp: 45, at: 25, df: 65, sa: 75, sd: 55, sp: 80},\n  //   weightkg: 7,\n  //   nfe: true,\n  //   gender: 'N',\n  //   abilities: {0: 'Levitate'},\n  // },\n  Regigigas: {\n    types: ['Normal'],\n    bs: {hp: 110, at: 160, df: 110, sa: 80, sd: 110, sp: 100},\n    weightkg: 420,\n    abilities: {0: 'Slow Start'},\n    gender: 'N',\n  },\n  // Revenankh: {\n  //   types: ['Ghost', 'Fighting'],\n  //   bs: {hp: 90, at: 105, df: 90, sa: 65, sd: 110, sp: 65},\n  //   weightkg: 44,\n  //   abilities: {0: 'Shed Skin'},\n  // },\n  Rhyperior: {\n    types: ['Ground', 'Rock'],\n    bs: {hp: 115, at: 140, df: 130, sa: 55, sd: 55, sp: 40},\n    weightkg: 282.8,\n    abilities: {0: 'Lightning Rod'},\n  },\n  Riolu: {\n    types: ['Fighting'],\n    bs: {hp: 40, at: 70, df: 40, sa: 35, sd: 40, sp: 60},\n    weightkg: 20.2,\n    nfe: true,\n    abilities: {0: 'Steadfast'},\n  },\n  // Roserade: {\n  //   types: ['Grass', 'Poison'],\n  //   bs: {hp: 60, at: 70, df: 55, sa: 125, sd: 105, sp: 90},\n  //   weightkg: 14.5,\n  //   abilities: {0: 'Natural Cure'},\n  // },\n  Rotom: {\n    types: ['Electric', 'Ghost'],\n    bs: {hp: 50, at: 50, df: 77, sa: 95, sd: 77, sp: 91},\n    weightkg: 0.3,\n    abilities: {0: 'Levitate'},\n    gender: 'N',\n    otherFormes: ['Rotom-Fan', 'Rotom-Frost', 'Rotom-Heat', 'Rotom-Mow', 'Rotom-Wash'],\n  },\n  'Rotom-Mow': {\n    types: ['Electric', 'Ghost'],\n    bs: {hp: 50, at: 65, df: 107, sa: 105, sd: 107, sp: 86},\n    weightkg: 0.3,\n    abilities: {0: 'Levitate'},\n    gender: 'N',\n    baseSpecies: 'Rotom',\n  },\n  'Rotom-Frost': {\n    types: ['Electric', 'Ghost'],\n    bs: {hp: 50, at: 65, df: 107, sa: 105, sd: 107, sp: 86},\n    weightkg: 0.3,\n    abilities: {0: 'Levitate'},\n    gender: 'N',\n    baseSpecies: 'Rotom',\n  },\n  'Rotom-Heat': {\n    types: ['Electric', 'Ghost'],\n    bs: {hp: 50, at: 65, df: 107, sa: 105, sd: 107, sp: 86},\n    weightkg: 0.3,\n    abilities: {0: 'Levitate'},\n    gender: 'N',\n    baseSpecies: 'Rotom',\n  },\n  'Rotom-Fan': {\n    types: ['Electric', 'Ghost'],\n    bs: {hp: 50, at: 65, df: 107, sa: 105, sd: 107, sp: 86},\n    weightkg: 0.3,\n    abilities: {0: 'Levitate'},\n    gender: 'N',\n    baseSpecies: 'Rotom',\n  },\n  'Rotom-Wash': {\n    types: ['Electric', 'Ghost'],\n    bs: {hp: 50, at: 65, df: 107, sa: 105, sd: 107, sp: 86},\n    weightkg: 0.3,\n    abilities: {0: 'Levitate'},\n    gender: 'N',\n    baseSpecies: 'Rotom',\n  },\n  Shaymin: {\n    types: ['Grass'],\n    bs: {hp: 100, at: 100, df: 100, sa: 100, sd: 100, sp: 100},\n    weightkg: 2.1,\n    abilities: {0: 'Natural Cure'},\n    gender: 'N',\n    otherFormes: ['Shaymin-Sky'],\n  },\n  'Shaymin-Sky': {\n    types: ['Grass', 'Flying'],\n    bs: {hp: 100, at: 103, df: 75, sa: 120, sd: 75, sp: 127},\n    weightkg: 5.2,\n    abilities: {0: 'Serene Grace'},\n    gender: 'N',\n    baseSpecies: 'Shaymin',\n  },\n  Shellos: {\n    types: ['Water'],\n    bs: {hp: 76, at: 48, df: 48, sa: 57, sd: 62, sp: 34},\n    weightkg: 6.3,\n    nfe: true,\n    abilities: {0: 'Sticky Hold'},\n  },\n  Shieldon: {\n    types: ['Rock', 'Steel'],\n    bs: {hp: 30, at: 42, df: 118, sa: 42, sd: 88, sp: 30},\n    weightkg: 57,\n    nfe: true,\n    abilities: {0: 'Sturdy'},\n  },\n  Shinx: {\n    types: ['Electric'],\n    bs: {hp: 45, at: 65, df: 34, sa: 40, sd: 34, sp: 45},\n    weightkg: 9.5,\n    nfe: true,\n    abilities: {0: 'Rivalry'},\n  },\n  // Skorupi: {\n  //   types: ['Poison', 'Bug'],\n  //   bs: {hp: 40, at: 50, df: 90, sa: 30, sd: 55, sp: 65},\n  //   weightkg: 12,\n  //   nfe: true,\n  //   abilities: {0: 'Battle Armor'},\n  // },\n  Skuntank: {\n    types: ['Poison', 'Dark'],\n    bs: {hp: 103, at: 93, df: 67, sa: 71, sd: 61, sp: 84},\n    weightkg: 38,\n    abilities: {0: 'Stench'},\n  },\n  Snover: {\n    types: ['Grass', 'Ice'],\n    bs: {hp: 60, at: 62, df: 50, sa: 62, sd: 60, sp: 40},\n    weightkg: 50.5,\n    nfe: true,\n    abilities: {0: 'Snow Warning'},\n  },\n  Spiritomb: {\n    types: ['Ghost', 'Dark'],\n    bs: {hp: 50, at: 92, df: 108, sa: 92, sd: 108, sp: 35},\n    weightkg: 108,\n    abilities: {0: 'Pressure'},\n  },\n  Staraptor: {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 85, at: 120, df: 70, sa: 50, sd: 50, sp: 100},\n    weightkg: 24.9,\n    abilities: {0: 'Intimidate'},\n  },\n  Staravia: {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 55, at: 75, df: 50, sa: 40, sd: 40, sp: 80},\n    weightkg: 15.5,\n    nfe: true,\n    abilities: {0: 'Intimidate'},\n  },\n  Starly: {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 40, at: 55, df: 30, sa: 30, sd: 30, sp: 60},\n    weightkg: 2,\n    nfe: true,\n    abilities: {0: 'Keen Eye'},\n  },\n  // Stratagem: {\n  //   types: ['Rock'],\n  //   bs: {hp: 90, at: 60, df: 65, sa: 120, sd: 70, sp: 130},\n  //   weightkg: 45,\n  //   gender: 'N',\n  //   abilities: {0: 'Levitate'},\n  // },\n  Stunky: {\n    types: ['Poison', 'Dark'],\n    bs: {hp: 63, at: 63, df: 47, sa: 41, sd: 41, sp: 74},\n    weightkg: 19.2,\n    nfe: true,\n    abilities: {0: 'Stench'},\n  },\n  // Syclant: {\n  //   types: ['Ice', 'Bug'],\n  //   bs: {hp: 70, at: 116, df: 70, sa: 114, sd: 64, sp: 121},\n  //   weightkg: 52,\n  //   abilities: {0: 'Compound Eyes'},\n  // },\n  // Syclar: {\n  //   types: ['Ice', 'Bug'],\n  //   bs: {hp: 40, at: 76, df: 45, sa: 74, sd: 39, sp: 91},\n  //   weightkg: 4,\n  //   nfe: true,\n  //   abilities: {0: 'Compound Eyes'},\n  // },\n  // Tactite: {\n  //   types: ['Rock'],\n  //   bs: {hp: 70, at: 40, df: 65, sa: 100, sd: 65, sp: 95},\n  //   weightkg: 16,\n  //   nfe: true,\n  //   gender: 'N',\n  //   abilities: {0: 'Levitate'},\n  // },\n  // Tangrowth: {\n  //   types: ['Grass'],\n  //   bs: {hp: 100, at: 100, df: 125, sa: 110, sd: 50, sp: 50},\n  //   weightkg: 128.6,\n  //   abilities: {0: 'Chlorophyll'},\n  // },\n  // Togekiss: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 85, at: 50, df: 95, sa: 120, sd: 115, sp: 80},\n  //   weightkg: 38,\n  //   abilities: {0: 'Hustle'},\n  // },\n  Torterra: {\n    types: ['Grass', 'Ground'],\n    bs: {hp: 95, at: 109, df: 105, sa: 75, sd: 85, sp: 56},\n    weightkg: 310,\n    abilities: {0: 'Overgrow'},\n  },\n  Toxicroak: {\n    types: ['Poison', 'Fighting'],\n    bs: {hp: 83, at: 106, df: 65, sa: 86, sd: 65, sp: 85},\n    weightkg: 44.4,\n    abilities: {0: 'Anticipation'},\n  },\n  Turtwig: {\n    types: ['Grass'],\n    bs: {hp: 55, at: 68, df: 64, sa: 45, sd: 55, sp: 31},\n    weightkg: 10.2,\n    nfe: true,\n    abilities: {0: 'Overgrow'},\n  },\n  Uxie: {\n    types: ['Psychic'],\n    bs: {hp: 75, at: 75, df: 130, sa: 75, sd: 130, sp: 95},\n    weightkg: 0.3,\n    abilities: {0: 'Levitate'},\n    gender: 'N',\n  },\n  Vespiquen: {\n    types: ['Bug', 'Flying'],\n    bs: {hp: 70, at: 80, df: 102, sa: 80, sd: 102, sp: 40},\n    weightkg: 38.5,\n    abilities: {0: 'Pressure'},\n    gender: 'F',\n  },\n  // Voodoll: {\n  //   types: ['Normal', 'Dark'],\n  //   bs: {hp: 55, at: 40, df: 55, sa: 75, sd: 50, sp: 70},\n  //   weightkg: 25,\n  //   nfe: true,\n  //   abilities: {0: 'Volt Absorb'},\n  // },\n  // Voodoom: {\n  //   types: ['Fighting', 'Dark'],\n  //   bs: {hp: 90, at: 85, df: 80, sa: 105, sd: 80, sp: 110},\n  //   weightkg: 75.5,\n  //   abilities: {0: 'Volt Absorb'},\n  // },\n  Weavile: {\n    types: ['Dark', 'Ice'],\n    bs: {hp: 70, at: 120, df: 65, sa: 45, sd: 85, sp: 125},\n    weightkg: 34,\n    abilities: {0: 'Pressure'},\n  },\n  // Wormadam: {\n  //   types: ['Bug', 'Grass'],\n  //   bs: {hp: 60, at: 59, df: 85, sa: 79, sd: 105, sp: 36},\n  //   weightkg: 6.5,\n  //   abilities: {0: 'Anticipation'},\n  //   otherFormes: ['Wormadam-Sandy', 'Wormadam-Trash'],\n  // },\n  // 'Wormadam-Sandy': {\n  //   types: ['Bug', 'Ground'],\n  //   bs: {hp: 60, at: 79, df: 105, sa: 59, sd: 85, sp: 36},\n  //   weightkg: 6.5,\n  //   abilities: {0: 'Anticipation'},\n  //   baseSpecies: 'Wormadam',\n  // },\n  // 'Wormadam-Trash': {\n  //   types: ['Bug', 'Steel'],\n  //   bs: {hp: 60, at: 69, df: 95, sa: 69, sd: 95, sp: 36},\n  //   weightkg: 6.5,\n  //   abilities: {0: 'Anticipation'},\n  //   baseSpecies: 'Wormadam',\n  // },\n  Yanmega: {\n    types: ['Bug', 'Flying'],\n    bs: {hp: 86, at: 76, df: 86, sa: 116, sd: 56, sp: 95},\n    weightkg: 51.5,\n    abilities: {0: 'Speed Boost'},\n  },\n};\n\nconst DPP: {[name: string]: SpeciesData} = extend(true, {}, ADV, DPP_PATCH);\n\nconst BW_PATCH: {[name: string]: DeepPartial<SpeciesData>} = {\n  'Rotom-Fan': {types: ['Electric', 'Flying']},\n  'Rotom-Frost': {types: ['Electric', 'Ice']},\n  'Rotom-Heat': {types: ['Electric', 'Fire']},\n  'Rotom-Mow': {types: ['Electric', 'Grass']},\n  'Rotom-Wash': {types: ['Electric', 'Water']},\n  // Accelgor: {\n  //   types: ['Bug'],\n  //   bs: {hp: 80, at: 70, df: 40, sa: 100, sd: 60, sp: 145},\n  //   weightkg: 25.3,\n  //   abilities: {0: 'Hydration'},\n  // },\n  Alomomola: {\n    types: ['Water'],\n    bs: {hp: 165, at: 75, df: 80, sa: 40, sd: 45, sp: 65},\n    weightkg: 31.6,\n    abilities: {0: 'Healer'},\n  },\n  Amoonguss: {\n    types: ['Grass', 'Poison'],\n    bs: {hp: 114, at: 85, df: 70, sa: 85, sd: 80, sp: 30},\n    weightkg: 10.5,\n    abilities: {0: 'Effect Spore'},\n  },\n  // Archen: {\n  //   types: ['Rock', 'Flying'],\n  //   bs: {hp: 55, at: 112, df: 45, sa: 74, sd: 45, sp: 70},\n  //   weightkg: 9.5,\n  //   abilities: {0: 'Defeatist'},\n  //   nfe: true,\n  // },\n  // Archeops: {\n  //   types: ['Rock', 'Flying'],\n  //   bs: {hp: 75, at: 140, df: 65, sa: 112, sd: 65, sp: 110},\n  //   weightkg: 32,\n  //   abilities: {0: 'Defeatist'},\n  // },\n  // Argalis: {\n  //   types: ['Bug', 'Psychic'],\n  //   bs: {hp: 60, at: 90, df: 89, sa: 87, sd: 40, sp: 54},\n  //   weightkg: 341.4,\n  //   nfe: true,\n  //   abilities: {0: 'Shed Skin'},\n  // },\n  // Audino: {\n  //   types: ['Normal'],\n  //   bs: {hp: 103, at: 60, df: 86, sa: 60, sd: 86, sp: 50},\n  //   weightkg: 31,\n  //   abilities: {0: 'Healer'},\n  // },\n  // Aurumoth: {\n  //   types: ['Bug', 'Psychic'],\n  //   bs: {hp: 110, at: 120, df: 99, sa: 117, sd: 60, sp: 94},\n  //   weightkg: 193,\n  //   abilities: {0: 'Weak Armor'},\n  // },\n  Axew: {\n    types: ['Dragon'],\n    bs: {hp: 46, at: 87, df: 60, sa: 30, sd: 40, sp: 57},\n    weightkg: 18,\n    nfe: true,\n    abilities: {0: 'Rivalry'},\n  },\n  Basculin: {\n    types: ['Water'],\n    bs: {hp: 70, at: 92, df: 65, sa: 80, sd: 55, sp: 98},\n    weightkg: 18,\n    abilities: {0: 'Reckless'},\n    otherFormes: ['Basculin-Blue-Striped'],\n  },\n  'Basculin-Blue-Striped': {\n    types: ['Water'],\n    bs: {hp: 70, at: 92, df: 65, sa: 80, sd: 55, sp: 98},\n    weightkg: 18,\n    abilities: {0: 'Rock Head'},\n    baseSpecies: 'Basculin',\n  },\n  Beartic: {\n    types: ['Ice'],\n    bs: {hp: 95, at: 110, df: 80, sa: 70, sd: 80, sp: 50},\n    weightkg: 260,\n    abilities: {0: 'Snow Cloak'},\n  },\n  // Beheeyem: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 75, at: 75, df: 75, sa: 125, sd: 95, sp: 40},\n  //   weightkg: 34.5,\n  //   abilities: {0: 'Telepathy'},\n  // },\n  Bisharp: {\n    types: ['Dark', 'Steel'],\n    bs: {hp: 65, at: 125, df: 100, sa: 60, sd: 70, sp: 70},\n    weightkg: 70,\n    abilities: {0: 'Defiant'},\n  },\n  Blitzle: {\n    types: ['Electric'],\n    bs: {hp: 45, at: 60, df: 32, sa: 50, sd: 32, sp: 76},\n    weightkg: 29.8,\n    nfe: true,\n    abilities: {0: 'Lightning Rod'},\n  },\n  // Boldore: {\n  //   types: ['Rock'],\n  //   bs: {hp: 70, at: 105, df: 105, sa: 50, sd: 40, sp: 20},\n  //   weightkg: 102,\n  //   nfe: true,\n  //   abilities: {0: 'Sturdy'},\n  // },\n  // Bouffalant: {\n  //   types: ['Normal'],\n  //   bs: {hp: 95, at: 110, df: 95, sa: 40, sd: 95, sp: 55},\n  //   weightkg: 94.6,\n  //   abilities: {0: 'Reckless'},\n  // },\n  // Brattler: {\n  //   types: ['Dark', 'Grass'],\n  //   bs: {hp: 80, at: 70, df: 40, sa: 20, sd: 90, sp: 30},\n  //   weightkg: 11.5,\n  //   nfe: true,\n  //   abilities: {0: 'Harvest'},\n  // },\n  Braviary: {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 100, at: 123, df: 75, sa: 57, sd: 75, sp: 80},\n    weightkg: 41,\n    abilities: {0: 'Keen Eye'},\n    gender: 'M',\n  },\n  // Carracosta: {\n  //   types: ['Water', 'Rock'],\n  //   bs: {hp: 74, at: 108, df: 133, sa: 83, sd: 65, sp: 32},\n  //   weightkg: 81,\n  //   abilities: {0: 'Solid Rock'},\n  // },\n  // Cawdet: {\n  //   types: ['Steel', 'Flying'],\n  //   bs: {hp: 35, at: 72, df: 85, sa: 40, sd: 55, sp: 88},\n  //   weightkg: 25,\n  //   nfe: true,\n  //   abilities: {0: 'Keen Eye'},\n  // },\n  // Cawmodore: {\n  //   types: ['Steel', 'Flying'],\n  //   bs: {hp: 50, at: 92, df: 130, sa: 65, sd: 75, sp: 118},\n  //   weightkg: 37,\n  //   abilities: {0: 'Intimidate'},\n  // },\n  Chandelure: {\n    types: ['Ghost', 'Fire'],\n    bs: {hp: 60, at: 55, df: 90, sa: 145, sd: 90, sp: 80},\n    weightkg: 34.3,\n    abilities: {0: 'Flash Fire'},\n  },\n  Cinccino: {\n    types: ['Normal'],\n    bs: {hp: 75, at: 95, df: 60, sa: 65, sd: 60, sp: 115},\n    weightkg: 7.5,\n    abilities: {0: 'Cute Charm'},\n  },\n  Cobalion: {\n    types: ['Steel', 'Fighting'],\n    bs: {hp: 91, at: 90, df: 129, sa: 90, sd: 72, sp: 108},\n    weightkg: 250,\n    abilities: {0: 'Justified'},\n    gender: 'N',\n  },\n  // Cofagrigus: {\n  //   types: ['Ghost'],\n  //   bs: {hp: 58, at: 50, df: 145, sa: 95, sd: 105, sp: 30},\n  //   weightkg: 76.5,\n  //   abilities: {0: 'Mummy'},\n  // },\n  Conkeldurr: {\n    types: ['Fighting'],\n    bs: {hp: 105, at: 140, df: 95, sa: 55, sd: 65, sp: 45},\n    weightkg: 87,\n    abilities: {0: 'Guts'},\n  },\n  Cottonee: {\n    types: ['Grass'],\n    bs: {hp: 40, at: 27, df: 60, sa: 37, sd: 50, sp: 66},\n    weightkg: 0.6,\n    nfe: true,\n    abilities: {0: 'Prankster'},\n  },\n  // Crustle: {\n  //   types: ['Bug', 'Rock'],\n  //   bs: {hp: 70, at: 95, df: 125, sa: 65, sd: 75, sp: 45},\n  //   weightkg: 200,\n  //   abilities: {0: 'Sturdy'},\n  // },\n  Cryogonal: {\n    types: ['Ice'],\n    bs: {hp: 70, at: 50, df: 30, sa: 95, sd: 135, sp: 105},\n    weightkg: 148,\n    abilities: {0: 'Levitate'},\n    gender: 'N',\n  },\n  Cubchoo: {\n    types: ['Ice'],\n    bs: {hp: 55, at: 70, df: 40, sa: 60, sd: 40, sp: 40},\n    weightkg: 8.5,\n    nfe: true,\n    abilities: {0: 'Snow Cloak'},\n  },\n  // Cupra: {\n  //   types: ['Bug', 'Psychic'],\n  //   bs: {hp: 50, at: 60, df: 49, sa: 67, sd: 30, sp: 44},\n  //   weightkg: 4.8,\n  //   nfe: true,\n  //   abilities: {0: 'Shield Dust'},\n  // },\n  // Darmanitan: {\n  //   types: ['Fire'],\n  //   bs: {hp: 105, at: 140, df: 55, sa: 30, sd: 55, sp: 95},\n  //   weightkg: 92.9,\n  //   abilities: {0: 'Sheer Force'},\n  //   otherFormes: ['Darmanitan-Zen'],\n  // },\n  // 'Darmanitan-Zen': {\n  //   types: ['Fire', 'Psychic'],\n  //   bs: {hp: 105, at: 30, df: 105, sa: 140, sd: 105, sp: 55},\n  //   weightkg: 92.9,\n  //   baseSpecies: 'Darmanitan',\n  //   abilities: {0: 'Zen Mode'},\n  // },\n  // Darumaka: {\n  //   types: ['Fire'],\n  //   bs: {hp: 70, at: 90, df: 45, sa: 15, sd: 45, sp: 50},\n  //   weightkg: 37.5,\n  //   nfe: true,\n  //   abilities: {0: 'Hustle'},\n  // },\n  Deerling: {\n    types: ['Normal', 'Grass'],\n    bs: {hp: 60, at: 60, df: 50, sa: 40, sd: 50, sp: 75},\n    weightkg: 19.5,\n    nfe: true,\n    abilities: {0: 'Chlorophyll'},\n  },\n  Deino: {\n    types: ['Dark', 'Dragon'],\n    bs: {hp: 52, at: 65, df: 50, sa: 45, sd: 50, sp: 38},\n    weightkg: 17.3,\n    abilities: {0: 'Hustle'},\n    nfe: true,\n  },\n  Dewott: {\n    types: ['Water'],\n    bs: {hp: 75, at: 75, df: 60, sa: 83, sd: 60, sp: 60},\n    weightkg: 24.5,\n    nfe: true,\n    abilities: {0: 'Torrent'},\n  },\n  Drilbur: {\n    types: ['Ground'],\n    bs: {hp: 60, at: 85, df: 40, sa: 30, sd: 45, sp: 68},\n    weightkg: 8.5,\n    nfe: true,\n    abilities: {0: 'Sand Rush'},\n  },\n  // Druddigon: {\n  //   types: ['Dragon'],\n  //   bs: {hp: 77, at: 120, df: 90, sa: 60, sd: 90, sp: 48},\n  //   weightkg: 139,\n  //   abilities: {0: 'Rough Skin'},\n  // },\n  Ducklett: {\n    types: ['Water', 'Flying'],\n    bs: {hp: 62, at: 44, df: 50, sa: 44, sd: 50, sp: 55},\n    weightkg: 5.5,\n    nfe: true,\n    abilities: {0: 'Keen Eye'},\n  },\n  Duosion: {\n    types: ['Psychic'],\n    bs: {hp: 65, at: 40, df: 50, sa: 125, sd: 60, sp: 30},\n    weightkg: 8,\n    nfe: true,\n    abilities: {0: 'Overcoat'},\n  },\n  // Durant: {\n  //   types: ['Bug', 'Steel'],\n  //   bs: {hp: 58, at: 109, df: 112, sa: 48, sd: 48, sp: 109},\n  //   weightkg: 33,\n  //   abilities: {0: 'Swarm'},\n  // },\n  // Dwebble: {\n  //   types: ['Bug', 'Rock'],\n  //   bs: {hp: 50, at: 65, df: 85, sa: 35, sd: 35, sp: 55},\n  //   weightkg: 14.5,\n  //   nfe: true,\n  //   abilities: {0: 'Sturdy'},\n  // },\n  Eelektrik: {\n    types: ['Electric'],\n    bs: {hp: 65, at: 85, df: 70, sa: 75, sd: 70, sp: 40},\n    weightkg: 22,\n    abilities: {0: 'Levitate'},\n    nfe: true,\n  },\n  Eelektross: {\n    types: ['Electric'],\n    bs: {hp: 85, at: 115, df: 80, sa: 105, sd: 80, sp: 50},\n    weightkg: 80.5,\n    abilities: {0: 'Levitate'},\n  },\n  // Elgyem: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 55, at: 55, df: 55, sa: 85, sd: 55, sp: 30},\n  //   weightkg: 9,\n  //   nfe: true,\n  //   abilities: {0: 'Telepathy'},\n  // },\n  Emboar: {\n    types: ['Fire', 'Fighting'],\n    bs: {hp: 110, at: 123, df: 65, sa: 100, sd: 65, sp: 65},\n    weightkg: 150,\n    abilities: {0: 'Blaze'},\n  },\n  // Emolga: {\n  //   types: ['Electric', 'Flying'],\n  //   bs: {hp: 55, at: 75, df: 60, sa: 75, sd: 60, sp: 103},\n  //   weightkg: 5,\n  //   abilities: {0: 'Static'},\n  // },\n  // Escavalier: {\n  //   types: ['Bug', 'Steel'],\n  //   bs: {hp: 70, at: 135, df: 105, sa: 60, sd: 105, sp: 20},\n  //   weightkg: 33,\n  //   abilities: {0: 'Swarm'},\n  // },\n  Excadrill: {\n    types: ['Ground', 'Steel'],\n    bs: {hp: 110, at: 135, df: 60, sa: 50, sd: 65, sp: 88},\n    weightkg: 40.4,\n    abilities: {0: 'Sand Rush'},\n  },\n  // Ferroseed: {\n  //   types: ['Grass', 'Steel'],\n  //   bs: {hp: 44, at: 50, df: 91, sa: 24, sd: 86, sp: 10},\n  //   weightkg: 18.8,\n  //   nfe: true,\n  //   abilities: {0: 'Iron Barbs'},\n  // },\n  // Ferrothorn: {\n  //   types: ['Grass', 'Steel'],\n  //   bs: {hp: 74, at: 94, df: 131, sa: 54, sd: 116, sp: 20},\n  //   weightkg: 110,\n  //   abilities: {0: 'Iron Barbs'},\n  // },\n  Foongus: {\n    types: ['Grass', 'Poison'],\n    bs: {hp: 69, at: 55, df: 45, sa: 55, sd: 55, sp: 15},\n    weightkg: 1,\n    nfe: true,\n    abilities: {0: 'Effect Spore'},\n  },\n  Fraxure: {\n    types: ['Dragon'],\n    bs: {hp: 66, at: 117, df: 70, sa: 40, sd: 50, sp: 67},\n    weightkg: 36,\n    nfe: true,\n    abilities: {0: 'Rivalry'},\n  },\n  // Frillish: {\n  //   types: ['Water', 'Ghost'],\n  //   bs: {hp: 55, at: 40, df: 50, sa: 65, sd: 85, sp: 40},\n  //   weightkg: 33,\n  //   nfe: true,\n  //   abilities: {0: 'Water Absorb'},\n  // },\n  Galvantula: {\n    types: ['Bug', 'Electric'],\n    bs: {hp: 70, at: 77, df: 60, sa: 97, sd: 60, sp: 108},\n    weightkg: 14.3,\n    abilities: {0: 'Compound Eyes'},\n  },\n  // Garbodor: {\n  //   types: ['Poison'],\n  //   bs: {hp: 80, at: 95, df: 82, sa: 60, sd: 82, sp: 75},\n  //   weightkg: 107.3,\n  //   abilities: {0: 'Stench'},\n  // },\n  // Genesect: {\n  //   types: ['Bug', 'Steel'],\n  //   bs: {hp: 71, at: 120, df: 95, sa: 120, sd: 95, sp: 99},\n  //   weightkg: 82.5,\n  //   abilities: {0: 'Download'},\n  //   gender: 'N',\n  //   otherFormes: ['Genesect-Burn', 'Genesect-Chill', 'Genesect-Douse', 'Genesect-Shock'],\n  // },\n  // 'Genesect-Burn': {\n  //   types: ['Bug', 'Steel'],\n  //   bs: {hp: 71, at: 120, df: 95, sa: 120, sd: 95, sp: 99},\n  //   weightkg: 82.5,\n  //   abilities: {0: 'Download'},\n  //   gender: 'N',\n  //   baseSpecies: 'Genesect',\n  // },\n  // 'Genesect-Chill': {\n  //   types: ['Bug', 'Steel'],\n  //   bs: {hp: 71, at: 120, df: 95, sa: 120, sd: 95, sp: 99},\n  //   weightkg: 82.5,\n  //   abilities: {0: 'Download'},\n  //   gender: 'N',\n  //   baseSpecies: 'Genesect',\n  // },\n  // 'Genesect-Douse': {\n  //   types: ['Bug', 'Steel'],\n  //   bs: {hp: 71, at: 120, df: 95, sa: 120, sd: 95, sp: 99},\n  //   weightkg: 82.5,\n  //   abilities: {0: 'Download'},\n  //   gender: 'N',\n  //   baseSpecies: 'Genesect',\n  // },\n  // 'Genesect-Shock': {\n  //   types: ['Bug', 'Steel'],\n  //   bs: {hp: 71, at: 120, df: 95, sa: 120, sd: 95, sp: 99},\n  //   weightkg: 82.5,\n  //   abilities: {0: 'Download'},\n  //   gender: 'N',\n  //   baseSpecies: 'Genesect',\n  // },\n  // Gigalith: {\n  //   types: ['Rock'],\n  //   bs: {hp: 85, at: 135, df: 130, sa: 60, sd: 70, sp: 25},\n  //   weightkg: 260,\n  //   abilities: {0: 'Sturdy'},\n  // },\n  Golett: {\n    types: ['Ground', 'Ghost'],\n    bs: {hp: 59, at: 74, df: 50, sa: 35, sd: 50, sp: 35},\n    weightkg: 92,\n    nfe: true,\n    gender: 'N',\n    abilities: {0: 'Iron Fist'},\n  },\n  Golurk: {\n    types: ['Ground', 'Ghost'],\n    bs: {hp: 89, at: 124, df: 80, sa: 55, sd: 80, sp: 55},\n    weightkg: 330,\n    gender: 'N',\n    abilities: {0: 'Iron Fist'},\n  },\n  Gothita: {\n    types: ['Psychic'],\n    bs: {hp: 45, at: 30, df: 50, sa: 55, sd: 65, sp: 45},\n    weightkg: 5.8,\n    nfe: true,\n    abilities: {0: 'Frisk'},\n  },\n  Gothitelle: {\n    types: ['Psychic'],\n    bs: {hp: 70, at: 55, df: 95, sa: 95, sd: 110, sp: 65},\n    weightkg: 44,\n    abilities: {0: 'Frisk'},\n  },\n  Gothorita: {\n    types: ['Psychic'],\n    bs: {hp: 60, at: 45, df: 70, sa: 75, sd: 85, sp: 55},\n    weightkg: 18,\n    nfe: true,\n    abilities: {0: 'Frisk'},\n  },\n  Gurdurr: {\n    types: ['Fighting'],\n    bs: {hp: 85, at: 105, df: 85, sa: 40, sd: 50, sp: 40},\n    weightkg: 40,\n    nfe: true,\n    abilities: {0: 'Guts'},\n  },\n  Haxorus: {\n    types: ['Dragon'],\n    bs: {hp: 76, at: 147, df: 90, sa: 60, sd: 70, sp: 97},\n    weightkg: 105.5,\n    abilities: {0: 'Rivalry'},\n  },\n  // Heatmor: {\n  //   types: ['Fire'],\n  //   bs: {hp: 85, at: 97, df: 66, sa: 105, sd: 66, sp: 65},\n  //   weightkg: 58,\n  //   abilities: {0: 'Gluttony'},\n  // },\n  // Herdier: {\n  //   types: ['Normal'],\n  //   bs: {hp: 65, at: 80, df: 65, sa: 35, sd: 65, sp: 60},\n  //   weightkg: 14.7,\n  //   nfe: true,\n  //   abilities: {0: 'Intimidate'},\n  // },\n  Hydreigon: {\n    types: ['Dark', 'Dragon'],\n    bs: {hp: 92, at: 105, df: 90, sa: 125, sd: 90, sp: 98},\n    weightkg: 160,\n    abilities: {0: 'Levitate'},\n  },\n  // Jellicent: {\n  //   types: ['Water', 'Ghost'],\n  //   bs: {hp: 100, at: 60, df: 70, sa: 85, sd: 105, sp: 60},\n  //   weightkg: 135,\n  //   abilities: {0: 'Water Absorb'},\n  // },\n  Joltik: {\n    types: ['Bug', 'Electric'],\n    bs: {hp: 50, at: 47, df: 50, sa: 57, sd: 50, sp: 65},\n    weightkg: 0.6,\n    nfe: true,\n    abilities: {0: 'Compound Eyes'},\n  },\n  // Karrablast: {\n  //   types: ['Bug'],\n  //   bs: {hp: 50, at: 75, df: 45, sa: 40, sd: 45, sp: 60},\n  //   weightkg: 5.9,\n  //   nfe: true,\n  //   abilities: {0: 'Swarm'},\n  // },\n  Keldeo: {\n    types: ['Water', 'Fighting'],\n    bs: {hp: 91, at: 72, df: 90, sa: 129, sd: 90, sp: 108},\n    weightkg: 48.5,\n    abilities: {0: 'Justified'},\n    gender: 'N',\n    otherFormes: ['Keldeo-Resolute'],\n  },\n  'Keldeo-Resolute': {\n    types: ['Water', 'Fighting'],\n    bs: {hp: 91, at: 72, df: 90, sa: 129, sd: 90, sp: 108},\n    weightkg: 48.5,\n    abilities: {0: 'Justified'},\n    gender: 'N',\n    baseSpecies: 'Keldeo',\n  },\n  // Klang: {\n  //   types: ['Steel'],\n  //   bs: {hp: 60, at: 80, df: 95, sa: 70, sd: 85, sp: 50},\n  //   weightkg: 51,\n  //   nfe: true,\n  //   gender: 'N',\n  //   abilities: {0: 'Plus'},\n  // },\n  // Klink: {\n  //   types: ['Steel'],\n  //   bs: {hp: 40, at: 55, df: 70, sa: 45, sd: 60, sp: 30},\n  //   weightkg: 21,\n  //   nfe: true,\n  //   gender: 'N',\n  //   abilities: {0: 'Plus'},\n  // },\n  // Klinklang: {\n  //   types: ['Steel'],\n  //   bs: {hp: 60, at: 100, df: 115, sa: 70, sd: 85, sp: 90},\n  //   weightkg: 81,\n  //   gender: 'N',\n  //   abilities: {0: 'Plus'},\n  // },\n  Krokorok: {\n    types: ['Ground', 'Dark'],\n    bs: {hp: 60, at: 82, df: 45, sa: 45, sd: 45, sp: 74},\n    weightkg: 33.4,\n    nfe: true,\n    abilities: {0: 'Intimidate'},\n  },\n  Krookodile: {\n    types: ['Ground', 'Dark'],\n    bs: {hp: 95, at: 117, df: 70, sa: 65, sd: 70, sp: 92},\n    weightkg: 96.3,\n    abilities: {0: 'Intimidate'},\n  },\n  Kyurem: {\n    types: ['Dragon', 'Ice'],\n    bs: {hp: 125, at: 130, df: 90, sa: 130, sd: 90, sp: 95},\n    weightkg: 325,\n    abilities: {0: 'Pressure'},\n    gender: 'N',\n    otherFormes: ['Kyurem-Black', 'Kyurem-White'],\n  },\n  'Kyurem-Black': {\n    types: ['Dragon', 'Ice'],\n    bs: {hp: 125, at: 170, df: 100, sa: 120, sd: 90, sp: 95},\n    weightkg: 325,\n    abilities: {0: 'Teravolt'},\n    gender: 'N',\n    baseSpecies: 'Kyurem',\n  },\n  'Kyurem-White': {\n    types: ['Dragon', 'Ice'],\n    bs: {hp: 125, at: 120, df: 90, sa: 170, sd: 100, sp: 95},\n    weightkg: 325,\n    abilities: {0: 'Turboblaze'},\n    gender: 'N',\n    baseSpecies: 'Kyurem',\n  },\n  Lampent: {\n    types: ['Ghost', 'Fire'],\n    bs: {hp: 60, at: 40, df: 60, sa: 95, sd: 60, sp: 55},\n    weightkg: 13,\n    nfe: true,\n    abilities: {0: 'Flash Fire'},\n  },\n  Landorus: {\n    types: ['Ground', 'Flying'],\n    bs: {hp: 89, at: 125, df: 90, sa: 115, sd: 80, sp: 101},\n    weightkg: 68,\n    abilities: {0: 'Sand Force'},\n    otherFormes: ['Landorus-Therian'],\n    gender: 'M',\n  },\n  'Landorus-Therian': {\n    types: ['Ground', 'Flying'],\n    bs: {hp: 89, at: 145, df: 90, sa: 105, sd: 80, sp: 91},\n    weightkg: 68,\n    abilities: {0: 'Intimidate'},\n    baseSpecies: 'Landorus',\n    gender: 'M',\n  },\n  Larvesta: {\n    types: ['Bug', 'Fire'],\n    bs: {hp: 55, at: 85, df: 55, sa: 50, sd: 55, sp: 60},\n    weightkg: 28.8,\n    nfe: true,\n    abilities: {0: 'Flame Body'},\n  },\n  Leavanny: {\n    types: ['Bug', 'Grass'],\n    bs: {hp: 75, at: 103, df: 80, sa: 70, sd: 70, sp: 92},\n    weightkg: 20.5,\n    abilities: {0: 'Swarm'},\n  },\n  // Liepard: {\n  //   types: ['Dark'],\n  //   bs: {hp: 64, at: 88, df: 50, sa: 88, sd: 50, sp: 106},\n  //   weightkg: 37.5,\n  //   abilities: {0: 'Limber'},\n  // },\n  Lilligant: {\n    types: ['Grass'],\n    bs: {hp: 70, at: 60, df: 75, sa: 110, sd: 75, sp: 90},\n    weightkg: 16.3,\n    abilities: {0: 'Chlorophyll'},\n    gender: 'F',\n  },\n  // Lillipup: {\n  //   types: ['Normal'],\n  //   bs: {hp: 45, at: 60, df: 45, sa: 25, sd: 45, sp: 55},\n  //   weightkg: 4.1,\n  //   nfe: true,\n  //   abilities: {0: 'Vital Spirit'},\n  // },\n  Litwick: {\n    types: ['Ghost', 'Fire'],\n    bs: {hp: 50, at: 30, df: 55, sa: 65, sd: 55, sp: 20},\n    weightkg: 3.1,\n    nfe: true,\n    abilities: {0: 'Flash Fire'},\n  },\n  // Malaconda: {\n  //   types: ['Dark', 'Grass'],\n  //   bs: {hp: 115, at: 100, df: 60, sa: 40, sd: 130, sp: 55},\n  //   weightkg: 108.8,\n  //   abilities: {0: 'Harvest'},\n  // },\n  Mandibuzz: {\n    types: ['Dark', 'Flying'],\n    bs: {hp: 110, at: 65, df: 105, sa: 55, sd: 95, sp: 80},\n    weightkg: 39.5,\n    abilities: {0: 'Big Pecks'},\n    gender: 'F',\n  },\n  // Maractus: {\n  //   types: ['Grass'],\n  //   bs: {hp: 75, at: 86, df: 67, sa: 106, sd: 67, sp: 60},\n  //   weightkg: 28,\n  //   abilities: {0: 'Water Absorb'},\n  // },\n  Meloetta: {\n    types: ['Normal', 'Psychic'],\n    bs: {hp: 100, at: 77, df: 77, sa: 128, sd: 128, sp: 90},\n    weightkg: 6.5,\n    abilities: {0: 'Serene Grace'},\n    otherFormes: ['Meloetta-Pirouette'],\n    gender: 'N',\n  },\n  'Meloetta-Pirouette': {\n    types: ['Normal', 'Fighting'],\n    bs: {hp: 100, at: 128, df: 90, sa: 77, sd: 77, sp: 128},\n    weightkg: 6.5,\n    abilities: {0: 'Serene Grace'},\n    baseSpecies: 'Meloetta',\n    gender: 'N',\n  },\n  Mienfoo: {\n    types: ['Fighting'],\n    bs: {hp: 45, at: 85, df: 50, sa: 55, sd: 50, sp: 65},\n    weightkg: 20,\n    nfe: true,\n    abilities: {0: 'Inner Focus'},\n  },\n  Mienshao: {\n    types: ['Fighting'],\n    bs: {hp: 65, at: 125, df: 60, sa: 95, sd: 60, sp: 105},\n    weightkg: 35.5,\n    abilities: {0: 'Inner Focus'},\n  },\n  Minccino: {\n    types: ['Normal'],\n    bs: {hp: 55, at: 50, df: 40, sa: 40, sd: 40, sp: 75},\n    weightkg: 5.8,\n    nfe: true,\n    abilities: {0: 'Cute Charm'},\n  },\n  // Mollux: {\n  //   types: ['Fire', 'Poison'],\n  //   bs: {hp: 95, at: 45, df: 83, sa: 131, sd: 105, sp: 76},\n  //   weightkg: 41,\n  //   abilities: {0: 'Dry Skin'},\n  // },\n  // Munna: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 76, at: 25, df: 45, sa: 67, sd: 55, sp: 24},\n  //   weightkg: 23.3,\n  //   nfe: true,\n  //   abilities: {0: 'Forewarn'},\n  // },\n  // Musharna: {\n  //   types: ['Psychic'],\n  //   bs: {hp: 116, at: 55, df: 85, sa: 107, sd: 95, sp: 29},\n  //   weightkg: 60.5,\n  //   abilities: {0: 'Forewarn'},\n  // },\n  // Necturine: {\n  //   types: ['Grass', 'Ghost'],\n  //   bs: {hp: 49, at: 55, df: 60, sa: 50, sd: 75, sp: 51},\n  //   weightkg: 1.8,\n  //   nfe: true,\n  //   abilities: {0: 'Anticipation'},\n  // },\n  // Necturna: {\n  //   types: ['Grass', 'Ghost'],\n  //   bs: {hp: 64, at: 120, df: 100, sa: 85, sd: 120, sp: 81},\n  //   weightkg: 49.6,\n  //   abilities: {0: 'Forewarn'},\n  // },\n  Oshawott: {\n    types: ['Water'],\n    bs: {hp: 55, at: 55, df: 45, sa: 63, sd: 45, sp: 45},\n    weightkg: 5.9,\n    nfe: true,\n    abilities: {0: 'Torrent'},\n  },\n  // Palpitoad: {\n  //   types: ['Water', 'Ground'],\n  //   bs: {hp: 75, at: 65, df: 55, sa: 65, sd: 55, sp: 69},\n  //   weightkg: 17,\n  //   nfe: true,\n  //   abilities: {0: 'Swift Swim'},\n  // },\n  // Panpour: {\n  //   types: ['Water'],\n  //   bs: {hp: 50, at: 53, df: 48, sa: 53, sd: 48, sp: 64},\n  //   weightkg: 13.5,\n  //   nfe: true,\n  //   abilities: {0: 'Gluttony'},\n  // },\n  // Pansage: {\n  //   types: ['Grass'],\n  //   bs: {hp: 50, at: 53, df: 48, sa: 53, sd: 48, sp: 64},\n  //   weightkg: 10.5,\n  //   nfe: true,\n  //   abilities: {0: 'Gluttony'},\n  // },\n  // Pansear: {\n  //   types: ['Fire'],\n  //   bs: {hp: 50, at: 53, df: 48, sa: 53, sd: 48, sp: 64},\n  //   weightkg: 11,\n  //   nfe: true,\n  //   abilities: {0: 'Gluttony'},\n  // },\n  // Patrat: {\n  //   types: ['Normal'],\n  //   bs: {hp: 45, at: 55, df: 39, sa: 35, sd: 39, sp: 42},\n  //   weightkg: 11.6,\n  //   nfe: true,\n  //   abilities: {0: 'Run Away'},\n  // },\n  Pawniard: {\n    types: ['Dark', 'Steel'],\n    bs: {hp: 45, at: 85, df: 70, sa: 40, sd: 40, sp: 60},\n    weightkg: 10.2,\n    nfe: true,\n    abilities: {0: 'Defiant'},\n  },\n  Petilil: {\n    types: ['Grass'],\n    bs: {hp: 45, at: 35, df: 50, sa: 70, sd: 50, sp: 30},\n    weightkg: 6.6,\n    nfe: true,\n    abilities: {0: 'Chlorophyll'},\n    gender: 'F',\n  },\n  // Pidove: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 50, at: 55, df: 50, sa: 36, sd: 30, sp: 43},\n  //   weightkg: 2.1,\n  //   nfe: true,\n  //   abilities: {0: 'Big Pecks'},\n  // },\n  Pignite: {\n    types: ['Fire', 'Fighting'],\n    bs: {hp: 90, at: 93, df: 55, sa: 70, sd: 55, sp: 55},\n    weightkg: 55.5,\n    nfe: true,\n    abilities: {0: 'Blaze'},\n  },\n  // Purrloin: {\n  //   types: ['Dark'],\n  //   bs: {hp: 41, at: 50, df: 37, sa: 50, sd: 37, sp: 66},\n  //   weightkg: 10.1,\n  //   nfe: true,\n  //   abilities: {0: 'Limber'},\n  // },\n  Reshiram: {\n    types: ['Dragon', 'Fire'],\n    bs: {hp: 100, at: 120, df: 100, sa: 150, sd: 120, sp: 90},\n    weightkg: 330,\n    abilities: {0: 'Turboblaze'},\n    gender: 'N',\n  },\n  Reuniclus: {\n    types: ['Psychic'],\n    bs: {hp: 110, at: 65, df: 75, sa: 125, sd: 85, sp: 30},\n    weightkg: 20.1,\n    abilities: {0: 'Overcoat'},\n  },\n  // Roggenrola: {\n  //   types: ['Rock'],\n  //   bs: {hp: 55, at: 75, df: 85, sa: 25, sd: 25, sp: 15},\n  //   weightkg: 18,\n  //   nfe: true,\n  //   abilities: {0: 'Sturdy'},\n  // },\n  Rufflet: {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 70, at: 83, df: 50, sa: 37, sd: 50, sp: 60},\n    weightkg: 10.5,\n    nfe: true,\n    abilities: {0: 'Keen Eye'},\n    gender: 'M',\n  },\n  Samurott: {\n    types: ['Water'],\n    bs: {hp: 95, at: 100, df: 85, sa: 108, sd: 70, sp: 70},\n    weightkg: 94.6,\n    abilities: {0: 'Torrent'},\n  },\n  Sandile: {\n    types: ['Ground', 'Dark'],\n    bs: {hp: 50, at: 72, df: 35, sa: 35, sd: 35, sp: 65},\n    weightkg: 15.2,\n    nfe: true,\n    abilities: {0: 'Intimidate'},\n  },\n  // Sawk: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 75, at: 125, df: 75, sa: 30, sd: 75, sp: 85},\n  //   weightkg: 51,\n  //   abilities: {0: 'Sturdy'},\n  // },\n  Sawsbuck: {\n    types: ['Normal', 'Grass'],\n    bs: {hp: 80, at: 100, df: 70, sa: 60, sd: 70, sp: 95},\n    weightkg: 92.5,\n    abilities: {0: 'Chlorophyll'},\n  },\n  // Scolipede: {\n  //   types: ['Bug', 'Poison'],\n  //   bs: {hp: 60, at: 90, df: 89, sa: 55, sd: 69, sp: 112},\n  //   weightkg: 200.5,\n  //   abilities: {0: 'Poison Point'},\n  // },\n  Scrafty: {\n    types: ['Dark', 'Fighting'],\n    bs: {hp: 65, at: 90, df: 115, sa: 45, sd: 115, sp: 58},\n    weightkg: 30,\n    abilities: {0: 'Shed Skin'},\n  },\n  Scraggy: {\n    types: ['Dark', 'Fighting'],\n    bs: {hp: 50, at: 75, df: 70, sa: 35, sd: 70, sp: 48},\n    weightkg: 11.8,\n    nfe: true,\n    abilities: {0: 'Shed Skin'},\n  },\n  // Scratchet: {\n  //   types: ['Normal', 'Fighting'],\n  //   bs: {hp: 55, at: 85, df: 80, sa: 20, sd: 70, sp: 40},\n  //   weightkg: 20,\n  //   nfe: true,\n  //   abilities: {0: 'Scrappy'},\n  // },\n  // Seismitoad: {\n  //   types: ['Water', 'Ground'],\n  //   bs: {hp: 105, at: 85, df: 75, sa: 85, sd: 75, sp: 74},\n  //   weightkg: 62,\n  //   abilities: {0: 'Swift Swim'},\n  // },\n  Serperior: {\n    types: ['Grass'],\n    bs: {hp: 75, at: 75, df: 95, sa: 75, sd: 95, sp: 113},\n    weightkg: 63,\n    abilities: {0: 'Overgrow'},\n  },\n  Servine: {\n    types: ['Grass'],\n    bs: {hp: 60, at: 60, df: 75, sa: 60, sd: 75, sp: 83},\n    weightkg: 16,\n    nfe: true,\n    abilities: {0: 'Overgrow'},\n  },\n  Sewaddle: {\n    types: ['Bug', 'Grass'],\n    bs: {hp: 45, at: 53, df: 70, sa: 40, sd: 60, sp: 42},\n    weightkg: 2.5,\n    nfe: true,\n    abilities: {0: 'Swarm'},\n  },\n  // Shelmet: {\n  //   types: ['Bug'],\n  //   bs: {hp: 50, at: 40, df: 85, sa: 40, sd: 65, sp: 25},\n  //   weightkg: 7.7,\n  //   nfe: true,\n  //   abilities: {0: 'Hydration'},\n  // },\n  // Sigilyph: {\n  //   types: ['Psychic', 'Flying'],\n  //   bs: {hp: 72, at: 58, df: 80, sa: 103, sd: 80, sp: 97},\n  //   weightkg: 14,\n  //   abilities: {0: 'Wonder Skin'},\n  // },\n  // Simipour: {\n  //   types: ['Water'],\n  //   bs: {hp: 75, at: 98, df: 63, sa: 98, sd: 63, sp: 101},\n  //   weightkg: 29,\n  //   abilities: {0: 'Gluttony'},\n  // },\n  // Simisage: {\n  //   types: ['Grass'],\n  //   bs: {hp: 75, at: 98, df: 63, sa: 98, sd: 63, sp: 101},\n  //   weightkg: 30.5,\n  //   abilities: {0: 'Gluttony'},\n  // },\n  // Simisear: {\n  //   types: ['Fire'],\n  //   bs: {hp: 75, at: 98, df: 63, sa: 98, sd: 63, sp: 101},\n  //   weightkg: 28,\n  //   abilities: {0: 'Gluttony'},\n  // },\n  Snivy: {\n    types: ['Grass'],\n    bs: {hp: 45, at: 45, df: 55, sa: 45, sd: 55, sp: 63},\n    weightkg: 8.1,\n    nfe: true,\n    abilities: {0: 'Overgrow'},\n  },\n  Solosis: {\n    types: ['Psychic'],\n    bs: {hp: 45, at: 30, df: 40, sa: 105, sd: 50, sp: 20},\n    weightkg: 1,\n    nfe: true,\n    abilities: {0: 'Overcoat'},\n  },\n  // Stoutland: {\n  //   types: ['Normal'],\n  //   bs: {hp: 85, at: 100, df: 90, sa: 45, sd: 90, sp: 80},\n  //   weightkg: 61,\n  //   abilities: {0: 'Intimidate'},\n  // },\n  // Stunfisk: {\n  //   types: ['Ground', 'Electric'],\n  //   bs: {hp: 109, at: 66, df: 84, sa: 81, sd: 99, sp: 32},\n  //   weightkg: 11,\n  //   abilities: {0: 'Static'},\n  // },\n  Swadloon: {\n    types: ['Bug', 'Grass'],\n    bs: {hp: 55, at: 63, df: 90, sa: 50, sd: 80, sp: 42},\n    weightkg: 7.3,\n    nfe: true,\n    abilities: {0: 'Leaf Guard'},\n  },\n  Swanna: {\n    types: ['Water', 'Flying'],\n    bs: {hp: 75, at: 87, df: 63, sa: 87, sd: 63, sp: 98},\n    weightkg: 24.2,\n    abilities: {0: 'Keen Eye'},\n  },\n  // Swoobat: {\n  //   types: ['Psychic', 'Flying'],\n  //   bs: {hp: 67, at: 57, df: 55, sa: 77, sd: 55, sp: 114},\n  //   weightkg: 10.5,\n  //   abilities: {0: 'Unaware'},\n  // },\n  Tepig: {\n    types: ['Fire'],\n    bs: {hp: 65, at: 63, df: 45, sa: 45, sd: 45, sp: 45},\n    weightkg: 9.9,\n    nfe: true,\n    abilities: {0: 'Blaze'},\n  },\n  Terrakion: {\n    types: ['Rock', 'Fighting'],\n    bs: {hp: 91, at: 129, df: 90, sa: 72, sd: 90, sp: 108},\n    weightkg: 260,\n    abilities: {0: 'Justified'},\n    gender: 'N',\n  },\n  // Throh: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 120, at: 100, df: 85, sa: 30, sd: 85, sp: 45},\n  //   weightkg: 55.5,\n  //   abilities: {0: 'Guts'},\n  // },\n  Thundurus: {\n    types: ['Electric', 'Flying'],\n    bs: {hp: 79, at: 115, df: 70, sa: 125, sd: 80, sp: 111},\n    weightkg: 61,\n    abilities: {0: 'Prankster'},\n    otherFormes: ['Thundurus-Therian'],\n    gender: 'M',\n  },\n  'Thundurus-Therian': {\n    types: ['Electric', 'Flying'],\n    bs: {hp: 79, at: 105, df: 70, sa: 145, sd: 80, sp: 101},\n    weightkg: 61,\n    abilities: {0: 'Volt Absorb'},\n    baseSpecies: 'Thundurus',\n    gender: 'M',\n  },\n  Timburr: {\n    types: ['Fighting'],\n    bs: {hp: 75, at: 80, df: 55, sa: 25, sd: 35, sp: 35},\n    weightkg: 12.5,\n    nfe: true,\n    abilities: {0: 'Guts'},\n  },\n  // Tirtouga: {\n  //   types: ['Water', 'Rock'],\n  //   bs: {hp: 54, at: 78, df: 103, sa: 53, sd: 45, sp: 22},\n  //   weightkg: 16.5,\n  //   nfe: true,\n  //   abilities: {0: 'Solid Rock'},\n  // },\n  // Tomohawk: {\n  //   types: ['Flying', 'Fighting'],\n  //   bs: {hp: 105, at: 60, df: 90, sa: 115, sd: 80, sp: 85},\n  //   weightkg: 37.2,\n  //   abilities: {0: 'Intimidate'},\n  // },\n  Tornadus: {\n    types: ['Flying'],\n    bs: {hp: 79, at: 115, df: 70, sa: 125, sd: 80, sp: 111},\n    weightkg: 63,\n    abilities: {0: 'Prankster'},\n    otherFormes: ['Tornadus-Therian'],\n    gender: 'M',\n  },\n  'Tornadus-Therian': {\n    types: ['Flying'],\n    bs: {hp: 79, at: 100, df: 80, sa: 110, sd: 90, sp: 121},\n    weightkg: 63,\n    abilities: {0: 'Regenerator'},\n    baseSpecies: 'Tornadus',\n    gender: 'M',\n  },\n  // Tranquill: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 62, at: 77, df: 62, sa: 50, sd: 42, sp: 65},\n  //   weightkg: 15,\n  //   nfe: true,\n  //   abilities: {0: 'Big Pecks'},\n  // },\n  // Trubbish: {\n  //   types: ['Poison'],\n  //   bs: {hp: 50, at: 50, df: 62, sa: 40, sd: 62, sp: 65},\n  //   weightkg: 31,\n  //   nfe: true,\n  //   abilities: {0: 'Stench'},\n  // },\n  // Tympole: {\n  //   types: ['Water'],\n  //   bs: {hp: 50, at: 50, df: 40, sa: 50, sd: 40, sp: 64},\n  //   weightkg: 4.5,\n  //   nfe: true,\n  //   abilities: {0: 'Swift Swim'},\n  // },\n  Tynamo: {\n    types: ['Electric'],\n    bs: {hp: 35, at: 55, df: 40, sa: 45, sd: 40, sp: 60},\n    weightkg: 0.3,\n    abilities: {0: 'Levitate'},\n    nfe: true,\n  },\n  // Unfezant: {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 80, at: 105, df: 80, sa: 65, sd: 55, sp: 93},\n  //   weightkg: 29,\n  //   abilities: {0: 'Big Pecks'},\n  // },\n  // Vanillish: {\n  //   types: ['Ice'],\n  //   bs: {hp: 51, at: 65, df: 65, sa: 80, sd: 75, sp: 59},\n  //   weightkg: 41,\n  //   nfe: true,\n  //   abilities: {0: 'Ice Body'},\n  // },\n  // Vanillite: {\n  //   types: ['Ice'],\n  //   bs: {hp: 36, at: 50, df: 50, sa: 65, sd: 60, sp: 44},\n  //   weightkg: 5.7,\n  //   nfe: true,\n  //   abilities: {0: 'Ice Body'},\n  // },\n  // Vanilluxe: {\n  //   types: ['Ice'],\n  //   bs: {hp: 71, at: 95, df: 85, sa: 110, sd: 95, sp: 79},\n  //   weightkg: 57.5,\n  //   abilities: {0: 'Ice Body'},\n  // },\n  // Venipede: {\n  //   types: ['Bug', 'Poison'],\n  //   bs: {hp: 30, at: 45, df: 59, sa: 30, sd: 39, sp: 57},\n  //   weightkg: 5.3,\n  //   nfe: true,\n  //   abilities: {0: 'Poison Point'},\n  // },\n  // Victini: {\n  //   types: ['Psychic', 'Fire'],\n  //   bs: {hp: 100, at: 100, df: 100, sa: 100, sd: 100, sp: 100},\n  //   weightkg: 4,\n  //   abilities: {0: 'Victory Star'},\n  //   gender: 'N',\n  // },\n  Virizion: {\n    types: ['Grass', 'Fighting'],\n    bs: {hp: 91, at: 90, df: 72, sa: 90, sd: 129, sp: 108},\n    weightkg: 200,\n    abilities: {0: 'Justified'},\n    gender: 'N',\n  },\n  Volcarona: {\n    types: ['Bug', 'Fire'],\n    bs: {hp: 85, at: 60, df: 65, sa: 135, sd: 105, sp: 100},\n    weightkg: 46,\n    abilities: {0: 'Flame Body'},\n  },\n  Vullaby: {\n    types: ['Dark', 'Flying'],\n    bs: {hp: 70, at: 55, df: 75, sa: 45, sd: 65, sp: 60},\n    weightkg: 9,\n    nfe: true,\n    abilities: {0: 'Big Pecks'},\n    gender: 'F',\n  },\n  // Watchog: {\n  //   types: ['Normal'],\n  //   bs: {hp: 60, at: 85, df: 69, sa: 60, sd: 69, sp: 77},\n  //   weightkg: 27,\n  //   abilities: {0: 'Illuminate'},\n  // },\n  Whimsicott: {\n    types: ['Grass'],\n    bs: {hp: 60, at: 67, df: 85, sa: 77, sd: 75, sp: 116},\n    weightkg: 6.6,\n    abilities: {0: 'Prankster'},\n  },\n  // Whirlipede: {\n  //   types: ['Bug', 'Poison'],\n  //   bs: {hp: 40, at: 55, df: 99, sa: 40, sd: 79, sp: 47},\n  //   weightkg: 58.5,\n  //   nfe: true,\n  //   abilities: {0: 'Poison Point'},\n  // },\n  // Woobat: {\n  //   types: ['Psychic', 'Flying'],\n  //   bs: {hp: 55, at: 45, df: 43, sa: 55, sd: 43, sp: 72},\n  //   weightkg: 2.1,\n  //   nfe: true,\n  //   abilities: {0: 'Unaware'},\n  // },\n  // Yamask: {\n  //   types: ['Ghost'],\n  //   bs: {hp: 38, at: 30, df: 85, sa: 55, sd: 65, sp: 30},\n  //   weightkg: 1.5,\n  //   abilities: {0: 'Mummy'},\n  //   nfe: true,\n  // },\n  Zebstrika: {\n    types: ['Electric'],\n    bs: {hp: 75, at: 100, df: 63, sa: 80, sd: 63, sp: 116},\n    weightkg: 79.5,\n    abilities: {0: 'Lightning Rod'},\n  },\n  Zekrom: {\n    types: ['Dragon', 'Electric'],\n    bs: {hp: 100, at: 150, df: 120, sa: 120, sd: 100, sp: 90},\n    weightkg: 345,\n    abilities: {0: 'Teravolt'},\n    gender: 'N',\n  },\n  Zoroark: {\n    types: ['Dark'],\n    bs: {hp: 60, at: 105, df: 60, sa: 120, sd: 60, sp: 105},\n    weightkg: 81.1,\n    abilities: {0: 'Illusion'},\n  },\n  Zorua: {\n    types: ['Dark'],\n    bs: {hp: 40, at: 65, df: 40, sa: 80, sd: 40, sp: 65},\n    weightkg: 12.5,\n    abilities: {0: 'Illusion'},\n    nfe: true,\n  },\n  Zweilous: {\n    types: ['Dark', 'Dragon'],\n    bs: {hp: 72, at: 85, df: 70, sa: 65, sd: 70, sp: 58},\n    weightkg: 50,\n    abilities: {0: 'Hustle'},\n    nfe: true,\n  },\n};\n\nconst BW: {[name: string]: SpeciesData} = extend(true, {}, DPP, BW_PATCH);\n\n// @ts-ignore readonly\ndelete BW['Pichu'].otherFormes;\n// delete BW['Pichu-Spiky-eared'];\n\nconst XY_PATCH: {[name: string]: DeepPartial<SpeciesData>} = {\n  // Abomasnow: {otherFormes: ['Abomasnow-Mega']},\n  // Absol: {otherFormes: ['Absol-Mega']},\n  // Aerodactyl: {otherFormes: ['Aerodactyl-Mega']},\n  // Aggron: {otherFormes: ['Aggron-Mega']},\n  // Alakazam: {bs: {sd: 95}, otherFormes: ['Alakazam-Mega']},\n  // Altaria: {otherFormes: ['Altaria-Mega']},\n  // Ampharos: {bs: {df: 85}, otherFormes: ['Ampharos-Mega']},\n  // Audino: {otherFormes: ['Audino-Mega']},\n  Azumarill: {types: ['Water', 'Fairy'], bs: {sa: 60}},\n  Azurill: {types: ['Normal', 'Fairy']},\n  // Banette: {otherFormes: ['Banette-Mega']},\n  // Beautifly: {bs: {sa: 100}},\n  // Beedrill: {bs: {at: 90}, otherFormes: ['Beedrill-Mega']},\n  Bellossom: {bs: {df: 95}},\n  // Blastoise: {otherFormes: ['Blastoise-Mega']},\n  // Blaziken: {otherFormes: ['Blaziken-Mega']},\n  // Butterfree: {bs: {sa: 90}},\n  // Camerupt: {otherFormes: ['Camerupt-Mega']},\n  // Charizard: {otherFormes: ['Charizard-Mega-X', 'Charizard-Mega-Y']},\n  Clefable: {types: ['Fairy'], bs: {sa: 95}},\n  Clefairy: {types: ['Fairy']},\n  Cleffa: {types: ['Fairy']},\n  Cottonee: {types: ['Grass', 'Fairy']},\n  // Exploud: {bs: {sd: 73}},\n  // Gallade: {otherFormes: ['Gallade-Mega']},\n  // Garchomp: {otherFormes: ['Garchomp-Mega']},\n  Gardevoir: {types: ['Psychic', 'Fairy']}, // otherFormes: ['Gardevoir-Mega']},\n  // Gengar: {otherFormes: ['Gengar-Mega']},\n  // Gigalith: {bs: {sd: 80}},\n  // Glalie: {otherFormes: ['Glalie-Mega']},\n  Golem: {bs: {at: 120}},\n  Granbull: {types: ['Fairy']},\n  // Groudon: {otherFormes: ['Groudon-Primal']},\n  // Gyarados: {otherFormes: ['Gyarados-Mega']},\n  // Heracross: {otherFormes: ['Heracross-Mega']},\n  // Houndoom: {otherFormes: ['Houndoom-Mega']},\n  Igglybuff: {types: ['Normal', 'Fairy']},\n  Jigglypuff: {types: ['Normal', 'Fairy']},\n  Jumpluff: {bs: {sd: 95}},\n  // Kangaskhan: {otherFormes: ['Kangaskhan-Mega']},\n  Kirlia: {types: ['Psychic', 'Fairy']},\n  Krookodile: {bs: {df: 80}},\n  // Kyogre: {otherFormes: ['Kyogre-Primal']},\n  // Latias: {otherFormes: ['Latias-Mega']},\n  // Latios: {otherFormes: ['Latios-Mega']},\n  Leavanny: {bs: {sd: 80}},\n  // Lopunny: {otherFormes: ['Lopunny-Mega']},\n  // Lucario: {otherFormes: ['Lucario-Mega']},\n  // Manectric: {otherFormes: ['Manectric-Mega']},\n  Marill: {types: ['Water', 'Fairy']},\n  // Mawile: {types: ['Steel', 'Fairy'], otherFormes: ['Mawile-Mega']},\n  Medicham: {otherFormes: ['Medicham-Mega']},\n  // Metagross: {otherFormes: ['Metagross-Mega']},\n  // Mewtwo: {otherFormes: ['Mewtwo-Mega-X', 'Mewtwo-Mega-Y']},\n  // 'Mime Jr.': {types: ['Psychic', 'Fairy']},\n  // 'Mr. Mime': {types: ['Psychic', 'Fairy']},\n  // Nidoking: {bs: {at: 102}},\n  // Nidoqueen: {bs: {at: 92}},\n  // Pidgeot: {bs: {sp: 101}, otherFormes: ['Pidgeot-Mega']},\n  Pikachu: {\n    bs: {df: 40, sd: 50},\n    // otherFormes: [\n    //   'Pikachu-Belle',\n    //   'Pikachu-Cosplay',\n    //   'Pikachu-Libre',\n    //   'Pikachu-PhD',\n    //   'Pikachu-Pop-Star',\n    //   'Pikachu-Rock-Star',\n    // ],\n  },\n  // Pinsir: {otherFormes: ['Pinsir-Mega']},\n  Poliwrath: {bs: {at: 95}},\n  Raichu: {bs: {sp: 110}},\n  Ralts: {types: ['Psychic', 'Fairy']},\n  // Rayquaza: {otherFormes: ['Rayquaza-Mega']},\n  // Roserade: {bs: {df: 65}},\n  // Sableye: {otherFormes: ['Sableye-Mega']},\n  // Salamence: {otherFormes: ['Salamence-Mega']},\n  // Sceptile: {otherFormes: ['Sceptile-Mega']},\n  // Scizor: {otherFormes: ['Scizor-Mega']},\n  // Scolipede: {bs: {at: 100}},\n  // Seismitoad: {bs: {at: 95}},\n  // Sharpedo: {otherFormes: ['Sharpedo-Mega']},\n  // Slowbro: {otherFormes: ['Slowbro-Mega']},\n  Snubbull: {types: ['Fairy']},\n  Staraptor: {bs: {sd: 60}},\n  // Steelix: {otherFormes: ['Steelix-Mega']},\n  // Stoutland: {bs: {at: 110}},\n  // Swampert: {otherFormes: ['Swampert-Mega']},\n  // Togekiss: {types: ['Fairy', 'Flying']},\n  // Togepi: {types: ['Fairy']},\n  // Togetic: {types: ['Fairy', 'Flying']},\n  // Tyranitar: {otherFormes: ['Tyranitar-Mega']},\n  // Unfezant: {bs: {at: 115}},\n  // Venusaur: {otherFormes: ['Venusaur-Mega']},\n  Victreebel: {bs: {sd: 70}},\n  Vileplume: {bs: {sa: 110}},\n  Whimsicott: {types: ['Grass', 'Fairy']},\n  Wigglytuff: {types: ['Normal', 'Fairy'], bs: {sa: 85}},\n  // 'Aegislash-Blade': {\n  //   types: ['Steel', 'Ghost'],\n  //   bs: {hp: 60, at: 150, df: 50, sa: 150, sd: 50, sp: 60},\n  //   weightkg: 53,\n  //   abilities: {0: 'Stance Change'},\n  //   otherFormes: ['Aegislash-Shield', 'Aegislash-Both'],\n  // },\n  // 'Aegislash-Shield': {\n  //   types: ['Steel', 'Ghost'],\n  //   bs: {hp: 60, at: 50, df: 150, sa: 50, sd: 150, sp: 60},\n  //   weightkg: 53,\n  //   abilities: {0: 'Stance Change'},\n  //   baseSpecies: 'Aegislash-Blade',\n  // },\n  // 'Aegislash-Both': {\n  //   types: ['Steel', 'Ghost'],\n  //   bs: {hp: 60, at: 150, df: 150, sa: 150, sd: 150, sp: 60},\n  //   weightkg: 53,\n  //   abilities: {0: 'Stance Change'},\n  //   baseSpecies: 'Aegislash-Blade',\n  // },\n  // Amaura: {\n  //   types: ['Rock', 'Ice'],\n  //   bs: {hp: 77, at: 59, df: 50, sa: 67, sd: 63, sp: 46},\n  //   weightkg: 25.2,\n  //   nfe: true,\n  //   abilities: {0: 'Refrigerate'},\n  // },\n  'Arceus-Fairy': {\n    types: ['Fairy'],\n    bs: {hp: 120, at: 120, df: 120, sa: 120, sd: 120, sp: 120},\n    weightkg: 320,\n    abilities: {0: 'Multitype'},\n    baseSpecies: 'Arceus',\n    gender: 'N',\n  },\n  // Aromatisse: {\n  //   types: ['Fairy'],\n  //   bs: {hp: 101, at: 72, df: 72, sa: 99, sd: 89, sp: 29},\n  //   weightkg: 15.5,\n  //   abilities: {0: 'Healer'},\n  // },\n  // Aurorus: {\n  //   types: ['Rock', 'Ice'],\n  //   bs: {hp: 123, at: 77, df: 72, sa: 99, sd: 92, sp: 58},\n  //   weightkg: 225,\n  //   abilities: {0: 'Refrigerate'},\n  // },\n  Avalugg: {\n    types: ['Ice'],\n    bs: {hp: 95, at: 117, df: 184, sa: 44, sd: 46, sp: 28},\n    weightkg: 505,\n    abilities: {0: 'Own Tempo'},\n  },\n  // Barbaracle: {\n  //   types: ['Rock', 'Water'],\n  //   bs: {hp: 72, at: 105, df: 115, sa: 54, sd: 86, sp: 68},\n  //   weightkg: 96,\n  //   abilities: {0: 'Tough Claws'},\n  // },\n  Bergmite: {\n    types: ['Ice'],\n    bs: {hp: 55, at: 69, df: 85, sa: 32, sd: 35, sp: 28},\n    weightkg: 99.5,\n    nfe: true,\n    abilities: {0: 'Own Tempo'},\n  },\n  // Binacle: {\n  //   types: ['Rock', 'Water'],\n  //   bs: {hp: 42, at: 52, df: 67, sa: 39, sd: 56, sp: 50},\n  //   weightkg: 31,\n  //   nfe: true,\n  //   abilities: {0: 'Tough Claws'},\n  // },\n  Braixen: {\n    types: ['Fire'],\n    bs: {hp: 59, at: 59, df: 58, sa: 90, sd: 70, sp: 73},\n    weightkg: 14.5,\n    nfe: true,\n    abilities: {0: 'Blaze'},\n  },\n  // Bunnelby: {\n  //   types: ['Normal'],\n  //   bs: {hp: 38, at: 36, df: 38, sa: 32, sd: 36, sp: 57},\n  //   weightkg: 5,\n  //   nfe: true,\n  //   abilities: {0: 'Pickup'},\n  // },\n  // Caimanoe: {\n  //   types: ['Water', 'Steel'],\n  //   bs: {hp: 73, at: 85, df: 65, sa: 80, sd: 40, sp: 87},\n  //   weightkg: 72.5,\n  //   nfe: true,\n  //   abilities: {0: 'Water Veil'},\n  // },\n  Carbink: {\n    types: ['Rock', 'Fairy'],\n    bs: {hp: 50, at: 50, df: 150, sa: 50, sd: 150, sp: 50},\n    weightkg: 5.7,\n    gender: 'N',\n    abilities: {0: 'Clear Body'},\n  },\n  Chesnaught: {\n    types: ['Grass', 'Fighting'],\n    bs: {hp: 88, at: 107, df: 122, sa: 74, sd: 75, sp: 64},\n    weightkg: 90,\n    abilities: {0: 'Overgrow'},\n  },\n  Chespin: {\n    types: ['Grass'],\n    bs: {hp: 56, at: 61, df: 65, sa: 48, sd: 45, sp: 38},\n    weightkg: 9,\n    nfe: true,\n    abilities: {0: 'Overgrow'},\n  },\n  Clauncher: {\n    types: ['Water'],\n    bs: {hp: 50, at: 53, df: 62, sa: 58, sd: 63, sp: 44},\n    weightkg: 8.3,\n    abilities: {0: 'Mega Launcher'},\n    nfe: true,\n  },\n  Clawitzer: {\n    types: ['Water'],\n    bs: {hp: 71, at: 73, df: 88, sa: 120, sd: 89, sp: 59},\n    weightkg: 35.3,\n    abilities: {0: 'Mega Launcher'},\n  },\n  // Crucibelle: {\n  //   types: ['Rock', 'Poison'],\n  //   bs: {hp: 106, at: 105, df: 65, sa: 75, sd: 85, sp: 104},\n  //   weightkg: 23.6,\n  //   abilities: {0: 'Regenerator'},\n  //   otherFormes: ['Crucibelle-Mega'],\n  // },\n  Diancie: {\n    types: ['Rock', 'Fairy'],\n    bs: {hp: 50, at: 100, df: 150, sa: 100, sd: 150, sp: 50},\n    weightkg: 8.8,\n    abilities: {0: 'Clear Body'},\n    otherFormes: ['Diancie-Mega'],\n    gender: 'N',\n  },\n  Dedenne: {\n    types: ['Electric', 'Fairy'],\n    bs: {hp: 67, at: 58, df: 57, sa: 81, sd: 67, sp: 101},\n    weightkg: 2.2,\n    abilities: {0: 'Cheek Pouch'},\n  },\n  Delphox: {\n    types: ['Fire', 'Psychic'],\n    bs: {hp: 75, at: 69, df: 72, sa: 114, sd: 100, sp: 104},\n    weightkg: 39,\n    abilities: {0: 'Blaze'},\n  },\n  // Diggersby: {\n  //   types: ['Normal', 'Ground'],\n  //   bs: {hp: 85, at: 56, df: 77, sa: 50, sd: 77, sp: 78},\n  //   weightkg: 42.4,\n  //   abilities: {0: 'Pickup'},\n  // },\n  // Doublade: {\n  //   types: ['Steel', 'Ghost'],\n  //   bs: {hp: 59, at: 110, df: 150, sa: 45, sd: 49, sp: 35},\n  //   weightkg: 4.5,\n  //   abilities: {0: 'No Guard'},\n  //   nfe: true,\n  // },\n  Dragalge: {\n    types: ['Poison', 'Dragon'],\n    bs: {hp: 65, at: 75, df: 90, sa: 97, sd: 123, sp: 44},\n    weightkg: 81.5,\n    abilities: {0: 'Poison Point'},\n  },\n  Espurr: {\n    types: ['Psychic'],\n    bs: {hp: 62, at: 48, df: 54, sa: 63, sd: 60, sp: 68},\n    weightkg: 3.5,\n    nfe: true,\n    abilities: {0: 'Keen Eye'},\n  },\n  Fennekin: {\n    types: ['Fire'],\n    bs: {hp: 40, at: 45, df: 40, sa: 62, sd: 60, sp: 60},\n    weightkg: 9.4,\n    nfe: true,\n    abilities: {0: 'Blaze'},\n  },\n  Flabébé: {\n    types: ['Fairy'],\n    bs: {hp: 44, at: 38, df: 39, sa: 61, sd: 79, sp: 42},\n    weightkg: 0.1,\n    nfe: true,\n    abilities: {0: 'Flower Veil'},\n    gender: 'F',\n  },\n  Fletchinder: {\n    types: ['Fire', 'Flying'],\n    bs: {hp: 62, at: 73, df: 55, sa: 56, sd: 52, sp: 84},\n    weightkg: 16,\n    nfe: true,\n    abilities: {0: 'Flame Body'},\n  },\n  Fletchling: {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 45, at: 50, df: 43, sa: 40, sd: 38, sp: 62},\n    weightkg: 1.7,\n    nfe: true,\n    abilities: {0: 'Big Pecks'},\n  },\n  // Floatoy: {\n  //   types: ['Water'],\n  //   bs: {hp: 48, at: 70, df: 40, sa: 70, sd: 30, sp: 77},\n  //   weightkg: 1.9,\n  //   nfe: true,\n  //   abilities: {0: 'Water Veil'},\n  // },\n  Floette: {\n    types: ['Fairy'],\n    bs: {hp: 54, at: 45, df: 47, sa: 75, sd: 98, sp: 52},\n    weightkg: 0.9,\n    nfe: true,\n    // otherFormes: ['Floette-Eternal'],\n    abilities: {0: 'Flower Veil'},\n    gender: 'F',\n  },\n  // 'Floette-Eternal': {\n  //   types: ['Fairy'],\n  //   bs: {hp: 74, at: 65, df: 67, sa: 125, sd: 128, sp: 92},\n  //   weightkg: 0.9,\n  //   abilities: {0: 'Flower Veil'},\n  //   baseSpecies: 'Floette',\n  // },\n  Florges: {\n    types: ['Fairy'],\n    bs: {hp: 78, at: 65, df: 68, sa: 112, sd: 154, sp: 75},\n    weightkg: 10,\n    abilities: {0: 'Flower Veil'},\n    gender: 'F',\n  },\n  Froakie: {\n    types: ['Water'],\n    bs: {hp: 41, at: 56, df: 40, sa: 62, sd: 44, sp: 71},\n    weightkg: 7,\n    nfe: true,\n    abilities: {0: 'Torrent'},\n  },\n  Frogadier: {\n    types: ['Water'],\n    bs: {hp: 54, at: 63, df: 52, sa: 83, sd: 56, sp: 97},\n    weightkg: 10.9,\n    nfe: true,\n    abilities: {0: 'Torrent'},\n  },\n  // Furfrou: {\n  //   types: ['Normal'],\n  //   bs: {hp: 75, at: 80, df: 60, sa: 65, sd: 90, sp: 102},\n  //   weightkg: 28,\n  //   abilities: {0: 'Fur Coat'},\n  // },\n  Gogoat: {\n    types: ['Grass'],\n    bs: {hp: 123, at: 100, df: 62, sa: 97, sd: 81, sp: 68},\n    weightkg: 91,\n    abilities: {0: 'Sap Sipper'},\n  },\n  Goodra: {\n    types: ['Dragon'],\n    bs: {hp: 90, at: 100, df: 70, sa: 110, sd: 150, sp: 80},\n    weightkg: 150.5,\n    abilities: {0: 'Sap Sipper'},\n  },\n  Goomy: {\n    types: ['Dragon'],\n    bs: {hp: 45, at: 50, df: 35, sa: 55, sd: 75, sp: 40},\n    weightkg: 2.8,\n    nfe: true,\n    abilities: {0: 'Sap Sipper'},\n  },\n  // 'Gourgeist': {\n  //   types: ['Ghost', 'Grass'],\n  //   bs: {hp: 65, at: 90, df: 122, sa: 58, sd: 75, sp: 84},\n  //   weightkg: 12.5,\n  //   abilities: {0: 'Pickup'},\n  //   otherFormes: ['Gourgeist-Large', 'Gourgeist-Small', 'Gourgeist-Super'],\n  // },\n  // 'Gourgeist-Large': {\n  //   types: ['Ghost', 'Grass'],\n  //   bs: {hp: 75, at: 95, df: 122, sa: 58, sd: 75, sp: 69},\n  //   weightkg: 14,\n  //   abilities: {0: 'Pickup'},\n  //   baseSpecies: 'Gourgeist',\n  // },\n  // 'Gourgeist-Small': {\n  //   types: ['Ghost', 'Grass'],\n  //   bs: {hp: 55, at: 85, df: 122, sa: 58, sd: 75, sp: 99},\n  //   weightkg: 9.5,\n  //   abilities: {0: 'Pickup'},\n  //   baseSpecies: 'Gourgeist',\n  // },\n  // 'Gourgeist-Super': {\n  //   types: ['Ghost', 'Grass'],\n  //   bs: {hp: 85, at: 100, df: 122, sa: 58, sd: 75, sp: 54},\n  //   weightkg: 39,\n  //   abilities: {0: 'Pickup'},\n  //   baseSpecies: 'Gourgeist',\n  // },\n  Greninja: {\n    types: ['Water', 'Dark'],\n    bs: {hp: 72, at: 95, df: 67, sa: 103, sd: 71, sp: 122},\n    weightkg: 40,\n    abilities: {0: 'Torrent'},\n  },\n  Hawlucha: {\n    types: ['Fighting', 'Flying'],\n    bs: {hp: 78, at: 92, df: 75, sa: 74, sd: 63, sp: 118},\n    weightkg: 21.5,\n    abilities: {0: 'Limber'},\n  },\n  // Heliolisk: {\n  //   types: ['Electric', 'Normal'],\n  //   bs: {hp: 62, at: 55, df: 52, sa: 109, sd: 94, sp: 109},\n  //   weightkg: 21,\n  //   abilities: {0: 'Dry Skin'},\n  // },\n  // Helioptile: {\n  //   types: ['Electric', 'Normal'],\n  //   bs: {hp: 44, at: 38, df: 33, sa: 61, sd: 43, sp: 70},\n  //   weightkg: 6,\n  //   nfe: true,\n  //   abilities: {0: 'Dry Skin'},\n  // },\n  // Honedge: {\n  //   types: ['Steel', 'Ghost'],\n  //   bs: {hp: 45, at: 80, df: 100, sa: 35, sd: 37, sp: 28},\n  //   weightkg: 2,\n  //   abilities: {0: 'No Guard'},\n  //   nfe: true,\n  // },\n  Hoopa: {\n    types: ['Psychic', 'Ghost'],\n    bs: {hp: 80, at: 110, df: 60, sa: 150, sd: 130, sp: 70},\n    weightkg: 9,\n    gender: 'N',\n    abilities: {0: 'Magician'},\n    otherFormes: ['Hoopa-Unbound'],\n  },\n  'Hoopa-Unbound': {\n    types: ['Psychic', 'Dark'],\n    bs: {hp: 80, at: 160, df: 60, sa: 170, sd: 130, sp: 80},\n    weightkg: 490,\n    gender: 'N',\n    abilities: {0: 'Magician'},\n    baseSpecies: 'Hoopa',\n  },\n  Inkay: {\n    types: ['Dark', 'Psychic'],\n    bs: {hp: 53, at: 54, df: 53, sa: 37, sd: 46, sp: 45},\n    weightkg: 3.5,\n    nfe: true,\n    abilities: {0: 'Contrary'},\n  },\n  // Kerfluffle: {\n  //   types: ['Fairy', 'Fighting'],\n  //   bs: {hp: 84, at: 78, df: 86, sa: 115, sd: 88, sp: 119},\n  //   weightkg: 24.2,\n  //   abilities: {0: 'Natural Cure'},\n  // },\n  Klefki: {\n    types: ['Steel', 'Fairy'],\n    bs: {hp: 57, at: 80, df: 91, sa: 80, sd: 87, sp: 75},\n    weightkg: 3,\n    abilities: {0: 'Prankster'},\n  },\n  Litleo: {\n    types: ['Fire', 'Normal'],\n    bs: {hp: 62, at: 50, df: 58, sa: 73, sd: 54, sp: 72},\n    weightkg: 13.5,\n    nfe: true,\n    abilities: {0: 'Rivalry'},\n  },\n  Malamar: {\n    types: ['Dark', 'Psychic'],\n    bs: {hp: 86, at: 92, df: 88, sa: 68, sd: 75, sp: 73},\n    weightkg: 47,\n    abilities: {0: 'Contrary'},\n  },\n  // 'Abomasnow-Mega': {\n  //   types: ['Grass', 'Ice'],\n  //   bs: {hp: 90, at: 132, df: 105, sa: 132, sd: 105, sp: 30},\n  //   weightkg: 185,\n  //   abilities: {0: 'Snow Warning'},\n  //   baseSpecies: 'Abomasnow',\n  // },\n  // 'Absol-Mega': {\n  //   types: ['Dark'],\n  //   bs: {hp: 65, at: 150, df: 60, sa: 115, sd: 60, sp: 115},\n  //   weightkg: 49,\n  //   abilities: {0: 'Magic Bounce'},\n  //   baseSpecies: 'Absol',\n  // },\n  // 'Aerodactyl-Mega': {\n  //   types: ['Rock', 'Flying'],\n  //   bs: {hp: 80, at: 135, df: 85, sa: 70, sd: 95, sp: 150},\n  //   weightkg: 79,\n  //   abilities: {0: 'Tough Claws'},\n  //   baseSpecies: 'Aerodactyl',\n  // },\n  // 'Aggron-Mega': {\n  //   types: ['Steel'],\n  //   bs: {hp: 70, at: 140, df: 230, sa: 60, sd: 80, sp: 50},\n  //   weightkg: 395,\n  //   abilities: {0: 'Filter'},\n  //   baseSpecies: 'Aggron',\n  // },\n  // 'Alakazam-Mega': {\n  //   types: ['Psychic'],\n  //   bs: {hp: 55, at: 50, df: 65, sa: 175, sd: 95, sp: 150},\n  //   weightkg: 48,\n  //   abilities: {0: 'Trace'},\n  //   baseSpecies: 'Alakazam',\n  // },\n  // 'Altaria-Mega': {\n  //   types: ['Dragon', 'Fairy'],\n  //   bs: {hp: 75, at: 110, df: 110, sa: 110, sd: 105, sp: 80},\n  //   weightkg: 20.6,\n  //   abilities: {0: 'Pixilate'},\n  //   baseSpecies: 'Altaria',\n  // },\n  // 'Ampharos-Mega': {\n  //   types: ['Electric', 'Dragon'],\n  //   bs: {hp: 90, at: 95, df: 105, sa: 165, sd: 110, sp: 45},\n  //   weightkg: 61.5,\n  //   abilities: {0: 'Mold Breaker'},\n  //   baseSpecies: 'Ampharos',\n  // },\n  // 'Audino-Mega': {\n  //   types: ['Normal', 'Fairy'],\n  //   bs: {hp: 103, at: 60, df: 126, sa: 80, sd: 126, sp: 50},\n  //   weightkg: 32,\n  //   abilities: {0: 'Healer'},\n  //   baseSpecies: 'Audino',\n  // },\n  // 'Banette-Mega': {\n  //   types: ['Ghost'],\n  //   bs: {hp: 64, at: 165, df: 75, sa: 93, sd: 83, sp: 75},\n  //   weightkg: 13,\n  //   abilities: {0: 'Prankster'},\n  //   baseSpecies: 'Banette',\n  // },\n  // 'Beedrill-Mega': {\n  //   types: ['Bug', 'Poison'],\n  //   bs: {hp: 65, at: 150, df: 40, sa: 15, sd: 80, sp: 145},\n  //   weightkg: 40.5,\n  //   abilities: {0: 'Adaptability'},\n  //   baseSpecies: 'Beedrill',\n  // },\n  // 'Blastoise-Mega': {\n  //   types: ['Water'],\n  //   bs: {hp: 79, at: 103, df: 120, sa: 135, sd: 115, sp: 78},\n  //   weightkg: 101.1,\n  //   abilities: {0: 'Mega Launcher'},\n  //   baseSpecies: 'Blastoise',\n  // },\n  // 'Blaziken-Mega': {\n  //   types: ['Fire', 'Fighting'],\n  //   bs: {hp: 80, at: 160, df: 80, sa: 130, sd: 80, sp: 100},\n  //   weightkg: 52,\n  //   abilities: {0: 'Speed Boost'},\n  //   baseSpecies: 'Blaziken',\n  // },\n  // 'Camerupt-Mega': {\n  //   types: ['Fire', 'Ground'],\n  //   bs: {hp: 70, at: 120, df: 100, sa: 145, sd: 105, sp: 20},\n  //   weightkg: 320.5,\n  //   abilities: {0: 'Sheer Force'},\n  //   baseSpecies: 'Camerupt',\n  // },\n  // 'Charizard-Mega-X': {\n  //   types: ['Fire', 'Dragon'],\n  //   bs: {hp: 78, at: 130, df: 111, sa: 130, sd: 85, sp: 100},\n  //   weightkg: 110.5,\n  //   abilities: {0: 'Tough Claws'},\n  //   baseSpecies: 'Charizard',\n  // },\n  // 'Charizard-Mega-Y': {\n  //   types: ['Fire', 'Flying'],\n  //   bs: {hp: 78, at: 104, df: 78, sa: 159, sd: 115, sp: 100},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'Drought'},\n  //   baseSpecies: 'Charizard',\n  // },\n  // 'Crucibelle-Mega': {\n  //   types: ['Rock', 'Poison'],\n  //   bs: {hp: 106, at: 135, df: 75, sa: 85, sd: 125, sp: 114},\n  //   weightkg: 22.5,\n  //   abilities: {0: 'Magic Guard'},\n  //   baseSpecies: 'Crucibelle',\n  // },\n  // 'Diancie-Mega': {\n  //   types: ['Rock', 'Fairy'],\n  //   bs: {hp: 50, at: 160, df: 110, sa: 160, sd: 110, sp: 110},\n  //   weightkg: 27.8,\n  //   abilities: {0: 'Magic Bounce'},\n  //   baseSpecies: 'Diancie',\n  //   gender: 'N',\n  // },\n  // 'Gallade-Mega': {\n  //   types: ['Psychic', 'Fighting'],\n  //   bs: {hp: 68, at: 165, df: 95, sa: 65, sd: 115, sp: 110},\n  //   weightkg: 56.4,\n  //   abilities: {0: 'Inner Focus'},\n  //   baseSpecies: 'Gallade',\n  // },\n  // 'Garchomp-Mega': {\n  //   types: ['Dragon', 'Ground'],\n  //   bs: {hp: 108, at: 170, df: 115, sa: 120, sd: 95, sp: 92},\n  //   weightkg: 95,\n  //   abilities: {0: 'Sand Force'},\n  //   baseSpecies: 'Garchomp',\n  // },\n  // 'Gardevoir-Mega': {\n  //   types: ['Psychic', 'Fairy'],\n  //   bs: {hp: 68, at: 85, df: 65, sa: 165, sd: 135, sp: 100},\n  //   weightkg: 48.4,\n  //   abilities: {0: 'Pixilate'},\n  //   baseSpecies: 'Gardevoir',\n  // },\n  // 'Gengar-Mega': {\n  //   types: ['Ghost', 'Poison'],\n  //   bs: {hp: 60, at: 65, df: 80, sa: 170, sd: 95, sp: 130},\n  //   weightkg: 40.5,\n  //   abilities: {0: 'Shadow Tag'},\n  //   baseSpecies: 'Gengar',\n  // },\n  // 'Glalie-Mega': {\n  //   types: ['Ice'],\n  //   bs: {hp: 80, at: 120, df: 80, sa: 120, sd: 80, sp: 100},\n  //   weightkg: 350.2,\n  //   abilities: {0: 'Refrigerate'},\n  //   baseSpecies: 'Glalie',\n  // },\n  // 'Gyarados-Mega': {\n  //   types: ['Water', 'Dark'],\n  //   bs: {hp: 95, at: 155, df: 109, sa: 70, sd: 130, sp: 81},\n  //   weightkg: 305,\n  //   abilities: {0: 'Mold Breaker'},\n  //   baseSpecies: 'Gyarados',\n  // },\n  // 'Heracross-Mega': {\n  //   types: ['Bug', 'Fighting'],\n  //   bs: {hp: 80, at: 185, df: 115, sa: 40, sd: 105, sp: 75},\n  //   weightkg: 62.5,\n  //   abilities: {0: 'Skill Link'},\n  //   baseSpecies: 'Heracross',\n  // },\n  // 'Houndoom-Mega': {\n  //   types: ['Dark', 'Fire'],\n  //   bs: {hp: 75, at: 90, df: 90, sa: 140, sd: 90, sp: 115},\n  //   weightkg: 49.5,\n  //   abilities: {0: 'Solar Power'},\n  //   baseSpecies: 'Houndoom',\n  // },\n  // 'Kangaskhan-Mega': {\n  //   types: ['Normal'],\n  //   bs: {hp: 105, at: 125, df: 100, sa: 60, sd: 100, sp: 100},\n  //   weightkg: 100,\n  //   abilities: {0: 'Parental Bond'},\n  //   baseSpecies: 'Kangaskhan',\n  // },\n  // 'Latias-Mega': {\n  //   types: ['Dragon', 'Psychic'],\n  //   bs: {hp: 80, at: 100, df: 120, sa: 140, sd: 150, sp: 110},\n  //   weightkg: 52,\n  //   abilities: {0: 'Levitate'},\n  //   baseSpecies: 'Latias',\n  // },\n  // 'Latios-Mega': {\n  //   types: ['Dragon', 'Psychic'],\n  //   bs: {hp: 80, at: 130, df: 100, sa: 160, sd: 120, sp: 110},\n  //   weightkg: 70,\n  //   abilities: {0: 'Levitate'},\n  //   baseSpecies: 'Latios',\n  // },\n  // 'Lopunny-Mega': {\n  //   types: ['Normal', 'Fighting'],\n  //   bs: {hp: 65, at: 136, df: 94, sa: 54, sd: 96, sp: 135},\n  //   weightkg: 28.3,\n  //   abilities: {0: 'Scrappy'},\n  //   baseSpecies: 'Lopunny',\n  // },\n  // 'Lucario-Mega': {\n  //   types: ['Fighting', 'Steel'],\n  //   bs: {hp: 70, at: 145, df: 88, sa: 140, sd: 70, sp: 112},\n  //   weightkg: 57.5,\n  //   abilities: {0: 'Adaptability'},\n  //   baseSpecies: 'Lucario',\n  // },\n  // 'Manectric-Mega': {\n  //   types: ['Electric'],\n  //   bs: {hp: 70, at: 75, df: 80, sa: 135, sd: 80, sp: 135},\n  //   weightkg: 44,\n  //   abilities: {0: 'Intimidate'},\n  //   baseSpecies: 'Manectric',\n  // },\n  // 'Mawile-Mega': {\n  //   types: ['Steel', 'Fairy'],\n  //   bs: {hp: 50, at: 105, df: 125, sa: 55, sd: 95, sp: 50},\n  //   weightkg: 23.5,\n  //   abilities: {0: 'Huge Power'},\n  //   baseSpecies: 'Mawile',\n  // },\n  // 'Medicham-Mega': {\n  //   types: ['Fighting', 'Psychic'],\n  //   bs: {hp: 60, at: 100, df: 85, sa: 80, sd: 85, sp: 100},\n  //   weightkg: 31.5,\n  //   abilities: {0: 'Pure Power'},\n  //   baseSpecies: 'Medicham',\n  // },\n  // 'Metagross-Mega': {\n  //   types: ['Steel', 'Psychic'],\n  //   bs: {hp: 80, at: 145, df: 150, sa: 105, sd: 110, sp: 110},\n  //   weightkg: 942.9,\n  //   abilities: {0: 'Tough Claws'},\n  //   baseSpecies: 'Metagross',\n  //   gender: 'N',\n  // },\n  // 'Mewtwo-Mega-X': {\n  //   types: ['Psychic', 'Fighting'],\n  //   bs: {hp: 106, at: 190, df: 100, sa: 154, sd: 100, sp: 130},\n  //   weightkg: 127,\n  //   abilities: {0: 'Steadfast'},\n  //   baseSpecies: 'Mewtwo',\n  //   gender: 'N',\n  // },\n  // 'Mewtwo-Mega-Y': {\n  //   types: ['Psychic'],\n  //   bs: {hp: 106, at: 150, df: 70, sa: 194, sd: 120, sp: 140},\n  //   weightkg: 33,\n  //   abilities: {0: 'Insomnia'},\n  //   baseSpecies: 'Mewtwo',\n  //   gender: 'N',\n  // },\n  // 'Pidgeot-Mega': {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 83, at: 80, df: 80, sa: 135, sd: 80, sp: 121},\n  //   weightkg: 50.5,\n  //   abilities: {0: 'No Guard'},\n  //   baseSpecies: 'Pidgeot',\n  // },\n  // 'Pinsir-Mega': {\n  //   types: ['Bug', 'Flying'],\n  //   bs: {hp: 65, at: 155, df: 120, sa: 65, sd: 90, sp: 105},\n  //   weightkg: 59,\n  //   abilities: {0: 'Aerilate'},\n  //   baseSpecies: 'Pinsir',\n  // },\n  // 'Rayquaza-Mega': {\n  //   types: ['Dragon', 'Flying'],\n  //   bs: {hp: 105, at: 180, df: 100, sa: 180, sd: 100, sp: 115},\n  //   weightkg: 392,\n  //   gender: 'N',\n  //   abilities: {0: 'Delta Stream'},\n  //   baseSpecies: 'Rayquaza',\n  // },\n  // 'Sableye-Mega': {\n  //   types: ['Dark', 'Ghost'],\n  //   bs: {hp: 50, at: 85, df: 125, sa: 85, sd: 115, sp: 20},\n  //   weightkg: 161,\n  //   abilities: {0: 'Magic Bounce'},\n  //   baseSpecies: 'Sableye',\n  // },\n  // 'Salamence-Mega': {\n  //   types: ['Dragon', 'Flying'],\n  //   bs: {hp: 95, at: 145, df: 130, sa: 120, sd: 90, sp: 120},\n  //   weightkg: 112.6,\n  //   abilities: {0: 'Aerilate'},\n  //   baseSpecies: 'Salamence',\n  // },\n  // 'Sceptile-Mega': {\n  //   types: ['Grass', 'Dragon'],\n  //   bs: {hp: 70, at: 110, df: 75, sa: 145, sd: 85, sp: 145},\n  //   weightkg: 55.2,\n  //   abilities: {0: 'Lightning Rod'},\n  //   baseSpecies: 'Sceptile',\n  // },\n  // 'Scizor-Mega': {\n  //   types: ['Bug', 'Steel'],\n  //   bs: {hp: 70, at: 150, df: 140, sa: 65, sd: 100, sp: 75},\n  //   weightkg: 125,\n  //   abilities: {0: 'Technician'},\n  //   baseSpecies: 'Scizor',\n  // },\n  // 'Sharpedo-Mega': {\n  //   types: ['Water', 'Dark'],\n  //   bs: {hp: 70, at: 140, df: 70, sa: 110, sd: 65, sp: 105},\n  //   weightkg: 130.3,\n  //   abilities: {0: 'Strong Jaw'},\n  //   baseSpecies: 'Sharpedo',\n  // },\n  // 'Slowbro-Mega': {\n  //   types: ['Water', 'Psychic'],\n  //   bs: {hp: 95, at: 75, df: 180, sa: 130, sd: 80, sp: 30},\n  //   weightkg: 120,\n  //   abilities: {0: 'Shell Armor'},\n  //   baseSpecies: 'Slowbro',\n  // },\n  // 'Steelix-Mega': {\n  //   types: ['Steel', 'Ground'],\n  //   bs: {hp: 75, at: 125, df: 230, sa: 55, sd: 95, sp: 30},\n  //   weightkg: 740,\n  //   abilities: {0: 'Sand Force'},\n  //   baseSpecies: 'Steelix',\n  // },\n  // 'Swampert-Mega': {\n  //   types: ['Water', 'Ground'],\n  //   bs: {hp: 100, at: 150, df: 110, sa: 95, sd: 110, sp: 70},\n  //   weightkg: 102,\n  //   abilities: {0: 'Swift Swim'},\n  //   baseSpecies: 'Swampert',\n  // },\n  // 'Tyranitar-Mega': {\n  //   types: ['Rock', 'Dark'],\n  //   bs: {hp: 100, at: 164, df: 150, sa: 95, sd: 120, sp: 71},\n  //   weightkg: 255,\n  //   abilities: {0: 'Sand Stream'},\n  //   baseSpecies: 'Tyranitar',\n  // },\n  // 'Venusaur-Mega': {\n  //   types: ['Grass', 'Poison'],\n  //   bs: {hp: 80, at: 100, df: 123, sa: 122, sd: 120, sp: 80},\n  //   weightkg: 155.5,\n  //   abilities: {0: 'Thick Fat'},\n  //   baseSpecies: 'Venusaur',\n  // },\n  'Meowstic-M': {\n    types: ['Psychic'],\n    bs: {hp: 74, at: 48, df: 76, sa: 83, sd: 81, sp: 104},\n    weightkg: 8.5,\n    abilities: {0: 'Keen Eye'},\n    otherFormes: ['Meowstic-F'],\n    gender: 'M',\n  },\n  'Meowstic-F': {\n    types: ['Psychic'],\n    bs: {hp: 74, at: 48, df: 76, sa: 83, sd: 81, sp: 104},\n    weightkg: 8.5,\n    abilities: {0: 'Keen Eye'},\n    baseSpecies: 'Meowstic-M',\n    gender: 'F',\n  },\n  // Naviathan: {\n  //   types: ['Water', 'Steel'],\n  //   bs: {hp: 103, at: 110, df: 90, sa: 95, sd: 65, sp: 97},\n  //   weightkg: 510,\n  //   abilities: {0: 'Water Veil'},\n  // },\n  Noibat: {\n    types: ['Flying', 'Dragon'],\n    bs: {hp: 40, at: 30, df: 35, sa: 45, sd: 40, sp: 55},\n    weightkg: 8,\n    nfe: true,\n    abilities: {0: 'Frisk'},\n  },\n  Noivern: {\n    types: ['Flying', 'Dragon'],\n    bs: {hp: 85, at: 70, df: 80, sa: 97, sd: 80, sp: 123},\n    weightkg: 85,\n    abilities: {0: 'Frisk'},\n  },\n  // Pancham: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 67, at: 82, df: 62, sa: 46, sd: 48, sp: 43},\n  //   weightkg: 8,\n  //   nfe: true,\n  //   abilities: {0: 'Iron Fist'},\n  // },\n  // Pangoro: {\n  //   types: ['Fighting', 'Dark'],\n  //   bs: {hp: 95, at: 124, df: 78, sa: 69, sd: 71, sp: 58},\n  //   weightkg: 136,\n  //   abilities: {0: 'Iron Fist'},\n  // },\n  Phantump: {\n    types: ['Ghost', 'Grass'],\n    bs: {hp: 43, at: 70, df: 48, sa: 50, sd: 60, sp: 38},\n    weightkg: 7,\n    nfe: true,\n    abilities: {0: 'Natural Cure'},\n  },\n  // 'Pikachu-Cosplay': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Lightning Rod'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-Rock-Star': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Lightning Rod'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-Belle': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Lightning Rod'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-PhD': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Lightning Rod'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-Pop-Star': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Lightning Rod'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-Libre': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Lightning Rod'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // Plasmanta: {\n  //   types: ['Electric', 'Poison'],\n  //   bs: {hp: 60, at: 57, df: 119, sa: 131, sd: 98, sp: 100},\n  //   weightkg: 460,\n  //   abilities: {0: 'Storm Drain'},\n  // },\n  // Pluffle: {\n  //   types: ['Fairy'],\n  //   bs: {hp: 74, at: 38, df: 51, sa: 65, sd: 78, sp: 49},\n  //   weightkg: 1.8,\n  //   nfe: true,\n  //   abilities: {0: 'Natural Cure'},\n  // },\n  // 'Groudon-Primal': {\n  //   types: ['Ground', 'Fire'],\n  //   bs: {hp: 100, at: 180, df: 160, sa: 150, sd: 90, sp: 90},\n  //   weightkg: 999.7,\n  //   abilities: {0: 'Desolate Land'},\n  //   baseSpecies: 'Groudon',\n  //   gender: 'N',\n  // },\n  // 'Kyogre-Primal': {\n  //   types: ['Water'],\n  //   bs: {hp: 100, at: 150, df: 90, sa: 180, sd: 160, sp: 90},\n  //   weightkg: 430,\n  //   abilities: {0: 'Primordial Sea'},\n  //   baseSpecies: 'Kyogre',\n  //   gender: 'N',\n  // },\n  // Pumpkaboo: {\n  //   types: ['Ghost', 'Grass'],\n  //   bs: {hp: 49, at: 66, df: 70, sa: 44, sd: 55, sp: 51},\n  //   weightkg: 5,\n  //   nfe: true,\n  //   abilities: {0: 'Pickup'},\n  //   otherFormes: ['Pumpkaboo-Large', 'Pumpkaboo-Small', 'Pumpkaboo-Super'],\n  // },\n  // 'Pumpkaboo-Large': {\n  //   types: ['Ghost', 'Grass'],\n  //   bs: {hp: 54, at: 66, df: 70, sa: 44, sd: 55, sp: 46},\n  //   weightkg: 7.5,\n  //   nfe: true,\n  //   abilities: {0: 'Pickup'},\n  //   baseSpecies: 'Pumpkaboo',\n  // },\n  // 'Pumpkaboo-Small': {\n  //   types: ['Ghost', 'Grass'],\n  //   bs: {hp: 44, at: 66, df: 70, sa: 44, sd: 55, sp: 56},\n  //   weightkg: 3.5,\n  //   nfe: true,\n  //   abilities: {0: 'Pickup'},\n  //   baseSpecies: 'Pumpkaboo',\n  // },\n  // 'Pumpkaboo-Super': {\n  //   types: ['Ghost', 'Grass'],\n  //   bs: {hp: 59, at: 66, df: 70, sa: 44, sd: 55, sp: 41},\n  //   weightkg: 15,\n  //   nfe: true,\n  //   abilities: {0: 'Pickup'},\n  //   baseSpecies: 'Pumpkaboo',\n  // },\n  Pyroar: {\n    types: ['Fire', 'Normal'],\n    bs: {hp: 86, at: 68, df: 72, sa: 109, sd: 66, sp: 106},\n    weightkg: 81.5,\n    abilities: {0: 'Rivalry'},\n  },\n  Quilladin: {\n    types: ['Grass'],\n    bs: {hp: 61, at: 78, df: 95, sa: 56, sd: 58, sp: 57},\n    weightkg: 29,\n    nfe: true,\n    abilities: {0: 'Overgrow'},\n  },\n  Scatterbug: {\n    types: ['Bug'],\n    bs: {hp: 38, at: 35, df: 40, sa: 27, sd: 25, sp: 35},\n    weightkg: 2.5,\n    nfe: true,\n    abilities: {0: 'Shield Dust'},\n  },\n  Skiddo: {\n    types: ['Grass'],\n    bs: {hp: 66, at: 65, df: 48, sa: 62, sd: 57, sp: 52},\n    weightkg: 31,\n    nfe: true,\n    abilities: {0: 'Sap Sipper'},\n  },\n  Skrelp: {\n    types: ['Poison', 'Water'],\n    bs: {hp: 50, at: 60, df: 60, sa: 60, sd: 60, sp: 30},\n    weightkg: 7.3,\n    nfe: true,\n    abilities: {0: 'Poison Point'},\n  },\n  Sliggoo: {\n    types: ['Dragon'],\n    bs: {hp: 68, at: 75, df: 53, sa: 83, sd: 113, sp: 60},\n    weightkg: 17.5,\n    nfe: true,\n    abilities: {0: 'Sap Sipper'},\n  },\n  // Slurpuff: {\n  //   types: ['Fairy'],\n  //   bs: {hp: 82, at: 80, df: 86, sa: 85, sd: 75, sp: 72},\n  //   weightkg: 5,\n  //   abilities: {0: 'Sweet Veil'},\n  // },\n  // Snugglow: {\n  //   types: ['Electric', 'Poison'],\n  //   bs: {hp: 40, at: 37, df: 79, sa: 91, sd: 68, sp: 70},\n  //   weightkg: 6,\n  //   nfe: true,\n  //   abilities: {0: 'Storm Drain'},\n  // },\n  Spewpa: {\n    types: ['Bug'],\n    bs: {hp: 45, at: 22, df: 60, sa: 27, sd: 30, sp: 29},\n    weightkg: 8.4,\n    nfe: true,\n    abilities: {0: 'Shed Skin'},\n  },\n  // Spritzee: {\n  //   types: ['Fairy'],\n  //   bs: {hp: 78, at: 52, df: 60, sa: 63, sd: 65, sp: 23},\n  //   weightkg: 0.5,\n  //   nfe: true,\n  //   abilities: {0: 'Healer'},\n  // },\n  // Swirlix: {\n  //   types: ['Fairy'],\n  //   bs: {hp: 62, at: 48, df: 66, sa: 59, sd: 57, sp: 49},\n  //   weightkg: 3.5,\n  //   nfe: true,\n  //   abilities: {0: 'Sweet Veil'},\n  // },\n  Sylveon: {\n    types: ['Fairy'],\n    bs: {hp: 95, at: 65, df: 65, sa: 110, sd: 130, sp: 60},\n    weightkg: 23.5,\n    abilities: {0: 'Cute Charm'},\n  },\n  Talonflame: {\n    types: ['Fire', 'Flying'],\n    bs: {hp: 78, at: 81, df: 71, sa: 74, sd: 69, sp: 126},\n    weightkg: 24.5,\n    abilities: {0: 'Flame Body'},\n  },\n  Trevenant: {\n    types: ['Ghost', 'Grass'],\n    bs: {hp: 85, at: 110, df: 76, sa: 65, sd: 82, sp: 56},\n    weightkg: 71,\n    abilities: {0: 'Natural Cure'},\n  },\n  // Tyrantrum: {\n  //   types: ['Rock', 'Dragon'],\n  //   bs: {hp: 82, at: 121, df: 119, sa: 69, sd: 59, sp: 71},\n  //   weightkg: 270,\n  //   abilities: {0: 'Strong Jaw'},\n  // },\n  // Tyrunt: {\n  //   types: ['Rock', 'Dragon'],\n  //   bs: {hp: 58, at: 89, df: 77, sa: 45, sd: 45, sp: 48},\n  //   weightkg: 26,\n  //   nfe: true,\n  //   abilities: {0: 'Strong Jaw'},\n  // },\n  Vivillon: {\n    types: ['Bug', 'Flying'],\n    bs: {hp: 80, at: 52, df: 50, sa: 90, sd: 50, sp: 89},\n    weightkg: 17,\n    abilities: {0: 'Shield Dust'},\n    otherFormes: ['Vivillon-Fancy', 'Vivillon-Pokeball'],\n  },\n  'Vivillon-Fancy': {\n    types: ['Bug', 'Flying'],\n    bs: {hp: 80, at: 52, df: 50, sa: 90, sd: 50, sp: 89},\n    weightkg: 17,\n    abilities: {0: 'Shield Dust'},\n    baseSpecies: 'Vivillon',\n  },\n  'Vivillon-Pokeball': {\n    types: ['Bug', 'Flying'],\n    bs: {hp: 80, at: 52, df: 50, sa: 90, sd: 50, sp: 89},\n    weightkg: 17,\n    abilities: {0: 'Shield Dust'},\n    baseSpecies: 'Vivillon',\n  },\n  Volcanion: {\n    types: ['Fire', 'Water'],\n    bs: {hp: 80, at: 110, df: 120, sa: 130, sd: 90, sp: 70},\n    weightkg: 195,\n    gender: 'N',\n    abilities: {0: 'Water Absorb'},\n  },\n  // Volkraken: {\n  //   types: ['Water', 'Fire'],\n  //   bs: {hp: 100, at: 45, df: 80, sa: 135, sd: 100, sp: 95},\n  //   weightkg: 44.5,\n  //   abilities: {0: 'Analytic'},\n  // },\n  // Volkritter: {\n  //   types: ['Water', 'Fire'],\n  //   bs: {hp: 60, at: 30, df: 50, sa: 80, sd: 60, sp: 70},\n  //   weightkg: 15,\n  //   nfe: true,\n  //   abilities: {0: 'Anticipation'},\n  // },\n  // Xerneas: {\n  //   types: ['Fairy'],\n  //   bs: {hp: 126, at: 131, df: 95, sa: 131, sd: 98, sp: 99},\n  //   weightkg: 215,\n  //   abilities: {0: 'Fairy Aura'},\n  //   gender: 'N',\n  // },\n  // Yveltal: {\n  //   types: ['Dark', 'Flying'],\n  //   bs: {hp: 126, at: 131, df: 95, sa: 131, sd: 98, sp: 99},\n  //   weightkg: 203,\n  //   abilities: {0: 'Dark Aura'},\n  //   gender: 'N',\n  // },\n  // Zygarde: {\n  //   types: ['Dragon', 'Ground'],\n  //   bs: {hp: 108, at: 100, df: 121, sa: 81, sd: 95, sp: 95},\n  //   weightkg: 305,\n  //   abilities: {0: 'Aura Break'},\n  //   gender: 'N',\n  // },\n};\n\nconst XY: {[name: string]: SpeciesData} = extend(true, {}, BW, XY_PATCH);\n\n// XY['Arceus'].otherFormes!.push('Arceus-Fairy');\n// XY['Arceus'].otherFormes!.sort();\n\nconst SM_PATCH: {[name: string]: DeepPartial<SpeciesData>} = {\n  // 'Alakazam-Mega': {bs: {sd: 105}},\n  Arbok: {bs: {at: 95}},\n  Ariados: {bs: {sd: 70}},\n  Beartic: {bs: {at: 130}},\n  Chimecho: {bs: {hp: 75, df: 80, sd: 90}},\n  // Corsola: {bs: {hp: 65, df: 95, sd: 95}},\n  // 'Crucibelle-Mega': {bs: {sa: 91, sp: 108}},\n  // Crustle: {bs: {at: 105}},\n  Cryogonal: {bs: {hp: 80, df: 50}},\n  // Delcatty: {bs: {sp: 90}},\n  Diglett: {otherFormes: ['Diglett-Alola']},\n  Dodrio: {bs: {sp: 110}},\n  Dugtrio: {bs: {at: 100}, otherFormes: ['Dugtrio-Alola']},\n  // Eevee: {otherFormes: ['Eevee-Starter']},\n  Electrode: {bs: {sp: 150}},\n  Exeggutor: {bs: {sd: 75}, otherFormes: ['Exeggutor-Alola']},\n  // 'Farfetch\\u2019d': {bs: {at: 90}},\n  Gengar: {abilities: {0: 'Cursed Body'}},\n  Geodude: {otherFormes: ['Geodude-Alola']},\n  Golem: {otherFormes: ['Golem-Alola']},\n  Graveler: {otherFormes: ['Graveler-Alola']},\n  Greninja: {otherFormes: ['Greninja-Ash']},\n  Grimer: {otherFormes: ['Grimer-Alola']},\n  Illumise: {bs: {df: 75, sd: 85}},\n  // Lunatone: {bs: {hp: 90}},\n  Magcargo: {bs: {hp: 60, sa: 90}},\n  // Mantine: {bs: {hp: 85}},\n  // Marowak: {otherFormes: ['Marowak-Alola', 'Marowak-Alola-Totem']},\n  Masquerain: {bs: {sa: 100, sp: 80}},\n  Meowth: {otherFormes: ['Meowth-Alola']},\n  Muk: {otherFormes: ['Muk-Alola']},\n  // Necturna: {bs: {sp: 58}},\n  Ninetales: {otherFormes: ['Ninetales-Alola']},\n  // Naviathan: {abilities: {0: 'Guts'}},\n  Noctowl: {bs: {sa: 86}},\n  Pelipper: {bs: {sa: 95}},\n  Persian: {otherFormes: ['Persian-Alola']},\n  // Pikachu: {\n    // otherFormes: [\n    //   'Pikachu-Alola',\n    //   'Pikachu-Hoenn',\n    //   'Pikachu-Kalos',\n    //   'Pikachu-Original',\n    //   'Pikachu-Partner',\n    //   'Pikachu-Sinnoh',\n    //   'Pikachu-Starter',\n    //   'Pikachu-Unova',\n    // ],\n  // },\n  Qwilfish: {bs: {df: 85}},\n  Raichu: {otherFormes: ['Raichu-Alola']},\n  // Raticate: {otherFormes: ['Raticate-Alola', 'Raticate-Alola-Totem']},\n  // Rattata: {otherFormes: ['Rattata-Alola']},\n  Sandshrew: {otherFormes: ['Sandshrew-Alola']},\n  Sandslash: {otherFormes: ['Sandslash-Alola']},\n  // Solrock: {bs: {hp: 90}},\n  // Swellow: {bs: {sa: 75}},\n  Volbeat: {bs: {df: 75, sd: 85}},\n  Vulpix: {otherFormes: ['Vulpix-Alola']},\n  // Woobat: {bs: {hp: 65}},\n  // Zygarde: {otherFormes: ['Zygarde-10%', 'Zygarde-Complete']},\n  Araquanid: {\n    types: ['Water', 'Bug'],\n    bs: {hp: 68, at: 70, df: 92, sa: 50, sd: 132, sp: 42},\n    abilities: {0: 'Water Bubble'},\n    weightkg: 82,\n    // otherFormes: ['Araquanid-Totem'],\n  },\n  // 'Araquanid-Totem': {\n  //   types: ['Water', 'Bug'],\n  //   bs: {hp: 68, at: 70, df: 92, sa: 50, sd: 132, sp: 42},\n  //   abilities: {0: 'Water Bubble'},\n  //   weightkg: 217.5,\n  //   baseSpecies: 'Araquanid',\n  // },\n  // Bewear: {\n  //   types: ['Normal', 'Fighting'],\n  //   bs: {hp: 120, at: 125, df: 80, sa: 55, sd: 60, sp: 60},\n  //   abilities: {0: 'Fluffy'},\n  //   weightkg: 135,\n  // },\n  // Blacephalon: {\n  //   types: ['Fire', 'Ghost'],\n  //   bs: {hp: 53, at: 127, df: 53, sa: 151, sd: 79, sp: 107},\n  //   weightkg: 13,\n  //   abilities: {0: 'Beast Boost'},\n  //   gender: 'N',\n  // },\n  Bounsweet: {\n    types: ['Grass'],\n    bs: {hp: 42, at: 30, df: 38, sa: 30, sd: 38, sp: 32},\n    weightkg: 3.2,\n    nfe: true,\n    abilities: {0: 'Leaf Guard'},\n    gender: 'F',\n  },\n  Brionne: {\n    types: ['Water'],\n    bs: {hp: 60, at: 69, df: 69, sa: 91, sd: 81, sp: 50},\n    weightkg: 17.5,\n    nfe: true,\n    abilities: {0: 'Torrent'},\n  },\n  Bruxish: {\n    types: ['Water', 'Psychic'],\n    bs: {hp: 68, at: 105, df: 70, sa: 70, sd: 70, sp: 92},\n    weightkg: 19,\n    abilities: {0: 'Dazzling'},\n  },\n  // Buzzwole: {\n  //   types: ['Bug', 'Fighting'],\n  //   bs: {hp: 107, at: 139, df: 139, sa: 53, sd: 53, sp: 79},\n  //   weightkg: 333.6,\n  //   abilities: {0: 'Beast Boost'},\n  //   gender: 'N',\n  // },\n  // Caribolt: {\n  //   types: ['Grass', 'Electric'],\n  //   bs: {hp: 84, at: 106, df: 82, sa: 77, sd: 80, sp: 106},\n  //   weightkg: 140,\n  //   abilities: {0: 'Overgrow'},\n  // },\n  // Celesteela: {\n  //   types: ['Steel', 'Flying'],\n  //   bs: {hp: 97, at: 101, df: 103, sa: 107, sd: 101, sp: 61},\n  //   weightkg: 999.9,\n  //   abilities: {0: 'Beast Boost'},\n  //   gender: 'N',\n  // },\n  Charjabug: {\n    types: ['Bug', 'Electric'],\n    bs: {hp: 57, at: 82, df: 95, sa: 55, sd: 75, sp: 36},\n    weightkg: 10.5,\n    nfe: true,\n    abilities: {0: 'Battery'},\n  },\n  Comfey: {\n    types: ['Fairy'],\n    bs: {hp: 51, at: 52, df: 90, sa: 82, sd: 110, sp: 100},\n    weightkg: 0.3,\n    abilities: {0: 'Flower Veil'},\n  },\n  Cosmoem: {\n    types: ['Psychic'],\n    bs: {hp: 43, at: 29, df: 131, sa: 29, sd: 131, sp: 37},\n    weightkg: 999.9,\n    nfe: true,\n    gender: 'N',\n    abilities: {0: 'Sturdy'},\n  },\n  // Coribalis: {\n  //   types: ['Water', 'Bug'],\n  //   bs: {hp: 76, at: 69, df: 90, sa: 65, sd: 77, sp: 43},\n  //   weightkg: 24.5,\n  //   nfe: true,\n  //   abilities: {0: 'Torrent'},\n  // },\n  Cosmog: {\n    types: ['Psychic'],\n    bs: {hp: 43, at: 29, df: 31, sa: 29, sd: 31, sp: 37},\n    weightkg: 0.1,\n    nfe: true,\n    gender: 'N',\n    abilities: {0: 'Unaware'},\n  },\n  Crabominable: {\n    types: ['Fighting', 'Ice'],\n    bs: {hp: 97, at: 132, df: 77, sa: 62, sd: 67, sp: 43},\n    weightkg: 180,\n    abilities: {0: 'Hyper Cutter'},\n  },\n  Crabrawler: {\n    types: ['Fighting'],\n    bs: {hp: 47, at: 82, df: 57, sa: 42, sd: 47, sp: 63},\n    weightkg: 7,\n    nfe: true,\n    abilities: {0: 'Hyper Cutter'},\n  },\n  Cutiefly: {\n    types: ['Bug', 'Fairy'],\n    bs: {hp: 40, at: 45, df: 40, sa: 55, sd: 40, sp: 84},\n    weightkg: 0.2,\n    nfe: true,\n    abilities: {0: 'Honey Gather'},\n  },\n  Dartrix: {\n    types: ['Grass', 'Flying'],\n    bs: {hp: 78, at: 75, df: 75, sa: 70, sd: 70, sp: 52},\n    weightkg: 16,\n    nfe: true,\n    abilities: {0: 'Overgrow'},\n  },\n  Decidueye: {\n    types: ['Grass', 'Ghost'],\n    bs: {hp: 78, at: 107, df: 75, sa: 100, sd: 100, sp: 70},\n    weightkg: 36.6,\n    abilities: {0: 'Overgrow'},\n  },\n  Dewpider: {\n    types: ['Water', 'Bug'],\n    bs: {hp: 38, at: 40, df: 52, sa: 40, sd: 72, sp: 27},\n    weightkg: 4,\n    nfe: true,\n    abilities: {0: 'Water Bubble'},\n  },\n  // Dhelmise: {\n  //   types: ['Ghost', 'Grass'],\n  //   bs: {hp: 70, at: 131, df: 100, sa: 86, sd: 90, sp: 40},\n  //   weightkg: 210,\n  //   gender: 'N',\n  //   abilities: {0: 'Steelworker'},\n  // },\n  // Drampa: {\n  //   types: ['Normal', 'Dragon'],\n  //   bs: {hp: 78, at: 60, df: 85, sa: 135, sd: 91, sp: 36},\n  //   weightkg: 185,\n  //   abilities: {0: 'Berserk'},\n  // },\n  'Diglett-Alola': {\n    types: ['Ground', 'Steel'],\n    bs: {hp: 10, at: 55, df: 30, sa: 35, sd: 45, sp: 90},\n    weightkg: 1,\n    baseSpecies: 'Diglett',\n    nfe: true,\n    abilities: {0: 'Sand Veil'},\n  },\n  'Dugtrio-Alola': {\n    types: ['Ground', 'Steel'],\n    bs: {hp: 35, at: 100, df: 60, sa: 50, sd: 70, sp: 110},\n    weightkg: 66.6,\n    baseSpecies: 'Dugtrio',\n    abilities: {0: 'Sand Veil'},\n  },\n  // 'Eevee-Starter': {\n  //   types: ['Normal'],\n  //   bs: {hp: 65, at: 75, df: 70, sa: 65, sd: 85, sp: 75},\n  //   weightkg: 6.5,\n  //   abilities: {0: 'Run Away'},\n  //   baseSpecies: 'Eevee',\n  // },\n  // Electrelk: {\n  //   types: ['Grass', 'Electric'],\n  //   bs: {hp: 59, at: 81, df: 67, sa: 57, sd: 55, sp: 101},\n  //   weightkg: 41.5,\n  //   nfe: true,\n  //   abilities: {0: 'Overgrow'},\n  // },\n  // Equilibra: {\n  //   types: ['Steel', 'Ground'],\n  //   bs: {hp: 102, at: 50, df: 96, sa: 133, sd: 118, sp: 60},\n  //   weightkg: 51.3,\n  //   gender: 'N',\n  //   abilities: {0: 'Levitate'},\n  // },\n  'Exeggutor-Alola': {\n    types: ['Grass', 'Dragon'],\n    bs: {hp: 95, at: 105, df: 85, sa: 125, sd: 75, sp: 45},\n    weightkg: 415.6,\n    baseSpecies: 'Exeggutor',\n    abilities: {0: 'Frisk'},\n  },\n  // Fawnifer: {\n  //   types: ['Grass'],\n  //   bs: {hp: 49, at: 61, df: 42, sa: 52, sd: 40, sp: 76},\n  //   weightkg: 6.9,\n  //   nfe: true,\n  //   abilities: {0: 'Overgrow'},\n  // },\n  Fomantis: {\n    types: ['Grass'],\n    bs: {hp: 40, at: 55, df: 35, sa: 50, sd: 35, sp: 35},\n    weightkg: 1.5,\n    nfe: true,\n    abilities: {0: 'Leaf Guard'},\n  },\n  'Geodude-Alola': {\n    types: ['Rock', 'Electric'],\n    bs: {hp: 40, at: 80, df: 100, sa: 30, sd: 30, sp: 20},\n    weightkg: 20.3,\n    baseSpecies: 'Geodude',\n    nfe: true,\n    abilities: {0: 'Magnet Pull'},\n  },\n  'Golem-Alola': {\n    types: ['Rock', 'Electric'],\n    bs: {hp: 80, at: 120, df: 130, sa: 55, sd: 65, sp: 45},\n    weightkg: 316,\n    abilities: {0: 'Magnet Pull'},\n    baseSpecies: 'Golem',\n  },\n  // Golisopod: {\n  //   types: ['Bug', 'Water'],\n  //   bs: {hp: 75, at: 125, df: 140, sa: 60, sd: 90, sp: 40},\n  //   weightkg: 108,\n  //   abilities: {0: 'Emergency Exit'},\n  // },\n  'Graveler-Alola': {\n    types: ['Rock', 'Electric'],\n    bs: {hp: 55, at: 95, df: 115, sa: 45, sd: 45, sp: 35},\n    weightkg: 110,\n    baseSpecies: 'Graveler',\n    nfe: true,\n    abilities: {0: 'Magnet Pull'},\n  },\n  'Grimer-Alola': {\n    types: ['Poison', 'Dark'],\n    bs: {hp: 80, at: 80, df: 50, sa: 40, sd: 50, sp: 25},\n    weightkg: 42,\n    baseSpecies: 'Grimer',\n    nfe: true,\n    abilities: {0: 'Poison Touch'},\n  },\n  'Greninja-Ash': {\n    types: ['Water', 'Dark'],\n    bs: {hp: 72, at: 145, df: 67, sa: 153, sd: 71, sp: 132},\n    weightkg: 40,\n    abilities: {0: 'Battle Bond'},\n    baseSpecies: 'Greninja',\n  },\n  Grubbin: {\n    types: ['Bug'],\n    bs: {hp: 47, at: 62, df: 45, sa: 55, sd: 45, sp: 46},\n    weightkg: 4.4,\n    nfe: true,\n    abilities: {0: 'Swarm'},\n  },\n  Gumshoos: {\n    types: ['Normal'],\n    bs: {hp: 88, at: 110, df: 60, sa: 55, sd: 60, sp: 45},\n    weightkg: 14.2,\n    // otherFormes: ['Gumshoos-Totem'],\n    abilities: {0: 'Stakeout'},\n  },\n  // 'Gumshoos-Totem': {\n  //   types: ['Normal'],\n  //   bs: {hp: 88, at: 110, df: 60, sa: 55, sd: 60, sp: 45},\n  //   weightkg: 60,\n  //   baseSpecies: 'Gumshoos',\n  //   abilities: {0: 'Adaptability'},\n  // },\n  // Guzzlord: {\n  //   types: ['Dark', 'Dragon'],\n  //   bs: {hp: 223, at: 101, df: 53, sa: 97, sd: 53, sp: 43},\n  //   weightkg: 888,\n  //   abilities: {0: 'Beast Boost'},\n  //   gender: 'N',\n  // },\n  'Hakamo-o': {\n    types: ['Dragon', 'Fighting'],\n    bs: {hp: 55, at: 75, df: 90, sa: 65, sd: 70, sp: 65},\n    weightkg: 47,\n    nfe: true,\n    abilities: {0: 'Bulletproof'},\n  },\n  Incineroar: {\n    types: ['Fire', 'Dark'],\n    bs: {hp: 95, at: 115, df: 90, sa: 80, sd: 90, sp: 60},\n    weightkg: 83,\n    abilities: {0: 'Blaze'},\n  },\n  'Jangmo-o': {\n    types: ['Dragon'],\n    bs: {hp: 45, at: 55, df: 65, sa: 45, sd: 45, sp: 45},\n    weightkg: 29.7,\n    nfe: true,\n    abilities: {0: 'Bulletproof'},\n  },\n  // Justyke: {\n  //   types: ['Steel', 'Ground'],\n  //   bs: {hp: 72, at: 70, df: 56, sa: 83, sd: 68, sp: 30},\n  //   weightkg: 36.5,\n  //   nfe: true,\n  //   abilities: {0: 'Levitate'},\n  //   gender: 'N',\n  // },\n  // Jumbao: {\n  //   types: ['Grass', 'Fairy'],\n  //   bs: {hp: 92, at: 63, df: 97, sa: 124, sd: 104, sp: 96},\n  //   weightkg: 200,\n  //   abilities: {0: 'Trace'},\n  // },\n  // Kartana: {\n  //   types: ['Grass', 'Steel'],\n  //   bs: {hp: 59, at: 181, df: 131, sa: 59, sd: 31, sp: 109},\n  //   weightkg: 0.1,\n  //   abilities: {0: 'Beast Boost'},\n  //   gender: 'N',\n  // },\n  Komala: {\n    types: ['Normal'],\n    bs: {hp: 65, at: 115, df: 65, sa: 75, sd: 95, sp: 65},\n    weightkg: 19.9,\n    abilities: {0: 'Comatose'},\n  },\n  'Kommo-o': {\n    types: ['Dragon', 'Fighting'],\n    bs: {hp: 75, at: 110, df: 125, sa: 100, sd: 105, sp: 85},\n    weightkg: 78.2,\n    otherFormes: ['Kommo-o-Totem'],\n    abilities: {0: 'Bulletproof'},\n  },\n  // 'Kommo-o-Totem': {\n  //   types: ['Dragon', 'Fighting'],\n  //   bs: {hp: 75, at: 110, df: 125, sa: 100, sd: 105, sp: 85},\n  //   weightkg: 207.5,\n  //   abilities: {0: 'Overcoat'},\n  //   baseSpecies: 'Kommo-o',\n  // },\n  Litten: {\n    types: ['Fire'],\n    bs: {hp: 45, at: 65, df: 40, sa: 60, sd: 40, sp: 70},\n    weightkg: 4.3,\n    nfe: true,\n    abilities: {0: 'Blaze'},\n  },\n  Lunala: {\n    types: ['Psychic', 'Ghost'],\n    bs: {hp: 137, at: 113, df: 89, sa: 137, sd: 107, sp: 97},\n    weightkg: 120,\n    abilities: {0: 'Shadow Shield'},\n    gender: 'N',\n  },\n  Lurantis: {\n    types: ['Grass'],\n    bs: {hp: 70, at: 105, df: 90, sa: 80, sd: 90, sp: 45},\n    weightkg: 18.5,\n    // otherFormes: ['Lurantis-Totem'],\n    abilities: {0: 'Leaf Guard'},\n  },\n  // 'Lurantis-Totem': {\n  //   types: ['Grass'],\n  //   bs: {hp: 70, at: 105, df: 90, sa: 80, sd: 90, sp: 45},\n  //   weightkg: 58,\n  //   abilities: {0: 'Leaf Guard'},\n  //   baseSpecies: 'Lurantis',\n  // },\n  Lycanroc: {\n    types: ['Rock'],\n    bs: {hp: 75, at: 115, df: 65, sa: 55, sd: 65, sp: 112},\n    weightkg: 25,\n    otherFormes: ['Lycanroc-Dusk', 'Lycanroc-Midnight'],\n    abilities: {0: 'Keen Eye'},\n  },\n  'Lycanroc-Dusk': {\n    types: ['Rock'],\n    bs: {hp: 75, at: 117, df: 65, sa: 55, sd: 65, sp: 110},\n    weightkg: 25,\n    abilities: {0: 'Tough Claws'},\n    baseSpecies: 'Lycanroc',\n  },\n  'Lycanroc-Midnight': {\n    types: ['Rock'],\n    bs: {hp: 85, at: 115, df: 75, sa: 55, sd: 75, sp: 82},\n    weightkg: 25,\n    baseSpecies: 'Lycanroc',\n    abilities: {0: 'Keen Eye'},\n  },\n  Magearna: {\n    types: ['Steel', 'Fairy'],\n    bs: {hp: 80, at: 95, df: 115, sa: 130, sd: 115, sp: 65},\n    weightkg: 80.5,\n    gender: 'N',\n    abilities: {0: 'Soul-Heart'},\n  },\n  Mareanie: {\n    types: ['Poison', 'Water'],\n    bs: {hp: 50, at: 53, df: 62, sa: 43, sd: 52, sp: 45},\n    weightkg: 8,\n    nfe: true,\n    abilities: {0: 'Merciless'},\n  },\n  // 'Marowak-Alola': {\n  //   types: ['Fire', 'Ghost'],\n  //   bs: {hp: 60, at: 80, df: 110, sa: 50, sd: 80, sp: 45},\n  //   weightkg: 34,\n  //   abilities: {0: 'Cursed Body'},\n  //   baseSpecies: 'Marowak',\n  // },\n  // 'Marowak-Alola-Totem': {\n  //   types: ['Fire', 'Ghost'],\n  //   bs: {hp: 60, at: 80, df: 110, sa: 50, sd: 80, sp: 45},\n  //   weightkg: 98,\n  //   abilities: {0: 'Rock Head'},\n  //   baseSpecies: 'Marowak',\n  // },\n  // Marshadow: {\n  //   types: ['Fighting', 'Ghost'],\n  //   bs: {hp: 90, at: 125, df: 80, sa: 90, sd: 90, sp: 125},\n  //   weightkg: 22.2,\n  //   gender: 'N',\n  //   abilities: {0: 'Technician'},\n  // },\n  // Melmetal: {\n  //   types: ['Steel'],\n  //   bs: {hp: 135, at: 143, df: 143, sa: 80, sd: 65, sp: 34},\n  //   weightkg: 800,\n  //   gender: 'N',\n  //   abilities: {0: 'Iron Fist'},\n  // },\n  // Meltan does NOT benefit from Eviolite and should not have nfe: true (credit: Anubis)\n  // https://smogon.com/forums/threads/sword-shield-battle-mechanics-research.3655528/post-8295399\n  // Meltan: {\n  //   types: ['Steel'],\n  //   bs: {hp: 46, at: 65, df: 65, sa: 55, sd: 35, sp: 34},\n  //   weightkg: 8,\n  //   gender: 'N',\n  //   abilities: {0: 'Magnet Pull'},\n  // },\n  'Meowth-Alola': {\n    types: ['Dark'],\n    bs: {hp: 40, at: 35, df: 35, sa: 50, sd: 40, sp: 90},\n    weightkg: 4.2,\n    baseSpecies: 'Meowth',\n    nfe: true,\n    abilities: {0: 'Pickup'},\n  },\n  Mimikyu: {\n    types: ['Ghost', 'Fairy'],\n    bs: {hp: 55, at: 90, df: 80, sa: 50, sd: 105, sp: 96},\n    weightkg: 0.7,\n    otherFormes: ['Mimikyu-Busted'], //, 'Mimikyu-Busted-Totem', 'Mimikyu-Totem'],\n    abilities: {0: 'Disguise'},\n  },\n  'Mimikyu-Busted': {\n    types: ['Ghost', 'Fairy'],\n    bs: {hp: 55, at: 90, df: 80, sa: 50, sd: 105, sp: 96},\n    weightkg: 0.7,\n    baseSpecies: 'Mimikyu',\n    abilities: {0: 'Disguise'},\n  },\n  // 'Mimikyu-Totem-Busted': {\n  //   types: ['Ghost', 'Fairy'],\n  //   bs: {hp: 55, at: 90, df: 80, sa: 50, sd: 105, sp: 96},\n  //   weightkg: 2.8,\n  //   baseSpecies: 'Mimikyu',\n  //   abilities: {0: 'Disguise'},\n  // },\n  // 'Mimikyu-Totem-Disguised': {\n  //   types: ['Ghost', 'Fairy'],\n  //   bs: {hp: 55, at: 90, df: 80, sa: 50, sd: 105, sp: 96},\n  //   weightkg: 2.8,\n  //   baseSpecies: 'Mimikyu',\n  //   abilities: {0: 'Disguise'},\n  // },\n  Minior: {\n    types: ['Rock', 'Flying'],\n    bs: {hp: 60, at: 100, df: 60, sa: 100, sd: 60, sp: 120},\n    weightkg: 0.3,\n    otherFormes: ['Minior-Meteor'],\n    gender: 'N',\n    abilities: {0: 'Shields Down'},\n  },\n  'Minior-Meteor': {\n    types: ['Rock', 'Flying'],\n    bs: {hp: 60, at: 60, df: 100, sa: 60, sd: 100, sp: 60},\n    weightkg: 40,\n    gender: 'N',\n    baseSpecies: 'Minior',\n    abilities: {0: 'Shields Down'},\n  },\n  // Morelull: {\n  //   types: ['Grass', 'Fairy'],\n  //   bs: {hp: 40, at: 35, df: 55, sa: 65, sd: 75, sp: 15},\n  //   weightkg: 1.5,\n  //   nfe: true,\n  //   abilities: {0: 'Illuminate'},\n  // },\n  Mudbray: {\n    types: ['Ground'],\n    bs: {hp: 70, at: 100, df: 70, sa: 45, sd: 55, sp: 45},\n    weightkg: 110,\n    nfe: true,\n    abilities: {0: 'Own Tempo'},\n  },\n  Mudsdale: {\n    types: ['Ground'],\n    bs: {hp: 100, at: 125, df: 100, sa: 55, sd: 85, sp: 35},\n    weightkg: 920,\n    abilities: {0: 'Own Tempo'},\n  },\n  'Muk-Alola': {\n    types: ['Poison', 'Dark'],\n    bs: {hp: 105, at: 105, df: 75, sa: 65, sd: 100, sp: 50},\n    weightkg: 52,\n    baseSpecies: 'Muk',\n    abilities: {0: 'Poison Touch'},\n  },\n  // Mumbao: {\n  //   types: ['Grass', 'Fairy'],\n  //   bs: {hp: 55, at: 30, df: 64, sa: 87, sd: 73, sp: 66},\n  //   weightkg: 83,\n  //   nfe: true,\n  //   abilities: {0: 'Trace'},\n  // },\n  // Naganadel: {\n  //   types: ['Poison', 'Dragon'],\n  //   bs: {hp: 73, at: 73, df: 73, sa: 127, sd: 73, sp: 121},\n  //   weightkg: 150,\n  //   abilities: {0: 'Beast Boost'},\n  //   gender: 'N',\n  // },\n  Necrozma: {\n    types: ['Psychic'],\n    bs: {hp: 97, at: 107, df: 101, sa: 127, sd: 89, sp: 79},\n    weightkg: 230,\n    abilities: {0: 'Prism Armor'},\n    otherFormes: ['Necrozma-Dawn-Wings', 'Necrozma-Dusk-Mane', 'Necrozma-Ultra'],\n    gender: 'N',\n  },\n  'Necrozma-Dawn-Wings': {\n    types: ['Psychic', 'Ghost'],\n    bs: {hp: 97, at: 113, df: 109, sa: 157, sd: 127, sp: 77},\n    weightkg: 350,\n    abilities: {0: 'Prism Armor'},\n    baseSpecies: 'Necrozma',\n    gender: 'N',\n  },\n  'Necrozma-Dusk-Mane': {\n    types: ['Psychic', 'Steel'],\n    bs: {hp: 97, at: 157, df: 127, sa: 113, sd: 109, sp: 77},\n    weightkg: 460,\n    abilities: {0: 'Prism Armor'},\n    baseSpecies: 'Necrozma',\n    gender: 'N',\n  },\n  // 'Necrozma-Ultra': {\n  //   types: ['Psychic', 'Dragon'],\n  //   bs: {hp: 97, at: 167, df: 97, sa: 167, sd: 97, sp: 129},\n  //   weightkg: 230,\n  //   abilities: {0: 'Neuroforce'},\n  //   baseSpecies: 'Necrozma',\n  //   gender: 'N',\n  // },\n  // Nihilego: {\n  //   types: ['Rock', 'Poison'],\n  //   bs: {hp: 109, at: 53, df: 47, sa: 127, sd: 131, sp: 103},\n  //   weightkg: 55.5,\n  //   abilities: {0: 'Beast Boost'},\n  //   gender: 'N',\n  // },\n  'Ninetales-Alola': {\n    types: ['Ice', 'Fairy'],\n    bs: {hp: 73, at: 67, df: 75, sa: 81, sd: 100, sp: 109},\n    weightkg: 19.9,\n    abilities: {0: 'Snow Cloak'},\n    baseSpecies: 'Ninetales',\n  },\n  Oranguru: {\n    types: ['Normal', 'Psychic'],\n    bs: {hp: 90, at: 60, df: 80, sa: 90, sd: 110, sp: 60},\n    weightkg: 76,\n    abilities: {0: 'Inner Focus'},\n  },\n  Oricorio: {\n    types: ['Fire', 'Flying'],\n    bs: {hp: 75, at: 70, df: 70, sa: 98, sd: 70, sp: 93},\n    weightkg: 3.4,\n    abilities: {0: 'Dancer'},\n    otherFormes: ['Oricorio-Pa\\'u', 'Oricorio-Pom-Pom', 'Oricorio-Sensu'],\n  },\n  'Oricorio-Pa\\'u': {\n    types: ['Psychic', 'Flying'],\n    bs: {hp: 75, at: 70, df: 70, sa: 98, sd: 70, sp: 93},\n    weightkg: 3.4,\n    abilities: {0: 'Dancer'},\n    baseSpecies: 'Oricorio',\n  },\n  'Oricorio-Pom-Pom': {\n    types: ['Electric', 'Flying'],\n    bs: {hp: 75, at: 70, df: 70, sa: 98, sd: 70, sp: 93},\n    weightkg: 3.4,\n    abilities: {0: 'Dancer'},\n    baseSpecies: 'Oricorio',\n  },\n  'Oricorio-Sensu': {\n    types: ['Ghost', 'Flying'],\n    bs: {hp: 75, at: 70, df: 70, sa: 98, sd: 70, sp: 93},\n    weightkg: 3.4,\n    abilities: {0: 'Dancer'},\n    baseSpecies: 'Oricorio',\n  },\n  // Pajantom: {\n  //   types: ['Dragon', 'Ghost'],\n  //   bs: {hp: 84, at: 133, df: 71, sa: 51, sd: 111, sp: 101},\n  //   weightkg: 3.1,\n  //   abilities: {0: 'Comatose'},\n  // },\n  Palossand: {\n    types: ['Ghost', 'Ground'],\n    bs: {hp: 85, at: 75, df: 110, sa: 100, sd: 75, sp: 35},\n    weightkg: 250,\n    abilities: {0: 'Water Compaction'},\n  },\n  Passimian: {\n    types: ['Fighting'],\n    bs: {hp: 100, at: 120, df: 90, sa: 40, sd: 60, sp: 80},\n    weightkg: 82.8,\n    abilities: {0: 'Receiver'},\n  },\n  'Persian-Alola': {\n    types: ['Dark'],\n    bs: {hp: 65, at: 60, df: 60, sa: 75, sd: 65, sp: 115},\n    weightkg: 33,\n    baseSpecies: 'Persian',\n    abilities: {0: 'Fur Coat'},\n  },\n  // Pheromosa: {\n  //   types: ['Bug', 'Fighting'],\n  //   bs: {hp: 71, at: 137, df: 37, sa: 137, sd: 37, sp: 151},\n  //   weightkg: 25,\n  //   abilities: {0: 'Beast Boost'},\n  //   gender: 'N',\n  // },\n  // 'Pikachu-Alola': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Static'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-Hoenn': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Static'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-Kalos': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Static'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-Original': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Static'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-Partner': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Static'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-Sinnoh': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Static'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-Starter': {\n  //   types: ['Electric'],\n  //   bs: {hp: 45, at: 80, df: 50, sa: 75, sd: 60, sp: 120},\n  //   weightkg: 6,\n  //   abilities: {0: 'Static'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-Unova': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Static'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  Pikipek: {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 35, at: 75, df: 30, sa: 30, sd: 30, sp: 65},\n    weightkg: 1.2,\n    nfe: true,\n    abilities: {0: 'Keen Eye'},\n  },\n  // Poipole: {\n  //   types: ['Poison'],\n  //   bs: {hp: 67, at: 73, df: 67, sa: 73, sd: 67, sp: 73},\n  //   weightkg: 1.8,\n  //   abilities: {0: 'Beast Boost'},\n  //   nfe: true,\n  //   gender: 'N',\n  // },\n  Popplio: {\n    types: ['Water'],\n    bs: {hp: 50, at: 54, df: 54, sa: 66, sd: 56, sp: 40},\n    weightkg: 7.5,\n    nfe: true,\n    abilities: {0: 'Torrent'},\n  },\n  Primarina: {\n    types: ['Water', 'Fairy'],\n    bs: {hp: 80, at: 74, df: 74, sa: 126, sd: 116, sp: 60},\n    weightkg: 44,\n    abilities: {0: 'Torrent'},\n  },\n  // Pyukumuku: {\n  //   types: ['Water'],\n  //   bs: {hp: 55, at: 60, df: 130, sa: 30, sd: 130, sp: 5},\n  //   weightkg: 1.2,\n  //   abilities: {0: 'Innards Out'},\n  // },\n  'Raichu-Alola': {\n    types: ['Electric', 'Psychic'],\n    bs: {hp: 60, at: 85, df: 50, sa: 95, sd: 85, sp: 110},\n    weightkg: 21,\n    baseSpecies: 'Raichu',\n    abilities: {0: 'Surge Surfer'},\n  },\n  // 'Raticate-Alola': {\n  //   types: ['Dark', 'Normal'],\n  //   bs: {hp: 75, at: 71, df: 70, sa: 40, sd: 80, sp: 77},\n  //   weightkg: 25.5,\n  //   baseSpecies: 'Raticate',\n  //   abilities: {0: 'Gluttony'},\n  // },\n  // 'Raticate-Alola-Totem': {\n  //   types: ['Dark', 'Normal'],\n  //   bs: {hp: 75, at: 71, df: 70, sa: 40, sd: 80, sp: 77},\n  //   weightkg: 105,\n  //   abilities: {0: 'Thick Fat'},\n  //   baseSpecies: 'Raticate',\n  // },\n  // 'Rattata-Alola': {\n  //   types: ['Dark', 'Normal'],\n  //   bs: {hp: 30, at: 56, df: 35, sa: 25, sd: 35, sp: 72},\n  //   weightkg: 3.8,\n  //   baseSpecies: 'Rattata',\n  //   nfe: true,\n  //   abilities: {0: 'Gluttony'},\n  // },\n  Ribombee: {\n    types: ['Bug', 'Fairy'],\n    bs: {hp: 60, at: 55, df: 60, sa: 95, sd: 70, sp: 124},\n    weightkg: 0.5,\n    // otherFormes: ['Ribombee-Totem'],\n    abilities: {0: 'Honey Gather'},\n  },\n  // 'Ribombee-Totem': {\n  //   types: ['Bug', 'Fairy'],\n  //   bs: {hp: 60, at: 55, df: 60, sa: 95, sd: 70, sp: 124},\n  //   weightkg: 2,\n  //   abilities: {0: 'Sweet Veil'},\n  //   baseSpecies: 'Ribombee',\n  // },\n  Rockruff: {\n    types: ['Rock'],\n    bs: {hp: 45, at: 65, df: 40, sa: 30, sd: 40, sp: 60},\n    weightkg: 9.2,\n    nfe: true,\n    abilities: {0: 'Keen Eye'},\n  },\n  Rowlet: {\n    types: ['Grass', 'Flying'],\n    bs: {hp: 68, at: 55, df: 55, sa: 50, sd: 50, sp: 42},\n    weightkg: 1.5,\n    nfe: true,\n    abilities: {0: 'Overgrow'},\n  },\n  Salandit: {\n    types: ['Poison', 'Fire'],\n    bs: {hp: 48, at: 44, df: 40, sa: 71, sd: 40, sp: 77},\n    weightkg: 4.8,\n    nfe: true,\n    abilities: {0: 'Corrosion'},\n  },\n  Salazzle: {\n    types: ['Poison', 'Fire'],\n    bs: {hp: 68, at: 64, df: 60, sa: 111, sd: 60, sp: 117},\n    weightkg: 22.2,\n    otherFormes: ['Salazzle-Totem'],\n    abilities: {0: 'Corrosion'},\n    gender: 'F',\n  },\n  // 'Salazzle-Totem': {\n  //   types: ['Poison', 'Fire'],\n  //   bs: {hp: 68, at: 64, df: 60, sa: 111, sd: 60, sp: 117},\n  //   weightkg: 81,\n  //   abilities: {0: 'Corrosion'},\n  //   baseSpecies: 'Salazzle',\n  // },\n  'Sandshrew-Alola': {\n    types: ['Ice', 'Steel'],\n    bs: {hp: 50, at: 75, df: 90, sa: 10, sd: 35, sp: 40},\n    weightkg: 40,\n    baseSpecies: 'Sandshrew',\n    nfe: true,\n    abilities: {0: 'Snow Cloak'},\n  },\n  'Sandslash-Alola': {\n    types: ['Ice', 'Steel'],\n    bs: {hp: 75, at: 100, df: 120, sa: 25, sd: 65, sp: 65},\n    weightkg: 55,\n    baseSpecies: 'Sandslash',\n    abilities: {0: 'Snow Cloak'},\n  },\n  Sandygast: {\n    types: ['Ghost', 'Ground'],\n    bs: {hp: 55, at: 55, df: 80, sa: 70, sd: 45, sp: 15},\n    weightkg: 70,\n    nfe: true,\n    abilities: {0: 'Water Compaction'},\n  },\n  // Shiinotic: {\n  //   types: ['Grass', 'Fairy'],\n  //   bs: {hp: 60, at: 45, df: 80, sa: 90, sd: 100, sp: 30},\n  //   weightkg: 11.5,\n  //   abilities: {0: 'Illuminate'},\n  // },\n  // Silvally: {\n  //   types: ['Normal'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   gender: 'N',\n  //   otherFormes: [\n  //     'Silvally-Bug',\n  //     'Silvally-Dark',\n  //     'Silvally-Dragon',\n  //     'Silvally-Electric',\n  //     'Silvally-Fairy',\n  //     'Silvally-Fighting',\n  //     'Silvally-Fire',\n  //     'Silvally-Flying',\n  //     'Silvally-Ghost',\n  //     'Silvally-Grass',\n  //     'Silvally-Ground',\n  //     'Silvally-Ice',\n  //     'Silvally-Poison',\n  //     'Silvally-Psychic',\n  //     'Silvally-Rock',\n  //     'Silvally-Steel',\n  //     'Silvally-Water',\n  //   ],\n  // },\n  // 'Silvally-Bug': {\n  //   types: ['Bug'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Dark': {\n  //   types: ['Dark'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Dragon': {\n  //   types: ['Dragon'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Electric': {\n  //   types: ['Electric'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Fairy': {\n  //   types: ['Fairy'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Fighting': {\n  //   types: ['Fighting'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Fire': {\n  //   types: ['Fire'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Flying': {\n  //   types: ['Flying'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Ghost': {\n  //   types: ['Ghost'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Grass': {\n  //   types: ['Grass'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Ground': {\n  //   types: ['Ground'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Ice': {\n  //   types: ['Ice'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Poison': {\n  //   types: ['Poison'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Psychic': {\n  //   types: ['Psychic'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Rock': {\n  //   types: ['Rock'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Steel': {\n  //   types: ['Steel'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // 'Silvally-Water': {\n  //   types: ['Water'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 95},\n  //   weightkg: 100.5,\n  //   abilities: {0: 'RKS System'},\n  //   baseSpecies: 'Silvally',\n  //   gender: 'N',\n  // },\n  // Smogecko: {\n  //   types: ['Fire'],\n  //   bs: {hp: 48, at: 66, df: 43, sa: 58, sd: 48, sp: 56},\n  //   weightkg: 8.5,\n  //   nfe: true,\n  //   abilities: {0: 'Blaze'},\n  // },\n  // Smoguana: {\n  //   types: ['Fire', 'Ground'],\n  //   bs: {hp: 68, at: 86, df: 53, sa: 68, sd: 68, sp: 76},\n  //   weightkg: 22.2,\n  //   nfe: true,\n  //   abilities: {0: 'Blaze'},\n  // },\n  // Smokomodo: {\n  //   types: ['Fire', 'Ground'],\n  //   bs: {hp: 88, at: 116, df: 67, sa: 88, sd: 78, sp: 97},\n  //   weightkg: 205,\n  //   abilities: {0: 'Blaze'},\n  // },\n  // Snaelstrom: {\n  //   types: ['Water', 'Bug'],\n  //   bs: {hp: 91, at: 94, df: 110, sa: 80, sd: 97, sp: 63},\n  //   weightkg: 120,\n  //   abilities: {0: 'Torrent'},\n  // },\n  Solgaleo: {\n    types: ['Psychic', 'Steel'],\n    bs: {hp: 137, at: 137, df: 107, sa: 113, sd: 89, sp: 97},\n    weightkg: 230,\n    abilities: {0: 'Full Metal Body'},\n    gender: 'N',\n  },\n  // Stakataka: {\n  //   types: ['Rock', 'Steel'],\n  //   bs: {hp: 61, at: 131, df: 211, sa: 53, sd: 101, sp: 13},\n  //   weightkg: 820,\n  //   abilities: {0: 'Beast Boost'},\n  //   gender: 'N',\n  // },\n  Steenee: {\n    types: ['Grass'],\n    bs: {hp: 52, at: 40, df: 48, sa: 40, sd: 48, sp: 62},\n    weightkg: 8.2,\n    nfe: true,\n    abilities: {0: 'Leaf Guard'},\n    gender: 'F',\n  },\n  // Stufful: {\n  //   types: ['Normal', 'Fighting'],\n  //   bs: {hp: 70, at: 75, df: 50, sa: 45, sd: 50, sp: 50},\n  //   weightkg: 6.8,\n  //   abilities: {0: 'Fluffy'},\n  //   nfe: true,\n  // },\n  // Swirlpool: {\n  //   types: ['Water'],\n  //   bs: {hp: 61, at: 49, df: 70, sa: 50, sd: 62, sp: 28},\n  //   weightkg: 7,\n  //   nfe: true,\n  //   abilities: {0: 'Torrent'},\n  // },\n  // 'Tapu Bulu': {\n  //   types: ['Grass', 'Fairy'],\n  //   bs: {hp: 70, at: 130, df: 115, sa: 85, sd: 95, sp: 75},\n  //   weightkg: 45.5,\n  //   abilities: {0: 'Grassy Surge'},\n  //   gender: 'N',\n  // },\n  // 'Tapu Fini': {\n  //   types: ['Water', 'Fairy'],\n  //   bs: {hp: 70, at: 75, df: 115, sa: 95, sd: 130, sp: 85},\n  //   weightkg: 21.2,\n  //   abilities: {0: 'Misty Surge'},\n  //   gender: 'N',\n  // },\n  // 'Tapu Koko': {\n  //   types: ['Electric', 'Fairy'],\n  //   bs: {hp: 70, at: 115, df: 85, sa: 95, sd: 75, sp: 130},\n  //   weightkg: 20.5,\n  //   abilities: {0: 'Electric Surge'},\n  //   gender: 'N',\n  // },\n  // 'Tapu Lele': {\n  //   types: ['Psychic', 'Fairy'],\n  //   bs: {hp: 70, at: 85, df: 75, sa: 130, sd: 115, sp: 95},\n  //   weightkg: 18.6,\n  //   abilities: {0: 'Psychic Surge'},\n  //   gender: 'N',\n  // },\n  // Togedemaru: {\n  //   types: ['Electric', 'Steel'],\n  //   bs: {hp: 65, at: 98, df: 63, sa: 40, sd: 73, sp: 96},\n  //   weightkg: 3.3,\n  //   abilities: {0: 'Iron Barbs'},\n  //   otherFormes: ['Togedemaru-Totem'],\n  // },\n  // 'Togedemaru-Totem': {\n  //   types: ['Electric', 'Steel'],\n  //   bs: {hp: 65, at: 98, df: 63, sa: 40, sd: 73, sp: 96},\n  //   weightkg: 13,\n  //   abilities: {0: 'Sturdy'},\n  //   baseSpecies: 'Togedemaru',\n  // },\n  Torracat: {\n    types: ['Fire'],\n    bs: {hp: 65, at: 85, df: 50, sa: 80, sd: 50, sp: 90},\n    weightkg: 25,\n    nfe: true,\n    abilities: {0: 'Blaze'},\n  },\n  Toucannon: {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 80, at: 120, df: 75, sa: 75, sd: 75, sp: 60},\n    weightkg: 26,\n    abilities: {0: 'Keen Eye'},\n  },\n  Toxapex: {\n    types: ['Poison', 'Water'],\n    bs: {hp: 50, at: 63, df: 152, sa: 53, sd: 142, sp: 35},\n    weightkg: 14.5,\n    abilities: {0: 'Merciless'},\n  },\n  Trumbeak: {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 55, at: 85, df: 50, sa: 40, sd: 50, sp: 75},\n    weightkg: 14.8,\n    nfe: true,\n    abilities: {0: 'Keen Eye'},\n  },\n  Tsareena: {\n    types: ['Grass'],\n    bs: {hp: 72, at: 120, df: 98, sa: 50, sd: 98, sp: 72},\n    weightkg: 21.4,\n    abilities: {0: 'Leaf Guard'},\n    gender: 'F',\n  },\n  // Turtonator: {\n  //   types: ['Fire', 'Dragon'],\n  //   bs: {hp: 60, at: 78, df: 135, sa: 91, sd: 85, sp: 36},\n  //   weightkg: 212,\n  //   abilities: {0: 'Shell Armor'},\n  // },\n  // 'Type: Null': {\n  //   types: ['Normal'],\n  //   bs: {hp: 95, at: 95, df: 95, sa: 95, sd: 95, sp: 59},\n  //   weightkg: 120.5,\n  //   abilities: {0: 'Battle Armor'},\n  //   nfe: true,\n  //   gender: 'N',\n  // },\n  Vikavolt: {\n    types: ['Bug', 'Electric'],\n    bs: {hp: 77, at: 70, df: 90, sa: 145, sd: 75, sp: 43},\n    weightkg: 45,\n    abilities: {0: 'Levitate'},\n    otherFormes: ['Vikavolt-Totem'],\n  },\n  // 'Vikavolt-Totem': {\n  //   types: ['Bug', 'Electric'],\n  //   bs: {hp: 77, at: 70, df: 90, sa: 145, sd: 75, sp: 43},\n  //   weightkg: 147.5,\n  //   abilities: {0: 'Levitate'},\n  //   baseSpecies: 'Vikavolt',\n  // },\n  'Vulpix-Alola': {\n    types: ['Ice'],\n    bs: {hp: 38, at: 41, df: 40, sa: 50, sd: 65, sp: 65},\n    weightkg: 9.9,\n    baseSpecies: 'Vulpix',\n    nfe: true,\n    abilities: {0: 'Snow Cloak'},\n  },\n  // Wimpod: {\n  //   types: ['Bug', 'Water'],\n  //   bs: {hp: 25, at: 35, df: 40, sa: 20, sd: 30, sp: 80},\n  //   weightkg: 12,\n  //   abilities: {0: 'Wimp Out'},\n  //   nfe: true,\n  // },\n  // Wishiwashi: {\n  //   types: ['Water'],\n  //   bs: {hp: 45, at: 20, df: 20, sa: 25, sd: 25, sp: 40},\n  //   weightkg: 0.3,\n  //   otherFormes: ['Wishiwashi-School'],\n  //   abilities: {0: 'Schooling'},\n  // },\n  // 'Wishiwashi-School': {\n  //   types: ['Water'],\n  //   bs: {hp: 45, at: 140, df: 130, sa: 140, sd: 135, sp: 30},\n  //   weightkg: 78.6,\n  //   baseSpecies: 'Wishiwashi',\n  //   abilities: {0: 'Schooling'},\n  // },\n  // Xurkitree: {\n  //   types: ['Electric'],\n  //   bs: {hp: 83, at: 89, df: 71, sa: 173, sd: 71, sp: 83},\n  //   weightkg: 100,\n  //   abilities: {0: 'Beast Boost'},\n  //   gender: 'N',\n  // },\n  Yungoos: {\n    types: ['Normal'],\n    bs: {hp: 48, at: 70, df: 30, sa: 30, sd: 30, sp: 45},\n    weightkg: 6,\n    nfe: true,\n    abilities: {0: 'Stakeout'},\n  },\n  // Zeraora: {\n  //   types: ['Electric'],\n  //   bs: {hp: 88, at: 112, df: 75, sa: 102, sd: 80, sp: 143},\n  //   weightkg: 44.5,\n  //   abilities: {0: 'Volt Absorb'},\n  //   gender: 'N',\n  // },\n  // 'Zygarde-10%': {\n  //   types: ['Dragon', 'Ground'],\n  //   bs: {hp: 54, at: 100, df: 71, sa: 61, sd: 85, sp: 115},\n  //   weightkg: 33.5,\n  //   abilities: {0: 'Aura Break'},\n  //   baseSpecies: 'Zygarde',\n  //   gender: 'N',\n  // },\n  // 'Zygarde-Complete': {\n  //   types: ['Dragon', 'Ground'],\n  //   bs: {hp: 216, at: 100, df: 121, sa: 91, sd: 95, sp: 85},\n  //   weightkg: 610,\n  //   abilities: {0: 'Power Construct'},\n  //   baseSpecies: 'Zygarde',\n  //   gender: 'N',\n  // },\n};\n\nconst SM: {[name: string]: SpeciesData} = extend(true, {}, XY, SM_PATCH);\n\n// delete SM['Pikachu-Cosplay'];\n// delete SM['Pikachu-Rock-Star'];\n// delete SM['Pikachu-Belle'];\n// delete SM['Pikachu-PhD'];\n// delete SM['Pikachu-Pop-Star'];\n// delete SM['Pikachu-Libre'];\n\nconst SS_PATCH: {[name: string]: DeepPartial<SpeciesData>} = {\n  // 'Aegislash-Blade': {bs: {at: 140, sa: 140}},\n  // 'Aegislash-Both': {bs: {at: 140, df: 140, sa: 140, sd: 140}},\n  // 'Aegislash-Shield': {bs: {df: 140, sd: 140}},\n  Articuno: {otherFormes: ['Articuno-Galar']},\n  // Blastoise: {otherFormes: ['Blastoise-Gmax', 'Blastoise-Mega']},\n  // Butterfree: {otherFormes: ['Butterfree-Gmax']},\n  // Charizard: {otherFormes: ['Charizard-Gmax', 'Charizard-Mega-X', 'Charizard-Mega-Y']},\n  // Corsola: {otherFormes: ['Corsola-Galar']},\n  // Darmanitan: {\n  //   otherFormes: ['Darmanitan-Galar', 'Darmanitan-Galar-Zen', 'Darmanitan-Zen'],\n  // },\n  // Darumaka: {otherFormes: ['Darumaka-Galar']},\n  // Eevee: {otherFormes: ['Eevee-Gmax']},\n  // Equilibra: {bs: {sa: 133}},\n  // 'Farfetch\\u2019d': {otherFormes: ['Farfetch\\u2019d-Galar']},\n  // Garbodor: {otherFormes: ['Garbodor-Gmax']},\n  // Gengar: {otherFormes: ['Gengar-Gmax', 'Gengar-Mega']},\n  // Kingler: {otherFormes: ['Kingler-Gmax']},\n  // Lapras: {otherFormes: ['Lapras-Gmax']},\n  // Linoone: {otherFormes: ['Linoone-Galar']},\n  // Machamp: {otherFormes: ['Machamp-Gmax']},\n  // Melmetal: {otherFormes: ['Melmetal-Gmax']},\n  Meowth: {otherFormes: ['Meowth-Alola', 'Meowth-Galar']}, //, 'Meowth-Gmax']},\n  Moltres: {otherFormes: ['Moltres-Galar']},\n  // 'Mr. Mime': {otherFormes: ['Mr. Mime-Galar']},\n  // Pikachu: {\n  //   otherFormes: [\n  //     'Pikachu-Alola',\n  //     'Pikachu-Gmax',\n  //     'Pikachu-Hoenn',\n  //     'Pikachu-Kalos',\n  //     'Pikachu-Original',\n  //     'Pikachu-Partner',\n  //     'Pikachu-Sinnoh',\n  //     'Pikachu-Unova',\n  //     'Pikachu-World',\n  //   ],\n  // },\n  // Ponyta: {otherFormes: ['Ponyta-Galar']},\n  // Pyroak: {bs: {sa: 70, sd: 65}},\n  // Rapidash: {otherFormes: ['Rapidash-Galar']},\n  Slowbro: {otherFormes: ['Slowbro-Galar']}, // , 'Slowbro-Mega']},\n  Slowking: {otherFormes: ['Slowking-Galar']},\n  Slowpoke: {otherFormes: ['Slowpoke-Galar']},\n  // Snorlax: {otherFormes: ['Snorlax-Gmax']},\n  // Stunfisk: {otherFormes: ['Stunfisk-Galar']},\n  // Venusaur: {otherFormes: ['Venusaur-Gmax', 'Venusaur-Mega']},\n  // Voodoom: {bs: {sa: 130}},\n  Weezing: {otherFormes: ['Weezing-Galar']},\n  // Yamask: {otherFormes: ['Yamask-Galar']},\n  Zapdos: {otherFormes: ['Zapdos-Galar']},\n  // Zigzagoon: {otherFormes: ['Zigzagoon-Galar']},\n  Alcremie: {\n    types: ['Fairy'],\n    bs: {hp: 65, at: 60, df: 75, sa: 110, sd: 121, sp: 64},\n    weightkg: 0.5,\n    abilities: {0: 'Sweet Veil'},\n    // otherFormes: ['Alcremie-Gmax'],\n    gender: 'F',\n  },\n  // 'Alcremie-Gmax': {\n  //   types: ['Fairy'],\n  //   bs: {hp: 65, at: 60, df: 75, sa: 110, sd: 121, sp: 64},\n  //   weightkg: 0,\n  //   abilities: {0: 'Sweet Veil'},\n  //   baseSpecies: 'Alcremie',\n  // },\n  Appletun: {\n    types: ['Grass', 'Dragon'],\n    bs: {hp: 110, at: 85, df: 80, sa: 100, sd: 80, sp: 30},\n    weightkg: 13,\n    abilities: {0: 'Ripen'},\n    otherFormes: ['Appletun-Gmax'],\n  },\n  // 'Appletun-Gmax': {\n  //   types: ['Grass', 'Dragon'],\n  //   bs: {hp: 110, at: 85, df: 80, sa: 100, sd: 80, sp: 30},\n  //   weightkg: 0,\n  //   abilities: {0: 'Ripen'},\n  //   baseSpecies: 'Appletun',\n  // },\n  Applin: {\n    types: ['Grass', 'Dragon'],\n    bs: {hp: 40, at: 40, df: 80, sa: 40, sd: 40, sp: 20},\n    weightkg: 0.5,\n    abilities: {0: 'Ripen'},\n    nfe: true,\n  },\n  // Arctovish: {\n  //   types: ['Water', 'Ice'],\n  //   bs: {hp: 90, at: 90, df: 100, sa: 80, sd: 90, sp: 55},\n  //   weightkg: 175,\n  //   abilities: {0: 'Water Absorb'},\n  //   gender: 'N',\n  // },\n  // Arctozolt: {\n  //   types: ['Electric', 'Ice'],\n  //   bs: {hp: 90, at: 100, df: 90, sa: 90, sd: 80, sp: 55},\n  //   weightkg: 150,\n  //   abilities: {0: 'Volt Absorb'},\n  //   gender: 'N',\n  // },\n  Arrokuda: {\n    types: ['Water'],\n    bs: {hp: 41, at: 63, df: 40, sa: 40, sd: 30, sp: 66},\n    weightkg: 1,\n    abilities: {0: 'Swift Swim'},\n    nfe: true,\n  },\n  'Articuno-Galar': {\n    types: ['Psychic', 'Flying'],\n    bs: {hp: 90, at: 85, df: 85, sa: 125, sd: 100, sp: 95},\n    weightkg: 50.9,\n    abilities: {0: 'Competitive'},\n    gender: 'N',\n    baseSpecies: 'Articuno',\n  },\n  // Astrolotl: {\n  //   types: ['Fire', 'Dragon'],\n  //   bs: {hp: 108, at: 108, df: 74, sa: 92, sd: 64, sp: 114},\n  //   weightkg: 50,\n  //   abilities: {0: 'Regenerator'},\n  // },\n  Barraskewda: {\n    types: ['Water'],\n    bs: {hp: 61, at: 123, df: 60, sa: 60, sd: 50, sp: 136},\n    weightkg: 30,\n    abilities: {0: 'Swift Swim'},\n  },\n  // 'Blastoise-Gmax': {\n  //   types: ['Water'],\n  //   bs: {hp: 79, at: 83, df: 100, sa: 85, sd: 105, sp: 78},\n  //   weightkg: 0,\n  //   abilities: {0: 'Torrent'},\n  //   baseSpecies: 'Blastoise',\n  // },\n  // Blipbug: {\n  //   types: ['Bug'],\n  //   bs: {hp: 25, at: 20, df: 20, sa: 25, sd: 45, sp: 45},\n  //   weightkg: 8,\n  //   abilities: {0: 'Swarm'},\n  //   nfe: true,\n  // },\n  // Boltund: {\n  //   types: ['Electric'],\n  //   bs: {hp: 69, at: 90, df: 60, sa: 90, sd: 60, sp: 121},\n  //   weightkg: 34,\n  //   abilities: {0: 'Strong Jaw'},\n  // },\n  // 'Butterfree-Gmax': {\n  //   types: ['Bug', 'Flying'],\n  //   bs: {hp: 60, at: 45, df: 50, sa: 90, sd: 80, sp: 70},\n  //   weightkg: 0,\n  //   abilities: {0: 'Compound Eyes'},\n  //   baseSpecies: 'Butterfree',\n  // },\n  Calyrex: {\n    types: ['Psychic', 'Grass'],\n    bs: {hp: 100, at: 80, df: 80, sa: 80, sd: 80, sp: 80},\n    weightkg: 7.7,\n    abilities: {0: 'Unnerve'},\n    gender: 'N',\n    otherFormes: ['Calyrex-Ice', 'Calyrex-Shadow'],\n  },\n  'Calyrex-Ice': {\n    types: ['Psychic', 'Ice'],\n    bs: {hp: 100, at: 165, df: 150, sa: 85, sd: 130, sp: 50},\n    weightkg: 809.1,\n    abilities: {0: 'As One (Glastrier)'},\n    gender: 'N',\n    baseSpecies: 'Calyrex',\n  },\n  'Calyrex-Shadow': {\n    types: ['Psychic', 'Ghost'],\n    bs: {hp: 100, at: 85, df: 80, sa: 165, sd: 100, sp: 150},\n    weightkg: 53.6,\n    abilities: {0: 'As One (Spectrier)'},\n    gender: 'N',\n    baseSpecies: 'Calyrex',\n  },\n  Carkol: {\n    types: ['Rock', 'Fire'],\n    bs: {hp: 80, at: 60, df: 90, sa: 60, sd: 70, sp: 50},\n    weightkg: 78,\n    abilities: {0: 'Steam Engine'},\n    nfe: true,\n  },\n  // Centiskorch: {\n  //   types: ['Fire', 'Bug'],\n  //   bs: {hp: 100, at: 115, df: 65, sa: 90, sd: 90, sp: 65},\n  //   weightkg: 120,\n  //   abilities: {0: 'Flash Fire'},\n  //   otherFormes: ['Centiskorch-Gmax'],\n  // },\n  // 'Centiskorch-Gmax': {\n  //   types: ['Fire', 'Bug'],\n  //   bs: {hp: 100, at: 115, df: 65, sa: 90, sd: 90, sp: 65},\n  //   weightkg: 0,\n  //   abilities: {0: 'Flash Fire'},\n  //   baseSpecies: 'Centiskorch',\n  // },\n  // 'Charizard-Gmax': {\n  //   types: ['Fire', 'Flying'],\n  //   bs: {hp: 78, at: 84, df: 78, sa: 109, sd: 85, sp: 100},\n  //   weightkg: 0,\n  //   abilities: {0: 'Blaze'},\n  //   baseSpecies: 'Charizard',\n  // },\n  Chewtle: {\n    types: ['Water'],\n    bs: {hp: 50, at: 64, df: 50, sa: 38, sd: 38, sp: 44},\n    weightkg: 8.5,\n    abilities: {0: 'Strong Jaw'},\n    nfe: true,\n  },\n  // Chromera: {\n  //   types: ['Dark', 'Normal'],\n  //   bs: {hp: 85, at: 85, df: 115, sa: 115, sd: 100, sp: 100},\n  //   weightkg: 215,\n  //   abilities: {0: 'Color Change'},\n  //   gender: 'N',\n  // },\n  Cinderace: {\n    types: ['Fire'],\n    bs: {hp: 80, at: 116, df: 75, sa: 65, sd: 75, sp: 119},\n    weightkg: 33,\n    abilities: {0: 'Blaze'},\n    otherFormes: ['Cinderace-Gmax'],\n  },\n  // 'Cinderace-Gmax': {\n  //   types: ['Fire'],\n  //   bs: {hp: 80, at: 116, df: 75, sa: 65, sd: 75, sp: 119},\n  //   weightkg: 0,\n  //   abilities: {0: 'Blaze'},\n  //   baseSpecies: 'Cinderace',\n  // },\n  // Clobbopus: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 50, at: 68, df: 60, sa: 50, sd: 50, sp: 32},\n  //   weightkg: 4,\n  //   abilities: {0: 'Limber'},\n  //   nfe: true,\n  // },\n  Coalossal: {\n    types: ['Rock', 'Fire'],\n    bs: {hp: 110, at: 80, df: 120, sa: 80, sd: 90, sp: 30},\n    weightkg: 310.5,\n    abilities: {0: 'Steam Engine'},\n    otherFormes: ['Coalossal-Gmax'],\n  },\n  // 'Coalossal-Gmax': {\n  //   types: ['Rock', 'Fire'],\n  //   bs: {hp: 110, at: 80, df: 120, sa: 80, sd: 90, sp: 30},\n  //   weightkg: 0,\n  //   abilities: {0: 'Steam Engine'},\n  //   baseSpecies: 'Coalossal',\n  // },\n  Copperajah: {\n    types: ['Steel'],\n    bs: {hp: 122, at: 130, df: 69, sa: 80, sd: 69, sp: 30},\n    weightkg: 650,\n    abilities: {0: 'Sheer Force'},\n    otherFormes: ['Copperajah-Gmax'],\n  },\n  // 'Copperajah-Gmax': {\n  //   types: ['Steel'],\n  //   bs: {hp: 122, at: 130, df: 69, sa: 80, sd: 69, sp: 30},\n  //   weightkg: 0,\n  //   abilities: {0: 'Sheer Force'},\n  //   baseSpecies: 'Copperajah',\n  // },\n  // 'Corsola-Galar': {\n  //   types: ['Ghost'],\n  //   bs: {hp: 60, at: 55, df: 100, sa: 65, sd: 100, sp: 30},\n  //   weightkg: 0.5,\n  //   abilities: {0: 'Weak Armor'},\n  //   nfe: true,\n  //   baseSpecies: 'Corsola',\n  // },\n  Corviknight: {\n    types: ['Flying', 'Steel'],\n    bs: {hp: 98, at: 87, df: 105, sa: 53, sd: 85, sp: 67},\n    weightkg: 75,\n    abilities: {0: 'Pressure'},\n    otherFormes: ['Corviknight-Gmax'],\n  },\n  // 'Corviknight-Gmax': {\n  //   types: ['Flying', 'Steel'],\n  //   bs: {hp: 98, at: 87, df: 105, sa: 53, sd: 85, sp: 67},\n  //   weightkg: 0,\n  //   abilities: {0: 'Pressure'},\n  //   baseSpecies: 'Corviknight',\n  // },\n  Corvisquire: {\n    types: ['Flying'],\n    bs: {hp: 68, at: 67, df: 55, sa: 43, sd: 55, sp: 77},\n    weightkg: 16,\n    abilities: {0: 'Keen Eye'},\n    nfe: true,\n  },\n  Cramorant: {\n    types: ['Flying', 'Water'],\n    bs: {hp: 70, at: 85, df: 55, sa: 85, sd: 95, sp: 85},\n    weightkg: 18,\n    abilities: {0: 'Gulp Missile'},\n    // otherFormes: ['Cramorant-Gorging', 'Cramorant-Gulping'],\n  },\n  // 'Cramorant-Gorging': {\n  //   types: ['Flying', 'Water'],\n  //   bs: {hp: 70, at: 85, df: 55, sa: 85, sd: 95, sp: 85},\n  //   weightkg: 18,\n  //   abilities: {0: 'Gulp Missile'},\n  //   baseSpecies: 'Cramorant',\n  // },\n  // 'Cramorant-Gulping': {\n  //   types: ['Flying', 'Water'],\n  //   bs: {hp: 70, at: 85, df: 55, sa: 85, sd: 95, sp: 85},\n  //   weightkg: 18,\n  //   abilities: {0: 'Gulp Missile'},\n  //   baseSpecies: 'Cramorant',\n  // },\n  Cufant: {\n    types: ['Steel'],\n    bs: {hp: 72, at: 80, df: 49, sa: 40, sd: 49, sp: 40},\n    weightkg: 100,\n    abilities: {0: 'Sheer Force'},\n    nfe: true,\n  },\n  // Cursola: {\n  //   types: ['Ghost'],\n  //   bs: {hp: 60, at: 95, df: 50, sa: 145, sd: 130, sp: 30},\n  //   weightkg: 0.4,\n  //   abilities: {0: 'Weak Armor'},\n  // },\n  // 'Darmanitan-Galar': {\n  //   types: ['Ice'],\n  //   bs: {hp: 105, at: 140, df: 55, sa: 30, sd: 55, sp: 95},\n  //   weightkg: 120,\n  //   abilities: {0: 'Gorilla Tactics'},\n  //   baseSpecies: 'Darmanitan',\n  // },\n  // 'Darmanitan-Galar-Zen': {\n  //   types: ['Ice', 'Fire'],\n  //   bs: {hp: 105, at: 160, df: 55, sa: 30, sd: 55, sp: 135},\n  //   weightkg: 120,\n  //   abilities: {0: 'Zen Mode'},\n  //   baseSpecies: 'Darmanitan',\n  // },\n  // 'Darumaka-Galar': {\n  //   types: ['Ice'],\n  //   bs: {hp: 70, at: 90, df: 45, sa: 15, sd: 45, sp: 50},\n  //   weightkg: 40,\n  //   abilities: {0: 'Hustle'},\n  //   nfe: true,\n  //   baseSpecies: 'Darumaka',\n  // },\n  // Dottler: {\n  //   types: ['Bug', 'Psychic'],\n  //   bs: {hp: 50, at: 35, df: 80, sa: 50, sd: 90, sp: 30},\n  //   weightkg: 19.5,\n  //   abilities: {0: 'Swarm'},\n  //   nfe: true,\n  // },\n  // Dracovish: {\n  //   types: ['Water', 'Dragon'],\n  //   bs: {hp: 90, at: 90, df: 100, sa: 70, sd: 80, sp: 75},\n  //   weightkg: 215,\n  //   abilities: {0: 'Water Absorb'},\n  //   gender: 'N',\n  // },\n  // Dracozolt: {\n  //   types: ['Electric', 'Dragon'],\n  //   bs: {hp: 90, at: 100, df: 90, sa: 80, sd: 70, sp: 75},\n  //   weightkg: 190,\n  //   abilities: {0: 'Volt Absorb'},\n  //   gender: 'N',\n  // },\n  Dragapult: {\n    types: ['Dragon', 'Ghost'],\n    bs: {hp: 88, at: 120, df: 75, sa: 100, sd: 75, sp: 142},\n    weightkg: 50,\n    abilities: {0: 'Clear Body'},\n  },\n  Drakloak: {\n    types: ['Dragon', 'Ghost'],\n    bs: {hp: 68, at: 80, df: 50, sa: 60, sd: 50, sp: 102},\n    weightkg: 11,\n    abilities: {0: 'Clear Body'},\n    nfe: true,\n  },\n  Drednaw: {\n    types: ['Water', 'Rock'],\n    bs: {hp: 90, at: 115, df: 90, sa: 48, sd: 68, sp: 74},\n    weightkg: 115.5,\n    abilities: {0: 'Strong Jaw'},\n    otherFormes: ['Drednaw-Gmax'],\n  },\n  // 'Drednaw-Gmax': {\n  //   types: ['Water', 'Rock'],\n  //   bs: {hp: 90, at: 115, df: 90, sa: 48, sd: 68, sp: 74},\n  //   weightkg: 0,\n  //   abilities: {0: 'Strong Jaw'},\n  //   baseSpecies: 'Drednaw',\n  // },\n  Dreepy: {\n    types: ['Dragon', 'Ghost'],\n    bs: {hp: 28, at: 60, df: 30, sa: 40, sd: 30, sp: 82},\n    weightkg: 2,\n    abilities: {0: 'Clear Body'},\n    nfe: true,\n  },\n  Drizzile: {\n    types: ['Water'],\n    bs: {hp: 65, at: 60, df: 55, sa: 95, sd: 55, sp: 90},\n    weightkg: 11.5,\n    abilities: {0: 'Torrent'},\n    nfe: true,\n  },\n  // Dubwool: {\n  //   types: ['Normal'],\n  //   bs: {hp: 72, at: 80, df: 100, sa: 60, sd: 90, sp: 88},\n  //   weightkg: 43,\n  //   abilities: {0: 'Fluffy'},\n  // },\n  Duraludon: {\n    types: ['Steel', 'Dragon'],\n    bs: {hp: 70, at: 95, df: 115, sa: 120, sd: 50, sp: 85},\n    weightkg: 40,\n    abilities: {0: 'Light Metal'},\n    // otherFormes: ['Duraludon-Gmax'],\n  },\n  // 'Duraludon-Gmax': {\n  //   types: ['Steel', 'Dragon'],\n  //   bs: {hp: 70, at: 95, df: 115, sa: 120, sd: 50, sp: 85},\n  //   weightkg: 0,\n  //   abilities: {0: 'Light Metal'},\n  //   baseSpecies: 'Duraludon',\n  // },\n  // 'Eevee-Gmax': {\n  //   types: ['Normal'],\n  //   bs: {hp: 55, at: 55, df: 50, sa: 45, sd: 65, sp: 55},\n  //   weightkg: 0,\n  //   abilities: {0: 'Run Away'},\n  //   baseSpecies: 'Eevee',\n  // },\n  Eiscue: {\n    types: ['Ice'],\n    bs: {hp: 75, at: 80, df: 110, sa: 65, sd: 90, sp: 50},\n    weightkg: 89,\n    abilities: {0: 'Ice Face'},\n    otherFormes: ['Eiscue-Noice'],\n  },\n  'Eiscue-Noice': {\n    types: ['Ice'],\n    bs: {hp: 75, at: 80, df: 70, sa: 65, sd: 50, sp: 130},\n    weightkg: 89,\n    abilities: {0: 'Ice Face'},\n    baseSpecies: 'Eiscue',\n  },\n  // Eldegoss: {\n  //   types: ['Grass'],\n  //   bs: {hp: 60, at: 50, df: 90, sa: 80, sd: 120, sp: 60},\n  //   weightkg: 2.5,\n  //   abilities: {0: 'Cotton Down'},\n  // },\n  Eternatus: {\n    types: ['Poison', 'Dragon'],\n    bs: {hp: 140, at: 85, df: 95, sa: 145, sd: 95, sp: 130},\n    weightkg: 950,\n    abilities: {0: 'Pressure'},\n    gender: 'N',\n    otherFormes: ['Eternatus-Eternamax'],\n  },\n  // 'Eternatus-Eternamax': {\n  //   types: ['Poison', 'Dragon'],\n  //   bs: {hp: 255, at: 115, df: 250, sa: 125, sd: 250, sp: 130},\n  //   weightkg: 0,\n  //   abilities: {0: 'Pressure'},\n  //   gender: 'N',\n  //   baseSpecies: 'Eternatus',\n  // },\n  Falinks: {\n    types: ['Fighting'],\n    bs: {hp: 65, at: 100, df: 100, sa: 70, sd: 60, sp: 75},\n    weightkg: 62,\n    abilities: {0: 'Battle Armor'},\n    gender: 'N',\n  },\n  // 'Farfetch\\u2019d-Galar': {\n  //   types: ['Fighting'],\n  //   bs: {hp: 52, at: 95, df: 55, sa: 58, sd: 62, sp: 55},\n  //   weightkg: 15,\n  //   abilities: {0: 'Steadfast'},\n  //   nfe: true,\n  //   baseSpecies: 'Farfetch\\u2019d',\n  // },\n  Flapple: {\n    types: ['Grass', 'Dragon'],\n    bs: {hp: 70, at: 110, df: 80, sa: 95, sd: 60, sp: 70},\n    weightkg: 1,\n    abilities: {0: 'Ripen'},\n    otherFormes: ['Flapple-Gmax'],\n  },\n  // 'Flapple-Gmax': {\n  //   types: ['Grass', 'Dragon'],\n  //   bs: {hp: 70, at: 110, df: 80, sa: 95, sd: 60, sp: 70},\n  //   weightkg: 0,\n  //   abilities: {0: 'Ripen'},\n  //   baseSpecies: 'Flapple',\n  // },\n  Frosmoth: {\n    types: ['Ice', 'Bug'],\n    bs: {hp: 70, at: 65, df: 60, sa: 125, sd: 90, sp: 65},\n    weightkg: 42,\n    abilities: {0: 'Shield Dust'},\n  },\n  // 'Garbodor-Gmax': {\n  //   types: ['Poison'],\n  //   bs: {hp: 80, at: 95, df: 82, sa: 60, sd: 82, sp: 75},\n  //   weightkg: 0,\n  //   abilities: {0: 'Stench'},\n  //   baseSpecies: 'Garbodor',\n  // },\n  // 'Gengar-Gmax': {\n  //   types: ['Ghost', 'Poison'],\n  //   bs: {hp: 60, at: 65, df: 60, sa: 130, sd: 75, sp: 110},\n  //   weightkg: 0,\n  //   abilities: {0: 'Cursed Body'},\n  //   baseSpecies: 'Gengar',\n  // },\n  Glastrier: {\n    types: ['Ice'],\n    bs: {hp: 100, at: 145, df: 130, sa: 65, sd: 110, sp: 30},\n    weightkg: 800,\n    abilities: {0: 'Chilling Neigh'},\n    gender: 'N',\n  },\n  // Gossifleur: {\n  //   types: ['Grass'],\n  //   bs: {hp: 40, at: 40, df: 60, sa: 40, sd: 60, sp: 10},\n  //   weightkg: 2.2,\n  //   abilities: {0: 'Cotton Down'},\n  //   nfe: true,\n  // },\n  // Grapploct: {\n  //   types: ['Fighting'],\n  //   bs: {hp: 80, at: 118, df: 90, sa: 70, sd: 80, sp: 42},\n  //   weightkg: 39,\n  //   abilities: {0: 'Limber'},\n  // },\n  Greedent: {\n    types: ['Normal'],\n    bs: {hp: 120, at: 95, df: 95, sa: 55, sd: 75, sp: 20},\n    weightkg: 6,\n    abilities: {0: 'Cheek Pouch'},\n  },\n  Grimmsnarl: {\n    types: ['Dark', 'Fairy'],\n    bs: {hp: 95, at: 120, df: 65, sa: 95, sd: 75, sp: 60},\n    weightkg: 61,\n    abilities: {0: 'Prankster'},\n    // otherFormes: ['Grimmsnarl-Gmax'],\n    gender: 'M',\n  },\n  // 'Grimmsnarl-Gmax': {\n  //   types: ['Dark', 'Fairy'],\n  //   bs: {hp: 95, at: 120, df: 65, sa: 95, sd: 75, sp: 60},\n  //   weightkg: 0,\n  //   abilities: {0: 'Prankster'},\n  //   baseSpecies: 'Grimmsnarl',\n  // },\n  Grookey: {\n    types: ['Grass'],\n    bs: {hp: 50, at: 65, df: 50, sa: 40, sd: 40, sp: 65},\n    weightkg: 5,\n    abilities: {0: 'Overgrow'},\n    nfe: true,\n  },\n  Hatenna: {\n    types: ['Psychic'],\n    bs: {hp: 42, at: 30, df: 45, sa: 56, sd: 53, sp: 39},\n    weightkg: 3.4,\n    abilities: {0: 'Healer'},\n    nfe: true,\n    gender: 'F',\n  },\n  Hatterene: {\n    types: ['Psychic', 'Fairy'],\n    bs: {hp: 57, at: 90, df: 95, sa: 136, sd: 103, sp: 29},\n    weightkg: 5.1,\n    abilities: {0: 'Healer'},\n    // otherFormes: ['Hatterene-Gmax'],\n    gender: 'F',\n  },\n  // 'Hatterene-Gmax': {\n  //   types: ['Psychic', 'Fairy'],\n  //   bs: {hp: 57, at: 90, df: 95, sa: 136, sd: 103, sp: 29},\n  //   weightkg: 0,\n  //   abilities: {0: 'Healer'},\n  //   baseSpecies: 'Hatterene',\n  // },\n  Hattrem: {\n    types: ['Psychic'],\n    bs: {hp: 57, at: 40, df: 65, sa: 86, sd: 73, sp: 49},\n    weightkg: 4.8,\n    abilities: {0: 'Healer'},\n    nfe: true,\n    gender: 'F',\n  },\n  Impidimp: {\n    types: ['Dark', 'Fairy'],\n    bs: {hp: 45, at: 45, df: 30, sa: 55, sd: 40, sp: 50},\n    weightkg: 5.5,\n    abilities: {0: 'Prankster'},\n    nfe: true,\n    gender: 'M',\n  },\n  Indeedee: {\n    types: ['Psychic', 'Normal'],\n    bs: {hp: 60, at: 65, df: 55, sa: 105, sd: 95, sp: 95},\n    weightkg: 28,\n    abilities: {0: 'Inner Focus'},\n    otherFormes: ['Indeedee-F'],\n    gender: 'M',\n  },\n  'Indeedee-F': {\n    types: ['Psychic', 'Normal'],\n    bs: {hp: 70, at: 55, df: 65, sa: 95, sd: 105, sp: 85},\n    weightkg: 28,\n    abilities: {0: 'Own Tempo'},\n    baseSpecies: 'Indeedee',\n    gender: 'F',\n  },\n  Inteleon: {\n    types: ['Water'],\n    bs: {hp: 70, at: 85, df: 65, sa: 125, sd: 65, sp: 120},\n    weightkg: 45.2,\n    abilities: {0: 'Torrent'},\n    // otherFormes: ['Inteleon-Gmax'],\n  },\n  // 'Inteleon-Gmax': {\n  //   types: ['Water'],\n  //   bs: {hp: 70, at: 85, df: 65, sa: 125, sd: 65, sp: 120},\n  //   weightkg: 0,\n  //   abilities: {0: 'Torrent'},\n  //   baseSpecies: 'Inteleon',\n  // },\n  // 'Kingler-Gmax': {\n  //   types: ['Water'],\n  //   bs: {hp: 55, at: 130, df: 115, sa: 50, sd: 50, sp: 75},\n  //   weightkg: 0,\n  //   abilities: {0: 'Hyper Cutter'},\n  //   baseSpecies: 'Kingler',\n  // },\n  'Kubfu': {\n    types: ['Fighting'],\n    bs: {hp: 60, at: 90, df: 60, sa: 53, sd: 50, sp: 72},\n    weightkg: 12,\n    nfe: true,\n    abilities: {0: 'Inner Focus'},\n  },\n  // 'Lapras-Gmax': {\n  //   types: ['Water', 'Ice'],\n  //   bs: {hp: 130, at: 85, df: 80, sa: 85, sd: 95, sp: 60},\n  //   weightkg: 0,\n  //   abilities: {0: 'Water Absorb'},\n  //   baseSpecies: 'Lapras',\n  // },\n  // 'Linoone-Galar': {\n  //   types: ['Dark', 'Normal'],\n  //   bs: {hp: 78, at: 70, df: 61, sa: 50, sd: 61, sp: 100},\n  //   weightkg: 32.5,\n  //   abilities: {0: 'Pickup'},\n  //   nfe: true,\n  //   baseSpecies: 'Linoone',\n  // },\n  // Magearna: {otherFormes: ['Magearna-Original']},\n  // 'Magearna-Original': {\n  //   baseSpecies: 'Magearna',\n  //   types: ['Steel', 'Fairy'],\n  //   bs: {hp: 80, at: 95, df: 115, sa: 130, sd: 115, sp: 65},\n  //   weightkg: 80.5,\n  //   gender: 'N',\n  //   abilities: {0: 'Soul-Heart'},\n  // },\n  // 'Machamp-Gmax': {\n  //   types: ['Fighting'],\n  //   bs: {hp: 90, at: 130, df: 80, sa: 65, sd: 85, sp: 55},\n  //   weightkg: 0,\n  //   abilities: {0: 'Guts'},\n  //   baseSpecies: 'Machamp',\n  // },\n  // 'Melmetal-Gmax': {\n  //   types: ['Steel'],\n  //   bs: {hp: 135, at: 143, df: 143, sa: 80, sd: 65, sp: 34},\n  //   weightkg: 0,\n  //   abilities: {0: 'Iron Fist'},\n  //   baseSpecies: 'Melmetal',\n  //   gender: 'N',\n  // },\n  'Meowth-Galar': {\n    types: ['Steel'],\n    bs: {hp: 50, at: 65, df: 55, sa: 40, sd: 40, sp: 40},\n    weightkg: 7.5,\n    abilities: {0: 'Pickup'},\n    nfe: true,\n    baseSpecies: 'Meowth',\n  },\n  // 'Meowth-Gmax': {\n  //   types: ['Normal'],\n  //   bs: {hp: 40, at: 45, df: 35, sa: 40, sd: 40, sp: 90},\n  //   weightkg: 0,\n  //   abilities: {0: 'Pickup'},\n  //   baseSpecies: 'Meowth',\n  // },\n  // Miasmaw: {\n  //   types: ['Bug', 'Dragon'],\n  //   bs: {hp: 85, at: 135, df: 60, sa: 88, sd: 105, sp: 99},\n  //   weightkg: 57,\n  //   abilities: {0: 'Neutralizing Gas'},\n  // },\n  // Miasmite: {\n  //   types: ['Bug', 'Dragon'],\n  //   bs: {hp: 40, at: 85, df: 60, sa: 52, sd: 52, sp: 44},\n  //   weightkg: 10.1,\n  //   abilities: {0: 'Neutralizing Gas'},\n  //   nfe: true,\n  // },\n  Milcery: {\n    types: ['Fairy'],\n    bs: {hp: 45, at: 40, df: 40, sa: 50, sd: 61, sp: 34},\n    weightkg: 0.3,\n    abilities: {0: 'Sweet Veil'},\n    nfe: true,\n    gender: 'F',\n  },\n  'Moltres-Galar': {\n    types: ['Dark', 'Flying'],\n    bs: {hp: 90, at: 85, df: 90, sa: 100, sd: 125, sp: 90},\n    weightkg: 66,\n    abilities: {0: 'Berserk'},\n    gender: 'N',\n    baseSpecies: 'Moltres',\n  },\n  Morgrem: {\n    types: ['Dark', 'Fairy'],\n    bs: {hp: 65, at: 60, df: 45, sa: 75, sd: 55, sp: 70},\n    weightkg: 12.5,\n    abilities: {0: 'Prankster'},\n    nfe: true,\n    gender: 'M',\n  },\n  Morpeko: {\n    types: ['Electric', 'Dark'],\n    bs: {hp: 58, at: 95, df: 58, sa: 70, sd: 58, sp: 97},\n    weightkg: 3,\n    abilities: {0: 'Hunger Switch'},\n    otherFormes: ['Morpeko-Hangry'],\n  },\n  'Morpeko-Hangry': {\n    types: ['Electric', 'Dark'],\n    bs: {hp: 58, at: 95, df: 58, sa: 70, sd: 58, sp: 97},\n    weightkg: 3,\n    abilities: {0: 'Hunger Switch'},\n    baseSpecies: 'Morpeko',\n  },\n  // 'Mr. Mime-Galar': {\n  //   types: ['Ice', 'Psychic'],\n  //   bs: {hp: 50, at: 65, df: 65, sa: 90, sd: 90, sp: 100},\n  //   weightkg: 56.8,\n  //   abilities: {0: 'Vital Spirit'},\n  //   nfe: true,\n  //   baseSpecies: 'Mr. Mime',\n  // },\n  // 'Mr. Rime': {\n  //   types: ['Ice', 'Psychic'],\n  //   bs: {hp: 80, at: 85, df: 75, sa: 110, sd: 100, sp: 70},\n  //   weightkg: 58.2,\n  //   abilities: {0: 'Tangled Feet'},\n  // },\n  // Nickit: {\n  //   types: ['Dark'],\n  //   bs: {hp: 40, at: 28, df: 28, sa: 47, sd: 52, sp: 50},\n  //   weightkg: 8.9,\n  //   abilities: {0: 'Run Away'},\n  //   nfe: true,\n  // },\n  // Obstagoon: {\n  //   types: ['Dark', 'Normal'],\n  //   bs: {hp: 93, at: 90, df: 101, sa: 60, sd: 81, sp: 95},\n  //   weightkg: 46,\n  //   abilities: {0: 'Reckless'},\n  // },\n  // Orbeetle: {\n  //   types: ['Bug', 'Psychic'],\n  //   bs: {hp: 60, at: 45, df: 110, sa: 80, sd: 120, sp: 90},\n  //   weightkg: 40.8,\n  //   abilities: {0: 'Swarm'},\n  //   otherFormes: ['Orbeetle-Gmax'],\n  // },\n  // 'Orbeetle-Gmax': {\n  //   types: ['Bug', 'Psychic'],\n  //   bs: {hp: 60, at: 45, df: 110, sa: 80, sd: 120, sp: 90},\n  //   weightkg: 0,\n  //   abilities: {0: 'Swarm'},\n  //   baseSpecies: 'Orbeetle',\n  // },\n  Perrserker: {\n    types: ['Steel'],\n    bs: {hp: 70, at: 110, df: 100, sa: 50, sd: 60, sp: 50},\n    weightkg: 28,\n    abilities: {0: 'Battle Armor'},\n  },\n  // 'Pikachu-Gmax': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 0,\n  //   abilities: {0: 'Static'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  // 'Pikachu-World': {\n  //   types: ['Electric'],\n  //   bs: {hp: 35, at: 55, df: 40, sa: 50, sd: 50, sp: 90},\n  //   weightkg: 6,\n  //   abilities: {0: 'Static'},\n  //   baseSpecies: 'Pikachu',\n  // },\n  Pincurchin: {\n    types: ['Electric'],\n    bs: {hp: 48, at: 101, df: 95, sa: 91, sd: 85, sp: 15},\n    weightkg: 1,\n    abilities: {0: 'Lightning Rod'},\n  },\n  Polteageist: {\n    types: ['Ghost'],\n    bs: {hp: 60, at: 65, df: 65, sa: 134, sd: 114, sp: 70},\n    weightkg: 0.4,\n    abilities: {0: 'Weak Armor'},\n    // otherFormes: ['Polteageist-Antique'],\n    gender: 'N',\n  },\n  // 'Polteageist-Antique': {\n  //   types: ['Ghost'],\n  //   bs: {hp: 60, at: 65, df: 65, sa: 134, sd: 114, sp: 70},\n  //   weightkg: 0.4,\n  //   abilities: {0: 'Weak Armor'},\n  //   baseSpecies: 'Polteageist',\n  //   gender: 'N',\n  // },\n  // 'Ponyta-Galar': {\n  //   types: ['Psychic'],\n  //   bs: {hp: 50, at: 85, df: 55, sa: 65, sd: 65, sp: 90},\n  //   weightkg: 24,\n  //   abilities: {0: 'Run Away'},\n  //   nfe: true,\n  //   baseSpecies: 'Ponyta',\n  // },\n  Raboot: {\n    types: ['Fire'],\n    bs: {hp: 65, at: 86, df: 60, sa: 55, sd: 60, sp: 94},\n    weightkg: 9,\n    abilities: {0: 'Blaze'},\n    nfe: true,\n  },\n  // 'Rapidash-Galar': {\n  //   types: ['Psychic', 'Fairy'],\n  //   bs: {hp: 65, at: 100, df: 70, sa: 80, sd: 80, sp: 105},\n  //   weightkg: 80,\n  //   abilities: {0: 'Run Away'},\n  //   baseSpecies: 'Rapidash',\n  // },\n  Regidrago: {\n    types: ['Dragon'],\n    bs: {hp: 200, at: 100, df: 50, sa: 100, sd: 50, sp: 80},\n    weightkg: 200,\n    abilities: {0: 'Dragon\\'s Maw'},\n    gender: 'N',\n  },\n  Regieleki: {\n    types: ['Electric'],\n    bs: {hp: 80, at: 100, df: 50, sa: 100, sd: 50, sp: 200},\n    weightkg: 145,\n    abilities: {0: 'Transistor'},\n    gender: 'N',\n  },\n  Rillaboom: {\n    types: ['Grass'],\n    bs: {hp: 100, at: 125, df: 90, sa: 60, sd: 70, sp: 85},\n    weightkg: 90,\n    abilities: {0: 'Overgrow'},\n    otherFormes: ['Rillaboom-Gmax'],\n  },\n  // 'Rillaboom-Gmax': {\n  //   types: ['Grass'],\n  //   bs: {hp: 100, at: 125, df: 90, sa: 60, sd: 70, sp: 85},\n  //   weightkg: 0,\n  //   abilities: {0: 'Overgrow'},\n  //   baseSpecies: 'Rillaboom',\n  // },\n  Rolycoly: {\n    types: ['Rock'],\n    bs: {hp: 30, at: 40, df: 50, sa: 40, sd: 50, sp: 30},\n    weightkg: 12,\n    abilities: {0: 'Steam Engine'},\n    nfe: true,\n  },\n  Rookidee: {\n    types: ['Flying'],\n    bs: {hp: 38, at: 47, df: 35, sa: 33, sd: 35, sp: 57},\n    weightkg: 1.8,\n    abilities: {0: 'Keen Eye'},\n    nfe: true,\n  },\n  // Runerigus: {\n  //   types: ['Ground', 'Ghost'],\n  //   bs: {hp: 58, at: 95, df: 145, sa: 50, sd: 105, sp: 30},\n  //   weightkg: 66.6,\n  //   abilities: {0: 'Wandering Spirit'},\n  // },\n  // Saharaja: {\n  //   types: ['Ground'],\n  //   bs: {hp: 70, at: 112, df: 105, sa: 65, sd: 123, sp: 78},\n  //   weightkg: 303.9,\n  //   abilities: {0: 'Water Absorb'},\n  // },\n  // Saharascal: {\n  //   types: ['Ground'],\n  //   bs: {hp: 50, at: 80, df: 65, sa: 45, sd: 90, sp: 70},\n  //   weightkg: 48,\n  //   abilities: {0: 'Water Absorb'},\n  //   nfe: true,\n  // },\n  Sandaconda: {\n    types: ['Ground'],\n    bs: {hp: 72, at: 107, df: 125, sa: 65, sd: 70, sp: 71},\n    weightkg: 65.5,\n    abilities: {0: 'Sand Spit'},\n    otherFormes: ['Sandaconda-Gmax'],\n  },\n  // 'Sandaconda-Gmax': {\n  //   types: ['Ground'],\n  //   bs: {hp: 72, at: 107, df: 125, sa: 65, sd: 70, sp: 71},\n  //   weightkg: 0,\n  //   abilities: {0: 'Sand Spit'},\n  //   baseSpecies: 'Sandaconda',\n  // },\n  Scorbunny: {\n    types: ['Fire'],\n    bs: {hp: 50, at: 71, df: 40, sa: 40, sd: 40, sp: 69},\n    weightkg: 4.5,\n    abilities: {0: 'Blaze'},\n    nfe: true,\n  },\n  Silicobra: {\n    types: ['Ground'],\n    bs: {hp: 52, at: 57, df: 75, sa: 35, sd: 50, sp: 46},\n    weightkg: 7.6,\n    abilities: {0: 'Sand Spit'},\n    nfe: true,\n  },\n  Sinistea: {\n    types: ['Ghost'],\n    bs: {hp: 40, at: 45, df: 45, sa: 74, sd: 54, sp: 50},\n    weightkg: 0.2,\n    abilities: {0: 'Weak Armor'},\n    nfe: true,\n    // otherFormes: ['Sinistea-Antique'],\n    gender: 'N',\n  },\n  // 'Sinistea-Antique': {\n  //   types: ['Ghost'],\n  //   bs: {hp: 40, at: 45, df: 45, sa: 74, sd: 54, sp: 50},\n  //   weightkg: 0.2,\n  //   abilities: {0: 'Weak Armor'},\n  //   nfe: true,\n  //   baseSpecies: 'Sinistea',\n  //   gender: 'N',\n  // },\n  // 'Sirfetch\\u2019d': {\n  //   types: ['Fighting'],\n  //   bs: {hp: 62, at: 135, df: 95, sa: 68, sd: 82, sp: 65},\n  //   weightkg: 117,\n  //   abilities: {0: 'Steadfast'},\n  // },\n  // Sizzlipede: {\n  //   types: ['Fire', 'Bug'],\n  //   bs: {hp: 50, at: 65, df: 45, sa: 50, sd: 50, sp: 45},\n  //   weightkg: 1,\n  //   abilities: {0: 'Flash Fire'},\n  //   nfe: true,\n  // },\n  Skwovet: {\n    types: ['Normal'],\n    bs: {hp: 70, at: 55, df: 55, sa: 35, sd: 35, sp: 25},\n    weightkg: 2.5,\n    abilities: {0: 'Cheek Pouch'},\n    nfe: true,\n  },\n  'Slowbro-Galar': {\n    types: ['Poison', 'Psychic'],\n    bs: {hp: 95, at: 100, df: 95, sa: 100, sd: 70, sp: 30},\n    weightkg: 70.5,\n    abilities: {0: 'Quick Draw'},\n    baseSpecies: 'Slowbro',\n  },\n  'Slowking-Galar': {\n    types: ['Poison', 'Psychic'],\n    bs: {hp: 95, at: 65, df: 80, sa: 110, sd: 110, sp: 30},\n    weightkg: 79.5,\n    abilities: {0: 'Curious Medicine'},\n    baseSpecies: 'Slowking',\n  },\n  'Slowpoke-Galar': {\n    types: ['Psychic'],\n    bs: {hp: 90, at: 65, df: 65, sa: 40, sd: 40, sp: 15},\n    weightkg: 36,\n    nfe: true,\n    abilities: {0: 'Gluttony'},\n    baseSpecies: 'Slowpoke',\n  },\n  // Solotl: {\n  //   types: ['Fire', 'Dragon'],\n  //   bs: {hp: 68, at: 48, df: 34, sa: 72, sd: 24, sp: 84},\n  //   weightkg: 11.8,\n  //   nfe: true,\n  //   abilities: {0: 'Regenerator'},\n  // },\n  Snom: {\n    types: ['Ice', 'Bug'],\n    bs: {hp: 30, at: 25, df: 35, sa: 45, sd: 30, sp: 20},\n    weightkg: 3.8,\n    abilities: {0: 'Shield Dust'},\n    nfe: true,\n  },\n  // 'Snorlax-Gmax': {\n  //   types: ['Normal'],\n  //   bs: {hp: 160, at: 110, df: 65, sa: 65, sd: 110, sp: 30},\n  //   weightkg: 0,\n  //   abilities: {0: 'Immunity'},\n  //   baseSpecies: 'Snorlax',\n  // },\n  Sobble: {\n    types: ['Water'],\n    bs: {hp: 50, at: 40, df: 40, sa: 70, sd: 40, sp: 70},\n    weightkg: 4,\n    abilities: {0: 'Torrent'},\n    nfe: true,\n  },\n  Spectrier: {\n    types: ['Ghost'],\n    bs: {hp: 100, at: 65, df: 60, sa: 145, sd: 80, sp: 130},\n    weightkg: 44.5,\n    abilities: {0: 'Grim Neigh'},\n    gender: 'N',\n  },\n  Stonjourner: {\n    types: ['Rock'],\n    bs: {hp: 100, at: 125, df: 135, sa: 20, sd: 20, sp: 70},\n    weightkg: 520,\n    abilities: {0: 'Power Spot'},\n  },\n  // 'Stunfisk-Galar': {\n  //   types: ['Ground', 'Steel'],\n  //   bs: {hp: 109, at: 81, df: 99, sa: 66, sd: 84, sp: 32},\n  //   weightkg: 20.5,\n  //   abilities: {0: 'Mimicry'},\n  //   baseSpecies: 'Stunfisk',\n  // },\n  // Thievul: {\n  //   types: ['Dark'],\n  //   bs: {hp: 70, at: 58, df: 58, sa: 87, sd: 92, sp: 90},\n  //   weightkg: 19.9,\n  //   abilities: {0: 'Run Away'},\n  // },\n  Thwackey: {\n    types: ['Grass'],\n    bs: {hp: 70, at: 85, df: 70, sa: 55, sd: 60, sp: 80},\n    weightkg: 14,\n    abilities: {0: 'Overgrow'},\n    nfe: true,\n  },\n  Toxel: {\n    types: ['Electric', 'Poison'],\n    bs: {hp: 40, at: 38, df: 35, sa: 54, sd: 35, sp: 40},\n    weightkg: 11,\n    abilities: {0: 'Rattled'},\n    nfe: true,\n  },\n  Toxtricity: {\n    types: ['Electric', 'Poison'],\n    bs: {hp: 75, at: 98, df: 70, sa: 114, sd: 70, sp: 75},\n    weightkg: 40,\n    abilities: {0: 'Punk Rock'},\n    otherFormes: ['Toxtricity-Gmax', 'Toxtricity-Low-Key'],\n  },\n  // 'Toxtricity-Gmax': {\n  //   types: ['Electric', 'Poison'],\n  //   bs: {hp: 75, at: 98, df: 70, sa: 114, sd: 70, sp: 75},\n  //   weightkg: 0,\n  //   abilities: {0: 'Punk Rock'},\n  //   baseSpecies: 'Toxtricity',\n  // },\n  'Toxtricity-Low-Key': {\n    types: ['Electric', 'Poison'],\n    bs: {hp: 75, at: 98, df: 70, sa: 114, sd: 70, sp: 75},\n    weightkg: 40,\n    abilities: {0: 'Punk Rock'},\n    baseSpecies: 'Toxtricity',\n  },\n  Urshifu: {\n    types: ['Fighting', 'Dark'],\n    bs: {hp: 100, at: 130, df: 100, sa: 63, sd: 60, sp: 97},\n    weightkg: 105,\n    abilities: {0: 'Unseen Fist'},\n    otherFormes: ['Urshifu-Gmax', 'Urshifu-Rapid-Strike', 'Urshifu-Rapid-Strike-Gmax'],\n  },\n  'Urshifu-Rapid-Strike': {\n    types: ['Fighting', 'Water'],\n    bs: {hp: 100, at: 130, df: 100, sa: 63, sd: 60, sp: 97},\n    weightkg: 105,\n    abilities: {0: 'Unseen Fist'},\n    baseSpecies: 'Urshifu',\n  },\n  // 'Urshifu-Rapid-Strike-Gmax': {\n  //   types: ['Fighting', 'Water'],\n  //   bs: {hp: 100, at: 130, df: 100, sa: 63, sd: 60, sp: 97},\n  //   weightkg: 105,\n  //   abilities: {0: 'Unseen Fist'},\n  //   baseSpecies: 'Urshifu-Single-Strike',\n  // },\n  // 'Urshifu-Single-Strike-Gmax': {\n  //   types: ['Fighting', 'Dark'],\n  //   bs: {hp: 100, at: 130, df: 100, sa: 63, sd: 60, sp: 97},\n  //   weightkg: 0,\n  //   abilities: {0: 'Unseen Fist'},\n  //   baseSpecies: 'Urshifu-Single-Strike',\n  // },\n  // Venomicon: {\n  //   types: ['Poison', 'Flying'],\n  //   bs: {hp: 85, at: 50, df: 113, sa: 118, sd: 90, sp: 64},\n  //   weightkg: 11.5,\n  //   abilities: {0: 'Stamina'},\n  //   otherFormes: ['Venomicon-Epilogue'],\n  //   gender: 'N',\n  // },\n  // 'Venomicon-Epilogue': {\n  //   types: ['Poison', 'Flying'],\n  //   bs: {hp: 85, at: 102, df: 85, sa: 62, sd: 85, sp: 101},\n  //   weightkg: 12.4,\n  //   abilities: {0: 'Tinted Lens'},\n  //   baseSpecies: 'Venomicon',\n  //   gender: 'N',\n  // },\n  // 'Venusaur-Gmax': {\n  //   types: ['Grass', 'Poison'],\n  //   bs: {hp: 80, at: 82, df: 83, sa: 100, sd: 100, sp: 80},\n  //   weightkg: 0,\n  //   abilities: {0: 'Overgrow'},\n  //   baseSpecies: 'Venusaur',\n  // },\n  'Weezing-Galar': {\n    types: ['Poison', 'Fairy'],\n    bs: {hp: 65, at: 90, df: 120, sa: 85, sd: 70, sp: 60},\n    weightkg: 16,\n    abilities: {0: 'Levitate'},\n    baseSpecies: 'Weezing',\n  },\n  // Wooloo: {\n  //   types: ['Normal'],\n  //   bs: {hp: 42, at: 40, df: 55, sa: 40, sd: 45, sp: 48},\n  //   weightkg: 6,\n  //   abilities: {0: 'Fluffy'},\n  //   nfe: true,\n  // },\n  // 'Yamask-Galar': {\n  //   types: ['Ground', 'Ghost'],\n  //   bs: {hp: 38, at: 55, df: 85, sa: 30, sd: 65, sp: 30},\n  //   weightkg: 1.5,\n  //   abilities: {0: 'Wandering Spirit'},\n  //   nfe: true,\n  //   baseSpecies: 'Yamask',\n  // },\n  // Yamper: {\n  //   types: ['Electric'],\n  //   bs: {hp: 59, at: 45, df: 50, sa: 40, sd: 50, sp: 26},\n  //   weightkg: 13.5,\n  //   abilities: {0: 'Ball Fetch'},\n  //   nfe: true,\n  // },\n  Zacian: {\n    types: ['Fairy'],\n    bs: {hp: 92, at: 130, df: 115, sa: 80, sd: 115, sp: 138},\n    weightkg: 110,\n    abilities: {0: 'Intrepid Sword'},\n    gender: 'N',\n    otherFormes: ['Zacian-Crowned'],\n  },\n  'Zacian-Crowned': {\n    types: ['Fairy', 'Steel'],\n    bs: {hp: 92, at: 170, df: 115, sa: 80, sd: 115, sp: 148},\n    weightkg: 355,\n    abilities: {0: 'Intrepid Sword'},\n    baseSpecies: 'Zacian',\n    gender: 'N',\n  },\n  Zamazenta: {\n    types: ['Fighting'],\n    bs: {hp: 92, at: 130, df: 115, sa: 80, sd: 115, sp: 138},\n    weightkg: 210,\n    abilities: {0: 'Dauntless Shield'},\n    gender: 'N',\n    otherFormes: ['Zamazenta-Crowned'],\n  },\n  'Zamazenta-Crowned': {\n    types: ['Fighting', 'Steel'],\n    bs: {hp: 92, at: 130, df: 145, sa: 80, sd: 145, sp: 128},\n    weightkg: 785,\n    abilities: {0: 'Dauntless Shield'},\n    baseSpecies: 'Zamazenta',\n    gender: 'N',\n  },\n  'Zapdos-Galar': {\n    types: ['Fighting', 'Flying'],\n    bs: {hp: 90, at: 125, df: 90, sa: 85, sd: 90, sp: 100},\n    weightkg: 58.2,\n    abilities: {0: 'Defiant'},\n    gender: 'N',\n    baseSpecies: 'Zapdos',\n  },\n  Zarude: {\n    types: ['Dark', 'Grass'],\n    bs: {hp: 105, at: 120, df: 105, sa: 70, sd: 95, sp: 105},\n    weightkg: 70,\n    abilities: {0: 'Leaf Guard'},\n    gender: 'N',\n    // otherFormes: ['Zarude-Dada'],\n  },\n  // 'Zarude-Dada': {\n  //   types: ['Dark', 'Grass'],\n  //   bs: {hp: 105, at: 120, df: 105, sa: 70, sd: 95, sp: 105},\n  //   weightkg: 70,\n  //   abilities: {0: 'Leaf Guard'},\n  //   baseSpecies: 'Zarude',\n  //   gender: 'N',\n  // },\n  // 'Zigzagoon-Galar': {\n  //   types: ['Dark', 'Normal'],\n  //   bs: {hp: 38, at: 30, df: 41, sa: 30, sd: 41, sp: 60},\n  //   weightkg: 17.5,\n  //   abilities: {0: 'Pickup'},\n  //   nfe: true,\n  //   baseSpecies: 'Zigzagoon',\n  // },\n};\n\nconst SS: {[name: string]: SpeciesData} = extend(true, {}, SM, SS_PATCH);\n\n// delete SS['Pikachu-Starter'];\n// delete SS['Eevee-Starter'];\n\nconst PLA_PATCH: {[name: string]: DeepPartial<SpeciesData>} = {\n  Arcanine: {otherFormes: ['Arcanine-Hisui']},\n  Avalugg: {otherFormes: ['Avalugg-Hisui']},\n  'Basculin': {otherFormes: ['Basculin-Blue-Striped', 'Basculin-White-Striped']},\n  Braviary: {otherFormes: ['Braviary-Hisui']},\n  Decidueye: {otherFormes: ['Decidueye-Hisui']},\n  Dialga: {otherFormes: ['Dialga-Origin']},\n  Electrode: {otherFormes: ['Electrode-Hisui']},\n  Goodra: {otherFormes: ['Goodra-Hisui']},\n  Growlithe: {otherFormes: ['Growlithe-Hisui']},\n  Lilligant: {otherFormes: ['Lilligant-Hisui']},\n  Palkia: {otherFormes: ['Palkia-Origin']},\n  Qwilfish: {otherFormes: ['Qwilfish-Hisui']},\n  Samurott: {otherFormes: ['Samurott-Hisui']},\n  Sliggoo: {otherFormes: ['Sliggoo-Hisui']},\n  Sneasel: {otherFormes: ['Sneasel-Hisui']},\n  Stantler: {nfe: true},\n  Typhlosion: {otherFormes: ['Typhlosion-Hisui']},\n  Ursaring: {nfe: true},\n  Voltorb: {otherFormes: ['Voltorb-Hisui']},\n  Zoroark: {otherFormes: ['Zoroark-Hisui']},\n  Zorua: {otherFormes: ['Zorua-Hisui']},\n  'Arcanine-Hisui': {\n    types: ['Fire', 'Rock'],\n    bs: {hp: 95, at: 115, df: 80, sa: 95, sd: 80, sp: 90},\n    weightkg: 168,\n    abilities: {0: 'Intimidate'},\n    baseSpecies: 'Arcanine',\n  },\n  'Avalugg-Hisui': {\n    types: ['Ice', 'Rock'],\n    bs: {hp: 95, at: 127, df: 184, sa: 34, sd: 36, sp: 38},\n    weightkg: 262.4,\n    abilities: {0: 'Strong Jaw'},\n    baseSpecies: 'Avalugg',\n  },\n  Basculegion: {\n    types: ['Water', 'Ghost'],\n    bs: {hp: 120, at: 112, df: 65, sa: 80, sd: 75, sp: 78},\n    weightkg: 110,\n    abilities: {0: 'Swift Swim'},\n    otherFormes: ['Basculegion-F'],\n    gender: 'M',\n  },\n  'Basculegion-F': {\n    types: ['Water', 'Ghost'],\n    bs: {hp: 120, at: 92, df: 65, sa: 100, sd: 75, sp: 78},\n    weightkg: 110,\n    abilities: {0: 'Swift Swim'},\n    baseSpecies: 'Basculegion',\n    gender: 'F',\n  },\n  'Basculin-White-Striped': {\n    types: ['Water'],\n    bs: {hp: 70, at: 92, df: 65, sa: 80, sd: 55, sp: 98},\n    weightkg: 18,\n    abilities: {0: 'Rattled'},\n    baseSpecies: 'Basculin',\n    nfe: true,\n  },\n  'Braviary-Hisui': {\n    types: ['Psychic', 'Flying'],\n    bs: {hp: 110, at: 83, df: 70, sa: 112, sd: 70, sp: 65},\n    weightkg: 43.4,\n    abilities: {0: 'Keen Eye'},\n    baseSpecies: 'Braviary',\n    gender: 'M',\n  },\n  'Decidueye-Hisui': {\n    types: ['Grass', 'Fighting'],\n    bs: {hp: 88, at: 112, df: 80, sa: 95, sd: 95, sp: 60},\n    weightkg: 37,\n    abilities: {0: 'Overgrow'},\n    baseSpecies: 'Decidueye',\n  },\n  'Dialga-Origin': {\n    types: ['Steel', 'Dragon'],\n    bs: {hp: 100, at: 100, df: 120, sa: 150, sd: 120, sp: 90},\n    weightkg: 850,\n    gender: 'N',\n    abilities: {0: 'Pressure'},\n    baseSpecies: 'Dialga',\n  },\n  'Electrode-Hisui': {\n    types: ['Electric', 'Grass'],\n    bs: {hp: 60, at: 50, df: 70, sa: 80, sd: 80, sp: 150},\n    weightkg: 71,\n    gender: 'N',\n    abilities: {0: 'Soundproof'},\n    baseSpecies: 'Electrode',\n  },\n  Enamorus: {\n    types: ['Fairy', 'Flying'],\n    bs: {hp: 74, at: 115, df: 70, sa: 135, sd: 80, sp: 106},\n    weightkg: 48,\n    abilities: {0: 'Cute Charm'},\n    otherFormes: ['Enamorus-Therian'],\n    gender: 'F',\n  },\n  'Enamorus-Therian': {\n    types: ['Fairy', 'Flying'],\n    bs: {hp: 74, at: 115, df: 110, sa: 135, sd: 100, sp: 46},\n    weightkg: 48,\n    abilities: {0: 'Overcoat'},\n    baseSpecies: 'Enamorus',\n    gender: 'F',\n  },\n  'Goodra-Hisui': {\n    types: ['Steel', 'Dragon'],\n    bs: {hp: 80, at: 100, df: 100, sa: 110, sd: 150, sp: 60},\n    weightkg: 334.1,\n    abilities: {0: 'Sap Sipper'},\n    baseSpecies: 'Goodra',\n  },\n  'Growlithe-Hisui': {\n    types: ['Fire', 'Rock'],\n    bs: {hp: 60, at: 75, df: 45, sa: 65, sd: 50, sp: 55},\n    weightkg: 22.7,\n    abilities: {0: 'Intimidate'},\n    baseSpecies: 'Growlithe',\n    nfe: true,\n  },\n  Kleavor: {\n    types: ['Bug', 'Rock'],\n    bs: {hp: 70, at: 135, df: 95, sa: 45, sd: 70, sp: 85},\n    weightkg: 89,\n    abilities: {0: 'Swarm'},\n  },\n  'Lilligant-Hisui': {\n    types: ['Grass', 'Fighting'],\n    bs: {hp: 70, at: 105, df: 75, sa: 50, sd: 75, sp: 105},\n    weightkg: 19.2,\n    abilities: {0: 'Chlorophyll'},\n    baseSpecies: 'Lilligant',\n    gender: 'F',\n  },\n  Overqwil: {\n    types: ['Dark', 'Poison'],\n    bs: {hp: 85, at: 115, df: 95, sa: 65, sd: 65, sp: 85},\n    weightkg: 60.5,\n    abilities: {0: 'Poison Point'},\n  },\n  'Palkia-Origin': {\n    types: ['Water', 'Dragon'],\n    bs: {hp: 90, at: 100, df: 100, sa: 150, sd: 120, sp: 120},\n    weightkg: 660,\n    gender: 'N',\n    abilities: {0: 'Pressure'},\n    baseSpecies: 'Palkia',\n  },\n  'Qwilfish-Hisui': {\n    types: ['Dark', 'Poison'],\n    bs: {hp: 65, at: 95, df: 85, sa: 55, sd: 55, sp: 85},\n    weightkg: 3.9,\n    abilities: {0: 'Poison Point'},\n    baseSpecies: 'Qwilfish',\n    nfe: true,\n  },\n  'Samurott-Hisui': {\n    types: ['Water', 'Dark'],\n    bs: {hp: 90, at: 108, df: 80, sa: 100, sd: 65, sp: 85},\n    weightkg: 58.2,\n    abilities: {0: 'Torrent'},\n    baseSpecies: 'Samurott',\n  },\n  'Sliggoo-Hisui': {\n    types: ['Steel', 'Dragon'],\n    bs: {hp: 58, at: 75, df: 83, sa: 83, sd: 113, sp: 40},\n    weightkg: 68.5,\n    abilities: {0: 'Sap Sipper'},\n    baseSpecies: 'Sliggoo',\n    nfe: true,\n  },\n  'Sneasel-Hisui': {\n    types: ['Fighting', 'Poison'],\n    bs: {hp: 55, at: 95, df: 55, sa: 35, sd: 75, sp: 115},\n    weightkg: 27,\n    abilities: {0: 'Inner Focus'},\n    baseSpecies: 'Sneasel',\n    nfe: true,\n  },\n  Sneasler: {\n    types: ['Fighting', 'Poison'],\n    bs: {hp: 80, at: 130, df: 60, sa: 40, sd: 80, sp: 120},\n    weightkg: 43,\n    abilities: {0: 'Pressure'},\n  },\n  'Typhlosion-Hisui': {\n    types: ['Fire', 'Ghost'],\n    bs: {hp: 73, at: 84, df: 78, sa: 119, sd: 85, sp: 95},\n    weightkg: 69.8,\n    abilities: {0: 'Blaze'},\n    baseSpecies: 'Typhlosion',\n  },\n  Ursaluna: {\n    types: ['Ground', 'Normal'],\n    bs: {hp: 130, at: 140, df: 105, sa: 45, sd: 80, sp: 50},\n    weightkg: 290,\n    abilities: {0: 'Guts'},\n  },\n  'Voltorb-Hisui': {\n    types: ['Electric', 'Grass'],\n    bs: {hp: 40, at: 30, df: 50, sa: 55, sd: 55, sp: 100},\n    weightkg: 13,\n    gender: 'N',\n    abilities: {0: 'Soundproof'},\n    baseSpecies: 'Voltorb',\n    nfe: true,\n  },\n  Wyrdeer: {\n    types: ['Normal', 'Psychic'],\n    bs: {hp: 103, at: 105, df: 72, sa: 105, sd: 75, sp: 65},\n    weightkg: 95.1,\n    abilities: {0: 'Intimidate'},\n  },\n  'Zoroark-Hisui': {\n    types: ['Normal', 'Ghost'],\n    bs: {hp: 55, at: 100, df: 60, sa: 125, sd: 60, sp: 110},\n    weightkg: 73,\n    abilities: {0: 'Illusion'},\n    baseSpecies: 'Zoroark',\n  },\n  'Zorua-Hisui': {\n    types: ['Normal', 'Ghost'],\n    bs: {hp: 35, at: 60, df: 40, sa: 85, sd: 40, sp: 70},\n    weightkg: 12.5,\n    abilities: {0: 'Illusion'},\n    baseSpecies: 'Zorua',\n    nfe: true,\n  },\n};\n\nconst SV_PATCH: {[name: string]: DeepPartial<SpeciesData>} = {\n  Bisharp: {nfe: true},\n  Cresselia: {bs: {df: 110, sd: 120}},\n  Dunsparce: {nfe: true},\n  Duraludon: {nfe: true},\n  Girafarig: {nfe: true},\n  Primeape: {nfe: true},\n  Tauros: {otherFormes: ['Tauros-Paldea-Aqua', 'Tauros-Paldea-Blaze', 'Tauros-Paldea-Combat']},\n  Wooper: {otherFormes: ['Wooper-Paldea']},\n  Zacian: {bs: {at: 120}},\n  'Zacian-Crowned': {bs: {at: 150}},\n  Zamazenta: {bs: {at: 120}},\n  'Zamazenta-Crowned': {bs: {at: 120, df: 140, sd: 140}},\n  Annihilape: {\n    types: ['Fighting', 'Ghost'],\n    bs: {hp: 110, at: 115, df: 80, sa: 50, sd: 90, sp: 90},\n    weightkg: 56,\n    abilities: {0: 'Vital Spirit'},\n  },\n  Arboliva: {\n    types: ['Grass', 'Normal'],\n    bs: {hp: 78, at: 69, df: 90, sa: 125, sd: 109, sp: 39},\n    weightkg: 48.2,\n    abilities: {0: 'Seed Sower'},\n  },\n  Archaludon: {\n    types: ['Steel', 'Dragon'],\n    bs: {hp: 90, at: 105, df: 130, sa: 125, sd: 65, sp: 85},\n    weightkg: 60.0,\n    abilities: {0: 'Stamina'},\n  },\n  Arctibax: {\n    types: ['Dragon', 'Ice'],\n    bs: {hp: 90, at: 95, df: 66, sa: 45, sd: 65, sp: 62},\n    weightkg: 30,\n    abilities: {0: 'Thermal Exchange'},\n    nfe: true,\n  },\n  Armarouge: {\n    types: ['Fire', 'Psychic'],\n    bs: {hp: 85, at: 60, df: 100, sa: 125, sd: 80, sp: 75},\n    weightkg: 85,\n    abilities: {0: 'Flash Fire'},\n  },\n  Baxcalibur: {\n    types: ['Dragon', 'Ice'],\n    bs: {hp: 115, at: 145, df: 92, sa: 75, sd: 86, sp: 87},\n    weightkg: 210,\n    abilities: {0: 'Thermal Exchange'},\n  },\n  Bellibolt: {\n    types: ['Electric'],\n    bs: {hp: 109, at: 64, df: 91, sa: 103, sd: 83, sp: 45},\n    weightkg: 113,\n    abilities: {0: 'Electromorphosis'},\n  },\n  Bombirdier: {\n    types: ['Flying', 'Dark'],\n    bs: {hp: 70, at: 103, df: 85, sa: 60, sd: 85, sp: 82},\n    weightkg: 42.9,\n    abilities: {0: 'Big Pecks'},\n  },\n  Brambleghast: {\n    types: ['Grass', 'Ghost'],\n    bs: {hp: 55, at: 115, df: 70, sa: 80, sd: 70, sp: 90},\n    weightkg: 6,\n    abilities: {0: 'Wind Rider'},\n  },\n  Bramblin: {\n    types: ['Grass', 'Ghost'],\n    bs: {hp: 40, at: 65, df: 30, sa: 45, sd: 35, sp: 60},\n    weightkg: 0.6,\n    abilities: {0: 'Wind Rider'},\n    nfe: true,\n  },\n  'Brute Bonnet': {\n    types: ['Grass', 'Dark'],\n    bs: {hp: 111, at: 127, df: 99, sa: 79, sd: 99, sp: 55},\n    weightkg: 21,\n    gender: 'N',\n    abilities: {0: 'Protosynthesis'},\n  },\n  Capsakid: {\n    types: ['Grass'],\n    bs: {hp: 50, at: 62, df: 40, sa: 62, sd: 40, sp: 50},\n    weightkg: 3,\n    abilities: {0: 'Chlorophyll'},\n    nfe: true,\n  },\n  Ceruledge: {\n    types: ['Fire', 'Ghost'],\n    bs: {hp: 75, at: 125, df: 80, sa: 60, sd: 100, sp: 85},\n    weightkg: 62,\n    abilities: {0: 'Flash Fire'},\n  },\n  Cetitan: {\n    types: ['Ice'],\n    bs: {hp: 170, at: 113, df: 65, sa: 45, sd: 55, sp: 73},\n    weightkg: 700,\n    abilities: {0: 'Thick Fat'},\n  },\n  Cetoddle: {\n    types: ['Ice'],\n    bs: {hp: 108, at: 68, df: 45, sa: 30, sd: 40, sp: 43},\n    weightkg: 45,\n    abilities: {0: 'Thick Fat'},\n    nfe: true,\n  },\n  Charcadet: {\n    types: ['Fire'],\n    bs: {hp: 40, at: 50, df: 40, sa: 50, sd: 40, sp: 35},\n    weightkg: 10.5,\n    abilities: {0: 'Flash Fire'},\n    nfe: true,\n  },\n  'Chi-Yu': {\n    types: ['Dark', 'Fire'],\n    bs: {hp: 55, at: 80, df: 80, sa: 135, sd: 120, sp: 100},\n    weightkg: 4.9,\n    gender: 'N',\n    abilities: {0: 'Beads of Ruin'},\n  },\n  'Chien-Pao': {\n    types: ['Dark', 'Ice'],\n    bs: {hp: 80, at: 120, df: 80, sa: 90, sd: 65, sp: 135},\n    weightkg: 152.2,\n    gender: 'N',\n    abilities: {0: 'Sword of Ruin'},\n  },\n  Clodsire: {\n    types: ['Poison', 'Ground'],\n    bs: {hp: 130, at: 75, df: 60, sa: 45, sd: 100, sp: 20},\n    weightkg: 223,\n    abilities: {0: 'Poison Point'},\n  },\n  Crocalor: {\n    types: ['Fire'],\n    bs: {hp: 81, at: 55, df: 78, sa: 90, sd: 58, sp: 49},\n    weightkg: 30.7,\n    abilities: {0: 'Blaze'},\n    nfe: true,\n  },\n  Cyclizar: {\n    types: ['Dragon', 'Normal'],\n    bs: {hp: 70, at: 95, df: 65, sa: 85, sd: 65, sp: 121},\n    weightkg: 63,\n    abilities: {0: 'Shed Skin'},\n  },\n  Dachsbun: {\n    types: ['Fairy'],\n    bs: {hp: 57, at: 80, df: 115, sa: 50, sd: 80, sp: 95},\n    weightkg: 14.9,\n    abilities: {0: 'Well-Baked Body'},\n  },\n  Dipplin: {\n    types: ['Grass', 'Dragon'],\n    bs: {hp: 80, at: 80, df: 110, sa: 95, sd: 80, sp: 40},\n    weightkg: 4.4,\n    abilities: {0: 'Supersweet Syrup'},\n    nfe: true,\n  },\n  Dolliv: {\n    types: ['Grass', 'Normal'],\n    bs: {hp: 52, at: 53, df: 60, sa: 78, sd: 78, sp: 33},\n    weightkg: 11.9,\n    abilities: {0: 'Early Bird'},\n    nfe: true,\n  },\n  Dondozo: {\n    types: ['Water'],\n    bs: {hp: 150, at: 100, df: 115, sa: 65, sd: 65, sp: 35},\n    weightkg: 220,\n    abilities: {0: 'Unaware'},\n  },\n  Dudunsparce: {\n    types: ['Normal'],\n    bs: {hp: 125, at: 100, df: 80, sa: 85, sd: 75, sp: 55},\n    weightkg: 39.2,\n    abilities: {0: 'Serene Grace'},\n    // otherFormes: ['Dudunsparce-Three-Segment'],\n  },\n  // 'Dudunsparce-Three-Segment': {\n  //   types: ['Normal'],\n  //   bs: {hp: 125, at: 100, df: 80, sa: 85, sd: 75, sp: 55},\n  //   weightkg: 47.4,\n  //   abilities: {0: 'Serene Grace'},\n  //   baseSpecies: 'Dudunsparce',\n  // },\n  Espathra: {\n    types: ['Psychic'],\n    bs: {hp: 95, at: 60, df: 60, sa: 101, sd: 60, sp: 105},\n    weightkg: 90,\n    abilities: {0: 'Opportunist'},\n  },\n  Farigiraf: {\n    types: ['Normal', 'Psychic'],\n    bs: {hp: 120, at: 90, df: 70, sa: 110, sd: 70, sp: 60},\n    weightkg: 160,\n    abilities: {0: 'Cud Chew'},\n  },\n  Fezandipiti: {\n    types: ['Poison', 'Fairy'],\n    bs: {hp: 88, at: 91, df: 82, sa: 70, sd: 125, sp: 99},\n    weightkg: 30.1,\n    gender: 'M',\n    abilities: {0: 'Toxic Chain'},\n  },\n  Fidough: {\n    types: ['Fairy'],\n    bs: {hp: 37, at: 55, df: 70, sa: 30, sd: 55, sp: 65},\n    weightkg: 10.9,\n    abilities: {0: 'Own Tempo'},\n    nfe: true,\n  },\n  Finizen: {\n    types: ['Water'],\n    bs: {hp: 70, at: 45, df: 40, sa: 45, sd: 40, sp: 75},\n    weightkg: 60.2,\n    abilities: {0: 'Water Veil'},\n    nfe: true,\n  },\n  Flamigo: {\n    types: ['Flying', 'Fighting'],\n    bs: {hp: 82, at: 115, df: 74, sa: 75, sd: 64, sp: 90},\n    weightkg: 37,\n    abilities: {0: 'Scrappy'},\n  },\n  Flittle: {\n    types: ['Psychic'],\n    bs: {hp: 30, at: 35, df: 30, sa: 55, sd: 30, sp: 75},\n    weightkg: 1.5,\n    abilities: {0: 'Anticipation'},\n    nfe: true,\n  },\n  Floragato: {\n    types: ['Grass'],\n    bs: {hp: 61, at: 80, df: 63, sa: 60, sd: 63, sp: 83},\n    weightkg: 12.2,\n    abilities: {0: 'Overgrow'},\n    nfe: true,\n  },\n  'Flutter Mane': {\n    types: ['Ghost', 'Fairy'],\n    bs: {hp: 55, at: 55, df: 55, sa: 135, sd: 135, sp: 135},\n    weightkg: 4,\n    gender: 'N',\n    abilities: {0: 'Protosynthesis'},\n  },\n  Frigibax: {\n    types: ['Dragon', 'Ice'],\n    bs: {hp: 65, at: 75, df: 45, sa: 35, sd: 45, sp: 55},\n    weightkg: 17,\n    abilities: {0: 'Thermal Exchange'},\n    nfe: true,\n  },\n  Fuecoco: {\n    types: ['Fire'],\n    bs: {hp: 67, at: 45, df: 59, sa: 63, sd: 40, sp: 36},\n    weightkg: 9.8,\n    abilities: {0: 'Blaze'},\n    nfe: true,\n  },\n  Garganacl: {\n    types: ['Rock'],\n    bs: {hp: 100, at: 100, df: 130, sa: 45, sd: 90, sp: 35},\n    weightkg: 240,\n    abilities: {0: 'Purifying Salt'},\n  },\n  Gholdengo: {\n    types: ['Steel', 'Ghost'],\n    bs: {hp: 87, at: 60, df: 95, sa: 133, sd: 91, sp: 84},\n    weightkg: 30,\n    gender: 'N',\n    abilities: {0: 'Good as Gold'},\n  },\n  Gimmighoul: {\n    types: ['Ghost'],\n    bs: {hp: 45, at: 30, df: 70, sa: 75, sd: 70, sp: 10},\n    weightkg: 5,\n    gender: 'N',\n    abilities: {0: 'Rattled'},\n    nfe: true,\n    otherFormes: ['Gimmighoul-Roaming'],\n  },\n  'Gimmighoul-Roaming': {\n    types: ['Ghost'],\n    bs: {hp: 45, at: 30, df: 25, sa: 75, sd: 45, sp: 80},\n    weightkg: 0.1,\n    gender: 'N',\n    abilities: {0: 'Run Away'},\n    nfe: true,\n    baseSpecies: 'Gimmighoul',\n  },\n  Glimmet: {\n    types: ['Rock', 'Poison'],\n    bs: {hp: 48, at: 35, df: 42, sa: 105, sd: 60, sp: 60},\n    weightkg: 8,\n    abilities: {0: 'Toxic Debris'},\n    nfe: true,\n  },\n  Glimmora: {\n    types: ['Rock', 'Poison'],\n    bs: {hp: 83, at: 55, df: 90, sa: 130, sd: 81, sp: 86},\n    weightkg: 45,\n    abilities: {0: 'Toxic Debris'},\n  },\n  'Gouging Fire': {\n    types: ['Fire', 'Dragon'],\n    bs: {hp: 105, at: 115, df: 121, sa: 65, sd: 93, sp: 91},\n    weightkg: 590,\n    gender: 'N',\n    abilities: {0: 'Protosynthesis'},\n  },\n  Grafaiai: {\n    types: ['Poison', 'Normal'],\n    bs: {hp: 63, at: 95, df: 65, sa: 80, sd: 72, sp: 110},\n    weightkg: 27.2,\n    abilities: {0: 'Unburden'},\n  },\n  'Great Tusk': {\n    types: ['Ground', 'Fighting'],\n    bs: {hp: 115, at: 131, df: 131, sa: 53, sd: 53, sp: 87},\n    weightkg: 320,\n    gender: 'N',\n    abilities: {0: 'Protosynthesis'},\n  },\n  Greavard: {\n    types: ['Ghost'],\n    bs: {hp: 50, at: 61, df: 60, sa: 30, sd: 55, sp: 34},\n    weightkg: 35,\n    abilities: {0: 'Pickup'},\n    nfe: true,\n  },\n  Houndstone: {\n    types: ['Ghost'],\n    bs: {hp: 72, at: 101, df: 100, sa: 50, sd: 97, sp: 68},\n    weightkg: 15,\n    abilities: {0: 'Sand Rush'},\n  },\n  Hydrapple: {\n    types: ['Grass', 'Dragon'],\n    bs: {hp: 106, at: 80, df: 110, sa: 120, sd: 80, sp: 44},\n    weightkg: 93,\n    abilities: {0: 'Supersweet Syrup'},\n  },\n  'Iron Boulder': {\n    types: ['Rock', 'Psychic'],\n    bs: {hp: 90, at: 120, df: 80, sa: 68, sd: 108, sp: 124},\n    weightkg: 162.5,\n    gender: 'N',\n    abilities: {0: 'Quark Drive'},\n  },\n  'Iron Bundle': {\n    types: ['Ice', 'Water'],\n    bs: {hp: 56, at: 80, df: 114, sa: 124, sd: 60, sp: 136},\n    weightkg: 11,\n    gender: 'N',\n    abilities: {0: 'Quark Drive'},\n  },\n  'Iron Crown': {\n    types: ['Steel', 'Psychic'],\n    bs: {hp: 90, at: 72, df: 100, sa: 122, sd: 108, sp: 98},\n    weightkg: 156,\n    gender: 'N',\n    abilities: {0: 'Quark Drive'},\n  },\n  'Iron Hands': {\n    types: ['Fighting', 'Electric'],\n    bs: {hp: 154, at: 140, df: 108, sa: 50, sd: 68, sp: 50},\n    weightkg: 380.7,\n    gender: 'N',\n    abilities: {0: 'Quark Drive'},\n  },\n  'Iron Jugulis': {\n    types: ['Dark', 'Flying'],\n    bs: {hp: 94, at: 80, df: 86, sa: 122, sd: 80, sp: 108},\n    weightkg: 111,\n    gender: 'N',\n    abilities: {0: 'Quark Drive'},\n  },\n  'Iron Leaves': {\n    types: ['Grass', 'Psychic'],\n    bs: {hp: 90, at: 130, df: 88, sa: 70, sd: 108, sp: 104},\n    weightkg: 125,\n    gender: 'N',\n    abilities: {0: 'Quark Drive'},\n  },\n  'Iron Moth': {\n    types: ['Fire', 'Poison'],\n    bs: {hp: 80, at: 70, df: 60, sa: 140, sd: 110, sp: 110},\n    weightkg: 36,\n    gender: 'N',\n    abilities: {0: 'Quark Drive'},\n  },\n  'Iron Thorns': {\n    types: ['Rock', 'Electric'],\n    bs: {hp: 100, at: 134, df: 110, sa: 70, sd: 84, sp: 72},\n    weightkg: 303,\n    gender: 'N',\n    abilities: {0: 'Quark Drive'},\n  },\n  'Iron Treads': {\n    types: ['Ground', 'Steel'],\n    bs: {hp: 90, at: 112, df: 120, sa: 72, sd: 70, sp: 106},\n    weightkg: 240,\n    gender: 'N',\n    abilities: {0: 'Quark Drive'},\n  },\n  'Iron Valiant': {\n    types: ['Fairy', 'Fighting'],\n    bs: {hp: 74, at: 130, df: 90, sa: 120, sd: 60, sp: 116},\n    weightkg: 35,\n    gender: 'N',\n    abilities: {0: 'Quark Drive'},\n  },\n  Kilowattrel: {\n    types: ['Electric', 'Flying'],\n    bs: {hp: 70, at: 70, df: 60, sa: 105, sd: 60, sp: 125},\n    weightkg: 38.6,\n    abilities: {0: 'Wind Power'},\n  },\n  Kingambit: {\n    types: ['Dark', 'Steel'],\n    bs: {hp: 100, at: 135, df: 120, sa: 60, sd: 85, sp: 50},\n    weightkg: 120,\n    abilities: {0: 'Defiant'},\n  },\n  Klawf: {\n    types: ['Rock'],\n    bs: {hp: 70, at: 100, df: 115, sa: 35, sd: 55, sp: 75},\n    weightkg: 79,\n    abilities: {0: 'Anger Shell'},\n  },\n  Koraidon: {\n    types: ['Fighting', 'Dragon'],\n    bs: {hp: 100, at: 135, df: 115, sa: 85, sd: 100, sp: 135},\n    weightkg: 303,\n    gender: 'N',\n    abilities: {0: 'Orichalcum Pulse'},\n  },\n  Lechonk: {\n    types: ['Normal'],\n    bs: {hp: 54, at: 45, df: 40, sa: 35, sd: 45, sp: 35},\n    weightkg: 10.2,\n    abilities: {0: 'Aroma Veil'},\n    nfe: true,\n  },\n  Lokix: {\n    types: ['Bug', 'Dark'],\n    bs: {hp: 71, at: 102, df: 78, sa: 52, sd: 55, sp: 92},\n    weightkg: 17.5,\n    abilities: {0: 'Swarm'},\n  },\n  Mabosstiff: {\n    types: ['Dark'],\n    bs: {hp: 80, at: 120, df: 90, sa: 60, sd: 70, sp: 85},\n    weightkg: 61,\n    abilities: {0: 'Intimidate'},\n  },\n  Maschiff: {\n    types: ['Dark'],\n    bs: {hp: 60, at: 78, df: 60, sa: 40, sd: 51, sp: 51},\n    weightkg: 16,\n    abilities: {0: 'Intimidate'},\n    nfe: true,\n  },\n  Maushold: {\n    types: ['Normal'],\n    bs: {hp: 74, at: 75, df: 70, sa: 65, sd: 75, sp: 111},\n    weightkg: 2.3,\n    gender: 'N',\n    abilities: {0: 'Friend Guard'},\n    // otherFormes: ['Maushold-Four'],\n  },\n  Meowscarada: {\n    types: ['Grass', 'Dark'],\n    bs: {hp: 76, at: 110, df: 70, sa: 81, sd: 70, sp: 123},\n    weightkg: 31.2,\n    abilities: {0: 'Overgrow'},\n  },\n  Miraidon: {\n    types: ['Electric', 'Dragon'],\n    bs: {hp: 100, at: 85, df: 100, sa: 135, sd: 115, sp: 135},\n    weightkg: 240,\n    gender: 'N',\n    abilities: {0: 'Hadron Engine'},\n  },\n  Munkidori: {\n    types: ['Poison', 'Psychic'],\n    bs: {hp: 88, at: 75, df: 66, sa: 130, sd: 90, sp: 106},\n    weightkg: 12.2,\n    gender: 'M',\n    abilities: {0: 'Toxic Chain'},\n  },\n  Nacli: {\n    types: ['Rock'],\n    bs: {hp: 55, at: 55, df: 75, sa: 35, sd: 35, sp: 25},\n    weightkg: 16,\n    abilities: {0: 'Purifying Salt'},\n    nfe: true,\n  },\n  Naclstack: {\n    types: ['Rock'],\n    bs: {hp: 60, at: 60, df: 100, sa: 35, sd: 65, sp: 35},\n    weightkg: 105,\n    abilities: {0: 'Purifying Salt'},\n    nfe: true,\n  },\n  Nymble: {\n    types: ['Bug'],\n    bs: {hp: 33, at: 46, df: 40, sa: 21, sd: 25, sp: 45},\n    weightkg: 1,\n    abilities: {0: 'Swarm'},\n    nfe: true,\n  },\n  Ogerpon: {\n    types: ['Grass'],\n    bs: {hp: 80, at: 120, df: 84, sa: 60, sd: 96, sp: 110},\n    abilities: {0: 'Defiant'},\n    weightkg: 39.8, \n    gender: 'F',\n    otherFormes: ['Ogerpon-Wellspring', 'Ogerpon-Hearthflame', 'Ogerpon-Cornerstone'],\n  },\n  'Ogerpon-Wellspring': {\n    types: ['Grass', 'Water'],\n    bs: {hp: 80, at: 120, df: 84, sa: 60, sd: 96, sp: 110},\n    weightkg: 39.8, \n    gender: 'F',\n    abilities: {0: 'Water Absorb'},\n    baseSpecies: 'Ogerpon',\n  },\n  'Ogerpon-Hearthflame': {\n    types: ['Grass', 'Fire'],\n    bs: {hp: 80, at: 120, df: 84, sa: 60, sd: 96, sp: 110},\n    weightkg: 39.8, \n    gender: 'F',\n    abilities: {0: 'Mold Breaker'},\n    baseSpecies: 'Ogerpon',\n  },\n  'Ogerpon-Cornerstone': {\n    types: ['Grass', 'Rock'],\n    bs: {hp: 80, at: 120, df: 84, sa: 60, sd: 96, sp: 110},\n    weightkg: 39.8, \n    gender: 'F',\n    abilities: {0: 'Sturdy'},\n    baseSpecies: 'Ogerpon',\n  },\n  Oinkologne: {\n    types: ['Normal'],\n    bs: {hp: 110, at: 100, df: 75, sa: 59, sd: 80, sp: 65},\n    weightkg: 120,\n    abilities: {0: 'Lingering Aroma'},\n    otherFormes: ['Oinkologne-F'],\n  },\n  'Oinkologne-F': {\n    types: ['Normal'],\n    bs: {hp: 115, at: 90, df: 70, sa: 59, sd: 90, sp: 65},\n    weightkg: 120,\n    abilities: {0: 'Aroma Veil'},\n    baseSpecies: 'Oinkologne',\n  },\n  Okidogi: {\n    types: ['Poison', 'Fighting'],\n    bs: {hp: 88, at: 128, df: 115, sa: 58, sd: 86, sp: 80},\n    weightkg: 92,\n    gender: 'M',\n    abilities: {0: 'Toxic Chain'},\n  },\n  Orthworm: {\n    types: ['Steel'],\n    bs: {hp: 70, at: 85, df: 145, sa: 60, sd: 55, sp: 65},\n    weightkg: 310,\n    abilities: {0: 'Earth Eater'},\n  },\n  Palafin: {\n    types: ['Water'],\n    bs: {hp: 100, at: 70, df: 72, sa: 53, sd: 62, sp: 100},\n    weightkg: 60.2,\n    abilities: {0: 'Zero to Hero'},\n    otherFormes: ['Palafin-Hero'],\n  },\n  'Palafin-Hero': {\n    types: ['Water'],\n    bs: {hp: 100, at: 160, df: 97, sa: 106, sd: 87, sp: 100},\n    weightkg: 97.4,\n    abilities: {0: 'Zero to Hero'},\n    baseSpecies: 'Palafin',\n  },\n  Pawmi: {\n    types: ['Electric'],\n    bs: {hp: 45, at: 50, df: 20, sa: 40, sd: 25, sp: 60},\n    weightkg: 2.5,\n    abilities: {0: 'Static'},\n    nfe: true,\n  },\n  Pawmo: {\n    types: ['Electric', 'Fighting'],\n    bs: {hp: 60, at: 75, df: 40, sa: 50, sd: 40, sp: 85},\n    weightkg: 6.5,\n    abilities: {0: 'Volt Absorb'},\n    nfe: true,\n  },\n  Pawmot: {\n    types: ['Electric', 'Fighting'],\n    bs: {hp: 70, at: 115, df: 70, sa: 70, sd: 60, sp: 105},\n    weightkg: 41,\n    abilities: {0: 'Volt Absorb'},\n  },\n  Pecharunt: {\n    types: ['Poison', 'Ghost'],\n    bs: {hp: 88, at: 88, df: 160, sa: 88, sd: 88, sp: 88},\n    weightkg: 0.3,\n    gender: 'N',\n    abilities: {0: 'Poison Puppeteer'},\n  },\n  Poltchageist: {\n    types: ['Grass', 'Ghost'],\n    bs: {hp: 40, at: 45, df: 45, sa: 74, sd: 54, sp: 50},\n    weightkg: 1.1,\n    abilities: {0: 'Hospitality'},\n    nfe: true,\n    gender: 'N',\n  },\n  Quaquaval: {\n    types: ['Water', 'Fighting'],\n    bs: {hp: 85, at: 120, df: 80, sa: 85, sd: 75, sp: 85},\n    weightkg: 61.9,\n    abilities: {0: 'Torrent'},\n  },\n  Quaxly: {\n    types: ['Water'],\n    bs: {hp: 55, at: 65, df: 45, sa: 50, sd: 45, sp: 50},\n    weightkg: 6.1,\n    abilities: {0: 'Torrent'},\n    nfe: true,\n  },\n  Quaxwell: {\n    types: ['Water'],\n    bs: {hp: 70, at: 85, df: 65, sa: 65, sd: 60, sp: 65},\n    weightkg: 21.5,\n    abilities: {0: 'Torrent'},\n    nfe: true,\n  },\n  Rabsca: {\n    types: ['Bug', 'Psychic'],\n    bs: {hp: 75, at: 50, df: 85, sa: 115, sd: 100, sp: 45},\n    weightkg: 3.5,\n    abilities: {0: 'Synchronize'},\n  },\n  'Raging Bolt': {\n    types: ['Electric', 'Dragon'],\n    bs: {hp: 125, at: 73, df: 91, sa: 137, sd: 89, sp: 75},\n    weightkg: 480,\n    gender: 'N',\n    abilities: {0: 'Protosynthesis'},\n  },\n  Rellor: {\n    types: ['Bug'],\n    bs: {hp: 41, at: 50, df: 60, sa: 31, sd: 58, sp: 30},\n    weightkg: 1,\n    abilities: {0: 'Compound Eyes'},\n    nfe: true,\n  },\n  Revavroom: {\n    types: ['Steel', 'Poison'],\n    bs: {hp: 80, at: 119, df: 90, sa: 54, sd: 67, sp: 90},\n    weightkg: 120,\n    abilities: {0: 'Overcoat'},\n  },\n  'Roaring Moon': {\n    types: ['Dragon', 'Dark'],\n    bs: {hp: 105, at: 139, df: 71, sa: 55, sd: 101, sp: 119},\n    weightkg: 380,\n    gender: 'N',\n    abilities: {0: 'Protosynthesis'},\n  },\n  'Sandy Shocks': {\n    types: ['Electric', 'Ground'],\n    bs: {hp: 85, at: 81, df: 97, sa: 121, sd: 85, sp: 101},\n    weightkg: 60,\n    gender: 'N',\n    abilities: {0: 'Protosynthesis'},\n  },\n  Scovillain: {\n    types: ['Grass', 'Fire'],\n    bs: {hp: 65, at: 108, df: 65, sa: 108, sd: 65, sp: 75},\n    weightkg: 15,\n    abilities: {0: 'Chlorophyll'},\n  },\n  'Scream Tail': {\n    types: ['Fairy', 'Psychic'],\n    bs: {hp: 115, at: 65, df: 99, sa: 65, sd: 115, sp: 111},\n    weightkg: 8,\n    gender: 'N',\n    abilities: {0: 'Protosynthesis'},\n  },\n  Shroodle: {\n    types: ['Poison', 'Normal'],\n    bs: {hp: 40, at: 65, df: 35, sa: 40, sd: 35, sp: 75},\n    weightkg: 0.7,\n    abilities: {0: 'Unburden'},\n    nfe: true,\n  },\n  'Sinistcha': {\n    types: ['Grass', 'Ghost'],\n    bs: {hp: 71, at: 60, df: 106, sa: 121, sd: 80, sp: 70},\n    weightkg: 2.2,\n    abilities: {0: 'Hospitality'},\n    gender: 'N',\n  },\n  Skeledirge: {\n    types: ['Fire', 'Ghost'],\n    bs: {hp: 104, at: 75, df: 100, sa: 110, sd: 75, sp: 66},\n    weightkg: 326.5,\n    abilities: {0: 'Blaze'},\n  },\n  'Slither Wing': {\n    types: ['Bug', 'Fighting'],\n    bs: {hp: 85, at: 135, df: 79, sa: 85, sd: 105, sp: 81},\n    weightkg: 92,\n    gender: 'N',\n    abilities: {0: 'Protosynthesis'},\n  },\n  Smoliv: {\n    types: ['Grass', 'Normal'],\n    bs: {hp: 41, at: 35, df: 45, sa: 58, sd: 51, sp: 30},\n    weightkg: 6.5,\n    abilities: {0: 'Early Bird'},\n    nfe: true,\n  },\n  Spidops: {\n    types: ['Bug'],\n    bs: {hp: 60, at: 79, df: 92, sa: 52, sd: 86, sp: 35},\n    weightkg: 16.5,\n    abilities: {0: 'Insomnia'},\n  },\n  Sprigatito: {\n    types: ['Grass'],\n    bs: {hp: 40, at: 61, df: 54, sa: 45, sd: 45, sp: 65},\n    weightkg: 4.1,\n    abilities: {0: 'Overgrow'},\n    nfe: true,\n  },\n  Squawkabilly: {\n    types: ['Normal', 'Flying'],\n    bs: {hp: 82, at: 96, df: 51, sa: 45, sd: 51, sp: 92},\n    weightkg: 2.4,\n    abilities: {0: 'Intimidate'},\n    // otherFormes: ['Squawkabilly-Blue', 'Squawkabilly-White', 'Squawkabilly-Yellow'],\n  },\n  // 'Squawkabilly-Blue': {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 82, at: 96, df: 51, sa: 45, sd: 51, sp: 92},\n  //   weightkg: 2.4,\n  //   abilities: {0: 'Intimidate'},\n  //   baseSpecies: 'Squawkabilly',\n  // },\n  // 'Squawkabilly-White': {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 82, at: 96, df: 51, sa: 45, sd: 51, sp: 92},\n  //   weightkg: 2.4,\n  //   abilities: {0: 'Intimidate'},\n  //   baseSpecies: 'Squawkabilly',\n  // },\n  // 'Squawkabilly-Yellow': {\n  //   types: ['Normal', 'Flying'],\n  //   bs: {hp: 82, at: 96, df: 51, sa: 45, sd: 51, sp: 92},\n  //   weightkg: 2.4,\n  //   abilities: {0: 'Intimidate'},\n  //   baseSpecies: 'Squawkabilly',\n  // },\n  Tadbulb: {\n    types: ['Electric'],\n    bs: {hp: 61, at: 31, df: 41, sa: 59, sd: 35, sp: 45},\n    weightkg: 0.4,\n    abilities: {0: 'Own Tempo'},\n    nfe: true,\n  },\n  Tandemaus: {\n    types: ['Normal'],\n    bs: {hp: 50, at: 50, df: 45, sa: 40, sd: 45, sp: 75},\n    weightkg: 1.8,\n    gender: 'N',\n    abilities: {0: 'Run Away'},\n    nfe: true,\n  },\n  Tarountula: {\n    types: ['Bug'],\n    bs: {hp: 35, at: 41, df: 45, sa: 29, sd: 40, sp: 20},\n    weightkg: 4,\n    abilities: {0: 'Insomnia'},\n    nfe: true,\n  },\n  Tatsugiri: {\n    types: ['Dragon', 'Water'],\n    bs: {hp: 68, at: 50, df: 60, sa: 120, sd: 95, sp: 82},\n    weightkg: 8,\n    abilities: {0: 'Commander'},\n  },\n  'Tauros-Paldea-Aqua': {\n    types: ['Fighting', 'Water'],\n    bs: {hp: 75, at: 110, df: 105, sa: 30, sd: 70, sp: 100},\n    weightkg: 110,\n    abilities: {0: 'Intimidate'},\n    baseSpecies: 'Tauros',\n    gender: 'M',\n  },\n  'Tauros-Paldea-Blaze': {\n    types: ['Fighting', 'Fire'],\n    bs: {hp: 75, at: 110, df: 105, sa: 30, sd: 70, sp: 100},\n    weightkg: 85,\n    abilities: {0: 'Intimidate'},\n    baseSpecies: 'Tauros',\n    gender: 'M',\n  },\n  'Tauros-Paldea-Combat': {\n    types: ['Fighting'],\n    bs: {hp: 75, at: 110, df: 105, sa: 30, sd: 70, sp: 100},\n    weightkg: 115,\n    abilities: {0: 'Intimidate'},\n    baseSpecies: 'Tauros',\n    gender: 'M',\n  },\n  Terapagos: {\n    types: ['Normal'],\n    bs: {hp: 90, at: 65, df: 85, sa: 65, sd: 85, sp: 60},\n    weightkg: 6.5,\n    gender: 'M',\n    abilities: {0: 'Tera Shift'},\n    otherFormes: ['Terapagos-Terastal', 'Terapagos-Stellar'],\n  },\n  'Terapagos-Stellar': {\n    types: ['Normal'],\n    bs: {hp: 160, at: 105, df: 110, sa: 130, sd: 110, sp: 85},\n    weightkg: 77,\n    gender: 'M',\n    abilities: {0: 'Teraform Zero'},\n    baseSpecies: 'Terapagos',\n  },\n  'Terapagos-Terastal': {\n  types: ['Normal'],\n    bs: {hp: 95, at: 95, df: 110, sa: 105, sd: 110, sp: 85},\n    weightkg: 16,\n    gender: 'M',\n    abilities: {0: 'Tera Shell'},\n    baseSpecies: 'Terapagos',\n  },\n  'Ting-Lu': {\n    types: ['Dark', 'Ground'],\n    bs: {hp: 155, at: 110, df: 125, sa: 55, sd: 80, sp: 45},\n    weightkg: 699.7,\n    gender: 'N',\n    abilities: {0: 'Vessel of Ruin'},\n  },\n  Tinkatink: {\n    types: ['Fairy', 'Steel'],\n    bs: {hp: 50, at: 45, df: 45, sa: 35, sd: 64, sp: 58},\n    weightkg: 8.9,\n    abilities: {0: 'Mold Breaker'},\n    nfe: true,\n    gender: 'F',\n  },\n  Tinkaton: {\n    types: ['Fairy', 'Steel'],\n    bs: {hp: 85, at: 75, df: 77, sa: 70, sd: 105, sp: 94},\n    weightkg: 112.8,\n    abilities: {0: 'Mold Breaker'},\n    gender: 'F',\n  },\n  Tinkatuff: {\n    types: ['Fairy', 'Steel'],\n    bs: {hp: 65, at: 55, df: 55, sa: 45, sd: 82, sp: 78},\n    weightkg: 59.1,\n    abilities: {0: 'Mold Breaker'},\n    nfe: true,\n    gender: 'F',\n  },\n  Toedscool: {\n    types: ['Ground', 'Grass'],\n    bs: {hp: 40, at: 40, df: 35, sa: 50, sd: 100, sp: 70},\n    weightkg: 33,\n    abilities: {0: 'Mycelium Might'},\n    nfe: true,\n  },\n  Toedscruel: {\n    types: ['Ground', 'Grass'],\n    bs: {hp: 80, at: 70, df: 65, sa: 80, sd: 120, sp: 100},\n    weightkg: 58,\n    abilities: {0: 'Mycelium Might'},\n  },\n  'Ursaluna': {\n    otherFormes: ['Ursaluna-Bloodmoon'],\n  },\n  'Ursaluna-Bloodmoon': {\n    types: ['Ground', 'Normal'],\n    bs: {hp: 113, at: 70, df: 120, sa: 135, sd: 65, sp: 52},\n    weightkg: 333,\n    abilities: {0: \"Mind's Eye\"},\n    baseSpecies: 'Ursaluna',\n  },\n  Varoom: {\n    types: ['Steel', 'Poison'],\n    bs: {hp: 45, at: 70, df: 63, sa: 30, sd: 45, sp: 47},\n    weightkg: 35,\n    abilities: {0: 'Overcoat'},\n    nfe: true,\n  },\n  Veluza: {\n    types: ['Water', 'Psychic'],\n    bs: {hp: 90, at: 102, df: 73, sa: 78, sd: 65, sp: 70},\n    weightkg: 90,\n    abilities: {0: 'Mold Breaker'},\n  },\n  'Walking Wake': {\n    types: ['Water', 'Dragon'],\n    bs: {hp: 99, at: 83, df: 91, sa: 125, sd: 83, sp: 109},\n    weightkg: 280,\n    gender: 'N',\n    abilities: {0: 'Protosynthesis'},\n  },\n  Wattrel: {\n    types: ['Electric', 'Flying'],\n    bs: {hp: 40, at: 40, df: 35, sa: 55, sd: 40, sp: 70},\n    weightkg: 3.6,\n    abilities: {0: 'Wind Power'},\n    nfe: true,\n  },\n  Wiglett: {\n    types: ['Water'],\n    bs: {hp: 10, at: 55, df: 25, sa: 35, sd: 25, sp: 95},\n    weightkg: 1.8,\n    abilities: {0: 'Gooey'},\n    nfe: true,\n  },\n  'Wo-Chien': {\n    types: ['Dark', 'Grass'],\n    bs: {hp: 85, at: 85, df: 100, sa: 95, sd: 135, sp: 70},\n    weightkg: 74.2,\n    gender: 'N',\n    abilities: {0: 'Tablets of Ruin'},\n  },\n  'Wooper-Paldea': {\n    types: ['Poison', 'Ground'],\n    bs: {hp: 55, at: 45, df: 45, sa: 25, sd: 25, sp: 15},\n    weightkg: 11,\n    abilities: {0: 'Poison Point'},\n    baseSpecies: 'Wooper',\n    nfe: true,\n  },\n  Wugtrio: {\n    types: ['Water'],\n    bs: {hp: 35, at: 100, df: 50, sa: 50, sd: 70, sp: 120},\n    weightkg: 5.4,\n    abilities: {0: 'Gooey'},\n  },\n  // Not a real species\n  'Carry Slot': {\n    types: ['???'],\n    bs: {hp: 5, at: 5, df: 5, sa: 5, sd: 5, sp: 5},\n    weightkg: 1.0,\n    abilities: {0: '(No Ability)'},\n  }\n};\n\nconst SV: {[name: string]: SpeciesData} = extend(true, {}, SS, SV_PATCH, PLA_PATCH);\n\nexport const SPECIES = [{}, RBY, GSC, ADV, DPP, BW, XY, SM, SS, SV];\n\nexport class Species implements I.Species {\n  private readonly gen: I.GenerationNum;\n\n  constructor(gen: I.GenerationNum) {\n    this.gen = gen;\n  }\n\n  get(id: I.ID) {\n    return SPECIES_BY_ID[this.gen][id];\n  }\n\n  *[Symbol.iterator]() {\n    for (const id in SPECIES_BY_ID[this.gen]) {\n      yield this.get(id as I.ID)!;\n    }\n  }\n}\n\nclass Specie implements I.Specie {\n  readonly kind: 'Species';\n  readonly id: I.ID;\n  readonly name: I.SpeciesName;\n  readonly types!: [I.TypeName] | [I.TypeName, I.TypeName];\n  readonly baseStats: Readonly<I.StatsTable>;\n  readonly weightkg!: number; // weight\n  readonly nfe?: boolean;\n  readonly gender?: I.GenderName;\n  readonly otherFormes?: I.SpeciesName[];\n  readonly baseSpecies?: I.SpeciesName;\n  readonly abilities?: {0: I.AbilityName}; // ability\n\n  private static readonly EXCLUDE = new Set(['bs', 'otherFormes']);\n\n  constructor(name: string, data: SpeciesData) {\n    this.kind = 'Species';\n    this.id = toID(name);\n    this.name = name as I.SpeciesName;\n\n    const baseStats: Partial<I.StatsTable> = {};\n    baseStats.hp = data.bs.hp;\n    baseStats.atk = data.bs.at;\n    baseStats.def = data.bs.df;\n    baseStats.spa = gen >= 2 ? data.bs.sa : data.bs.sl;\n    baseStats.spd = gen >= 2 ? data.bs.sd : data.bs.sl;\n    baseStats.spe = data.bs.sp;\n    this.baseStats = baseStats as I.StatsTable;\n    // Hack for getting Gmax pokemon out of existence in Gen 9+\n    if (data.otherFormes) {\n      this.otherFormes = data.otherFormes as I.SpeciesName[];\n      if (gen >= 9 && !['toxtricity', 'urshifu'].includes(this.id)) {\n        this.otherFormes = this.otherFormes.filter(f => !f.endsWith('-Gmax'));\n        if (!this.otherFormes.length) this.otherFormes = undefined;\n        if (this.otherFormes) this.otherFormes = [...new Set(this.otherFormes)];\n      }\n    }\n\n    assignWithout(this, data, Specie.EXCLUDE);\n  }\n}\nconst SPECIES_BY_ID: Array<{[id: string]: Specie}> = [];\n\nlet gen = 0;\nfor (const species of SPECIES) {\n  const map: {[id: string]: Specie} = {};\n  for (const specie in species) {\n    if (gen >= 2 && species[specie].bs.sl) delete species[specie].bs.sl;\n    const m = new Specie(specie, species[specie]);\n    map[m.id] = m;\n  }\n  SPECIES_BY_ID.push(map);\n  gen++;\n}\n","import * as I from './interface';\nimport {toID, extend} from '../util';\n\nexport type TypeChart = {\n  [type in I.TypeName]?: {[type in I.TypeName]?: number};\n};\n\nconst RBY: TypeChart = {\n  '???': {\n    Normal: 1,\n    Grass: 1,\n    Fire: 1,\n    Water: 1,\n    Electric: 1,\n    Ice: 1,\n    Flying: 1,\n    Bug: 1,\n    Poison: 1,\n    Ground: 1,\n    Rock: 1,\n    Fighting: 1,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 1,\n  },\n  Normal: {\n    '???': 1,\n    Normal: 1,\n    Grass: 1,\n    Fire: 1,\n    Water: 1,\n    Electric: 1,\n    Ice: 1,\n    Flying: 1,\n    Bug: 1,\n    Poison: 1,\n    Ground: 1,\n    Rock: 0.5,\n    Fighting: 1,\n    Psychic: 1,\n    Ghost: 0,\n    Dragon: 1,\n  },\n  Grass: {\n    '???': 1,\n    Normal: 1,\n    Grass: 0.5,\n    Fire: 0.5,\n    Water: 2,\n    Electric: 1,\n    Ice: 1,\n    Flying: 0.5,\n    Bug: 0.5,\n    Poison: 0.5,\n    Ground: 2,\n    Rock: 2,\n    Fighting: 1,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 0.5,\n  },\n  Fire: {\n    '???': 1,\n    Normal: 1,\n    Grass: 2,\n    Fire: 0.5,\n    Water: 0.5,\n    Electric: 1,\n    Ice: 2,\n    Flying: 1,\n    Bug: 2,\n    Poison: 1,\n    Ground: 1,\n    Rock: 0.5,\n    Fighting: 1,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 0.5,\n  },\n  Water: {\n    '???': 1,\n    Normal: 1,\n    Grass: 0.5,\n    Fire: 2,\n    Water: 0.5,\n    Electric: 1,\n    Ice: 1,\n    Flying: 1,\n    Bug: 1,\n    Poison: 1,\n    Ground: 2,\n    Rock: 2,\n    Fighting: 1,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 0.5,\n  },\n  Electric: {\n    '???': 1,\n    Normal: 1,\n    Grass: 0.5,\n    Fire: 1,\n    Water: 2,\n    Electric: 0.5,\n    Ice: 1,\n    Flying: 2,\n    Bug: 1,\n    Poison: 1,\n    Ground: 0,\n    Rock: 1,\n    Fighting: 1,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 0.5,\n  },\n  Ice: {\n    '???': 1,\n    Normal: 1,\n    Grass: 2,\n    Fire: 1,\n    Water: 0.5,\n    Electric: 1,\n    Ice: 0.5,\n    Flying: 2,\n    Bug: 1,\n    Poison: 1,\n    Ground: 2,\n    Rock: 1,\n    Fighting: 1,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 2,\n  },\n  Flying: {\n    '???': 1,\n    Normal: 1,\n    Grass: 2,\n    Fire: 1,\n    Water: 1,\n    Electric: 0.5,\n    Ice: 1,\n    Flying: 1,\n    Bug: 2,\n    Poison: 1,\n    Ground: 1,\n    Rock: 0.5,\n    Fighting: 2,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 1,\n  },\n  Bug: {\n    '???': 1,\n    Normal: 1,\n    Grass: 2,\n    Fire: 0.5,\n    Water: 1,\n    Electric: 1,\n    Ice: 1,\n    Flying: 0.5,\n    Bug: 1,\n    Poison: 2,\n    Ground: 1,\n    Rock: 1,\n    Fighting: 0.5,\n    Psychic: 2,\n    Ghost: 0.5,\n    Dragon: 1,\n  },\n  Poison: {\n    '???': 1,\n    Normal: 1,\n    Grass: 2,\n    Fire: 1,\n    Water: 1,\n    Electric: 1,\n    Ice: 1,\n    Flying: 1,\n    Bug: 2,\n    Poison: 0.5,\n    Ground: 0.5,\n    Rock: 0.5,\n    Fighting: 1,\n    Psychic: 1,\n    Ghost: 0.5,\n    Dragon: 1,\n  },\n  Ground: {\n    '???': 1,\n    Normal: 1,\n    Grass: 0.5,\n    Fire: 2,\n    Water: 1,\n    Electric: 2,\n    Ice: 1,\n    Flying: 0,\n    Bug: 0.5,\n    Poison: 2,\n    Ground: 1,\n    Rock: 2,\n    Fighting: 1,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 1,\n  },\n  Rock: {\n    '???': 1,\n    Normal: 1,\n    Grass: 1,\n    Fire: 2,\n    Water: 1,\n    Electric: 1,\n    Ice: 2,\n    Flying: 2,\n    Bug: 2,\n    Poison: 1,\n    Ground: 0.5,\n    Rock: 1,\n    Fighting: 0.5,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 1,\n  },\n  Fighting: {\n    '???': 1,\n    Normal: 2,\n    Grass: 1,\n    Fire: 1,\n    Water: 1,\n    Electric: 1,\n    Ice: 2,\n    Flying: 0.5,\n    Bug: 0.5,\n    Poison: 0.5,\n    Ground: 1,\n    Rock: 2,\n    Fighting: 1,\n    Psychic: 0.5,\n    Ghost: 0,\n    Dragon: 1,\n  },\n  Psychic: {\n    '???': 1,\n    Normal: 1,\n    Grass: 1,\n    Fire: 1,\n    Water: 1,\n    Electric: 1,\n    Ice: 1,\n    Flying: 1,\n    Bug: 1,\n    Poison: 2,\n    Ground: 1,\n    Rock: 1,\n    Fighting: 2,\n    Psychic: 0.5,\n    Ghost: 1,\n    Dragon: 1,\n  },\n  Ghost: {\n    '???': 1,\n    Normal: 0,\n    Grass: 1,\n    Fire: 1,\n    Water: 1,\n    Electric: 1,\n    Ice: 1,\n    Flying: 1,\n    Bug: 1,\n    Poison: 1,\n    Ground: 1,\n    Rock: 1,\n    Fighting: 1,\n    Psychic: 0,\n    Ghost: 2,\n    Dragon: 1,\n  },\n  Dragon: {\n    '???': 1,\n    Normal: 1,\n    Grass: 1,\n    Fire: 1,\n    Water: 1,\n    Electric: 1,\n    Ice: 1,\n    Flying: 1,\n    Bug: 1,\n    Poison: 1,\n    Ground: 1,\n    Rock: 1,\n    Fighting: 1,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 2,\n  },\n};\n\nconst GSC: TypeChart = extend(true, {}, RBY, {\n  '???': {Dark: 1, Steel: 1},\n  Normal: {Dark: 1, Steel: 0.5},\n  Grass: {Dark: 1, Steel: 0.5},\n  Fire: {Dark: 1, Steel: 2},\n  Water: {Dark: 1, Steel: 1},\n  Electric: {Dark: 1, Steel: 1},\n  Ice: {Fire: 0.5, Dark: 1, Steel: 0.5},\n  Flying: {Dark: 1, Steel: 0.5},\n  Bug: {Poison: 0.5, Dark: 2, Steel: 0.5},\n  Poison: {Bug: 1, Dark: 1, Steel: 0},\n  Ground: {Dark: 1, Steel: 2},\n  Rock: {Dark: 1, Steel: 0.5},\n  Fighting: {Dark: 2, Steel: 2},\n  Psychic: {Dark: 0, Steel: 0.5},\n  Ghost: {Psychic: 2, Dark: 0.5, Steel: 0.5},\n  Dragon: {Dark: 1, Steel: 0.5},\n  Dark: {\n    '???': 1,\n    Normal: 1,\n    Grass: 1,\n    Fire: 1,\n    Water: 1,\n    Electric: 1,\n    Ice: 1,\n    Flying: 1,\n    Bug: 1,\n    Poison: 1,\n    Ground: 1,\n    Rock: 1,\n    Fighting: 0.5,\n    Psychic: 2,\n    Ghost: 2,\n    Dragon: 1,\n    Dark: 0.5,\n    Steel: 0.5,\n  },\n  Steel: {\n    '???': 1,\n    Normal: 1,\n    Grass: 1,\n    Fire: 0.5,\n    Water: 0.5,\n    Electric: 0.5,\n    Ice: 2,\n    Flying: 1,\n    Bug: 1,\n    Poison: 1,\n    Ground: 1,\n    Rock: 2,\n    Fighting: 1,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 1,\n    Dark: 1,\n    Steel: 0.5,\n  },\n});\n\nconst ADV = GSC;\n\nconst DPP = GSC;\n\nconst BW = GSC;\n\nconst XY: TypeChart = extend(true, {}, GSC, {\n  '???': {Fairy: 1},\n  Normal: {Fairy: 1},\n  Grass: {Fairy: 1},\n  Fire: {Fairy: 1},\n  Water: {Fairy: 1},\n  Electric: {Fairy: 1},\n  Ice: {Fairy: 1},\n  Flying: {Fairy: 1},\n  Bug: {Fairy: 0.5},\n  Poison: {Fairy: 2},\n  Ground: {Fairy: 1},\n  Rock: {Fairy: 1},\n  Fighting: {Fairy: 0.5},\n  Psychic: {Fairy: 1},\n  Ghost: {Steel: 1, Fairy: 1},\n  Dragon: {Fairy: 0},\n  Dark: {Steel: 1, Fairy: 0.5},\n  Steel: {Fairy: 2},\n  Fairy: {\n    '???': 1,\n    Normal: 1,\n    Grass: 1,\n    Fire: 0.5,\n    Water: 1,\n    Electric: 1,\n    Ice: 1,\n    Flying: 1,\n    Bug: 1,\n    Poison: 0.5,\n    Ground: 1,\n    Rock: 1,\n    Fighting: 2,\n    Psychic: 1,\n    Ghost: 1,\n    Dragon: 2,\n    Dark: 2,\n    Steel: 0.5,\n    Fairy: 1,\n  },\n});\n\nconst SM = XY;\n\nconst SS = SM;\n\nconst SV: TypeChart = extend(true, {}, SS, {\n  '???': {Stellar: 1},\n  Normal: {Stellar: 1},\n  Grass: {Stellar: 1},\n  Fire: {Stellar: 1},\n  Water: {Stellar: 1},\n  Electric: {Stellar: 1},\n  Ice: {Stellar: 1},\n  Flying: {Stellar: 1},\n  Bug: {Stellar: 1},\n  Poison: {Stellar: 1},\n  Ground: {Stellar: 1},\n  Rock: {Stellar: 1},\n  Fighting: {Stellar: 1},\n  Psychic: {Stellar: 1},\n  Ghost: {Stellar: 1},\n  Dragon: {Stellar: 1},\n  Dark: {Stellar: 1},\n  Steel: {Stellar: 1},\n  Fairy: {Stellar: 1},\n  Stellar: {\n    '???': 1,\n  },\n});\n\nexport const TYPE_CHART = [{}, RBY, GSC, ADV, DPP, BW, XY, SM, SS, SV];\n\nexport class Types implements I.Types {\n  private readonly gen: I.GenerationNum;\n\n  constructor(gen: I.GenerationNum) {\n    this.gen = gen;\n  }\n\n  get(id: I.ID) {\n    // toID('???') => '', as do many other things, but returning the '???' type seems appropriate :)\n    return TYPES_BY_ID[this.gen][id];\n  }\n\n  *[Symbol.iterator]() {\n    for (const id in TYPES_BY_ID[this.gen]) {\n      yield this.get(id as I.ID)!;\n    }\n  }\n}\n\nclass Type implements I.Type {\n  readonly kind: 'Type';\n  readonly id: I.ID;\n  readonly name: I.TypeName;\n  readonly effectiveness: Readonly<{[type in I.TypeName]?: I.TypeEffectiveness}>;\n\n  constructor(name: string, effectiveness: TypeChart[I.TypeName]) {\n    this.kind = 'Type';\n    this.id = toID(name);\n    this.name = name as I.TypeName;\n    this.effectiveness = effectiveness! as {[type in I.TypeName]?: I.TypeEffectiveness};\n  }\n}\n\nconst TYPES_BY_ID: Array<{[id: string]: Type}> = [];\n\nfor (const typeChart of TYPE_CHART) {\n  const map: {[id: string]: Type} = {};\n  for (const type in typeChart) {\n    const t = new Type(type, {...typeChart[type as I.TypeName]!});\n    map[t.id] = t;\n  }\n  TYPES_BY_ID.push(map);\n}\n","import * as I from './interface';\nimport {toID} from '../util';\n\nexport const NATURES: {[name: string]: [I.StatID, I.StatID]} = {\n  Adamant: ['atk', 'spa'],\n  Bashful: ['spa', 'spa'],\n  Bold: ['def', 'atk'],\n  Brave: ['atk', 'spe'],\n  Calm: ['spd', 'atk'],\n  Careful: ['spd', 'spa'],\n  Docile: ['def', 'def'],\n  Gentle: ['spd', 'def'],\n  Hardy: ['atk', 'atk'],\n  Hasty: ['spe', 'def'],\n  Impish: ['def', 'spa'],\n  Jolly: ['spe', 'spa'],\n  Lax: ['def', 'spd'],\n  Lonely: ['atk', 'def'],\n  Mild: ['spa', 'def'],\n  Modest: ['spa', 'atk'],\n  Naive: ['spe', 'spd'],\n  Naughty: ['atk', 'spd'],\n  Quiet: ['spa', 'spe'],\n  Quirky: ['spd', 'spd'],\n  Rash: ['spa', 'spd'],\n  Relaxed: ['def', 'spe'],\n  Sassy: ['spd', 'spe'],\n  Serious: ['spe', 'spe'],\n  Timid: ['spe', 'atk'],\n};\n\nexport class Natures implements I.Natures {\n  get(id: I.ID) {\n    return NATURES_BY_ID[id];\n  }\n\n  *[Symbol.iterator]() {\n    for (const id in NATURES_BY_ID) {\n      yield this.get(id as I.ID)!;\n    }\n  }\n}\n\nclass Nature implements I.Nature {\n  readonly kind: 'Nature';\n  readonly id: I.ID;\n  readonly name: I.NatureName;\n  readonly plus?: I.StatID;\n  readonly minus?: I.StatID;\n\n  constructor(name: string, [plus, minus]: [I.StatID, I.StatID]) {\n    this.kind = 'Nature';\n    this.id = toID(name);\n    this.name = name as I.NatureName;\n    this.plus = plus;\n    this.minus = minus;\n  }\n}\n\nconst NATURES_BY_ID: {[id: string]: Nature} = {};\n\nfor (const nature in NATURES) {\n  const n = new Nature(nature, NATURES[nature] as [I.StatID, I.StatID]);\n  NATURES_BY_ID[n.id] = n;\n}\n","import * as I from './interface';\n\nimport {Abilities} from './abilities';\nimport {Items} from './items';\nimport {Moves} from './moves';\nimport {Species} from './species';\nimport {Types} from './types';\nimport {Natures} from './natures';\n\nexport const Generations: I.Generations = new (class {\n  get(gen: I.GenerationNum) {\n    return new Generation(gen);\n  }\n})();\n\nclass Generation implements I.Generation {\n  num: I.GenerationNum;\n\n  abilities: Abilities;\n  items: Items;\n  moves: Moves;\n  species: Species;\n  types: Types;\n  natures: Natures;\n\n  constructor(num: I.GenerationNum) {\n    this.num = num;\n\n    this.abilities = new Abilities(num);\n    this.items = new Items(num);\n    this.moves = new Moves(num);\n    this.species = new Species(num);\n    this.types = new Types(num);\n    this.natures = new Natures();\n  }\n}\n","import {State} from './state';\nimport {GameType, Weather, Terrain} from './data/interface';\n\nexport class Field implements State.Field {\n  gameType: GameType;\n  weather?: Weather;\n  weatherTurnsRemaining?: number;\n  terrain?: Terrain;\n  terrainTurnsRemaining?: number;\n  isMagicRoom: number;\n  isWonderRoom: number;\n  isGravity: number;\n  isAuraBreak?: boolean;\n  isFairyAura?: boolean;\n  isDarkAura?: boolean;\n  isBeadsOfRuin?: boolean;\n  isSwordOfRuin?: boolean;\n  isTabletsOfRuin?: boolean;\n  isVesselOfRuin?: boolean;\n  isTrickRoom: number;\n  isCloudNine?: boolean;\n  isTeraformZero?: boolean;\n  attackerSide: Side;\n  defenderSide: Side;\n\n  constructor(field: Partial<State.Field> = {}) {\n    this.gameType = field.gameType || 'Singles';\n    this.terrain = field.terrain;\n    this.terrainTurnsRemaining = field.terrainTurnsRemaining;\n    this.weather = field.weather;\n    this.weatherTurnsRemaining = field.weatherTurnsRemaining;\n    this.isMagicRoom = field.isMagicRoom || 0;\n    this.isWonderRoom = field.isWonderRoom || 0;\n    this.isGravity = field.isGravity || 0;\n    this.isAuraBreak = field.isAuraBreak || false;\n    this.isFairyAura = field.isFairyAura || false;\n    this.isDarkAura = field.isDarkAura || false;\n    this.isBeadsOfRuin = field.isBeadsOfRuin || false;\n    this.isSwordOfRuin = field.isSwordOfRuin || false;\n    this.isTabletsOfRuin = field.isTabletsOfRuin || false;\n    this.isVesselOfRuin = field.isVesselOfRuin || false;\n    this.isTrickRoom = field.isTrickRoom || 0;\n    this.isCloudNine = field.isCloudNine || false;\n    this.isTeraformZero = field.isTeraformZero || false;\n\n    this.attackerSide = new Side(field.attackerSide || {});\n    this.defenderSide = new Side(field.defenderSide || {});\n  }\n\n  hasWeather(...weathers: Weather[]) {\n    if (this.isCloudNine) { return false }; \n    return !!(this.weather && weathers.includes(this.weather));\n  }\n\n  hasTerrain(...terrains: Terrain[]) {\n    if (this.isTeraformZero) { return false };\n    return !!(this.terrain && terrains.includes(this.terrain));\n  }\n\n  swap() {\n    [this.attackerSide, this.defenderSide] = [this.defenderSide, this.attackerSide];\n    return this;\n  }\n\n  clone() {\n    return new Field({\n      gameType: this.gameType,\n      weather: this.weather,\n      weatherTurnsRemaining: this.weatherTurnsRemaining,\n      terrain: this.terrain,\n      terrainTurnsRemaining: this.terrainTurnsRemaining,\n      isMagicRoom: this.isMagicRoom,\n      isWonderRoom: this.isWonderRoom,\n      isGravity: this.isGravity,\n      attackerSide: this.attackerSide,\n      defenderSide: this.defenderSide,\n      isAuraBreak: this.isAuraBreak,\n      isDarkAura: this.isDarkAura,\n      isFairyAura: this.isFairyAura,\n      isBeadsOfRuin: this.isBeadsOfRuin,\n      isSwordOfRuin: this.isSwordOfRuin,\n      isTabletsOfRuin: this.isTabletsOfRuin,\n      isVesselOfRuin: this.isVesselOfRuin,\n      isTrickRoom: this.isTrickRoom,\n      isCloudNine: this.isCloudNine,\n      isTeraformZero: this.isTeraformZero,\n    });\n  }\n}\n\nexport class Side implements State.Side {\n  spikes: number;\n  steelsurge: boolean;\n  vinelash: boolean;\n  wildfire: boolean;\n  cannonade: boolean;\n  volcalith: boolean;\n  isSR: boolean;\n  isReflect: number;\n  isLightScreen: number;\n  isDefCheered: number\n  isProtected: boolean;\n  isWideGuard: boolean;\n  isQuickGuard: boolean;\n  isSeeded: boolean;\n  isForesight: boolean;\n  isTailwind: number;\n  isHelpingHand: boolean;\n  isAtkCheered: number;\n  isFlowerGift: boolean;\n  isDazzling: boolean;\n  isFriendGuard: boolean;\n  friendGuards: number;\n  isAuroraVeil: number;\n  isBattery: boolean;\n  batteries: number;\n  isPowerSpot: boolean;\n  powerSpots: number;\n  steelySpirits: number;\n  isSwitching?: 'out' | 'in';\n  isCharged: boolean;\n  isMist: number;\n  isSafeguard: number;\n  isAromaVeil: boolean;\n  isFlowerVeil: boolean;\n\n  constructor(side: State.Side = {}) {\n    this.spikes = side.spikes || 0;\n    this.steelsurge = !!side.steelsurge;\n    this.vinelash = !!side.vinelash;\n    this.wildfire = !!side.wildfire;\n    this.cannonade = !!side.cannonade;\n    this.volcalith = !!side.volcalith;\n    this.isSR = !!side.isSR;\n    this.isReflect = side.isReflect || 0;\n    this.isLightScreen = side.isLightScreen || 0;\n    this.isDefCheered = side.isDefCheered || 0;\n    this.isProtected = !!side.isProtected;\n    this.isWideGuard = !!side.isWideGuard;\n    this.isQuickGuard = !!side.isQuickGuard;\n    this.isSeeded = !!side.isSeeded;\n    this.isForesight = !!side.isForesight;\n    this.isTailwind = side.isTailwind || 0;\n    this.isHelpingHand = !!side.isHelpingHand;\n    this.isAtkCheered = side.isAtkCheered || 0;\n    this.isFlowerGift = !!side.isFlowerGift;\n    this.isDazzling = !!side.isDazzling;\n    this.isFriendGuard = !!side.isFriendGuard;\n    this.friendGuards = side.friendGuards || 0;\n    this.isAuroraVeil = side.isAuroraVeil || 0;\n    this.isBattery = !!side.isBattery;\n    this.batteries = side.batteries || 0;\n    this.isPowerSpot = !!side.isPowerSpot;\n    this.powerSpots = side.powerSpots || 0;\n    this.steelySpirits = side.steelySpirits || 0;\n    this.isSwitching = side.isSwitching;\n    this.isCharged = !!side.isCharged;\n    this.isMist = side.isMist || 0;\n    this.isSafeguard = side.isSafeguard || 0;\n    this.isAromaVeil = !!side.isAromaVeil;\n    this.isFlowerVeil = !!side.isFlowerVeil;\n  }\n\n  clone() {\n    return new Side(this);\n  }\n}\n","import {Generation, TypeName, StatID} from './data/interface';\nimport {toID} from './util';\n\nexport const SEED_BOOSTED_STAT: {[item: string]: StatID} = {\n  'Electric Seed': 'def',\n  'Grassy Seed': 'def',\n  'Misty Seed': 'spd',\n  'Psychic Seed': 'spd',\n};\n\nexport function getItemBoostType(item: string | undefined) {\n  switch (item) {\n  case 'Draco Plate':\n  case 'Dragon Fang':\n    return 'Dragon';\n  case 'Dread Plate':\n  case 'Black Glasses':\n    return 'Dark';\n  case 'Earth Plate':\n  case 'Soft Sand':\n    return 'Ground';\n  case 'Fist Plate':\n  case 'Black Belt':\n    return 'Fighting';\n  case 'Flame Plate':\n  case 'Charcoal':\n    return 'Fire';\n  case 'Icicle Plate':\n  case 'Never-Melt Ice':\n    return 'Ice';\n  case 'Insect Plate':\n  case 'Silver Powder':\n    return 'Bug';\n  case 'Iron Plate':\n  case 'Metal Coat':\n    return 'Steel';\n  case 'Meadow Plate':\n  case 'Rose Incense':\n  case 'Miracle Seed':\n    return 'Grass';\n  case 'Mind Plate':\n  case 'Odd Incense':\n  case 'Twisted Spoon':\n    return 'Psychic';\n  case 'Fairy Feather':\n  case 'Pixie Plate':\n    return 'Fairy';\n  case 'Sky Plate':\n  case 'Sharp Beak':\n    return 'Flying';\n  case 'Splash Plate':\n  case 'Sea Incense':\n  case 'Wave Incense':\n  case 'Mystic Water':\n    return 'Water';\n  case 'Spooky Plate':\n  case 'Spell Tag':\n    return 'Ghost';\n  case 'Stone Plate':\n  case 'Rock Incense':\n  case 'Hard Stone':\n    return 'Rock';\n  case 'Toxic Plate':\n  case 'Poison Barb':\n    return 'Poison';\n  case 'Zap Plate':\n  case 'Magnet':\n    return 'Electric';\n  case 'Silk Scarf':\n  case 'Pink Bow':\n  case 'Polkadot Bow':\n    return 'Normal';\n  default:\n    return undefined;\n  }\n}\n\nexport function getBerryResistType(berry: string | undefined) {\n  switch (berry) {\n  case 'Chilan Berry':\n    return 'Normal';\n  case 'Occa Berry':\n    return 'Fire';\n  case 'Passho Berry':\n    return 'Water';\n  case 'Wacan Berry':\n    return 'Electric';\n  case 'Rindo Berry':\n    return 'Grass';\n  case 'Yache Berry':\n    return 'Ice';\n  case 'Chople Berry':\n    return 'Fighting';\n  case 'Kebia Berry':\n    return 'Poison';\n  case 'Shuca Berry':\n    return 'Ground';\n  case 'Coba Berry':\n    return 'Flying';\n  case 'Payapa Berry':\n    return 'Psychic';\n  case 'Tanga Berry':\n    return 'Bug';\n  case 'Charti Berry':\n    return 'Rock';\n  case 'Kasib Berry':\n    return 'Ghost';\n  case 'Haban Berry':\n    return 'Dragon';\n  case 'Colbur Berry':\n    return 'Dark';\n  case 'Babiri Berry':\n    return 'Steel';\n  case 'Roseli Berry':\n    return 'Fairy';\n  default:\n    return undefined;\n  }\n}\n\nconst FLING_120 = new Set([\n  'TR24',\n  'TR28',\n  'TR34',\n  'TR39',\n  'TR53',\n  'TR55',\n  'TR64',\n  'TR66',\n  'TR72',\n  'TR73',\n]);\n\nconst FLING_100 = new Set([\n  'Hard Stone',\n  'Room Service',\n  'Claw Fossil',\n  'Dome Fossil',\n  'Helix Fossil',\n  'Old Amber',\n  'Root Fossil',\n  'Armor Fossil',\n  'Old Amber',\n  'Fossilized Bird',\n  'Fossilized Dino',\n  'Fossilized Drake',\n  'Fossilized Fish',\n  'Plume Fossil',\n  'Jaw Fossil',\n  'Cover Fossil',\n  'Sail Fossil',\n  'Rare Bone',\n  'Skull Fossil',\n  'TR10',\n  'TR31',\n  'TR75',\n]);\n\nconst FLING_90 = new Set([\n  'Deep Sea Tooth',\n  'Thick Club',\n  'TR02',\n  'TR04',\n  'TR05',\n  'TR08',\n  'TR11',\n  'TR22',\n  'TR35',\n  'TR42',\n  'TR45',\n  'TR50',\n  'TR61',\n  'TR65',\n  'TR67',\n  'TR86',\n  'TR90',\n  'TR96',\n]);\n\nconst FLING_85 = new Set(['TR01', 'TR41', 'TR62', 'TR93', 'TR97', 'TR98']);\n\nconst FLING_80 = new Set([\n  'Assault Vest',\n  'Blunder Policy',\n  'Chipped Pot',\n  'Cracked Pot',\n  'Heavy-Duty Boots',\n  'Weakness Policy',\n  'Quick Claw',\n  'Dawn Stone',\n  'Dusk Stone',\n  'Electirizer',\n  'Magmarizer',\n  'Oval Stone',\n  'Protector',\n  'Sachet',\n  'Whipped Dream',\n  'Razor Claw',\n  'Shiny Stone',\n  'TR16',\n  'TR18',\n  'TR19',\n  'TR25',\n  'TR32',\n  'TR33',\n  'TR47',\n  'TR56',\n  'TR57',\n  'TR58',\n  'TR59',\n  'TR60',\n  'TR63',\n  'TR69',\n  'TR70',\n  'TR74',\n  'TR84',\n  'TR87',\n  'TR92',\n  'TR95',\n  'TR99',\n]);\n\nconst FLING_70 = new Set([\n  'Poison Barb',\n  'Dragon Fang',\n  'Power Anklet',\n  'Power Band',\n  'Power Belt',\n  'Power Bracer',\n  'Power Lens',\n  'Power Weight',\n]);\n\nconst FLING_60 = new Set([\n  'Adamant Orb',\n  'Damp Rock',\n  'Heat Rock',\n  'Leek',\n  'Lustrous Orb',\n  'Macho Brace',\n  'Rocky Helmet',\n  'Stick',\n  'Utility Umbrella',\n  'Terrain Extender',\n]);\nconst FLING_30 = new Set([\n  'Absorb Bulb',\n  'Black Belt',\n  'Black Sludge',\n  'Black Glasses',\n  'Cell Battery',\n  'Charcoal',\n  'Deep Sea Scale',\n  'Flame Orb',\n  'King\\'s Rock',\n  'Life Orb',\n  'Light Ball',\n  'Light Clay',\n  'Magnet',\n  'Metal Coat',\n  'Miracle Seed',\n  'Mystic Water',\n  'Never-Melt Ice',\n  'Razor Fang',\n  'Scope Lens',\n  'Soul Dew',\n  'Spell Tag',\n  'Sweet Apple',\n  'Tart Apple',\n  'Throat Spray',\n  'Toxic Orb',\n  'Twisted Spoon',\n  'Dragon Scale',\n  'Energy Powder',\n  'Fire Stone',\n  'Leaf Stone',\n  'Moon Stone',\n  'Sun Stone',\n  'Thunder Stone',\n  'Up-Grade',\n  'Water Stone',\n  'Berry Juice',\n  'Black Sludge',\n  'Prism Scale',\n  'Ice Stone',\n  'Gold Bottle Cap',\n  'Luminous Moss',\n  'Eject Button',\n  'Snowball',\n  'Bottle Cap',\n]);\nconst FLING_10 = new Set([\n  'Air Balloon',\n  'Berry Sweet',\n  'Choice Band',\n  'Choice Scarf',\n  'Choice Specs',\n  'Clover Sweet',\n  'Destiny Knot',\n  'Electric Seed',\n  'Expert Belt',\n  'Flower Sweet',\n  'Focus Band',\n  'Focus Sash',\n  'Full Incense',\n  'Grassy Seed',\n  'Lagging Tail',\n  'Lax Incense',\n  'Leftovers',\n  'Love Sweet',\n  'Mental Herb',\n  'Metal Powder',\n  'Mint Berry',\n  'Miracle Berry',\n  'Misty Seed',\n  'Muscle Band',\n  'Power Herb',\n  'Psychic Seed',\n  'Odd Incense',\n  'Quick Powder',\n  'Reaper Cloth',\n  'Red Card',\n  'Ribbon Sweet',\n  'Ring Target',\n  'Rock Incense',\n  'Rose Incense',\n  'Sea Incense',\n  'Shed Shell',\n  'Silk Scarf',\n  'Silver Powder',\n  'Smooth Rock',\n  'Soft Sand',\n  'Soothe Bell',\n  'Star Sweet',\n  'Strawberry Sweet',\n  'Wave Incense',\n  'White Herb',\n  'Wide Lens',\n  'Wise Glasses',\n  'Zoom Lens',\n  'Silver Powder',\n  'Power Herb',\n  'TR00',\n  'TR07',\n  'TR12',\n  'TR13',\n  'TR14',\n  'TR17',\n  'TR20',\n  'TR21',\n  'TR23',\n  'TR26',\n  'TR27',\n  'TR29',\n  'TR30',\n  'TR37',\n  'TR38',\n  'TR40',\n  'TR44',\n  'TR46',\n  'TR48',\n  'TR49',\n  'TR51',\n  'TR52',\n  'TR54',\n  'TR68',\n  'TR76',\n  'TR77',\n  'TR79',\n  'TR80',\n  'TR83',\n  'TR85',\n  'TR88',\n  'TR91',\n]);\n\n// TODO: move this data to the data files instead.\nexport function getFlingPower(item?: string) {\n  if (!item) return 0;\n  if (['Big Nugget', 'Iron Ball', 'TR43', 'TR71'].includes(item)) return 130;\n  if (FLING_120.has(item)) return 85;\n  if (['TR03', 'TR06', 'TR09', 'TR15', 'TR89'].includes(item)) return 110;\n  if (FLING_100.has(item)) return 100;\n  if (['TR36', 'TR78', 'TR81', 'TR94'].includes(item)) return 95;\n  if (item.includes('Plate') || FLING_90.has(item)) return 90;\n  if (FLING_85.has(item)) return 85;\n  if (FLING_80.has(item)) return 80;\n  if (FLING_70.has(item)) return 70;\n  if (FLING_60.has(item)) return 60;\n  if (['Eject Pack', 'Sharp Beak', 'Dubious Disc'].includes(item)) return 50;\n  if (['Icy Rock', 'Eviolite', 'Lucky Punch'].includes(item)) return 40;\n  if (FLING_30.has(item)) return 30;\n  if (item === 'TR82') return 20;\n  if (item.includes('Berry') || FLING_10.has(item)) return 10;\n  return 0;\n}\n\nexport function getNaturalGift(gen: Generation, item: string) {\n  const gift = gen.items.get(toID(item))?.naturalGift;\n  return gift ? {t: gift.type, p: gift.basePower} : {t: 'Normal' as TypeName, p: 1};\n}\n\nexport function getTechnoBlast(item: string) {\n  switch (item) {\n  case 'Burn Drive':\n    return 'Fire';\n  case 'Chill Drive':\n    return 'Ice';\n  case 'Douse Drive':\n    return 'Water';\n  case 'Shock Drive':\n    return 'Electric';\n  default:\n    return undefined;\n  }\n}\n\nexport function getMultiAttack(item: string) {\n  if (item.includes('Memory')) {\n    return item.substring(0, item.indexOf(' ')) as TypeName;\n  }\n  return undefined;\n}\n","import {Natures, Generation, TypeName, StatID, StatsTable} from './data/interface';\nimport {toID} from './util';\n\nconst RBY: Array<StatID | 'spc'> = ['hp', 'atk', 'def', 'spc', 'spe', 'acc', 'eva'];\nconst GSC: StatID[] = ['hp', 'atk', 'def', 'spa', 'spd', 'spe', 'acc', 'eva'];\nconst ADV: StatID[] = GSC;\nconst DPP: StatID[] = GSC;\nconst BW: StatID[] = GSC;\nconst XY: StatID[] = GSC;\nconst SM: StatID[] = GSC;\nconst SS: StatID[] = GSC;\nconst SV: StatID[] = GSC;\n\nexport const STATS: Array<Array<StatID | 'spc'> | StatID[]> =\n  [[], RBY, GSC, ADV, DPP, BW, XY, SM, SS, SV];\n\n  type HPTypeName = Exclude<TypeName, 'Normal' | 'Fairy' | 'Stellar' | '???'>;\n\nconst HP_TYPES = [\n  'Fighting', 'Flying', 'Poison', 'Ground', 'Rock', 'Bug', 'Ghost', 'Steel',\n  'Fire', 'Water', 'Grass', 'Electric', 'Psychic', 'Ice', 'Dragon', 'Dark',\n];\n\nconst HP: {[type in HPTypeName]: {ivs: Partial<StatsTable>; dvs: Partial<StatsTable>}} = {\n  Bug: {ivs: {atk: 30, def: 30, spd: 30}, dvs: {atk: 13, def: 13}},\n  Dark: {ivs: {}, dvs: {}},\n  Dragon: {ivs: {atk: 30}, dvs: {def: 14}},\n  Electric: {ivs: {spa: 30}, dvs: {atk: 14}},\n  Fighting: {ivs: {def: 30, spa: 30, spd: 30, spe: 30}, dvs: {atk: 12, def: 12}},\n  Fire: {ivs: {atk: 30, spa: 30, spe: 30}, dvs: {atk: 14, def: 12}},\n  Flying: {ivs: {hp: 30, atk: 30, def: 30, spa: 30, spd: 30}, dvs: {atk: 12, def: 13}},\n  Ghost: {ivs: {def: 30, spd: 30}, dvs: {atk: 13, def: 14}},\n  Grass: {ivs: {atk: 30, spa: 30}, dvs: {atk: 14, def: 14}},\n  Ground: {ivs: {spa: 30, spd: 30}, dvs: {atk: 12}},\n  Ice: {ivs: {atk: 30, def: 30}, dvs: {def: 13}},\n  Poison: {ivs: {def: 30, spa: 30, spd: 30}, dvs: {atk: 12, def: 14}},\n  Psychic: {ivs: {atk: 30, spe: 30}, dvs: {def: 12}},\n  Rock: {ivs: {def: 30, spd: 30, spe: 30}, dvs: {atk: 13, def: 12}},\n  Steel: {ivs: {spd: 30}, dvs: {atk: 13}},\n  Water: {ivs: {atk: 30, def: 30, spa: 30}, dvs: {atk: 14, def: 13}},\n};\n\nexport const Stats = new (class {\n  displayStat(stat: StatID | 'spc') {\n    switch (stat) {\n    case 'hp':\n      return 'HP';\n    case 'atk':\n      return 'Atk';\n    case 'def':\n      return 'Def';\n    case 'spa':\n      return 'SpA';\n    case 'spd':\n      return 'SpD';\n    case 'spe':\n      return 'Spe';\n    case 'spc':\n      return 'Spc';\n    default:\n      throw new Error(`unknown stat ${stat}`);\n    }\n  }\n\n  shortForm(stat: StatID | 'spc') {\n    switch (stat) {\n    case 'hp':\n      return 'hp';\n    case 'atk':\n      return 'at';\n    case 'def':\n      return 'df';\n    case 'spa':\n      return 'sa';\n    case 'spd':\n      return 'sd';\n    case 'spe':\n      return 'sp';\n    case 'spc':\n      return 'sl';\n    }\n  }\n\n  getHPDV(ivs: {atk: number; def: number; spe: number; spc: number}) {\n    return (\n      (this.IVToDV(ivs.atk) % 2) * 8 +\n      (this.IVToDV(ivs.def) % 2) * 4 +\n      (this.IVToDV(ivs.spe) % 2) * 2 +\n      (this.IVToDV(ivs.spc) % 2)\n    );\n  }\n\n  IVToDV(iv: number) {\n    return Math.floor(iv / 2);\n  }\n\n  DVToIV(dv: number) {\n    return dv * 2;\n  }\n\n  DVsToIVs(dvs: Readonly<Partial<StatsTable>>) {\n    const ivs: Partial<StatsTable> = {};\n    let dv: StatID;\n    for (dv in dvs) {\n      ivs[dv] = Stats.DVToIV(dvs[dv]!);\n    }\n    return ivs;\n  }\n\n  calcStat(\n    gen: Generation,\n    stat: StatID,\n    base: number,\n    iv: number,\n    ev: number,\n    level: number,\n    nature?: string\n  ) {\n    if (gen.num < 1 || gen.num > 9) throw new Error(`Invalid generation ${gen.num}`);\n    if (gen.num < 3) return this.calcStatRBY(stat, base, iv, level);\n    return this.calcStatADV(gen.natures, stat, base, iv, ev, level, nature);\n  }\n\n  calcStatADV(\n    natures: Natures,\n    stat: StatID,\n    base: number,\n    iv: number,\n    ev: number,\n    level: number,\n    nature?: string\n  ) {\n    if (stat === 'hp') {\n      return base === 1\n        ? base\n        : Math.floor(((base * 2 + iv + Math.floor(ev / 4)) * level) / 100) + level + 10;\n    } else {\n      let mods: [StatID?, StatID?] = [undefined, undefined];\n      if (nature) {\n        const nat = natures.get(toID(nature));\n        mods = [nat?.plus, nat?.minus];\n      }\n      const n =\n        mods[0] === stat && mods[1] === stat\n          ? 1\n          : mods[0] === stat\n            ? 1.1\n            : mods[1] === stat\n              ? 0.9\n              : 1;\n\n      return Math.floor((Math.floor(((base * 2 + iv + Math.floor(ev / 4)) * level) / 100) + 5) * n);\n    }\n  }\n\n  calcStatRBY(stat: StatID, base: number, iv: number, level: number) {\n    return this.calcStatRBYFromDV(stat, base, this.IVToDV(iv), level);\n  }\n\n  calcStatRBYFromDV(stat: StatID, base: number, dv: number, level: number) {\n    if (stat === 'hp') {\n      return Math.floor((((base + dv) * 2 + 63) * level) / 100) + level + 10;\n    } else {\n      return Math.floor((((base + dv) * 2 + 63) * level) / 100) + 5;\n    }\n  }\n\n  getHiddenPowerIVs(gen: Generation, hpType: HPTypeName) {\n    const hp = HP[hpType];\n    if (!hp) return undefined;\n    return gen.num === 2 ? Stats.DVsToIVs(hp.dvs) : hp.ivs;\n  }\n\n  getHiddenPower(gen: Generation, ivs: StatsTable) {\n    const tr = (num: number, bits = 0) => {\n      if (bits) return (num >>> 0) % (2 ** bits);\n      return num >>> 0;\n    };\n    const stats = {hp: 31, atk: 31, def: 31, spe: 31, spa: 31, spd: 31};\n    if (gen.num <= 2) {\n      // Gen 2 specific Hidden Power check. IVs are still treated 0-31 so we get them 0-15\n      const atkDV = tr(ivs.atk / 2);\n      const defDV = tr(ivs.def / 2);\n      const speDV = tr(ivs.spe / 2);\n      const spcDV = tr(ivs.spa / 2);\n      return {\n        type: HP_TYPES[4 * (atkDV % 4) + (defDV % 4)] as TypeName,\n        power: tr(\n          (5 * ((spcDV >> 3) +\n            (2 * (speDV >> 3)) +\n            (4 * (defDV >> 3)) +\n            (8 * (atkDV >> 3))) +\n            (spcDV % 4)) / 2 + 31\n        ),\n      };\n    } else {\n      // Hidden Power check for Gen 3 onwards\n      let hpTypeX = 0;\n      let hpPowerX = 0;\n      let i = 1;\n      for (const s in stats) {\n        hpTypeX += i * (ivs[s as StatID]! % 2);\n        hpPowerX += i * (tr(ivs[s as StatID]! / 2) % 2);\n        i *= 2;\n      }\n      return {\n        type: HP_TYPES[tr(hpTypeX * 15 / 63)] as TypeName,\n        // After Gen 6, Hidden Power is always 60 base power\n        power: (gen.num && gen.num < 6) ? tr(hpPowerX * 40 / 63) + 30 : 60,\n      };\n    }\n  }\n})();\n","import {\n  Generation,\n  ID,\n  ItemName,\n  MoveCategory,\n  NatureName,\n  StatID,\n  StatsTable,\n  Terrain,\n  TypeName,\n  Weather,\n} from '../data/interface';\nimport {toID} from '../util';\nimport {Field, Side} from '../field';\nimport {Move} from '../move';\nimport {Pokemon} from '../pokemon';\nimport {Stats} from '../stats';\nimport {RawDesc} from '../desc';\n\nconst EV_ITEMS = [\n  'Macho Brace',\n  'Power Anklet',\n  'Power Band',\n  'Power Belt',\n  'Power Bracer',\n  'Power Lens',\n  'Power Weight',\n];\n\nexport function isGrounded(pokemon: Pokemon, field: Field) {\n  return (field.isGravity || pokemon.hasItem('Iron Ball') || pokemon.isIngrain || pokemon.isSmackDown ||\n    (!pokemon.hasType('Flying') &&\n      !pokemon.hasAbility('Levitate') &&\n      !pokemon.hasItem('Air Balloon')));\n}\n\nexport function getModifiedStat(stat: number, mod: number, gen?: Generation) {\n  if (gen && gen.num < 3) {\n    if (mod >= 0) {\n      const pastGenBoostTable = [1, 1.5, 2, 2.5, 3, 3.5, 4];\n      stat = Math.floor(stat * pastGenBoostTable[mod]);\n    } else {\n      const numerators = [100, 66, 50, 40, 33, 28, 25];\n      stat = Math.floor((stat * numerators[-mod]) / 100);\n    }\n    return Math.min(999, Math.max(1, stat));\n  }\n\n  const numerator = 0;\n  const denominator = 1;\n  const modernGenBoostTable = [\n    [2, 8],\n    [2, 7],\n    [2, 6],\n    [2, 5],\n    [2, 4],\n    [2, 3],\n    [2, 2],\n    [3, 2],\n    [4, 2],\n    [5, 2],\n    [6, 2],\n    [7, 2],\n    [8, 2],\n  ];\n  stat = OF16(stat * modernGenBoostTable[6 + mod][numerator]);\n  stat = Math.floor(stat / modernGenBoostTable[6 + mod][denominator]);\n\n  return stat;\n}\n\nexport function computeFinalStats(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  field: Field,\n  ...stats: StatID[]\n) {\n  const sides: Array<[Pokemon, Side]> =\n    [[attacker, field.attackerSide], [defender, field.defenderSide]];\n  for (const [pokemon, side] of sides) {\n    for (const stat of stats) {\n      if (stat === 'spe') {\n        pokemon.stats.spe = getFinalSpeed(gen, pokemon, field, side);\n      } else {\n        pokemon.stats[stat] = getModifiedStat(pokemon.rawStats[stat]!, pokemon.boosts[stat]!, gen);\n      }\n    }\n  }\n}\n\nexport function getFinalSpeed(gen: Generation, pokemon: Pokemon, field: Field, side: Side) {\n  const weather = field.isCloudNine ? '' : field.weather || '';\n  const terrain = field.isTeraformZero ? '' : field.terrain;\n  let speed = getModifiedStat(pokemon.rawStats.spe, pokemon.boosts.spe, gen);\n  const speedMods = [];\n\n  if (side.isTailwind) speedMods.push(8192);\n  // Pledge swamp would get applied here when implemented\n  // speedMods.push(1024);\n\n  if ((pokemon.hasAbility('Unburden') && pokemon.abilityOn) ||\n      (pokemon.hasAbility('Chlorophyll') && weather.includes('Sun')) ||\n      (pokemon.hasAbility('Sand Rush') && weather === 'Sand') ||\n      (pokemon.hasAbility('Swift Swim') && weather.includes('Rain')) ||\n      (pokemon.hasAbility('Slush Rush') && ['Hail', 'Snow'].includes(weather)) ||\n      (pokemon.hasAbility('Surge Surfer') && terrain === 'Electric')\n  ) {\n    speedMods.push(8192);\n  } else if (pokemon.hasAbility('Quick Feet') && pokemon.status) {\n    speedMods.push(6144);\n  } else if (pokemon.hasAbility('Slow Start') && pokemon.abilityOn) {\n    speedMods.push(2048);\n  } else if (isQPActive(pokemon, field) && getQPBoostedStat(pokemon, gen) === 'spe') {\n    speedMods.push(6144);\n  }\n\n  if (pokemon.hasItem('Choice Scarf')) {\n    speedMods.push(6144);\n  } else if (pokemon.hasItem('Iron Ball', ...EV_ITEMS)) {\n    speedMods.push(2048);\n  } else if (pokemon.hasItem('Quick Powder') && pokemon.named('Ditto')) {\n    speedMods.push(8192);\n  }\n\n  speed = OF32(pokeRound((speed * chainMods(speedMods, 410, 131172)) / 4096));\n  if (pokemon.hasStatus('par') && !pokemon.hasAbility('Quick Feet')) {\n    speed = Math.floor(OF32(speed * (gen.num < 7 ? 25 : 50)) / 100);\n  }\n\n  speed = Math.min(gen.num <= 2 ? 999 : 10000, speed);\n  return Math.max(0, speed);\n}\n\nexport function getMoveEffectiveness(\n  gen: Generation,\n  move: Move,\n  type: TypeName,\n  isGhostRevealed?: boolean,\n  isGravity?: boolean | number,\n  isRingTarget?: boolean,\n) {\n  if ((isRingTarget || isGhostRevealed) && type === 'Ghost' && move.hasType('Normal', 'Fighting')) {\n    return 1;\n  } else if ((isRingTarget || isGravity) && type === 'Flying' && move.hasType('Ground')) {\n    return 1;\n  } else if (move.named('Freeze-Dry') && type === 'Water') {\n    return 2;\n  } else if (move.named('Flying Press')) {\n    return (\n      gen.types.get('fighting' as ID)!.effectiveness[type]! *\n      gen.types.get('flying' as ID)!.effectiveness[type]!\n    );\n  } else {\n    return gen.types.get(toID(move.type))!.effectiveness[type]!;\n  }\n}\n\nexport function checkAirLock(pokemon: Pokemon, field: Field) {\n  if (pokemon.hasAbility('Air Lock', 'Cloud Nine')) {\n    field.weather = undefined;\n  }\n}\n\nexport function checkTeraformZero(pokemon: Pokemon, field: Field) {\n  if (pokemon.hasAbility('Teraform Zero') && pokemon.abilityOn) {\n    field.weather = undefined;\n    field.terrain = undefined;\n  }\n}\n\nexport function checkForecast(pokemon: Pokemon, weather?: Weather) {\n  if (pokemon.hasAbility('Forecast') && pokemon.named('Castform')) {\n    switch (weather) {\n    case 'Sun':\n    case 'Harsh Sunshine':\n      pokemon.types = ['Fire'];\n      break;\n    case 'Rain':\n    case 'Heavy Rain':\n      pokemon.types = ['Water'];\n      break;\n    case 'Hail':\n    case 'Snow':\n      pokemon.types = ['Ice'];\n      break;\n    default:\n      pokemon.types = ['Normal'];\n    }\n  }\n}\n\nexport function checkItem(pokemon: Pokemon, magicRoomActive?: boolean) {\n  if (\n    pokemon.hasAbility('Klutz') && !EV_ITEMS.includes(pokemon.item!) ||\n      magicRoomActive\n  ) {\n    pokemon.item = '' as ItemName;\n  }\n}\n\nexport function checkWonderRoom(pokemon: Pokemon, wonderRoomActive?: boolean) {\n  if (wonderRoomActive) {\n    [pokemon.rawStats.def, pokemon.rawStats.spd] = [pokemon.rawStats.spd, pokemon.rawStats.def];\n  }\n}\n\nexport function checkIntimidate(gen: Generation, source: Pokemon, target: Pokemon) {\n  const blocked =\n    target.hasAbility('Clear Body', 'White Smoke', 'Hyper Cutter', 'Full Metal Body') ||\n    // More abilities now block Intimidate in Gen 8+ (DaWoblefet, Cloudy Mistral)\n    (gen.num >= 8 && target.hasAbility('Inner Focus', 'Own Tempo', 'Oblivious', 'Scrappy')) ||\n    target.hasItem('Clear Amulet');\n  if (source.hasAbility('Intimidate') && source.abilityOn && !blocked) {\n    if (target.hasAbility('Contrary', 'Defiant', 'Guard Dog')) {\n      target.boosts.atk = Math.min(6, target.boosts.atk + 1);\n    } else if (target.hasAbility('Simple')) {\n      target.boosts.atk = Math.max(-6, target.boosts.atk - 2);\n    } else {\n      target.boosts.atk = Math.max(-6, target.boosts.atk - 1);\n    }\n    if (target.hasAbility('Competitive')) {\n      target.boosts.spa = Math.min(6, target.boosts.spa + 2);\n    }\n  }\n}\n\nexport function checkDownload(source: Pokemon, target: Pokemon, wonderRoomActive?: boolean) {\n  if (source.hasAbility('Download')) {\n    let def = target.stats.def;\n    let spd = target.stats.spd;\n    // We swap the defense stats again here since Download ignores Wonder Room\n    if (wonderRoomActive) [def, spd] = [spd, def];\n    if (spd <= def) {\n      source.boosts.spa = Math.min(6, source.boosts.spa + 1);\n    } else {\n      source.boosts.atk = Math.min(6, source.boosts.atk + 1);\n    }\n  }\n}\n\nexport function checkIntrepidSword(source: Pokemon, gen: Generation) {\n  if (source.hasAbility('Intrepid Sword') && gen.num < 9) {\n    source.boosts.atk = Math.min(6, source.boosts.atk + 1);\n  }\n}\n\nexport function checkDauntlessShield(source: Pokemon, gen: Generation) {\n  if (source.hasAbility('Dauntless Shield') && gen.num < 9) {\n    source.boosts.def = Math.min(6, source.boosts.def + 1);\n  }\n}\n\nexport function checkEmbody(source: Pokemon, gen: Generation) {\n  if (gen.num < 9) return;\n  switch (source.ability) {\n  case 'Embody Aspect (Cornerstone)':\n    source.boosts.def = Math.min(6, source.boosts.def + 1);\n    break;\n  case 'Embody Aspect (Hearthflame)':\n    source.boosts.atk = Math.min(6, source.boosts.atk + 1);\n    break;\n  case 'Embody Aspect (Teal)':\n    source.boosts.spe = Math.min(6, source.boosts.spe + 1);\n    break;\n  case 'Embody Aspect (Wellspring)':\n    source.boosts.spd = Math.min(6, source.boosts.spd + 1);\n    break;\n  }\n}\n\nexport function checkInfiltrator(pokemon: Pokemon, affectedSide: Side) {\n  if (pokemon.hasAbility('Infiltrator')) {\n    affectedSide.isReflect = 0;\n    affectedSide.isLightScreen = 0;\n    affectedSide.isAuroraVeil = 0;\n  }\n}\n\nexport function checkSeedBoost(pokemon: Pokemon, field: Field) {\n  if (!pokemon.item) return;\n  if (field.terrain && pokemon.item.includes('Seed')) {\n    const terrainSeed = pokemon.item.substring(0, pokemon.item.indexOf(' ')) as Terrain;\n    if (field.hasTerrain(terrainSeed)) {\n      if (terrainSeed === 'Grassy' || terrainSeed === 'Electric') {\n        pokemon.boosts.def = pokemon.hasAbility('Contrary')\n          ? Math.max(-6, pokemon.boosts.def - 1)\n          : Math.min(6, pokemon.boosts.def + 1);\n      } else {\n        pokemon.boosts.spd = pokemon.hasAbility('Contrary')\n          ? Math.max(-6, pokemon.boosts.spd - 1)\n          : Math.min(6, pokemon.boosts.spd + 1);\n      }\n    }\n  }\n}\n\n// NOTE: We only need to handle guaranteed, damage-relevant boosts here for multi-hit accuracy\nexport function checkMultihitBoost(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field,\n  desc: RawDesc,\n  usedWhiteHerb = false\n) {\n  // NOTE: attacker.ability must be Parental Bond for these moves to be multi-hit\n  if (move.named('Gyro Ball', 'Electro Ball') && defender.hasAbility('Gooey', 'Tangling Hair')) {\n    // Gyro Ball (etc) makes contact into Gooey (etc) whenever its inflicting multiple hits because\n    // this can only happen if the attacker ability is Parental Bond (and thus can't be Long Reach)\n    if (attacker.hasItem('White Herb') && !usedWhiteHerb) {\n      desc.attackerItem = attacker.item;\n      usedWhiteHerb = true;\n    } else {\n      attacker.boosts.spe = Math.max(attacker.boosts.spe - 1, -6);\n      attacker.stats.spe = getFinalSpeed(gen, attacker, field, field.attackerSide);\n      desc.defenderAbility = defender.ability;\n    }\n    // BUG: Technically Sitrus/Figy Berry + Unburden can also affect the defender's speed, but\n    // this goes far beyond what we care to implement (especially once Gluttony is considered) now\n  } else if (move.named('Power-Up Punch')) {\n    attacker.boosts.atk = Math.min(attacker.boosts.atk + 1, 6);\n    attacker.stats.atk = getModifiedStat(attacker.rawStats.atk, attacker.boosts.atk, gen);\n  }\n\n  if (defender.hasAbility('Stamina')) {\n    if (attacker.hasAbility('Unaware')) {\n      desc.attackerAbility = attacker.ability;\n    } else {\n      defender.boosts.def = Math.min(defender.boosts.def + 1, 6);\n      defender.stats.def = getModifiedStat(defender.rawStats.def, defender.boosts.def, gen);\n      desc.defenderAbility = defender.ability;\n    }\n  } else if (defender.hasAbility('Weak Armor')) {\n    if (attacker.hasAbility('Unaware')) {\n      desc.attackerAbility = attacker.ability;\n    } else {\n      if (defender.hasItem('White Herb') && !usedWhiteHerb) {\n        desc.defenderItem = defender.item;\n        usedWhiteHerb = true;\n      } else {\n        defender.boosts.def = Math.max(defender.boosts.def - 1, -6);\n        defender.stats.def = getModifiedStat(defender.rawStats.def, defender.boosts.def, gen);\n      }\n    }\n    defender.boosts.spe = Math.min(defender.boosts.spe + 2, 6);\n    defender.stats.spe = getFinalSpeed(gen, defender, field, field.defenderSide);\n    desc.defenderAbility = defender.ability;\n  }\n\n  const simple = attacker.hasAbility('Simple') ? 2 : 1;\n  if (move.dropsStats) {\n    if (attacker.hasAbility('Unaware')) {\n      desc.attackerAbility = attacker.ability;\n    } else {\n      // No move with dropsStats has fancy logic regarding category here\n      const stat = move.category === 'Special' ? 'spa' : 'atk';\n\n      let boosts = attacker.boosts[stat];\n      if (attacker.hasAbility('Contrary')) {\n        boosts = Math.min(6, boosts + move.dropsStats);\n        desc.attackerAbility = attacker.ability;\n      } else {\n        boosts = Math.max(-6, boosts - move.dropsStats * simple);\n        if (simple > 1) desc.attackerAbility = attacker.ability;\n      }\n\n      if (attacker.hasItem('White Herb') && attacker.boosts[stat] < 0 && !usedWhiteHerb) {\n        boosts += move.dropsStats * simple;\n        desc.attackerItem = attacker.item;\n        usedWhiteHerb = true;\n      }\n\n      attacker.boosts[stat] = boosts;\n      attacker.stats[stat] = getModifiedStat(attacker.rawStats[stat], defender.boosts[stat], gen);\n    }\n  }\n\n  return usedWhiteHerb;\n}\n\nexport function chainMods(mods: number[], lowerBound: number, upperBound: number) {\n  let M = 4096;\n  for (const mod of mods) {\n    if (mod !== 4096) {\n      M = (M * mod + 2048) >> 12;\n    }\n  }\n  return Math.max(Math.min(M, upperBound), lowerBound);\n}\n\nexport function getBaseDamage(level: number, basePower: number, attack: number, defense: number) {\n  return Math.floor(\n    OF32(\n      Math.floor(\n        OF32(OF32(Math.floor((2 * level) / 5 + 2) * basePower) * attack) / defense\n      ) / 50 + 2\n    )\n  );\n}\n\n/**\n * Get which stat will be boosted by Quark Drive or Protosynthesis\n * In the case that `pokemon.boostedStat` is set, it will always return that stat\n * In the case that two stats have equal value, stat choices will be prioritized\n * in the following order:\n * Attack, Defense, Special Attack, Special Defense, and Speed\n *\n * @param modifiedStats\n * @returns\n */\nexport function getQPBoostedStat(\n  pokemon: Pokemon,\n  gen?: Generation\n): StatID {\n  if (pokemon.boostedStat && pokemon.boostedStat !== 'auto') {\n    return pokemon.boostedStat; // override.\n  }\n  let bestStat: StatID = 'atk';\n  for (const stat of ['def', 'spa', 'spd', 'spe'] as StatID[]) {\n    if (\n      // proto/quark ignore boosts when considering their boost\n      getModifiedStat(pokemon.rawStats[stat]!, pokemon.boosts[stat]!, gen) >\n      getModifiedStat(pokemon.rawStats[bestStat]!, pokemon.boosts[bestStat]!, gen)\n    ) {\n      bestStat = stat;\n    }\n  }\n  return bestStat;\n}\n\nexport function isQPActive(\n  pokemon: Pokemon,\n  field: Field\n): boolean {\n  if (!(pokemon.boostedStat && pokemon.abilityOn)) {\n    return false;\n  }\n  return true;\n\n  // const weather = field.weather || '';\n  // const terrain = field.terrain;\n  // if (\n  //   (pokemon.hasAbility('Protosynthesis') &&\n  //     (weather.includes('Sun') || pokemon.abilityOn)) ||\n  //   (pokemon.hasAbility('Quark Drive') &&\n  //     (terrain === 'Electric' || pokemon.abilityOn)) ||\n  //   (pokemon.boostedStat !== 'auto')\n  // ) {\n  //   return true;\n  // }\n  // return false;\n}\n\nexport function getFinalDamage(\n  baseAmount: number,\n  i: number,\n  effectiveness: number,\n  isBurned: boolean,\n  stabMod: number,\n  finalMod: number,\n  protect?: boolean\n) {\n  let damageAmount = Math.floor(OF32(baseAmount * (85 + i)) / 100);\n  // If the stabMod would not accomplish anything we avoid applying it because it could cause\n  // us to calculate damage overflow incorrectly (DaWoblefet)\n  if (stabMod !== 4096) damageAmount = OF32(damageAmount * stabMod) / 4096;\n  damageAmount = Math.floor(OF32(pokeRound(damageAmount) * effectiveness));\n\n  if (isBurned) damageAmount = Math.floor(damageAmount / 2);\n  if (protect) damageAmount = pokeRound(OF32(damageAmount * 1024) / 4096);\n  return OF16(pokeRound(Math.max(1, OF32(damageAmount * finalMod) / 4096)));\n}\n\n/**\n * Determines which move category Shell Side Arm should behave as.\n *\n * A simplified formula can be used here compared to what the research\n * suggests as we do not want to implement the random tiebreak element of\n * move - instead we simply default to 'Special' and allow the user to override\n * this by manually adjusting the move's category.\n *\n * See also:\n * {@link https://github.com/smogon/pokemon-showdown/commit/65d2bb5d}\n *\n * @param source Attacking pokemon (after stat modifications)\n * @param target Target pokemon (after stat modifications)\n * @returns 'Physical' | 'Special'\n */\nexport function getShellSideArmCategory(source: Pokemon, target: Pokemon): MoveCategory {\n  const physicalDamage = source.stats.atk / target.stats.def;\n  const specialDamage = source.stats.spa / target.stats.spd;\n  return physicalDamage > specialDamage ? 'Physical' : 'Special';\n}\n\nexport function getWeightFactor(pokemon: Pokemon) {\n  return pokemon.hasAbility('Heavy Metal') ? 2\n    : (pokemon.hasAbility('Light Metal') || pokemon.hasItem('Float Stone')) ? 0.5 : 1;\n}\n\nexport function countBoosts(gen: Generation, boosts: StatsTable, randomBoosts: number = 0) {\n  let sum = 0;\n\n  const STATS: StatID[] = gen.num === 1\n    ? ['atk', 'def', 'spa', 'spe']\n    : gen.num === 9 ? ['atk', 'def', 'spa', 'spd', 'spe', 'acc', 'eva']\n    : ['atk', 'def', 'spa', 'spd', 'spe'];\n\n  for (const stat of STATS) {\n    // Only positive boosts are counted\n    const boost = boosts[stat];\n    if (boost && boost > 0) sum += boost;\n  }\n  return sum + Math.max(0, randomBoosts);\n}\n\nexport function getEVDescriptionText(\n  gen: Generation,\n  pokemon: Pokemon,\n  stat: 'atk' | 'def' | 'spd' | 'spa',\n  natureName: NatureName\n): string {\n  const nature = gen.natures.get(toID(natureName))!;\n  return (pokemon.evs[stat] +\n    (nature.plus === nature.minus ? ''\n    : nature.plus === stat ? '+'\n    : nature.minus === stat ? '-'\n    : '') + ' ' +\n     Stats.displayStat(stat));\n}\n\nexport function handleFixedDamageMoves(attacker: Pokemon, move: Move) {\n  if (move.named('Seismic Toss', 'Night Shade')) {\n    return attacker.level;\n  } else if (move.named('Dragon Rage')) {\n    return 40;\n  } else if (move.named('Sonic Boom')) {\n    return 20;\n  }\n  return 0;\n}\n\n// Game Freak rounds DOWN on .5\nexport function pokeRound(num: number) {\n  return num % 1 > 0.5 ? Math.ceil(num) : Math.floor(num);\n}\n\n// 16-bit Overflow\nexport function OF16(n: number) {\n  return n > 65535 ? n % 65536 : n;\n}\n\n// 32-bit Overflow\nexport function OF32(n: number) {\n  return n > 4294967295 ? n % 4294967296 : n;\n}\n","import {Generation, Weather, Terrain, TypeName, ID} from './data/interface';\nimport {Field, Side} from './field';\nimport {Move} from './move';\nimport {Pokemon} from './pokemon';\nimport {Damage, damageRange} from './result';\nimport {error} from './util';\n// NOTE: This needs to come last to simplify bundling\nimport {isGrounded} from './mechanics/util';\n\nexport interface RawDesc {\n  HPEVs?: string;\n  attackBoost?: number;\n  attackEVs?: string;\n  attackerAbility?: string;\n  attackerItem?: string;\n  attackerName: string;\n  attackerTera?: string;\n  defenderAbility?: string;\n  defenderItem?: string;\n  defenderName: string;\n  defenderTera?: string;\n  defenseBoost?: number;\n  defenseEVs?: string;\n  hits?: number;\n  timesFainted?: number;\n  isBeadsOfRuin?: boolean;\n  isSwordOfRuin?: boolean;\n  isTabletsOfRuin?: boolean;\n  isVesselOfRuin?: boolean;\n  isAuroraVeil?: boolean;\n  isFlowerGiftAttacker?: boolean;\n  isFlowerGiftDefender?: boolean;\n  isFriendGuard?: boolean;\n  friendGuards?: number;\n  isHelpingHand?: boolean;\n  isAtkCheered?: number;\n  isCritical?: boolean;\n  isSpread?: boolean;\n  isLightScreen?: boolean;\n  isDefCheered?: number;\n  isDefCheeredBodyPress?: number;\n  isBurned?: boolean;\n  isProtected?: boolean;\n  isReflect?: boolean;\n  isBattery?: boolean;\n  isPowerSpot?: boolean;\n  isWonderRoom?: boolean;\n  isSwitching?: 'out' | 'in';\n  moveBP?: number;\n  moveName: string;\n  moveTurns?: string;\n  moveType?: TypeName;\n  batteries?: number;\n  powerSpots?: number;\n  rivalry?: 'buffed' | 'nerfed';\n  steelySpirits?: number;\n  terrain?: Terrain;\n  weather?: Weather;\n  isDefenderDynamaxed?: boolean;\n  isCharged?: boolean;\n  shieldActive?: boolean;\n}\n\nexport function display(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field,\n  damage: Damage,\n  rawDesc: RawDesc,\n  notation = '%',\n  err = true\n) {\n  const [minDamage, maxDamage] = damageRange(damage);\n  const min = (typeof minDamage === 'number' ? minDamage : minDamage[0] + minDamage[1]) * move.hits;\n  const max = (typeof maxDamage === 'number' ? maxDamage : maxDamage[0] + maxDamage[1]) * move.hits;\n\n  const minDisplay = toDisplay(notation, min, defender.maxHP());\n  const maxDisplay = toDisplay(notation, max, defender.maxHP());\n\n  const desc = buildDescription(rawDesc, attacker, defender);\n  const damageText = `${min}-${max} (${minDisplay} - ${maxDisplay}${notation}${getBossMultiplierDesc(defender)})`;\n\n  if (move.category === 'Status' && !move.named('Nature Power')) return `${desc}: ${damageText}`;\n  const koChanceText = getKOChance(gen, attacker, defender, move, field, damage, err).text;\n  return koChanceText ? `${desc}: ${damageText} -- ${koChanceText}` : `${desc}: ${damageText}`;\n}\n\nexport function displayMove(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  damage: Damage,\n  notation = '%'\n) {\n  const [minDamage, maxDamage] = damageRange(damage);\n  const min = (typeof minDamage === 'number' ? minDamage : minDamage[0] + minDamage[1]) * move.hits;\n  const max = (typeof maxDamage === 'number' ? maxDamage : maxDamage[0] + maxDamage[1]) * move.hits;\n\n  const minDisplay = toDisplay(notation, min, defender.maxHP());\n  const maxDisplay = toDisplay(notation, max, defender.maxHP());\n\n  const recoveryText = getRecovery(gen, attacker, defender, move, damage, notation).text;\n  const recoilText = getRecoil(gen, attacker, defender, move, damage, notation).text;\n\n  return `${minDisplay} - ${maxDisplay}${notation}${recoveryText &&\n    ` (${recoveryText})`}${recoilText && ` (${recoilText})`}`;\n}\n\nexport function getRecovery(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  damage: Damage,\n  notation = '%'\n) {\n  const [minDamage, maxDamage] = damageRange(damage);\n  const minD = typeof minDamage === 'number' ? [minDamage] : minDamage;\n  const maxD = typeof maxDamage === 'number' ? [maxDamage] : maxDamage;\n\n  const recovery = [0, 0] as [number, number];\n  let text = '';\n\n  const ignoresShellBell =\n    gen.num === 3 && move.named('Doom Desire', 'Future Sight');\n  if (attacker.hasItem('Shell Bell') && !ignoresShellBell) {\n    const max = Math.round(defender.maxHP() / 8);\n    for (let i = 0; i < minD.length; i++) {\n      recovery[0] += Math.min(Math.round(minD[i] * move.hits / 8), max);\n      recovery[1] += Math.min(Math.round(maxD[i] * move.hits / 8), max);\n    }\n  }\n\n  if (move.named('G-Max Finale')) {\n    recovery[0] = recovery[1] = Math.round(attacker.maxHP() / 6);\n  }\n\n  if (move.drain) {\n    const percentHealed = move.drain[0] / move.drain[1];\n    const max = Math.round(defender.maxHP() * percentHealed);\n    for (let i = 0; i < minD.length; i++) {\n      const range = [minD[i], maxD[i]];\n      for (const j in recovery) {\n        let drained = Math.round(range[j] * percentHealed);\n        if (attacker.hasItem('Big Root')) drained = Math.trunc(drained * 5324 / 4096);\n        recovery[j] += Math.min(drained * move.hits, max);\n      }\n    }\n  }\n\n  if (recovery[1] === 0) return {recovery, text};\n\n  const minHealthRecovered = toDisplay(notation, recovery[0], attacker.maxHP());\n  const maxHealthRecovered = toDisplay(notation, recovery[1], attacker.maxHP());\n\n  text = `${minHealthRecovered} - ${maxHealthRecovered}${notation} recovered`;\n  return {recovery, text};\n}\n\n// TODO: return recoil damage as exact HP\nexport function getRecoil(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  damage: Damage,\n  notation = '%'\n) {\n  const [minDamage, maxDamage] = damageRange(damage);\n  const min = (typeof minDamage === 'number' ? minDamage : minDamage[0] + minDamage[1]) * move.hits;\n  const max = (typeof maxDamage === 'number' ? maxDamage : maxDamage[0] + maxDamage[1]) * move.hits;\n\n  let recoil: [number, number] | number = [0, 0];\n  let text = '';\n\n  const damageOverflow = minDamage as number > defender.curHP() || maxDamage as number > defender.curHP();\n  if (move.recoil) {\n    const mod = (move.recoil[0] / move.recoil[1]) * 100;\n    let minRecoilDamage, maxRecoilDamage;\n    if (damageOverflow) {\n      minRecoilDamage =\n        toDisplay(notation, defender.curHP() * mod, attacker.maxHP(), 100);\n      maxRecoilDamage =\n        toDisplay(notation, defender.curHP() * mod, attacker.maxHP(), 100);\n    } else {\n      minRecoilDamage = toDisplay(\n        notation, Math.min(min, defender.curHP()) * mod, attacker.maxHP(), 100\n      );\n      maxRecoilDamage = toDisplay(\n        notation, Math.min(max, defender.curHP()) * mod, attacker.maxHP(), 100\n      );\n    }\n    if (!attacker.hasAbility('Rock Head')) {\n      recoil = [minRecoilDamage, maxRecoilDamage];\n      text = `${minRecoilDamage} - ${maxRecoilDamage}${notation} recoil damage`;\n    }\n  } else if (move.hasCrashDamage) {\n    const genMultiplier = gen.num === 2 ? 12.5 : gen.num >= 3 ? 50 : 1;\n\n    let minRecoilDamage, maxRecoilDamage;\n    if (damageOverflow && gen.num !== 2) {\n      minRecoilDamage =\n        toDisplay(notation, defender.curHP() * genMultiplier, attacker.maxHP(), 100);\n      maxRecoilDamage =\n        toDisplay(notation, defender.curHP() * genMultiplier, attacker.maxHP(), 100);\n    } else {\n      minRecoilDamage = toDisplay(\n        notation, Math.min(min, defender.maxHP()) * genMultiplier, attacker.maxHP(), 100\n      );\n      maxRecoilDamage = toDisplay(\n        notation, Math.min(max, defender.maxHP()) * genMultiplier, attacker.maxHP(), 100\n      );\n    }\n\n    recoil = [minRecoilDamage, maxRecoilDamage];\n    switch (gen.num) {\n    case 1:\n      recoil = toDisplay(notation, 1, attacker.maxHP());\n      text = '1hp damage on miss';\n      break;\n    case 2: case 3: case 4:\n      if (defender.hasType('Ghost')) {\n        if (gen.num === 4) {\n          const gen4CrashDamage = Math.floor(((defender.maxHP() * 0.5) / attacker.maxHP()) * 100);\n          recoil = notation === '%' ? gen4CrashDamage : Math.floor((gen4CrashDamage / 100) * 48);\n          text = `${gen4CrashDamage}% crash damage`;\n        } else {\n          recoil = 0;\n          text = 'no crash damage on Ghost types';\n        }\n      } else {\n        text = `${minRecoilDamage} - ${maxRecoilDamage}${notation} crash damage on miss`;\n      }\n      break;\n    default:\n      recoil = notation === '%' ? 24 : 50;\n      text = '50% crash damage';\n    }\n  } else if (move.struggleRecoil) {\n    recoil = notation === '%' ? 12 : 25;\n    text = '25% struggle damage';\n    // Struggle recoil is actually rounded down in Gen 4 per DaWoblefet's research, but until we\n    // return recoil damage as exact HP the best we can do is add some more text to this effect\n    if (gen.num === 4) text += ' (rounded down)';\n  } else if (move.mindBlownRecoil) {\n    recoil = notation === '%' ? 24 : 50;\n    text = '50% recoil damage';\n  }\n\n  return {recoil, text};\n}\n\nexport function getKOChance(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field,\n  damage: Damage,\n  err = true\n) {\n  damage = combine(damage);\n  if (isNaN(damage[0])) {\n    error(err, 'damage[0] must be a number.');\n    return {chance: 0, n: 0, text: ''};\n  }\n  if (damage[damage.length - 1] === 0) {\n    error(err, 'damage[damage.length - 1] === 0.');\n    return {chance: 0, n: 0, text: ''};\n  }\n\n  // Code doesn't really work if these aren't set.\n  if (move.timesUsed === undefined) move.timesUsed = 1;\n  if (move.timesUsedWithMetronome === undefined) move.timesUsedWithMetronome = 1;\n\n  if (damage[0] >= defender.maxHP() && move.timesUsed === 1 && move.timesUsedWithMetronome === 1) {\n    return {chance: 1, n: 1, text: 'guaranteed OHKO'};\n  }\n\n  const hazards = getHazards(gen, defender, field.defenderSide);\n  const eot = getEndOfTurn(gen, attacker, defender, move, field);\n  const toxicCounter =\n     defender.hasStatus('tox') && !defender.hasAbility('Magic Guard') ? defender.toxicCounter : 0;\n\n  // multi-hit moves have too many possibilities for brute-forcing to work, so reduce it\n  // to an approximate distribution\n  let qualifier = '';\n  if (move.hits > 1) {\n    qualifier = 'approx. ';\n    damage = squashMultihit(gen, damage, move.hits, err);\n  }\n\n  const hazardsText = hazards.texts.length > 0\n    ? ' after ' + serializeText(hazards.texts)\n    : '';\n  const afterText =\n    hazards.texts.length > 0 || eot.texts.length > 0\n      ? ' after ' + serializeText(hazards.texts.concat(eot.texts))\n      : '';\n\n  if ((move.timesUsed === 1 && move.timesUsedWithMetronome === 1) || move.isZ) {\n    const chance = computeKOChance(\n      damage, defender.curHP() - hazards.damage, 0, 1, 1, defender.maxHP(), toxicCounter\n    );\n    if (chance === 1) {\n      return {chance, n: 1, text: `guaranteed OHKO${hazardsText}`}; // eot wasn't considered\n    } else if (chance > 0) {\n      // note: still not accounting for EOT due to poor eot damage handling\n      return {\n        chance,\n        n: 1,\n        text: qualifier + Math.round(chance * 1000) / 10 + `% chance to OHKO${hazardsText}`,\n      };\n    }\n\n    // Parental Bond's combined first + second hit only is accurate for chance to OHKO, for\n    // multihit KOs its only approximated. We should be doing squashMultihit here instead of\n    // pretending we ar emore accurate than we are, but just throwing on an qualifer should be\n    // sufficient.\n    if (damage.length === 256) {\n      qualifier = 'approx. ';\n      // damage = squashMultihit(gen, damage, move.hits, err);\n    }\n\n    for (let i = 2; i <= 4; i++) {\n      const chance = computeKOChance(\n        damage, defender.curHP() - hazards.damage, eot.damage, i, 1, defender.maxHP(), toxicCounter\n      );\n      if (chance === 1) {\n        return {chance, n: i, text: `${qualifier || 'guaranteed '}${i}HKO${afterText}`};\n      } else if (chance > 0) {\n        return {\n          chance,\n          n: i,\n          text: qualifier + Math.round(chance * 1000) / 10 + `% chance to ${i}HKO${afterText}`,\n        };\n      }\n    }\n\n    for (let i = 5; i <= 9; i++) {\n      if (\n        predictTotal(damage[0], eot.damage, i, 1, toxicCounter, defender.maxHP()) >=\n        defender.curHP() - hazards.damage\n      ) {\n        return {chance: 1, n: i, text: `${qualifier || 'guaranteed '}${i}HKO${afterText}`};\n      } else if (\n        predictTotal(damage[damage.length - 1], eot.damage, i, 1, toxicCounter, defender.maxHP()) >=\n        defender.curHP() - hazards.damage\n      ) {\n        return {n: i, text: qualifier + `possible ${i}HKO${afterText}`};\n      }\n    }\n  } else {\n    const chance = computeKOChance(\n      damage, defender.maxHP() - hazards.damage,\n      eot.damage,\n      move.hits || 1,\n      move.timesUsed || 1,\n      defender.maxHP(),\n      toxicCounter\n    );\n    if (chance === 1) {\n      return {\n        chance,\n        n: move.timesUsed,\n        text: `${qualifier || 'guaranteed '}KO in ${move.timesUsed} turns${afterText}`,\n      };\n    } else if (chance > 0) {\n      return {\n        chance,\n        n: move.timesUsed,\n        text:\n          qualifier +\n          Math.round(chance * 1000) / 10 +\n          `% chance to ${move.timesUsed}HKO${afterText}`,\n      };\n    }\n\n    if (predictTotal(\n      damage[0],\n      eot.damage,\n      move.hits,\n      move.timesUsed,\n      toxicCounter,\n      defender.maxHP()\n    ) >=\n      defender.curHP() - hazards.damage\n    ) {\n      return {\n        chance: 1,\n        n: move.timesUsed,\n        text: `${qualifier || 'guaranteed '}KO in ${move.timesUsed} turns${afterText}`,\n      };\n    } else if (\n      predictTotal(\n        damage[damage.length - 1],\n        eot.damage,\n        move.hits,\n        move.timesUsed,\n        toxicCounter,\n        defender.maxHP()\n      ) >=\n      defender.curHP() - hazards.damage\n    ) {\n      return {\n        n: move.timesUsed,\n        text: qualifier + `possible KO in ${move.timesUsed} turns${afterText}`,\n      };\n    }\n    return {n: move.timesUsed, text: qualifier + 'not a KO'};\n  }\n\n  return {chance: 0, n: 0, text: ''};\n}\n\nfunction combine(damage: Damage) {\n  // Fixed Damage\n  if (typeof damage === 'number') return [damage];\n  // Standard Damage\n  if (damage.length > 2) {\n    if (damage[0] > damage[damage.length - 1]) damage = damage.slice().sort() as number[];\n    return damage as number[];\n  }\n  // Fixed Parental Bond Damage\n  if (typeof damage[0] === 'number' && typeof damage[1] === 'number') {\n    return [damage[0] + damage[1]];\n  }\n  // Parental Bond Damage\n  const d = damage as [number[], number[]];\n  const combined = [];\n  for (let i = 0; i < d[0].length; i++) { // eslint-disable-line\n    for (let j = 0; j < d[1].length; j++) { // eslint-disable-line\n      combined.push(d[0][i] + d[1][j]);\n    }\n  }\n  return combined.sort();\n}\n\nconst TRAPPING = [\n  'Bind', 'Clamp', 'Fire Spin', 'Infestation', 'Magma Storm', 'Sand Tomb',\n  'Thunder Cage', 'Whirlpool', 'Wrap', 'G-Max Sandblast', 'G-Max Centiferno',\n];\n\nfunction getBossMultiplierDesc(defender: Pokemon){\n    if(defender.bossMultiplier > 100){\n        return ` of ${toFixedIfNecessary(defender.bossMultiplier/100, 1)}x hp boss`\n    }\n    return ''\n}\n\nfunction toFixedIfNecessary( value : any, dp : number ){\n    return +parseFloat(value).toFixed( dp );\n  }\n\nfunction getHazards(gen: Generation, defender: Pokemon, defenderSide: Side) {\n  let damage = 0;\n  const texts: string[] = [];\n\n  if (defender.hasItem('Heavy-Duty Boots')) {\n    return {damage, texts};\n  }\n  if (defenderSide.isSR && !defender.hasAbility('Magic Guard', 'Mountaineer')) {\n    const rockType = gen.types.get('rock' as ID)!;\n    const effectiveness =\n      rockType.effectiveness[defender.types[0]]! *\n      (defender.types[1] ? rockType.effectiveness[defender.types[1]]! : 1);\n    damage += Math.max(1, Math.floor((effectiveness * defender.maxHP()) / 8));\n    texts.push('Stealth Rock');\n  }\n  if (defenderSide.steelsurge && !defender.hasAbility('Magic Guard', 'Mountaineer')) {\n    const steelType = gen.types.get('steel' as ID)!;\n    const effectiveness =\n      steelType.effectiveness[defender.types[0]]! *\n      (defender.types[1] ? steelType.effectiveness[defender.types[1]]! : 1);\n    damage += Math.max(1, Math.floor((effectiveness * defender.maxHP()) / 8));\n    texts.push('Steelsurge');\n  }\n\n  if (!defender.hasType('Flying') &&\n      !defender.hasAbility('Magic Guard', 'Levitate') &&\n      !defender.hasItem('Air Balloon')\n  ) {\n    if (defenderSide.spikes === 1) {\n      damage += Math.max(1, Math.floor(defender.maxHP() / 8));\n      if (gen.num === 2) {\n        texts.push('Spikes');\n      } else {\n        texts.push('1 layer of Spikes');\n      }\n    } else if (defenderSide.spikes === 2) {\n      damage += Math.max(1, Math.floor(defender.maxHP() / 6));\n      texts.push('2 layers of Spikes');\n    } else if (defenderSide.spikes === 3) {\n      damage += Math.max(1, Math.floor(defender.maxHP() / 4));\n      texts.push('3 layers of Spikes');\n    }\n  }\n\n  if (isNaN(damage)) {\n    damage = 0;\n  }\n\n  return {damage, texts};\n}\n\nexport function getEndOfTurn(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field\n) {\n  let damage = 0;\n  const texts = [];\n\n  if (field.hasWeather('Sun', 'Harsh Sunshine')) {\n    if (defender.hasAbility('Dry Skin', 'Solar Power')) {\n      damage -= Math.max(1, Math.floor(defender.maxHP() / 8));\n      texts.push(defender.ability + ' damage');\n    }\n  } else if (field.hasWeather('Rain', 'Heavy Rain')) {\n    if (defender.hasAbility('Dry Skin')) {\n      damage += Math.max(1, Math.floor(defender.maxHP() / 8));\n      texts.push('Dry Skin recovery');\n    } else if (defender.hasAbility('Rain Dish')) {\n      damage += Math.max(1, Math.floor(defender.maxHP() / 16));\n      texts.push('Rain Dish recovery');\n    }\n  } else if (field.hasWeather('Sand')) {\n    if (\n      !defender.hasType('Rock', 'Ground', 'Steel') &&\n      !defender.hasAbility('Magic Guard', 'Overcoat', 'Sand Force', 'Sand Rush', 'Sand Veil') &&\n      !defender.hasItem('Safety Goggles')\n    ) {\n      damage -= Math.max(1, Math.floor(defender.maxHP() / (gen.num === 2 ? 8 : 16)));\n      texts.push('sandstorm damage');\n    }\n  } else if (field.hasWeather('Hail', 'Snow')) {\n    if (defender.hasAbility('Ice Body')) {\n      damage += Math.max(1, Math.floor(defender.maxHP() / 16));\n      texts.push('Ice Body recovery');\n    } else if (\n      !defender.hasType('Ice') &&\n      !defender.hasAbility('Magic Guard', 'Overcoat', 'Snow Cloak') &&\n      !defender.hasItem('Safety Goggles') &&\n      field.hasWeather('Hail')\n    ) {\n      damage -= Math.max(1, Math.floor(defender.maxHP() / 16));\n      texts.push('hail damage');\n    }\n  }\n\n  const loseItem = move.named('Knock Off') && !defender.hasAbility('Sticky Hold');\n  if (defender.hasItem('Leftovers') && !loseItem) {\n    damage += Math.max(1, Math.floor(defender.maxHP() / 16));\n    texts.push('Leftovers recovery');\n  } else if (defender.hasItem('Black Sludge') && !loseItem) {\n    if (defender.hasType('Poison')) {\n      damage += Math.max(1, Math.floor(defender.maxHP() / 16));\n      texts.push('Black Sludge recovery');\n    } else if (!defender.hasAbility('Magic Guard', 'Klutz')) {\n      damage -= Math.max(1, Math.floor(defender.maxHP() / 8));\n      texts.push('Black Sludge damage');\n    }\n  } else if (defender.hasItem('Sticky Barb')) {\n    damage -= Math.max(1, Math.floor(defender.maxHP() / 8));\n    texts.push('Sticky Barb damage');\n  }\n\n  if (field.defenderSide.isSeeded) {\n    if (!defender.hasAbility('Magic Guard')) {\n      // 1/16 in gen 1, 1/8 in gen 2 onwards\n      damage -= Math.max(1, Math.floor(defender.maxHP() / (gen.num >= 2 ? 8 : 16)));\n      texts.push('Leech Seed damage');\n    }\n  }\n\n  if (field.attackerSide.isSeeded && !attacker.hasAbility('Magic Guard')) {\n    let recovery = Math.max(1, Math.floor(attacker.maxHP() / (gen.num >= 2 ? 8 : 16)));\n    if (defender.hasItem('Big Root')) recovery = Math.trunc(recovery * 5324 / 4096);\n    if (attacker.hasAbility('Liquid Ooze')) {\n      damage -= recovery;\n      texts.push('Liquid Ooze damage');\n    } else {\n      damage += recovery;\n      texts.push('Leech Seed recovery');\n    }\n  }\n\n  if (field.hasTerrain('Grassy')) {\n    if (isGrounded(defender, field)) {\n      damage += Math.max(1, Math.floor(defender.maxHP() / 16));\n      texts.push('Grassy Terrain recovery');\n    }\n  }\n\n  if (defender.hasStatus('psn')) {\n    if (defender.hasAbility('Poison Heal')) {\n      damage += Math.max(1, Math.floor(defender.maxHP() / 8));\n      texts.push('Poison Heal');\n    } else if (!defender.hasAbility('Magic Guard')) {\n      damage -= Math.max(1, Math.floor(defender.maxHP() / (gen.num === 1 ? 16 : 8)));\n      texts.push('poison damage');\n    }\n  } else if (defender.hasStatus('tox')) {\n    if (defender.hasAbility('Poison Heal')) {\n      damage += Math.max(1, Math.floor(defender.maxHP() / 8));\n      texts.push('Poison Heal');\n    } else if (!defender.hasAbility('Magic Guard')) {\n      texts.push('toxic damage');\n    }\n  } else if (defender.hasStatus('brn')) {\n    if (defender.hasAbility('Heatproof')) {\n      damage -= Math.max(1, Math.floor(defender.maxHP() / (gen.num > 6 ? 32 : 16)));\n      texts.push('reduced burn damage');\n    } else if (!defender.hasAbility('Magic Guard')) {\n      damage -= Math.max(1,Math.floor(defender.maxHP() / (gen.num === 1 || gen.num > 6 ? 16 : 8)));\n      texts.push('burn damage');\n    }\n  } else if (\n    (defender.hasStatus('slp') || defender.hasAbility('Comatose')) &&\n    attacker.hasAbility('isBadDreams') &&\n    !defender.hasAbility('Magic Guard')\n  ) {\n    damage -= Math.max(1, Math.floor(defender.maxHP() / 8));\n    texts.push('Bad Dreams');\n  }\n\n  if (!defender.hasAbility('Magic Guard') && TRAPPING.includes(move.name)) {\n    if (attacker.hasItem('Binding Band')) {\n      damage -= Math.max(1, gen.num > 5 ? Math.floor(defender.maxHP() / 6) : Math.floor(defender.maxHP() / 8));\n      texts.push('trapping damage');\n    } else {\n      damage -= Math.max(1, gen.num > 5 ? Math.floor(defender.maxHP() / 8) : Math.floor(defender.maxHP() / 16));\n      texts.push('trapping damage');\n    }\n  }\n  if (defender.isSaltCure && !defender.hasAbility('Magic Guard')) {\n    const isWaterOrSteel = defender.hasType('Water', 'Steel') ||\n      (defender.teraType && ['Water', 'Steel'].includes(defender.teraType));\n    damage -= Math.max(1, Math.floor(defender.maxHP() / (isWaterOrSteel ? 4 : 8)));\n    texts.push('Salt Cure');\n  }\n  if (!defender.hasType('Fire') && !defender.hasAbility('Magic Guard') &&\n      (move.named('Fire Pledge (Grass Pledge Boosted)', 'Grass Pledge (Fire Pledge Boosted)'))) {\n    damage -= Math.max(1, Math.floor(defender.maxHP() / 8));\n    texts.push('Sea of Fire damage');\n  }\n\n  if (!defender.hasAbility('Magic Guard') && !defender.hasType('Grass') &&\n      (field.defenderSide.vinelash || move.named('G-Max Vine Lash'))) {\n    damage -= Math.max(1, Math.floor(defender.maxHP() / 6));\n    texts.push('Vine Lash damage');\n  }\n\n  if (!defender.hasAbility('Magic Guard') && !defender.hasType('Fire') &&\n      (field.defenderSide.wildfire || move.named('G-Max Wildfire'))) {\n    damage -= Math.max(1, Math.floor(defender.maxHP() / 6));\n    texts.push('Wildfire damage');\n  }\n\n  if (!defender.hasAbility('Magic Guard') && !defender.hasType('Water') &&\n      (field.defenderSide.cannonade || move.named('G-Max Cannonade'))) {\n    damage -= Math.max(1, Math.floor(defender.maxHP() / 6));\n    texts.push('Cannonade damage');\n  }\n\n  if (!defender.hasAbility('Magic Guard') && !defender.hasType('Rock') &&\n      (field.defenderSide.volcalith || move.named('G-Max Volcalith'))) {\n    damage -= Math.max(1, Math.floor(defender.maxHP() / 6));\n    texts.push('Volcalith damage');\n  }\n\n  if (defender.isIngrain)  {\n    damage += Math.max(1, Math.floor(defender.maxHP() * (defender.item === \"Big Root\" ? 1.3/16 : 1/16)));\n    texts.push('Ingrain recovery');\n  }\n\n  return {damage, texts};\n}\n\nfunction computeKOChance(\n  damage: number[],\n  hp: number,\n  eot: number,\n  hits: number,\n  timesUsed: number,\n  maxHP: number,\n  toxicCounter: number\n) {\n  const n = damage.length;\n  if (hits === 1) {\n    for (let i = 0; i < n; i++) {\n      if (damage[n - 1] < hp) return 0;\n      if (damage[i] >= hp) {\n        return (n - i) / n;\n      }\n    }\n  }\n  let toxicDamage = 0;\n  if (toxicCounter > 0) {\n    toxicDamage = Math.max(1, Math.floor((toxicCounter * maxHP) / 16));\n    toxicCounter++;\n  }\n  let sum = 0;\n  let lastc = 0;\n  for (let i = 0; i < n; i++) {\n    let c;\n    if (i === 0 || damage[i] !== damage[i - 1]) {\n      c = computeKOChance(\n        damage,\n        hp - damage[i] + eot - toxicDamage,\n        eot,\n        hits - 1,\n        timesUsed,\n        maxHP,\n        toxicCounter\n      );\n    } else {\n      c = lastc;\n    }\n    if (c === 1) {\n      sum += n - i;\n      break;\n    } else {\n      sum += c;\n    }\n    lastc = c;\n  }\n  return sum / n;\n}\n\nfunction predictTotal(\n  damage: number,\n  eot: number,\n  hits: number,\n  timesUsed: number,\n  toxicCounter: number,\n  maxHP: number\n) {\n  let toxicDamage = 0;\n  if (toxicCounter > 0) {\n    for (let i = 0; i < hits - 1; i++) {\n      toxicDamage += Math.max(1, Math.floor(((toxicCounter + i) * maxHP) / 16));\n    }\n  }\n  let total = 0;\n  if (hits > 1 && timesUsed === 1) {\n    total = damage * hits - eot * (hits - 1) + toxicDamage;\n  } else {\n    total = damage - eot * (hits - 1) + toxicDamage;\n  }\n  return total;\n}\n\nfunction squashMultihit(gen: Generation, d: number[], hits: number, err = true) {\n  if (d.length === 1) {\n    return [d[0] * hits];\n  } else if (gen.num === 1) {\n    const r = [];\n    for (let i = 0; i < d.length; i++) {\n      r[i] = d[i] * hits;\n    }\n    return r;\n  } else if (d.length === 16) {\n    switch (hits) {\n    case 2:\n      return [\n        2 * d[0], d[2] + d[3], d[4] + d[4], d[4] + d[5], d[5] + d[6], d[6] + d[6],\n        d[6] + d[7], d[7] + d[7], d[8] + d[8], d[8] + d[9], d[9] + d[9], d[9] + d[10],\n        d[10] + d[11], d[11] + d[11], d[12] + d[13], 2 * d[15],\n      ];\n    case 3:\n      return [\n        3 * d[0], d[3] + d[3] + d[4], d[4] + d[4] + d[5], d[5] + d[5] + d[6],\n        d[5] + d[6] + d[6], d[6] + d[6] + d[7], d[6] + d[7] + d[7], d[7] + d[7] + d[8],\n        d[7] + d[8] + d[8], d[8] + d[8] + d[9], d[8] + d[9] + d[9], d[9] + d[9] + d[10],\n        d[9] + d[10] + d[10], d[10] + d[11] + d[11], d[11] + d[12] + d[12], 3 * d[15],\n      ];\n    case 4:\n      return [\n        4 * d[0], 4 * d[4], d[4] + d[5] + d[5] + d[5], d[5] + d[5] + d[6] + d[6],\n        4 * d[6], d[6] + d[6] + d[7] + d[7], 4 * d[7], d[7] + d[7] + d[7] + d[8],\n        d[7] + d[8] + d[8] + d[8], 4 * d[8], d[8] + d[8] + d[9] + d[9], 4 * d[9],\n        d[9] + d[9] + d[10] + d[10], d[10] + d[10] + d[10] + d[11], 4 * d[11], 4 * d[15],\n      ];\n    case 5:\n      return [\n        5 * d[0], d[4] + d[4] + d[4] + d[5] + d[5], d[5] + d[5] + d[5] + d[5] + d[6],\n        d[5] + d[6] + d[6] + d[6] + d[6], d[6] + d[6] + d[6] + d[6] + d[7],\n        d[6] + d[6] + d[7] + d[7] + d[7], 5 * d[7], d[7] + d[7] + d[7] + d[8] + d[8],\n        d[7] + d[7] + d[8] + d[8] + d[8], 5 * d[8], d[8] + d[8] + d[8] + d[9] + d[9],\n        d[8] + d[9] + d[9] + d[9] + d[9], d[9] + d[9] + d[9] + d[9] + d[10],\n        d[9] + d[10] + d[10] + d[10] + d[10], d[10] + d[10] + d[11] + d[11] + d[11], 5 * d[15],\n      ];\n    case 10:\n      return [\n        10 * d[0], 10 * d[4], 3 * d[4] + 7 * d[5], 5 * d[5] + 5 * d[6], 10 * d[6],\n        5 * d[6] + 5 * d[7], 10 * d[7], 7 * d[7] + 3 * d[8], 3 * d[7] + 7 * d[8], 10 * d[8],\n        5 * d[8] + 5 * d[9], 4 * d[9], 5 * d[9] + 5 * d[10], 7 * d[10] + 3 * d[11], 10 * d[11],\n        10 * d[15],\n      ];\n    default:\n      error(err, `Unexpected # of hits: ${hits}`);\n      return d;\n    }\n  } else if (d.length === 39) {\n    switch (hits) {\n    case 2:\n      return [\n        2 * d[0], 2 * d[7], 2 * d[10], 2 * d[12], 2 * d[14], d[15] + d[16],\n        2 * d[17], d[18] + d[19], d[19] + d[20], 2 * d[21], d[22] + d[23],\n        2 * d[24], 2 * d[26], 2 * d[28], 2 * d[31], 2 * d[38],\n      ];\n    case 3:\n      return [\n        3 * d[0], 3 * d[9], 3 * d[12], 3 * d[13], 3 * d[15], 3 * d[16],\n        3 * d[17], 3 * d[18], 3 * d[20], 3 * d[21], 3 * d[22], 3 * d[23],\n        3 * d[25], 3 * d[26], 3 * d[29], 3 * d[38],\n      ];\n    case 4:\n      return [\n        4 * d[0], 2 * d[10] + 2 * d[11], 4 * d[13], 4 * d[14], 2 * d[15] + 2 * d[16],\n        2 * d[16] + 2 * d[17], 2 * d[17] + 2 * d[18], 2 * d[18] + 2 * d[19],\n        2 * d[19] + 2 * d[20], 2 * d[20] + 2 * d[21], 2 * d[21] + 2 * d[22],\n        2 * d[22] + 2 * d[23], 4 * d[24], 4 * d[25], 2 * d[27] + 2 * d[28], 4 * d[38],\n      ];\n    case 5:\n      return [\n        5 * d[0], 5 * d[11], 5 * d[13], 5 * d[15], 5 * d[16], 5 * d[17],\n        5 * d[18], 5 * d[19], 5 * d[19], 5 * d[20], 5 * d[21], 5 * d[22],\n        5 * d[23], 5 * d[25], 5 * d[27], 5 * d[38],\n      ];\n    case 10:\n      return [\n        10 * d[0], 10 * d[11], 10 * d[13], 10 * d[15], 10 * d[16], 10 * d[17],\n        10 * d[18], 10 * d[19], 10 * d[19], 10 * d[20], 10 * d[21], 10 * d[22],\n        10 * d[23], 10 * d[25], 10 * d[27], 10 * d[38],\n      ];\n    default:\n      error(err, `Unexpected # of hits: ${hits}`);\n      return d;\n    }\n  } else if (d.length === 256) {\n    if (hits > 1) {\n      error(err, `Unexpected # of hits for Parental Bond: ${hits}`);\n    }\n    // FIXME: Come up with a better Parental Bond approximation\n    const r: number[] = [];\n    for (let i = 0; i < 16; i++) {\n      let val = 0;\n      for (let j = 0; j < 16; j++) {\n        val += d[i + j];\n      }\n      r[i] = Math.round(val / 16);\n    }\n    return r;\n  } else {\n    error(err, `Unexpected # of possible damage values: ${d.length}`);\n    return d;\n  }\n}\n\nfunction buildDescription(description: RawDesc, attacker: Pokemon, defender: Pokemon) {\n  const [attackerLevel, defenderLevel] = getDescriptionLevels(attacker, defender);\n  let output = '';\n  if (description.attackBoost) {\n    if (description.attackBoost > 0) {\n      output += '+';\n    }\n    output += description.attackBoost + ' ';\n  }\n  output = appendIfSet(output, attackerLevel);\n  output = appendIfSet(output, description.attackEVs);\n  output = appendIfSet(output, description.attackerItem);\n  output = appendIfSet(output, description.attackerAbility);\n  output = appendIfSet(output, description.rivalry);\n  if (description.isBurned) {\n    output += 'burned ';\n  }\n  if (description.timesFainted) {\n    output += `fainted ` + Math.min(5, description.timesFainted) +\n      (description.timesFainted === 1 ? ' time' : ' times');\n  }\n  if (description.attackerTera) {\n    output += `Tera ${description.attackerTera} `;\n  }\n  if (description.isBeadsOfRuin) {\n    output += 'Beads of Ruin ';\n  }\n  if (description.isSwordOfRuin) {\n    output += 'Sword of Ruin ';\n  }\n  output += description.attackerName + ' ';\n  if (description.isHelpingHand) {\n    output += 'Helping Hand ';\n  }\n  if (description.isAtkCheered) {\n    if (description.isAtkCheered > 1) {\n      output += 'Atk Cheer (×' + description.isAtkCheered + ') ';\n    } else {\n      output += 'Atk Cheer ';\n    }\n  }\n  if (description.isDefCheeredBodyPress) {\n    if (description.isDefCheeredBodyPress > 1) {\n      output += 'Def Cheer (×' + description.isDefCheeredBodyPress + ') ';\n    } else {\n      output += 'Def Cheer ';\n    }\n  }\n  if (description.isFlowerGiftAttacker) {\n    output += ' with an ally\\'s Flower Gift ';\n  }\n  if (description.isBattery) {\n    output += ' Battery boosted ';\n  }\n  if (description.batteries) {\n    output += ' with ' + description.batteries + ' Battery ' + (description.batteries === 1 ? 'boost' : 'boosts') + ' ';\n  }\n  if (description.isPowerSpot) {\n    output += ' Power Spot boosted ';\n  }\n  if(description.powerSpots){\n    output += `with ${description.powerSpots} Power Spot ${description.powerSpots === 1 ? 'boost' : 'boosts'} `;\n  }\n  if(description.steelySpirits){\n    output += `with ${description.steelySpirits}${attacker.hasAbility('Steely Spirit') ? ' extra' : ''} Steely Spirit${description.steelySpirits === 1 ? ' ' : 's '}`;\n  }\n  if (description.isSwitching) {\n    output += ' switching boosted ';\n  }\n  if (description.isCharged) {\n    output += ' charged ';\n  }\n  output += description.moveName + ' ';\n  if (description.moveBP && description.moveType) {\n    output += '(' + description.moveBP + ' BP ' + description.moveType + ') ';\n  } else if (description.moveBP) {\n    output += '(' + description.moveBP + ' BP) ';\n  } else if (description.moveType) {\n    output += '(' + description.moveType + ') ';\n  }\n  if (description.hits) {\n    output += '(' + description.hits + ' hits) ';\n  }\n  output = appendIfSet(output, description.moveTurns);\n  output += 'vs. ';\n  if (description.defenseBoost) {\n    if (description.defenseBoost > 0) {\n      output += '+';\n    }\n    output += description.defenseBoost + ' ';\n  }\n  output = appendIfSet(output, defenderLevel);\n  output = appendIfSet(output, description.HPEVs);\n  if (description.defenseEVs) {\n    output += '/ ' + description.defenseEVs + ' ';\n  }\n  output = appendIfSet(output, description.defenderItem);\n  output = appendIfSet(output, description.defenderAbility);\n  if (description.isTabletsOfRuin) {\n    output += 'Tablets of Ruin ';\n  }\n  if (description.isVesselOfRuin) {\n    output += 'Vessel of Ruin ';\n  }\n  if (description.isProtected) {\n    output += 'protected ';\n  }\n  if (description.isDefenderDynamaxed) {\n    output += 'Dynamax ';\n  }\n  if (description.defenderTera) {\n    output += `Tera ${description.defenderTera} `;\n  }\n  output += description.defenderName;\n  if (description.weather && description.terrain) {\n    // do nothing\n  } else if (description.weather) {\n    output += ' in ' + description.weather;\n  } else if (description.terrain) {\n    output += ' in ' + description.terrain + ' Terrain';\n  }\n  if (description.isReflect) {\n    output += ' through Reflect';\n  } else if (description.isLightScreen) {\n    output += ' through Light Screen';\n  }\n  if (description.isDefCheered) {\n    if(description.isReflect || description.isLightScreen){\n      if (description.isDefCheered > 1) {\n        output += ' and Def Cheer (×' + description.isDefCheered + ')';\n      } else {\n        output += ' and Def Cheer';\n      }\n    } else {\n      if (description.isDefCheered > 1) {\n        output += ' through Def Cheer (×' + description.isDefCheered + ')';\n      } else {\n        output += ' through Def Cheer';\n      }\n    }\n  }\n  if (description.isFlowerGiftDefender) {\n    output += ' with an ally\\'s Flower Gift';\n  }\n  if (description.isFriendGuard) {\n    output += ' with an ally\\'s Friend Guard';\n  }\n  if (description.friendGuards) {\n    output += ` with ${description.friendGuards} ${description.friendGuards > 1 ? \"allies'\" : \"ally's\"} Friend Guard${description.steelySpirits === 1 ? '' : 's'}`;\n  }\n  if (description.isAuroraVeil) {\n    output += ' with an ally\\'s Aurora Veil';\n  }\n  if (description.isCritical) {\n    output += ' on a critical hit';\n  }\n  if (description.isSpread) {\n    output += ' with spread damage';\n  }\n  if (description.isWonderRoom) {\n    output += ' in Wonder Room';\n  }\n  if (description.shieldActive) {\n    output += ' through Tera Raid Shield';\n  }\n  return output;\n}\n\nfunction getDescriptionLevels(attacker: Pokemon, defender: Pokemon) {\n  if (attacker.level !== defender.level) {\n    return [\n      attacker.level === 100 ? '' : `Lvl ${attacker.level}`,\n      defender.level === 100 ? '' : `Lvl ${defender.level}`,\n    ];\n  }\n  // There's an argument for showing any level thats not 100, but VGC and LC players\n  // probably would rather not see level cruft in their calcs\n  const elide = [100, 50, 5].includes(attacker.level);\n  const level = elide ? '' : `Lvl ${attacker.level}`;\n  return [level, level];\n}\n\nfunction serializeText(arr: string[]) {\n  if (arr.length === 0) {\n    return '';\n  } else if (arr.length === 1) {\n    return arr[0];\n  } else if (arr.length === 2) {\n    return arr[0] + ' and ' + arr[1];\n  } else {\n    let text = '';\n    for (let i = 0; i < arr.length - 1; i++) {\n      text += arr[i] + ', ';\n    }\n    return text + 'and ' + arr[arr.length - 1];\n  }\n}\n\nfunction appendIfSet(str: string, toAppend?: string) {\n  return toAppend ? `${str}${toAppend} ` : str;\n}\n\nfunction toDisplay(notation: string, a: number, b: number, f = 1) {\n  return notation === '%' ? Math.floor((a * (1000 / f)) / b) / 10 : Math.floor((a * (48 / f)) / b);\n}\n","import {RawDesc, display, displayMove, getRecovery, getRecoil, getKOChance} from './desc';\nimport {Generation} from './data/interface';\nimport {Field} from './field';\nimport {Move} from './move';\nimport {Pokemon} from './pokemon';\n\nexport type Damage = number | number[] | [number, number] | [number[], number[]];\n\nexport class Result {\n  gen: Generation;\n  attacker: Pokemon;\n  defender: Pokemon;\n  move: Move;\n  field: Field;\n  damage: number | number[] | [number[], number[]];\n  rawDesc: RawDesc;\n\n  constructor(\n    gen: Generation,\n    attacker: Pokemon,\n    defender: Pokemon,\n    move: Move,\n    field: Field,\n    damage: Damage,\n    rawDesc: RawDesc,\n  ) {\n    this.gen = gen;\n    this.attacker = attacker;\n    this.defender = defender;\n    this.move = move;\n    this.field = field;\n    this.damage = damage;\n    this.rawDesc = rawDesc;\n  }\n\n  /* get */ desc() {\n    return this.fullDesc();\n  }\n\n  range(): [number, number] {\n    const range = damageRange(this.damage);\n    if (typeof range[0] === 'number') return range as [number, number];\n    const d = range as [number[], number[]];\n    return [d[0][0] + d[0][1], d[1][0] + d[1][1]];\n  }\n\n  fullDesc(notation = '%', err = true) {\n    return display(\n      this.gen,\n      this.attacker,\n      this.defender,\n      this.move,\n      this.field,\n      this.damage,\n      this.rawDesc,\n      notation,\n      err\n    );\n  }\n\n  moveDesc(notation = '%') {\n    return displayMove(this.gen, this.attacker, this.defender, this.move, this.damage, notation);\n  }\n\n  recovery(notation = '%') {\n    return getRecovery(this.gen, this.attacker, this.defender, this.move, this.damage, notation);\n  }\n\n  recoil(notation = '%') {\n    return getRecoil(this.gen, this.attacker, this.defender, this.move, this.damage, notation);\n  }\n\n  kochance(err = true) {\n    return getKOChance(\n      this.gen,\n      this.attacker,\n      this.defender,\n      this.move,\n      this.field,\n      this.damage,\n      err\n    );\n  }\n}\n\nexport function damageRange(\n  damage: Damage\n): [number, number] | [[number, number], [number, number]] {\n  // Fixed Damage\n  if (typeof damage === 'number') return [damage, damage];\n  // Standard Damage\n  if (damage.length > 2) {\n    const d = damage as number[];\n    if (d[0] > d[d.length - 1]) return [Math.min(...d), Math.max(...d)];\n    return [d[0], d[d.length - 1]];\n  }\n  // Fixed Parental Bond Damage\n  if (typeof damage[0] === 'number' && typeof damage[1] === 'number') {\n    return [[damage[0], damage[1]], [damage[0], damage[1]]];\n  }\n  // Parental Bond Damage\n  const d = damage as [number[], number[]];\n  if (d[0][0] > d[0][d[0].length - 1]) d[0] = d[0].slice().sort();\n  if (d[1][0] > d[1][d[1].length - 1]) d[1] = d[1].slice().sort();\n  return [[d[0][0], d[1][0]], [d[0][d[0].length - 1], d[1][d[1].length - 1]]];\n}\n","import {Generation} from '../data/interface';\nimport {getItemBoostType} from '../items';\nimport {RawDesc} from '../desc';\nimport {Field} from '../field';\nimport {Move} from '../move';\nimport {Pokemon} from '../pokemon';\nimport {Result} from '../result';\nimport {computeFinalStats, getMoveEffectiveness, handleFixedDamageMoves} from './util';\n\nexport function calculateRBYGSC(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field\n) {\n  computeFinalStats(gen, attacker, defender, field, 'atk', 'def', 'spa', 'spd', 'spe');\n\n  const desc: RawDesc = {\n    attackerName: attacker.name,\n    moveName: move.name,\n    defenderName: defender.name,\n  };\n\n  const result = new Result(gen, attacker, defender, move, field, 0, desc);\n\n  if (move.category === 'Status') {\n    return result;\n  }\n\n  if (field.defenderSide.isProtected) {\n    desc.isProtected = true;\n    return result;\n  }\n\n  // Fixed damage moves (eg. Night Shade) ignore type effectiveness in Gen 1\n  if (gen.num === 1) {\n    const fixedDamage = handleFixedDamageMoves(attacker, move);\n    if (fixedDamage) {\n      result.damage = fixedDamage;\n      return result;\n    }\n  }\n\n  const typeEffectivenessPrecedenceRules = [\n    'Normal',\n    'Fire',\n    'Water',\n    'Electric',\n    'Grass',\n    'Ice',\n    'Fighting',\n    'Poison',\n    'Ground',\n    'Flying',\n    'Psychic',\n    'Bug',\n    'Rock',\n    'Ghost',\n    'Dragon',\n    'Dark',\n    'Steel',\n  ];\n\n  let firstDefenderType = defender.types[0];\n  let secondDefenderType = defender.types[1];\n\n  if (secondDefenderType && firstDefenderType !== secondDefenderType && gen.num === 2) {\n    const firstTypePrecedence = typeEffectivenessPrecedenceRules.indexOf(firstDefenderType);\n    const secondTypePrecedence = typeEffectivenessPrecedenceRules.indexOf(secondDefenderType);\n\n    if (firstTypePrecedence > secondTypePrecedence) {\n      [firstDefenderType, secondDefenderType] = [secondDefenderType, firstDefenderType];\n    }\n  }\n\n\n  const type1Effectiveness =\n    getMoveEffectiveness(gen, move, firstDefenderType, field.defenderSide.isForesight);\n  const type2Effectiveness = secondDefenderType\n    ? getMoveEffectiveness(gen, move, secondDefenderType, field.defenderSide.isForesight)\n    : 1;\n  const typeEffectiveness = type1Effectiveness * type2Effectiveness;\n\n  if (typeEffectiveness === 0) {\n    return result;\n  }\n\n  if (gen.num === 2) {\n    const fixedDamage = handleFixedDamageMoves(attacker, move);\n    if (fixedDamage) {\n      result.damage = fixedDamage;\n      return result;\n    }\n  }\n\n  if (move.hits > 1) {\n    desc.hits = move.hits;\n  }\n\n  // Flail and Reversal are variable BP and never crit\n  if (move.named('Flail', 'Reversal')) {\n    move.isCrit = false;\n    const p = Math.floor((48 * attacker.curHP()) / attacker.maxHP());\n    move.bp = p <= 1 ? 200 : p <= 4 ? 150 : p <= 9 ? 100 : p <= 16 ? 80 : p <= 32 ? 40 : 20;\n    desc.moveBP = move.bp;\n  } else if (move.named('Present') && !move.bp) {\n    // Present is technically 0 BP so we default to 40 in that case, but the UI may override the\n    // base power in order to simulate the scenarios where it is 80 or 120 BP.\n    move.bp = 40;\n  }\n\n  if (move.bp === 0) {\n    return result;\n  }\n\n  const isPhysical = move.category === 'Physical';\n  const attackStat = isPhysical ? 'atk' : 'spa';\n  const defenseStat = isPhysical ? 'def' : 'spd';\n  let at = attacker.stats[attackStat]!;\n  let df = defender.stats[defenseStat]!;\n\n  // Whether we ignore Reflect, Light Screen, stat stages, and burns if attack is a crit differs\n  // by gen - in gen 2 we also need to check that the attacker does not have stat stage advantage\n  const ignoreMods = move.isCrit &&\n    (gen.num === 1 ||\n    (gen.num === 2 && attacker.boosts[attackStat]! <= defender.boosts[defenseStat]!));\n\n  let lv = attacker.level;\n  if (ignoreMods) {\n    at = attacker.rawStats[attackStat]!;\n    df = defender.rawStats[defenseStat]!;\n    if (gen.num === 1) {\n      lv *= 2;\n      desc.isCritical = true;\n    }\n  } else {\n    if (attacker.boosts[attackStat] !== 0) desc.attackBoost = attacker.boosts[attackStat];\n    if (defender.boosts[defenseStat] !== 0) desc.defenseBoost = defender.boosts[defenseStat];\n    if (isPhysical && attacker.hasStatus('brn')) {\n      at = Math.floor(at / 2);\n      desc.isBurned = true;\n    }\n  }\n\n  if (move.named('Explosion', 'Self-Destruct')) {\n    df = Math.floor(df / 2);\n  }\n\n  if (!ignoreMods) {\n    if (isPhysical && field.defenderSide.isReflect) {\n      df *= 2;\n      desc.isReflect = true;\n    } else if (!isPhysical && field.defenderSide.isLightScreen) {\n      df *= 2;\n      desc.isLightScreen = true;\n    }\n  }\n\n  if ((attacker.named('Pikachu') && attacker.hasItem('Light Ball') && !isPhysical) ||\n      (attacker.named('Cubone', 'Marowak') && attacker.hasItem('Thick Club') && isPhysical)) {\n    at *= 2;\n    desc.attackerItem = attacker.item;\n  }\n\n  if (at > 255 || df > 255) {\n    at = Math.floor(at / 4) % 256;\n    df = Math.floor(df / 4) % 256;\n  }\n\n  // Gen 2 Present has a glitched damage calculation using the secondary types of the Pokemon\n  // for the Attacker's Level and Defender's Defense.\n  if (move.named('Present')) {\n    const lookup: {[id: string]: number} = {\n      Normal: 0, Fighting: 1, Flying: 2, Poison: 3, Ground: 4, Rock: 5, Bug: 7,\n      Ghost: 8, Steel: 9, '???': 19, Fire: 20, Water: 21, Grass: 22, Electric: 23,\n      Psychic: 24, Ice: 25, Dragon: 26, Dark: 27,\n    };\n\n    at = 10;\n    df = Math.max(lookup[attacker.types[1] ? attacker.types[1] : attacker.types[0]], 1);\n    lv = Math.max(lookup[defender.types[1] ? defender.types[1] : defender.types[0]], 1);\n  }\n\n  if (defender.named('Ditto') && defender.hasItem('Metal Powder')) {\n    df = Math.floor(df * 1.5);\n    desc.defenderItem = defender.item;\n  }\n\n  let baseDamage = Math.floor(\n    Math.floor((Math.floor((2 * lv) / 5 + 2) * Math.max(1, at) * move.bp) / Math.max(1, df)) / 50\n  );\n\n  // Gen 1 handles move.isCrit above by doubling level\n  if (gen.num === 2 && move.isCrit) {\n    baseDamage *= 2;\n    desc.isCritical = true;\n  }\n\n  if (move.named('Pursuit') && field.defenderSide.isSwitching === 'out') {\n    baseDamage = Math.floor(baseDamage * 2);\n    desc.isSwitching = 'out';\n  }\n\n  // In Gen 2 and no other gens, Dragon Fang in a no-op and Dragon Scale erroneously has its effect\n  const itemBoostType =\n    attacker.hasItem('Dragon Fang')\n      ? undefined\n      : getItemBoostType(attacker.hasItem('Dragon Scale') ? 'Dragon Fang' : attacker.item);\n\n  if (move.hasType(itemBoostType)) {\n    baseDamage = Math.floor(baseDamage * 1.1);\n    desc.attackerItem = attacker.item;\n  }\n\n  baseDamage = Math.min(997, baseDamage) + 2;\n\n  if ((field.hasWeather('Sun') && move.hasType('Fire')) ||\n      (field.hasWeather('Rain') && move.hasType('Water'))) {\n    baseDamage = Math.floor(baseDamage * 1.5);\n    desc.weather = field.weather;\n  } else if (\n    (field.hasWeather('Sun') && move.hasType('Water')) ||\n    (field.hasWeather('Rain') && (move.hasType('Fire') || move.named('Solar Beam')))\n  ) {\n    baseDamage = Math.floor(baseDamage / 2);\n    desc.weather = field.weather;\n  }\n\n  if (move.hasType(...attacker.types)) {\n    baseDamage = Math.floor(baseDamage * 1.5);\n  }\n\n  if (gen.num === 1) {\n    baseDamage = Math.floor(baseDamage * type1Effectiveness);\n    baseDamage = Math.floor(baseDamage * type2Effectiveness);\n  } else {\n    baseDamage = Math.floor(baseDamage * typeEffectiveness);\n  }\n\n  // Flail and Reversal don't use random factor\n  if (move.named('Flail', 'Reversal')) {\n    result.damage = baseDamage;\n    return result;\n  }\n\n  result.damage = [];\n  for (let i = 217; i <= 255; i++) {\n    if (gen.num === 2) { // in gen 2 damage is always rounded up to 1. TODO ADD TESTS\n      result.damage[i - 217] = Math.max(1, Math.floor((baseDamage * i) / 255));\n    } else {\n      if (baseDamage === 1) { // in gen 1 the random factor multiplication is skipped if damage = 1\n        result.damage[i - 217] = 1;\n      } else {\n        result.damage[i - 217] = Math.floor((baseDamage * i) / 255);\n      }\n    }\n  }\n\n  return result;\n}\n","import {Generation, AbilityName} from '../data/interface';\nimport {getItemBoostType, getNaturalGift, getFlingPower, getBerryResistType} from '../items';\nimport {RawDesc} from '../desc';\nimport {Field} from '../field';\nimport {Move} from '../move';\nimport {Pokemon} from '../pokemon';\nimport {Result} from '../result';\nimport {\n  getModifiedStat,\n  getEVDescriptionText,\n  getFinalSpeed,\n  getMoveEffectiveness,\n  checkAirLock,\n  checkForecast,\n  checkItem,\n  checkIntimidate,\n  checkDownload,\n  countBoosts,\n  handleFixedDamageMoves,\n} from './util';\n\nexport function calculateDPP(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field\n) {\n  // #region Initial\n\n  checkAirLock(attacker, field);\n  checkAirLock(defender, field);\n  checkForecast(attacker, field.weather);\n  checkForecast(defender, field.weather);\n  checkItem(attacker);\n  checkItem(defender);\n  checkIntimidate(gen, attacker, defender);\n  checkIntimidate(gen, defender, attacker);\n  checkDownload(attacker, defender);\n  checkDownload(defender, attacker);\n  attacker.stats.spe = getFinalSpeed(gen, attacker, field, field.attackerSide);\n  defender.stats.spe = getFinalSpeed(gen, defender, field, field.defenderSide);\n\n  const desc: RawDesc = {\n    attackerName: attacker.name,\n    moveName: move.name,\n    defenderName: defender.name,\n  };\n\n  const result = new Result(gen, attacker, defender, move, field, 0, desc);\n\n  if (move.category === 'Status' && !move.named('Nature Power')) {\n    return result;\n  }\n\n  if (field.defenderSide.isProtected && !move.breaksProtect) {\n    desc.isProtected = true;\n    return result;\n  }\n\n  if (attacker.hasAbility('Mold Breaker')) {\n    defender.ability = '' as AbilityName;\n    desc.attackerAbility = attacker.ability;\n  }\n\n  const isCritical = move.isCrit && !defender.hasAbility('Battle Armor', 'Shell Armor');\n\n  let basePower = move.bp;\n  if (move.named('Weather Ball')) {\n    if (field.hasWeather('Sun')) {\n      move.type = 'Fire';\n      basePower *= 2;\n    } else if (field.hasWeather('Rain')) {\n      move.type = 'Water';\n      basePower *= 2;\n    } else if (field.hasWeather('Sand')) {\n      move.type = 'Rock';\n      basePower *= 2;\n    } else if (field.hasWeather('Hail')) {\n      move.type = 'Ice';\n      basePower *= 2;\n    } else {\n      move.type = 'Normal';\n    }\n\n    desc.weather = field.weather;\n    desc.moveType = move.type;\n    desc.moveBP = basePower;\n  } else if (move.named('Judgment') && attacker.item && attacker.item.includes('Plate')) {\n    move.type = getItemBoostType(attacker.item)!;\n  } else if (move.named('Natural Gift') && attacker.item && attacker.item.includes('Berry')) {\n    const gift = getNaturalGift(gen, attacker.item)!;\n    move.type = gift.t;\n    move.bp = gift.p;\n    desc.attackerItem = attacker.item;\n    desc.moveBP = move.bp;\n    desc.moveType = move.type;\n  }\n\n  if (attacker.hasAbility('Normalize')) {\n    move.type = 'Normal';\n    desc.attackerAbility = attacker.ability;\n  }\n\n  const isGhostRevealed = attacker.hasAbility('Scrappy') || field.defenderSide.isForesight;\n\n  const typeEffectivenessPrecedenceRules = [\n    'Normal',\n    'Fire',\n    'Water',\n    'Electric',\n    'Grass',\n    'Ice',\n    'Fighting',\n    'Poison',\n    'Ground',\n    'Flying',\n    'Psychic',\n    'Bug',\n    'Rock',\n    'Ghost',\n    'Dragon',\n    'Dark',\n    'Steel',\n  ];\n\n  let firstDefenderType = defender.types[0];\n  let secondDefenderType = defender.types[1];\n\n  if (secondDefenderType && firstDefenderType !== secondDefenderType) {\n    const firstTypePrecedence = typeEffectivenessPrecedenceRules.indexOf(firstDefenderType);\n    const secondTypePrecedence = typeEffectivenessPrecedenceRules.indexOf(secondDefenderType);\n\n    if (firstTypePrecedence > secondTypePrecedence) {\n      [firstDefenderType, secondDefenderType] = [secondDefenderType, firstDefenderType];\n    }\n  }\n\n  let type1Effectiveness =\n    getMoveEffectiveness(gen, move, firstDefenderType, isGhostRevealed, field.isGravity);\n  let type2Effectiveness = secondDefenderType\n    ? getMoveEffectiveness(gen, move, secondDefenderType, isGhostRevealed, field.isGravity)\n    : 1;\n\n  let typeEffectiveness = type1Effectiveness * type2Effectiveness;\n\n  // Iron Ball ignores Klutz in generation 4\n  if (typeEffectiveness === 0 && move.hasType('Ground') && defender.hasItem('Iron Ball')) {\n    if (type1Effectiveness === 0) {\n      type1Effectiveness = 1;\n    } else if (defender.types[1] && type2Effectiveness === 0) {\n      type2Effectiveness = 1;\n    }\n    typeEffectiveness = type1Effectiveness * type2Effectiveness;\n  }\n\n  if (typeEffectiveness === 0) {\n    return result;\n  }\n\n  const ignoresWonderGuard = move.hasType('???') || move.named('Fire Fang');\n  if ((!ignoresWonderGuard && defender.hasAbility('Wonder Guard') && typeEffectiveness <= 1) ||\n      (move.hasType('Fire') && defender.hasAbility('Flash Fire')) ||\n      (move.hasType('Water') && defender.hasAbility('Dry Skin', 'Water Absorb')) ||\n      (move.hasType('Electric') && defender.hasAbility('Motor Drive', 'Volt Absorb')) ||\n      (move.hasType('Ground') && !field.isGravity &&\n        !defender.hasItem('Iron Ball') && defender.hasAbility('Levitate')) ||\n      (move.flags.sound && defender.hasAbility('Soundproof'))\n  ) {\n    desc.defenderAbility = defender.ability;\n    return result;\n  }\n\n  desc.HPEVs = `${defender.evs.hp} HP`;\n\n  const fixedDamage = handleFixedDamageMoves(attacker, move);\n  if (fixedDamage) {\n    result.damage = fixedDamage;\n    return result;\n  }\n\n  if (move.hits > 1) {\n    desc.hits = move.hits;\n  }\n  const turnOrder = attacker.stats.spe > defender.stats.spe ? 'first' : 'last';\n\n  // #endregion\n  // #region Base Power\n\n  switch (move.name) {\n  case 'Brine':\n    if (defender.curHP() <= defender.maxHP() / 2) {\n      basePower *= 2;\n      desc.moveBP = basePower;\n    }\n    break;\n  case 'Eruption':\n  case 'Water Spout':\n    basePower = Math.max(1, Math.floor((basePower * attacker.curHP()) / attacker.maxHP()));\n    desc.moveBP = basePower;\n    break;\n  case 'Facade':\n    if (attacker.hasStatus('par', 'psn', 'tox', 'brn')) {\n      basePower = move.bp * 2;\n      desc.moveBP = basePower;\n    }\n    break;\n  case 'Flail':\n  case 'Reversal':\n    const p = Math.floor((64 * attacker.curHP()) / attacker.maxHP());\n    basePower = p <= 1 ? 200 : p <= 5 ? 150 : p <= 12 ? 100 : p <= 21 ? 80 : p <= 42 ? 40 : 20;\n    desc.moveBP = basePower;\n    break;\n  case 'Fling':\n    basePower = getFlingPower(attacker.item);\n    desc.moveBP = basePower;\n    desc.attackerItem = attacker.item;\n    break;\n  case 'Grass Knot':\n  case 'Low Kick':\n    const w = defender.weightkg;\n    basePower = w >= 200 ? 120 : w >= 100 ? 100 : w >= 50 ? 80 : w >= 25 ? 60 : w >= 10 ? 40 : 20;\n    desc.moveBP = basePower;\n    break;\n  case 'Gyro Ball':\n    basePower = Math.min(150, Math.floor((25 * defender.stats.spe) / attacker.stats.spe));\n    desc.moveBP = basePower;\n    break;\n  case 'Payback':\n    if (turnOrder !== 'first') {\n      basePower *= 2;\n      desc.moveBP = basePower;\n    }\n    break;\n  case 'Punishment':\n    basePower = Math.min(200, 60 + 20 * countBoosts(gen, defender.boosts));\n    desc.moveBP = basePower;\n    break;\n  case 'Wake-Up Slap':\n    if (defender.hasStatus('slp')) {\n      basePower *= 2;\n      desc.moveBP = basePower;\n    }\n    break;\n  case 'Nature Power':\n    move.category = 'Special';\n    move.secondaries = true;\n    basePower = 80;\n    desc.moveName = 'Tri Attack';\n    break;\n  case 'Crush Grip':\n  case 'Wring Out':\n    basePower = Math.floor((defender.curHP() * 120) / defender.maxHP()) + 1;\n    desc.moveBP = basePower;\n    break;\n  default:\n    basePower = move.bp;\n  }\n\n  if (basePower === 0) {\n    return result;\n  }\n\n  if (field.attackerSide.isHelpingHand) {\n    basePower = Math.floor(basePower * 1.5);\n    desc.isHelpingHand = true;\n  }\n\n  const isPhysical = move.category === 'Physical';\n  if ((attacker.hasItem('Muscle Band') && isPhysical) ||\n      (attacker.hasItem('Wise Glasses') && !isPhysical)) {\n    basePower = Math.floor(basePower * 1.1);\n    desc.attackerItem = attacker.item;\n  } else if (move.hasType(getItemBoostType(attacker.item)) ||\n    (attacker.hasItem('Adamant Orb') &&\n     attacker.named('Dialga') &&\n     move.hasType('Steel', 'Dragon')) ||\n    (attacker.hasItem('Lustrous Orb') &&\n     attacker.named('Palkia') &&\n     move.hasType('Water', 'Dragon')) ||\n    (attacker.hasItem('Griseous Orb') &&\n     attacker.named('Giratina-Origin') &&\n     move.hasType('Ghost', 'Dragon'))\n  ) {\n    basePower = Math.floor(basePower * 1.2);\n    desc.attackerItem = attacker.item;\n  }\n\n  if ((attacker.hasAbility('Reckless') && (move.recoil || move.hasCrashDamage)) ||\n      (attacker.hasAbility('Iron Fist') && move.flags.punch)) {\n    basePower = Math.floor(basePower * 1.2);\n    desc.attackerAbility = attacker.ability;\n  } else if ((attacker.curHP() <= attacker.maxHP() / 3 &&\n    ((attacker.hasAbility('Overgrow') && move.hasType('Grass')) ||\n      (attacker.hasAbility('Blaze') && move.hasType('Fire')) ||\n      (attacker.hasAbility('Torrent') && move.hasType('Water')) ||\n      (attacker.hasAbility('Swarm') && move.hasType('Bug')))) ||\n      (attacker.hasAbility('Technician') && basePower <= 60)\n  ) {\n    basePower = Math.floor(basePower * 1.5);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if ((defender.hasAbility('Heatproof') && move.hasType('Fire')) ||\n      (defender.hasAbility('Thick Fat') && (move.hasType('Fire', 'Ice')))) {\n    basePower = Math.floor(basePower * 0.5);\n    desc.defenderAbility = defender.ability;\n  } else if (defender.hasAbility('Dry Skin') && move.hasType('Fire')) {\n    basePower = Math.floor(basePower * 1.25);\n    desc.defenderAbility = defender.ability;\n  }\n\n  // #endregion\n  // #region (Special) Attack\n\n  const attackStat = isPhysical ? 'atk' : 'spa';\n  desc.attackEVs = getEVDescriptionText(gen, attacker, attackStat, attacker.nature);\n  let attack: number;\n  const attackBoost = attacker.boosts[attackStat];\n  const rawAttack = attacker.rawStats[attackStat];\n  if (attackBoost === 0 || (isCritical && attackBoost < 0)) {\n    attack = rawAttack;\n  } else if (defender.hasAbility('Unaware')) {\n    attack = rawAttack;\n    desc.defenderAbility = defender.ability;\n  } else if (attacker.hasAbility('Simple')) {\n    attack = getSimpleModifiedStat(rawAttack, attackBoost);\n    desc.attackerAbility = attacker.ability;\n    desc.attackBoost = attackBoost;\n  } else {\n    attack = getModifiedStat(rawAttack, attackBoost);\n    desc.attackBoost = attackBoost;\n  }\n\n  if (isPhysical && attacker.hasAbility('Pure Power', 'Huge Power')) {\n    attack *= 2;\n    desc.attackerAbility = attacker.ability;\n  } else if (field.hasWeather('Sun') &&\n    (attacker.hasAbility(isPhysical ? 'Flower Gift' : 'Solar Power'))\n  ) {\n    attack = Math.floor(attack * 1.5);\n    desc.attackerAbility = attacker.ability;\n    desc.weather = field.weather;\n  } else if (field.attackerSide.isFlowerGift && field.hasWeather('Sun') && isPhysical) {\n    attack = Math.floor(attack * 1.5);\n    desc.weather = field.weather;\n    desc.isFlowerGiftAttacker = true;\n  } else if (\n    (isPhysical &&\n      (attacker.hasAbility('Hustle') || (attacker.hasAbility('Guts') && attacker.status)) ||\n    (!isPhysical && attacker.abilityOn && attacker.hasAbility('Plus', 'Minus')))\n  ) {\n    attack = Math.floor(attack * 1.5);\n    desc.attackerAbility = attacker.ability;\n  } else if (isPhysical && attacker.hasAbility('Slow Start') && attacker.abilityOn) {\n    attack = Math.floor(attack / 2);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if ((isPhysical ? attacker.hasItem('Choice Band') : attacker.hasItem('Choice Specs')) ||\n      (!isPhysical && attacker.hasItem('Soul Dew') && attacker.named('Latios', 'Latias'))) {\n    attack = Math.floor(attack * 1.5);\n    desc.attackerItem = attacker.item;\n  } else if (\n    (attacker.hasItem('Light Ball') && attacker.named('Pikachu')) ||\n    (attacker.hasItem('Thick Club') && attacker.named('Cubone', 'Marowak') && isPhysical) ||\n    (attacker.hasItem('Deep Sea Tooth') && attacker.named('Clamperl') && !isPhysical)\n  ) {\n    attack *= 2;\n    desc.attackerItem = attacker.item;\n  }\n\n  // #endregion\n  // #region (Special) Defense\n\n  const defenseStat = isPhysical ? 'def' : 'spd';\n  desc.defenseEVs = getEVDescriptionText(gen, defender, defenseStat, defender.nature);\n  let defense: number;\n  const defenseBoost = defender.boosts[defenseStat];\n  const rawDefense = defender.rawStats[defenseStat];\n  if (defenseBoost === 0 || (isCritical && defenseBoost > 0)) {\n    defense = rawDefense;\n  } else if (attacker.hasAbility('Unaware')) {\n    defense = rawDefense;\n    desc.attackerAbility = attacker.ability;\n  } else if (defender.hasAbility('Simple')) {\n    defense = getSimpleModifiedStat(rawDefense, defenseBoost);\n    desc.defenderAbility = defender.ability;\n    desc.defenseBoost = defenseBoost;\n  } else {\n    defense = getModifiedStat(rawDefense, defenseBoost);\n    desc.defenseBoost = defenseBoost;\n  }\n\n  if (defender.hasAbility('Marvel Scale') && defender.status && isPhysical) {\n    defense = Math.floor(defense * 1.5);\n    desc.defenderAbility = defender.ability;\n  } else if (defender.hasAbility('Flower Gift') && field.hasWeather('Sun') && !isPhysical) {\n    defense = Math.floor(defense * 1.5);\n    desc.defenderAbility = defender.ability;\n    desc.weather = field.weather;\n  } else if (field.defenderSide.isFlowerGift && field.hasWeather('Sun') && !isPhysical) {\n    defense = Math.floor(defense * 1.5);\n    desc.weather = field.weather;\n    desc.isFlowerGiftDefender = true;\n  }\n\n  if (defender.hasItem('Soul Dew') && defender.named('Latios', 'Latias') && !isPhysical) {\n    defense = Math.floor(defense * 1.5);\n    desc.defenderItem = defender.item;\n  } else if (\n    (defender.hasItem('Deep Sea Scale') && defender.named('Clamperl') && !isPhysical) ||\n    (defender.hasItem('Metal Powder') && defender.named('Ditto') && isPhysical)\n  ) {\n    defense *= 2;\n    desc.defenderItem = defender.item;\n  }\n\n  if (field.hasWeather('Sand') && defender.hasType('Rock') && !isPhysical) {\n    defense = Math.floor(defense * 1.5);\n    desc.weather = field.weather;\n  }\n\n  if (move.named('Explosion') || move.named('Self-Destruct')) {\n    defense = Math.floor(defense * 0.5);\n  }\n\n  if (defense < 1) {\n    defense = 1;\n  }\n\n  // #endregion\n  // #region Damage\n\n  let baseDamage = Math.floor(\n    Math.floor((Math.floor((2 * attacker.level) / 5 + 2) * basePower * attack) / 50) / defense\n  );\n\n  if (attacker.hasStatus('brn') && isPhysical && !attacker.hasAbility('Guts')) {\n    baseDamage = Math.floor(baseDamage * 0.5);\n    desc.isBurned = true;\n  }\n\n  if (!isCritical) {\n    const screenMultiplier = field.gameType !== 'Singles' ? 2 / 3 : 1 / 2;\n    if (isPhysical && field.defenderSide.isReflect) {\n      baseDamage = Math.floor(baseDamage * screenMultiplier);\n      desc.isReflect = true;\n    } else if (!isPhysical && field.defenderSide.isLightScreen) {\n      baseDamage = Math.floor(baseDamage * screenMultiplier);\n      desc.isLightScreen = true;\n    }\n  }\n\n  if (field.gameType !== 'Singles' &&\n      ['allAdjacent', 'allAdjacentFoes'].includes(move.target)) {\n    baseDamage = Math.floor((baseDamage * 3) / 4);\n  }\n\n  if ((field.hasWeather('Sun') && move.hasType('Fire')) ||\n      (field.hasWeather('Rain') && move.hasType('Water'))) {\n    baseDamage = Math.floor(baseDamage * 1.5);\n    desc.weather = field.weather;\n  } else if (\n    (field.hasWeather('Sun') && move.hasType('Water')) ||\n    (field.hasWeather('Rain') && move.hasType('Fire')) ||\n    (move.named('Solar Beam') && field.hasWeather('Rain', 'Sand', 'Hail'))\n  ) {\n    baseDamage = Math.floor(baseDamage * 0.5);\n    desc.weather = field.weather;\n  }\n\n  if (attacker.hasAbility('Flash Fire') && attacker.abilityOn && move.hasType('Fire')) {\n    baseDamage = Math.floor(baseDamage * 1.5);\n    desc.attackerAbility = 'Flash Fire';\n  }\n\n  baseDamage += 2;\n\n  if (isCritical) {\n    if (attacker.hasAbility('Sniper')) {\n      baseDamage *= 3;\n      desc.attackerAbility = attacker.ability;\n    } else {\n      baseDamage *= 2;\n    }\n    desc.isCritical = isCritical;\n  }\n\n  if (attacker.hasItem('Life Orb')) {\n    baseDamage = Math.floor(baseDamage * 1.3);\n    desc.attackerItem = attacker.item;\n  }\n\n  if (move.named('Pursuit') && field.defenderSide.isSwitching === 'out') {\n    // technician negates switching boost, thanks DaWoblefet\n    if (attacker.hasAbility('Technician')) {\n      baseDamage = Math.floor(baseDamage * 1);\n    } else {\n      baseDamage = Math.floor(baseDamage * 2);\n      desc.isSwitching = 'out';\n    }\n  }\n\n  // the random factor is applied between the LO mod and the STAB mod, so don't apply anything\n  // below this until we're inside the loop\n  let stabMod = 1;\n  if (move.hasType(...attacker.types)) {\n    if (attacker.hasAbility('Adaptability')) {\n      stabMod = 2;\n      desc.attackerAbility = attacker.ability;\n    } else {\n      stabMod = 1.5;\n    }\n  }\n\n  let filterMod = 1;\n  if (defender.hasAbility('Filter', 'Solid Rock') && typeEffectiveness > 1) {\n    filterMod = 0.75;\n    desc.defenderAbility = defender.ability;\n  }\n  let ebeltMod = 1;\n  if (attacker.hasItem('Expert Belt') && typeEffectiveness > 1) {\n    ebeltMod = 1.2;\n    desc.attackerItem = attacker.item;\n  }\n  let tintedMod = 1;\n  if (attacker.hasAbility('Tinted Lens') && typeEffectiveness < 1) {\n    tintedMod = 2;\n    desc.attackerAbility = attacker.ability;\n  }\n  let berryMod = 1;\n  if (move.hasType(getBerryResistType(defender.item)) &&\n    (typeEffectiveness > 1 || move.hasType('Normal'))) {\n    berryMod = 0.5;\n    desc.defenderItem = defender.item;\n  }\n\n  const damage: number[] = [];\n  for (let i = 0; i < 16; i++) {\n    damage[i] = Math.floor((baseDamage * (85 + i)) / 100);\n    damage[i] = Math.floor(damage[i] * stabMod);\n    damage[i] = Math.floor(damage[i] * type1Effectiveness);\n    damage[i] = Math.floor(damage[i] * type2Effectiveness);\n    damage[i] = Math.floor(damage[i] * filterMod);\n    damage[i] = Math.floor(damage[i] * ebeltMod);\n    damage[i] = Math.floor(damage[i] * tintedMod);\n    damage[i] = Math.floor(damage[i] * berryMod);\n    damage[i] = Math.max(1, damage[i]);\n  }\n  result.damage = damage;\n\n  // #endregion\n\n  return result;\n}\n\nfunction getSimpleModifiedStat(stat: number, mod: number) {\n  const simpleMod = Math.min(6, Math.max(-6, mod * 2));\n  return simpleMod > 0\n    ? Math.floor((stat * (2 + simpleMod)) / 2)\n    : simpleMod < 0 ? Math.floor((stat * 2) / (2 - simpleMod)) : stat;\n}\n","import {Generation, AbilityName} from '../data/interface';\nimport {toID} from '../util';\nimport {\n  getItemBoostType,\n  getNaturalGift,\n  getFlingPower,\n  getBerryResistType,\n  getTechnoBlast,\n} from '../items';\nimport {RawDesc} from '../desc';\nimport {Field} from '../field';\nimport {Move} from '../move';\nimport {Pokemon} from '../pokemon';\nimport {Result} from '../result';\nimport {\n  chainMods,\n  checkAirLock,\n  checkDownload,\n  checkForecast,\n  checkInfiltrator,\n  checkIntimidate,\n  checkItem,\n  checkMultihitBoost,\n  checkSeedBoost,\n  checkWonderRoom,\n  computeFinalStats,\n  countBoosts,\n  getBaseDamage,\n  getEVDescriptionText,\n  getFinalDamage,\n  getModifiedStat,\n  getMoveEffectiveness,\n  getWeightFactor,\n  handleFixedDamageMoves,\n  isGrounded,\n  OF16, OF32,\n  pokeRound,\n} from './util';\n\nexport function calculateBWXY(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field\n) {\n  // #region Initial\n\n  checkAirLock(attacker, field);\n  checkAirLock(defender, field);\n  checkForecast(attacker, field.weather);\n  checkForecast(defender, field.weather);\n  checkItem(attacker, field.isMagicRoom);\n  checkItem(defender, field.isMagicRoom);\n  checkWonderRoom(attacker, field.isWonderRoom);\n  checkWonderRoom(defender, field.isWonderRoom);\n  checkSeedBoost(attacker, field);\n  checkSeedBoost(defender, field);\n\n  computeFinalStats(gen, attacker, defender, field, 'def', 'spd', 'spe');\n\n  checkIntimidate(gen, attacker, defender);\n  checkIntimidate(gen, defender, attacker);\n  checkDownload(attacker, defender, field.isWonderRoom);\n  checkDownload(defender, attacker, field.isWonderRoom);\n\n  computeFinalStats(gen, attacker, defender, field, 'atk', 'spa');\n\n  checkInfiltrator(attacker, field.defenderSide);\n  checkInfiltrator(defender, field.attackerSide);\n\n  const desc: RawDesc = {\n    attackerName: attacker.name,\n    moveName: move.name,\n    defenderName: defender.name,\n    isWonderRoom: field.isWonderRoom,\n  };\n\n  const result = new Result(gen, attacker, defender, move, field, 0, desc);\n\n  if (move.category === 'Status' && !move.named('Nature Power')) {\n    return result;\n  }\n\n  if (field.defenderSide.isProtected && !move.breaksProtect) {\n    desc.isProtected = true;\n    return result;\n  }\n\n  if (attacker.hasAbility('Mold Breaker', 'Teravolt', 'Turboblaze')) {\n    defender.ability = '' as AbilityName;\n    desc.attackerAbility = attacker.ability;\n  }\n\n  const isCritical =\n    move.isCrit && !defender.hasAbility('Battle Armor', 'Shell Armor') && move.timesUsed === 1;\n\n  if (move.named('Weather Ball')) {\n    move.type =\n      field.hasWeather('Sun', 'Harsh Sunshine') ? 'Fire'\n      : field.hasWeather('Rain', 'Heavy Rain') ? 'Water'\n      : field.hasWeather('Sand') ? 'Rock'\n      : field.hasWeather('Hail') ? 'Ice'\n      : 'Normal';\n    desc.weather = field.weather;\n    desc.moveType = move.type;\n  } else if (move.named('Judgment') && attacker.item && attacker.item.includes('Plate')) {\n    move.type = getItemBoostType(attacker.item)!;\n  } else if (move.named('Techno Blast') && attacker.item && attacker.item.includes('Drive')) {\n    move.type = getTechnoBlast(attacker.item)!;\n  } else if (move.named('Natural Gift') && attacker.item && attacker.item.includes('Berry')) {\n    const gift = getNaturalGift(gen, attacker.item)!;\n    move.type = gift.t;\n    move.bp = gift.p;\n    desc.attackerItem = attacker.item;\n    desc.moveBP = move.bp;\n    desc.moveType = move.type;\n  } else if (move.named('Nature Power')) {\n    if (gen.num === 5) {\n      move.type = 'Ground';\n    } else {\n      move.type =\n        field.hasTerrain('Electric') ? 'Electric'\n        : field.hasTerrain('Grassy') ? 'Grass'\n        : field.hasTerrain('Misty') ? 'Fairy'\n        : 'Normal';\n    }\n  }\n\n  let isAerilate = false;\n  let isPixilate = false;\n  let isRefrigerate = false;\n  let isNormalize = false;\n  const noTypeChange =\n    move.named('Judgment', 'Nature Power', 'Techo Blast', 'Natural Gift', 'Weather Ball');\n\n  if (!move.isZ && !noTypeChange) {\n    const normal = move.hasType('Normal');\n    if ((isAerilate = attacker.hasAbility('Aerilate') && normal)) {\n      move.type = 'Flying';\n    } else if ((isPixilate = attacker.hasAbility('Pixilate') && normal)) {\n      move.type = 'Fairy';\n    } else if ((isRefrigerate = attacker.hasAbility('Refrigerate') && normal)) {\n      move.type = 'Ice';\n    } else if ((isNormalize = attacker.hasAbility('Normalize'))) {\n      move.type = 'Normal';\n    }\n    if (isPixilate || isRefrigerate || isAerilate || isNormalize) {\n      desc.attackerAbility = attacker.ability;\n    }\n  }\n\n  if (attacker.hasAbility('Gale Wings') && move.hasType('Flying')) {\n    move.priority = 1;\n    desc.attackerAbility = attacker.ability;\n  }\n\n  const isGhostRevealed = attacker.hasAbility('Scrappy') || field.defenderSide.isForesight;\n  const type1Effectiveness =\n    getMoveEffectiveness(gen, move, defender.types[0], isGhostRevealed, field.isGravity);\n  const type2Effectiveness = defender.types[1]\n    ? getMoveEffectiveness(gen, move, defender.types[1], isGhostRevealed, field.isGravity)\n    : 1;\n  let typeEffectiveness = type1Effectiveness * type2Effectiveness;\n\n  let resistedKnockOffDamage =\n    !defender.item ||\n    (defender.named('Giratina-Origin') && defender.hasItem('Griseous Orb')) ||\n    (defender.name.includes('Arceus') && defender.item.includes('Plate')) ||\n    (defender.name.includes('Genesect') && defender.item.includes('Drive')) ||\n    (defender.named('Groudon', 'Groudon-Primal') && defender.hasItem('Red Orb')) ||\n    (defender.named('Kyogre', 'Kyogre-Primal') && defender.hasItem('Blue Orb'));\n\n  // The last case only applies when the Pokemon is holding the Mega Stone that matches its species\n  // (or when it's already a Mega-Evolution)\n  if (!resistedKnockOffDamage && defender.item) {\n    const item = gen.items.get(toID(defender.item))!;\n    resistedKnockOffDamage = !!(item.megaEvolves && defender.name.includes(item.megaEvolves));\n  }\n\n  if (typeEffectiveness === 0 && move.named('Thousand Arrows')) {\n    typeEffectiveness = 1;\n  } else if (typeEffectiveness === 0 && move.hasType('Ground') &&\n    defender.hasItem('Iron Ball') && !defender.hasAbility('Klutz')) {\n    typeEffectiveness = 1;\n  } else if (typeEffectiveness === 0 && defender.hasItem('Ring Target')) {\n    const effectiveness = gen.types.get(toID(move.type))!.effectiveness;\n    if (effectiveness[defender.types[0]]! === 0) {\n      typeEffectiveness = type2Effectiveness;\n    } else if (defender.types[1] && effectiveness[defender.types[1]]! === 0) {\n      typeEffectiveness = type1Effectiveness;\n    }\n  }\n\n  if (typeEffectiveness === 0) {\n    return result;\n  }\n\n  if ((move.named('Sky Drop') &&\n        (defender.hasType('Flying') || defender.weightkg >= 200 || field.isGravity)) ||\n      (move.named('Synchronoise') && !defender.hasType(attacker.types[0]) &&\n        (!attacker.types[1] || !defender.hasType(attacker.types[1]))) ||\n      (move.named('Dream Eater') && !defender.hasStatus('slp'))\n  ) {\n    return result;\n  }\n\n  if (\n    (field.hasWeather('Harsh Sunshine') && move.hasType('Water')) ||\n    (field.hasWeather('Heavy Rain') && move.hasType('Fire'))\n  ) {\n    desc.weather = field.weather;\n    return result;\n  }\n\n  if (field.hasWeather('Strong Winds') && defender.hasType('Flying') &&\n      gen.types.get(toID(move.type))!.effectiveness['Flying']! > 1) {\n    typeEffectiveness /= 2;\n    desc.weather = field.weather;\n  }\n\n  if ((defender.hasAbility('Wonder Guard') && typeEffectiveness <= 1) ||\n      (move.hasType('Grass') && defender.hasAbility('Sap Sipper')) ||\n      (move.hasType('Fire') && defender.hasAbility('Flash Fire')) ||\n      (move.hasType('Water') && defender.hasAbility('Dry Skin', 'Storm Drain', 'Water Absorb')) ||\n      (move.hasType('Electric') &&\n        defender.hasAbility('Lightning Rod', 'Motor Drive', 'Volt Absorb')) ||\n      (move.hasType('Ground') &&\n        !field.isGravity && !move.named('Thousand Arrows') &&\n        !defender.hasItem('Iron Ball') && defender.hasAbility('Levitate')) ||\n      (move.flags.bullet && defender.hasAbility('Bulletproof')) ||\n      (move.flags.sound && defender.hasAbility('Soundproof'))\n  ) {\n    desc.defenderAbility = defender.ability;\n    return result;\n  }\n\n  if (move.hasType('Ground') && !move.named('Thousand Arrows') &&\n      !field.isGravity && defender.hasItem('Air Balloon')) {\n    desc.defenderItem = defender.item;\n    return result;\n  }\n\n  if (move.priority > 0 && field.hasTerrain('Psychic') && isGrounded(defender, field)) {\n    desc.terrain = field.terrain;\n    return result;\n  }\n\n  desc.HPEVs = `${defender.evs.hp} HP`;\n\n  const fixedDamage = handleFixedDamageMoves(attacker, move);\n  if (fixedDamage) {\n    if (attacker.hasAbility('Parental Bond')) {\n      result.damage = [fixedDamage, fixedDamage];\n      desc.attackerAbility = attacker.ability;\n    } else {\n      result.damage = fixedDamage;\n    }\n    return result;\n  }\n\n  if (move.named('Final Gambit')) {\n    result.damage = attacker.curHP();\n    return result;\n  }\n\n  if (move.hits > 1) {\n    desc.hits = move.hits;\n  }\n\n  const turnOrder = attacker.stats.spe > defender.stats.spe ? 'first' : 'last';\n\n  // #endregion\n  // #region Base Power\n\n  let basePower: number;\n\n  switch (move.name) {\n  case 'Payback':\n    basePower = move.bp * (turnOrder === 'last' ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Pursuit':\n    const switching = field.defenderSide.isSwitching === 'out';\n    basePower = move.bp * (switching ? 2 : 1);\n    if (switching) desc.isSwitching = 'out';\n    desc.moveBP = basePower;\n    break;\n  case 'Electro Ball':\n    if (defender.stats.spe === 0) defender.stats.spe = 1;\n    const r = Math.floor(attacker.stats.spe / defender.stats.spe);\n    basePower = r >= 4 ? 150 : r >= 3 ? 120 : r >= 2 ? 80 : r >= 1 ? 60 : 40;\n    desc.moveBP = basePower;\n    break;\n  case 'Gyro Ball':\n    if (attacker.stats.spe === 0) attacker.stats.spe = 1;\n    basePower = Math.min(150, Math.floor((25 * defender.stats.spe) / attacker.stats.spe) + 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Punishment':\n    basePower = Math.min(200, 60 + 20 * countBoosts(gen, defender.boosts));\n    desc.moveBP = basePower;\n    break;\n  case 'Low Kick':\n  case 'Grass Knot':\n    const w = defender.weightkg * getWeightFactor(defender);\n    basePower = w >= 200 ? 120 : w >= 100 ? 100 : w >= 50 ? 80 : w >= 25 ? 60 : w >= 10 ? 40 : 20;\n    desc.moveBP = basePower;\n    break;\n  case 'Hex':\n    basePower = move.bp * (defender.status ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Heavy Slam':\n  case 'Heat Crash':\n    const wr =\n        (attacker.weightkg * getWeightFactor(attacker)) /\n        (defender.weightkg * getWeightFactor(defender));\n    basePower = wr >= 5 ? 120 : wr >= 4 ? 100 : wr >= 3 ? 80 : wr >= 2 ? 60 : 40;\n    desc.moveBP = basePower;\n    break;\n  case 'Stored Power':\n  case 'Power Trip':\n    basePower = 20 + 20 * countBoosts(gen, attacker.boosts);\n    desc.moveBP = basePower;\n    break;\n  case 'Acrobatics':\n    basePower = move.bp * (attacker.hasItem('Flying Gem') || !attacker.item ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Assurance':\n    basePower = move.bp * (defender.hasAbility('Parental Bond (Child)') ? 2 : 1);\n    // NOTE: desc.attackerAbility = 'Parental Bond' will already reflect this boost\n    break;\n  case 'Wake-Up Slap':\n    basePower = move.bp * (defender.hasStatus('slp') ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Smelling Salts':\n    basePower = move.bp * (defender.hasStatus('par') ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Weather Ball':\n    basePower = move.bp * (field.weather && !field.hasWeather('Strong Winds') ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Fling':\n    basePower = getFlingPower(attacker.item);\n    desc.moveBP = basePower;\n    desc.attackerItem = attacker.item;\n    break;\n  case 'Eruption':\n  case 'Water Spout':\n    basePower = Math.max(1, Math.floor((150 * attacker.curHP()) / attacker.maxHP()));\n    desc.moveBP = basePower;\n    break;\n  case 'Flail':\n  case 'Reversal':\n    const p = Math.floor((48 * attacker.curHP()) / attacker.maxHP());\n    basePower = p <= 1 ? 200 : p <= 4 ? 150 : p <= 9 ? 100 : p <= 16 ? 80 : p <= 32 ? 40 : 20;\n    desc.moveBP = basePower;\n    break;\n  case 'Nature Power':\n    if (gen.num === 5) {\n      move.category = 'Physical';\n      move.target = 'allAdjacent';\n      basePower = 100;\n      desc.moveName = 'Earthquake';\n    } else {\n      move.category = 'Special';\n      move.secondaries = true;\n      switch (field.terrain) {\n      case 'Electric':\n        basePower = 90;\n        desc.moveName = 'Thunderbolt';\n        break;\n      case 'Grassy':\n        basePower = 90;\n        desc.moveName = 'Energy Ball';\n        break;\n      case 'Misty':\n        basePower = 95;\n        desc.moveName = 'Moonblast';\n        break;\n      default:\n        basePower = 80;\n        desc.moveName = 'Tri Attack';\n      }\n    }\n    break;\n  // Triple Kick's damage doubles after each consecutive hit (10, 20, 30), this is a hack\n  case 'Triple Kick':\n    basePower = move.hits === 2 ? 15 : move.hits === 3 ? 30 : 10;\n    desc.moveBP = basePower;\n    break;\n  case 'Crush Grip':\n  case 'Wring Out':\n    basePower = 100 * Math.floor((defender.curHP() * 4096) / defender.maxHP());\n    basePower = Math.floor(Math.floor((120 * basePower + 2048 - 1) / 4096) / 100) || 1;\n    desc.moveBP = basePower;\n    break;\n  default:\n    basePower = move.bp;\n  }\n\n  if (basePower === 0) {\n    return result;\n  }\n\n  const bpMods = [];\n\n  // Use BasePower after moves with custom BP to determine if Technician should boost\n  if ((attacker.hasAbility('Technician') && basePower <= 60) ||\n      (attacker.hasAbility('Flare Boost') &&\n       attacker.hasStatus('brn') && move.category === 'Special') ||\n      (attacker.hasAbility('Toxic Boost') &&\n       attacker.hasStatus('psn', 'tox') && move.category === 'Physical')\n  ) {\n    bpMods.push(6144);\n    desc.attackerAbility = attacker.ability;\n  } else if (attacker.hasAbility('Analytic') && turnOrder !== 'first') {\n    bpMods.push(5325);\n    desc.attackerAbility = attacker.ability;\n  } else if (\n    attacker.hasAbility('Sand Force') &&\n    field.hasWeather('Sand') &&\n    move.hasType('Rock', 'Ground', 'Steel')\n  ) {\n    bpMods.push(5325);\n    desc.attackerAbility = attacker.ability;\n    desc.weather = field.weather;\n  } else if (\n    (attacker.hasAbility('Reckless') && (move.recoil || move.hasCrashDamage)) ||\n    (attacker.hasAbility('Iron Fist') && move.flags.punch)\n  ) {\n    bpMods.push(4915);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if (defender.hasAbility('Heatproof') && move.hasType('Fire')) {\n    bpMods.push(2048);\n    desc.defenderAbility = defender.ability;\n  } else if (defender.hasAbility('Dry Skin') && move.hasType('Fire')) {\n    bpMods.push(5120);\n    desc.defenderAbility = defender.ability;\n  }\n\n  if (attacker.hasAbility('Sheer Force') && move.secondaries) {\n    bpMods.push(5325);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if (attacker.hasAbility('Rivalry') && ![attacker.gender, defender.gender].includes('N')) {\n    if (attacker.gender === defender.gender) {\n      bpMods.push(5120);\n      desc.rivalry = 'buffed';\n    } else {\n      bpMods.push(3072);\n      desc.rivalry = 'nerfed';\n    }\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if (attacker.item && getItemBoostType(attacker.item) === move.type) {\n    bpMods.push(4915);\n    desc.attackerItem = attacker.item;\n  } else if (\n    (attacker.hasItem('Muscle Band') && move.category === 'Physical') ||\n    (attacker.hasItem('Wise Glasses') && move.category === 'Special')\n  ) {\n    bpMods.push(4505);\n    desc.attackerItem = attacker.item;\n  } else if (\n    (attacker.hasItem('Adamant Orb') &&\n     attacker.named('Dialga') &&\n     move.hasType('Steel', 'Dragon')) ||\n    (attacker.hasItem('Lustrous Orb') &&\n     attacker.named('Palkia') &&\n     move.hasType('Water', 'Dragon')) ||\n    (attacker.hasItem('Griseous Orb') &&\n     attacker.named('Giratina-Origin') &&\n     move.hasType('Ghost', 'Dragon'))\n  ) {\n    bpMods.push(4915);\n    desc.attackerItem = attacker.item;\n  } else if (attacker.hasItem(`${move.type} Gem`)) {\n    bpMods.push(gen.num > 5 ? 5325 : 6144);\n    desc.attackerItem = attacker.item;\n  }\n\n  if ((move.named('Facade') && attacker.hasStatus('brn', 'par', 'psn', 'tox')) ||\n      (move.named('Brine') && defender.curHP() <= defender.maxHP() / 2) ||\n      (move.named('Venoshock') && defender.hasStatus('psn', 'tox'))) {\n    bpMods.push(8192);\n    desc.moveBP = basePower * 2;\n  } else if (gen.num > 5 && move.named('Knock Off') && !resistedKnockOffDamage) {\n    bpMods.push(6144);\n    desc.moveBP = basePower * 1.5;\n  } else if (move.named('Solar Beam') && field.hasWeather('Rain', 'Heavy Rain', 'Sand', 'Hail')) {\n    bpMods.push(2048);\n    desc.moveBP = basePower / 2;\n    desc.weather = field.weather;\n  }\n\n  if (field.attackerSide.isHelpingHand) {\n    bpMods.push(6144);\n    desc.isHelpingHand = true;\n  }\n\n  if (isAerilate || isPixilate || isRefrigerate || isNormalize) {\n    bpMods.push(5325);\n    desc.attackerAbility = attacker.ability;\n  } else if (\n    (attacker.hasAbility('Mega Launcher') && move.flags.pulse) ||\n    (attacker.hasAbility('Strong Jaw') && move.flags.bite)\n  ) {\n    bpMods.push(6144);\n    desc.attackerAbility = attacker.ability;\n  } else if (attacker.hasAbility('Tough Claws') && move.flags.contact) {\n    bpMods.push(5325);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  const aura = `${move.type} Aura`;\n  const isAttackerAura = attacker.hasAbility(aura);\n  const isDefenderAura = defender.hasAbility(aura);\n  const isUserAuraBreak = attacker.hasAbility('Aura Break') || defender.hasAbility('Aura Break');\n  const isFieldAuraBreak = field.isAuraBreak;\n  const isFieldFairyAura = field.isFairyAura && move.type === 'Fairy';\n  const isFieldDarkAura = field.isDarkAura && move.type === 'Dark';\n  const auraActive = isAttackerAura || isDefenderAura || isFieldFairyAura || isFieldDarkAura;\n  const auraBreak = isFieldAuraBreak || isUserAuraBreak;\n  if (auraActive) {\n    if (auraBreak) {\n      bpMods.push(3072);\n      desc.attackerAbility = attacker.ability;\n      desc.defenderAbility = defender.ability;\n    } else {\n      bpMods.push(5448);\n      if (isAttackerAura) desc.attackerAbility = attacker.ability;\n      if (isDefenderAura) desc.defenderAbility = defender.ability;\n    }\n  }\n\n  // It's not actually clear if the terrain modifiers are base damage mods like weather or are\n  // base power mods like in Gen 7+, but the research doesn't exist for this yet so we match PS here\n  if (isGrounded(attacker, field)) {\n    if ((field.hasTerrain('Electric') && move.hasType('Electric')) ||\n        (field.hasTerrain('Grassy') && move.hasType('Grass'))\n    ) {\n      bpMods.push(6144);\n      desc.terrain = field.terrain;\n    }\n  }\n  if (isGrounded(defender, field)) {\n    if ((field.hasTerrain('Misty') && move.hasType('Dragon')) ||\n        (field.hasTerrain('Grassy') && move.named('Bulldoze', 'Earthquake'))\n    ) {\n      bpMods.push(2048);\n      desc.terrain = field.terrain;\n    }\n  }\n\n  basePower = OF16(Math.max(1, pokeRound((basePower * chainMods(bpMods, 41, 2097152)) / 4096)));\n\n  // #endregion\n  // #region (Special) Attack\n\n  let attack: number;\n  const attackSource = move.named('Foul Play') ? defender : attacker;\n  const attackStat = move.category === 'Special' ? 'spa' : 'atk';\n  desc.attackEVs =\n    move.named('Foul Play')\n      ? getEVDescriptionText(gen, defender, attackStat, defender.nature)\n      : getEVDescriptionText(gen, attacker, attackStat, attacker.nature);\n\n  if (attackSource.boosts[attackStat] === 0 ||\n      (isCritical && attackSource.boosts[attackStat] < 0)) {\n    attack = attackSource.rawStats[attackStat];\n  } else if (defender.hasAbility('Unaware')) {\n    attack = attackSource.rawStats[attackStat];\n    desc.defenderAbility = defender.ability;\n  } else {\n    attack = attackSource.stats[attackStat];\n    desc.attackBoost = attackSource.boosts[attackStat];\n  }\n\n  // unlike all other attack modifiers, Hustle gets applied directly\n  if (attacker.hasAbility('Hustle') && move.category === 'Physical') {\n    attack = pokeRound((attack * 3) / 2);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  const atMods = [];\n  if (defender.hasAbility('Thick Fat') && move.hasType('Fire', 'Ice')) {\n    atMods.push(2048);\n    desc.defenderAbility = defender.ability;\n  }\n\n  if ((attacker.hasAbility('Guts') && attacker.status && move.category === 'Physical') ||\n      (attacker.curHP() <= attacker.maxHP() / 3 &&\n        ((attacker.hasAbility('Overgrow') && move.hasType('Grass')) ||\n         (attacker.hasAbility('Blaze') && move.hasType('Fire')) ||\n         (attacker.hasAbility('Torrent') && move.hasType('Water')) ||\n         (attacker.hasAbility('Swarm') && move.hasType('Bug')))) ||\n      (move.category === 'Special' && attacker.abilityOn && attacker.hasAbility('Plus', 'Minus'))\n  ) {\n    atMods.push(6144);\n    desc.attackerAbility = attacker.ability;\n  } else if (attacker.hasAbility('Flash Fire') && attacker.abilityOn && move.hasType('Fire')) {\n    atMods.push(6144);\n    desc.attackerAbility = 'Flash Fire';\n  } else if (\n    (attacker.hasAbility('Solar Power') &&\n     field.hasWeather('Sun', 'Harsh Sunshine') &&\n     move.category === 'Special') ||\n    (attacker.named('Cherrim') &&\n     attacker.hasAbility('Flower Gift') &&\n     field.hasWeather('Sun', 'Harsh Sunshine') &&\n     move.category === 'Physical')\n  ) {\n    atMods.push(6144);\n    desc.attackerAbility = attacker.ability;\n    desc.weather = field.weather;\n  } else if (\n    field.attackerSide.isFlowerGift &&\n    field.hasWeather('Sun', 'Harsh Sunshine') &&\n    move.category === 'Physical') {\n    atMods.push(6144);\n    desc.weather = field.weather;\n    desc.isFlowerGiftAttacker = true;\n  } else if (\n    (attacker.hasAbility('Defeatist') && attacker.curHP() <= attacker.maxHP() / 2) ||\n    (attacker.hasAbility('Slow Start') && attacker.abilityOn && move.category === 'Physical')\n  ) {\n    atMods.push(2048);\n    desc.attackerAbility = attacker.ability;\n  } else if (attacker.hasAbility('Huge Power', 'Pure Power') && move.category === 'Physical') {\n    atMods.push(8192);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if ((attacker.hasItem('Thick Club') &&\n       attacker.named('Cubone', 'Marowak', 'Marowak-Alola') &&\n       move.category === 'Physical') ||\n      (attacker.hasItem('Deep Sea Tooth') &&\n       attacker.named('Clamperl') &&\n       move.category === 'Special') ||\n      (attacker.hasItem('Light Ball') && attacker.name.startsWith('Pikachu') && !move.isZ)\n  ) {\n    atMods.push(8192);\n    desc.attackerItem = attacker.item;\n  } else if (\n    (attacker.hasItem('Soul Dew') &&\n      attacker.named('Latios', 'Latias', 'Latios-Mega', 'Latias-Mega') &&\n      move.category === 'Special') ||\n    (attacker.hasItem('Choice Band') && move.category === 'Physical') ||\n    (attacker.hasItem('Choice Specs') && move.category === 'Special')\n  ) {\n    atMods.push(6144);\n    desc.attackerItem = attacker.item;\n  }\n\n  attack = OF16(Math.max(1, pokeRound((attack * chainMods(atMods, 410, 131072)) / 4096)));\n\n  // #endregion\n  // #region (Special) Defense\n\n  let defense: number;\n  const defenseStat = move.overrideDefensiveStat || move.category === 'Physical' ? 'def' : 'spd';\n  const hitsPhysical = defenseStat === 'def';\n  desc.defenseEVs = getEVDescriptionText(gen, defender, defenseStat, defender.nature);\n  if (defender.boosts[defenseStat] === 0 ||\n    (isCritical && defender.boosts[defenseStat] > 0) ||\n    move.ignoreDefensive) {\n    defense = defender.rawStats[defenseStat];\n  } else if (attacker.hasAbility('Unaware')) {\n    defense = defender.rawStats[defenseStat];\n    desc.attackerAbility = attacker.ability;\n  } else {\n    defense = defender.stats[defenseStat];\n    desc.defenseBoost = defender.boosts[defenseStat];\n  }\n\n  // unlike all other defense modifiers, Sandstorm SpD boost gets applied directly\n  if (field.hasWeather('Sand') && defender.hasType('Rock') && !hitsPhysical) {\n    defense = pokeRound((defense * 3) / 2);\n    desc.weather = field.weather;\n  }\n\n  const dfMods = [];\n  if (defender.hasAbility('Marvel Scale') && defender.status && hitsPhysical) {\n    dfMods.push(6144);\n    desc.defenderAbility = defender.ability;\n  } else if (\n    defender.named('Cherrim') &&\n    defender.hasAbility('Flower Gift') &&\n    field.hasWeather('Sun', 'Harsh Sunshine') &&\n    !hitsPhysical\n  ) {\n    dfMods.push(6144);\n    desc.defenderAbility = defender.ability;\n    desc.weather = field.weather;\n  } else if (\n    field.defenderSide.isFlowerGift &&\n    field.hasWeather('Sun', 'Harsh Sunshine') &&\n    !hitsPhysical) {\n    dfMods.push(6144);\n    desc.weather = field.weather;\n    desc.isFlowerGiftDefender = true;\n  }\n\n  if (field.hasTerrain('Grassy') && defender.hasAbility('Grass Pelt') && hitsPhysical) {\n    dfMods.push(6144);\n    desc.defenderAbility = defender.ability;\n  }\n\n  if ((!hitsPhysical && defender.hasItem('Soul Dew') &&\n       defender.named('Latios', 'Latias', 'Latios-Mega', 'Latias-Mega')) ||\n      (defender.hasItem('Eviolite') && gen.species.get(toID(defender.name))?.nfe) ||\n      (!hitsPhysical && defender.hasItem('Assault Vest'))) {\n    dfMods.push(6144);\n    desc.defenderItem = defender.item;\n  }\n\n  if ((defender.hasItem('Metal Powder') && defender.named('Ditto') && hitsPhysical) ||\n      (defender.hasItem('Deep Sea Scale') && defender.named('Clamperl') && !hitsPhysical)) {\n    dfMods.push(8192);\n    desc.defenderItem = defender.item;\n  }\n\n  if (defender.hasAbility('Fur Coat') && hitsPhysical) {\n    dfMods.push(8192);\n    desc.defenderAbility = defender.ability;\n  }\n\n  defense = OF16(Math.max(1, pokeRound((defense * chainMods(dfMods, 410, 131072)) / 4096)));\n\n  // #endregion\n  // #region Damage\n\n  let baseDamage = getBaseDamage(attacker.level, basePower, attack, defense);\n\n  const isSpread = field.gameType !== 'Singles' &&\n    ['allAdjacent', 'allAdjacentFoes'].includes(move.target);\n  if (isSpread) {\n    baseDamage = pokeRound(OF32(baseDamage * 3072) / 4096);\n  }\n\n  if (attacker.hasAbility('Parental Bond (Child)')) {\n    baseDamage = pokeRound(OF32(baseDamage * 2048) / 4096);\n  }\n\n  if ((field.hasWeather('Sun', 'Harsh Sunshine') && move.hasType('Fire')) ||\n      (field.hasWeather('Rain', 'Heavy Rain') && move.hasType('Water'))) {\n    baseDamage = pokeRound(OF32(baseDamage * 6144) / 4096);\n    desc.weather = field.weather;\n  } else if (\n    (field.hasWeather('Sun') && move.hasType('Water')) ||\n    (field.hasWeather('Rain') && move.hasType('Fire'))\n  ) {\n    baseDamage = pokeRound(OF32(baseDamage * 2048) / 4096);\n    desc.weather = field.weather;\n  }\n\n  if (isCritical) {\n    baseDamage = Math.floor(OF32(baseDamage * (gen.num > 5 ? 1.5 : 2)));\n    desc.isCritical = isCritical;\n  }\n\n  // the random factor is applied between the crit mod and the stab mod, so don't apply anything\n  // below this until we're inside the loop\n  let stabMod = 4096;\n  if (attacker.hasType(move.type)) {\n    if (attacker.hasAbility('Adaptability')) {\n      stabMod = 8192;\n      desc.attackerAbility = attacker.ability;\n    } else {\n      stabMod = 6144;\n    }\n  } else if (attacker.hasAbility('Protean')) {\n    stabMod = 6144;\n    desc.attackerAbility = attacker.ability;\n  }\n\n  const applyBurn =\n    attacker.hasStatus('brn') &&\n    move.category === 'Physical' &&\n    !attacker.hasAbility('Guts') &&\n    !(move.named('Facade') && gen.num === 6);\n  desc.isBurned = applyBurn;\n\n  const finalMods = [];\n\n  if (field.defenderSide.isReflect && move.category === 'Physical' && !isCritical) {\n    finalMods.push(field.gameType !== 'Singles' ? (gen.num > 5 ? 2732 : 2703) : 2048);\n    desc.isReflect = true;\n  } else if (field.defenderSide.isLightScreen && move.category === 'Special' && !isCritical) {\n    finalMods.push(field.gameType !== 'Singles' ? (gen.num > 5 ? 2732 : 2703) : 2048);\n    desc.isLightScreen = true;\n  }\n\n  if (defender.hasAbility('Multiscale') && defender.curHP() === defender.maxHP() &&\n      !field.defenderSide.isSR && (!field.defenderSide.spikes || defender.hasType('Flying')) &&\n      !attacker.hasAbility('Parental Bond (Child)')) {\n    finalMods.push(2048);\n    desc.defenderAbility = defender.ability;\n  }\n\n  if (attacker.hasAbility('Tinted Lens') && typeEffectiveness < 1) {\n    finalMods.push(8192);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if (field.defenderSide.isFriendGuard) {\n    finalMods.push(3072);\n    desc.isFriendGuard = true;\n  }\n\n  if (attacker.hasAbility('Sniper') && isCritical) {\n    finalMods.push(6144);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if (defender.hasAbility('Solid Rock', 'Filter') && typeEffectiveness > 1) {\n    finalMods.push(3072);\n    desc.defenderAbility = defender.ability;\n  }\n\n  if (attacker.hasItem('Metronome') && move.timesUsedWithMetronome! >= 1) {\n    const timesUsedWithMetronome = Math.floor(move.timesUsedWithMetronome!);\n    if (timesUsedWithMetronome <= 4) {\n      finalMods.push(4096 + timesUsedWithMetronome * 819);\n    } else {\n      finalMods.push(8192);\n    }\n    desc.attackerItem = attacker.item;\n  }\n\n  if (attacker.hasItem('Expert Belt') && typeEffectiveness > 1 && !move.isZ) {\n    finalMods.push(4915);\n    desc.attackerItem = attacker.item;\n  } else if (attacker.hasItem('Life Orb')) {\n    finalMods.push(5324);\n    desc.attackerItem = attacker.item;\n  }\n\n  if (move.hasType(getBerryResistType(defender.item)) &&\n      (typeEffectiveness > 1 || move.hasType('Normal')) &&\n      !attacker.hasAbility('Unnerve')) {\n    finalMods.push(2048);\n    desc.defenderItem = defender.item;\n  }\n\n  if (field.defenderSide.isProtected && move.isZ && attacker.item && attacker.item.includes(' Z')) {\n    finalMods.push(1024);\n    desc.isProtected = true;\n  }\n\n  const finalMod = chainMods(finalMods, 41, 131072);\n\n  let childDamage: number[] | undefined;\n  if (attacker.hasAbility('Parental Bond') && move.hits === 1 && !isSpread) {\n    const child = attacker.clone();\n    child.ability = 'Parental Bond (Child)' as AbilityName;\n    checkMultihitBoost(gen, child, defender, move, field, desc);\n    childDamage = calculateBWXY(gen, child, defender, move, field).damage as number[];\n    desc.attackerAbility = attacker.ability;\n  }\n\n  let damage: number[] = [];\n  for (let i = 0; i < 16; i++) {\n    damage[i] =\n      getFinalDamage(baseDamage, i, typeEffectiveness, applyBurn, stabMod, finalMod);\n  }\n\n  if (move.dropsStats && (move.timesUsed || 0) > 1) {\n    const simpleMultiplier = attacker.hasAbility('Simple') ? 2 : 1;\n\n    desc.moveTurns = `over ${move.timesUsed} turns`;\n    const hasWhiteHerb = attacker.hasItem('White Herb');\n    let usedWhiteHerb = false;\n    let dropCount = attacker.boosts[attackStat];\n    for (let times = 0; times < move.timesUsed!; times++) {\n      const newAttack = getModifiedStat(attack, dropCount);\n      let damageMultiplier = 0;\n      damage = damage.map(affectedAmount => {\n        if (times) {\n          const newBaseDamage = getBaseDamage(attacker.level, basePower, newAttack, defense);\n          const newFinalDamage = getFinalDamage(\n            newBaseDamage,\n            damageMultiplier,\n            typeEffectiveness,\n            applyBurn,\n            stabMod,\n            finalMod\n          );\n          damageMultiplier++;\n          return affectedAmount + newFinalDamage;\n        }\n        return affectedAmount;\n      });\n\n      if (attacker.hasAbility('Contrary')) {\n        dropCount = Math.min(6, dropCount + move.dropsStats);\n        desc.attackerAbility = attacker.ability;\n      } else {\n        dropCount = Math.max(-6, dropCount - move.dropsStats * simpleMultiplier);\n        if (attacker.hasAbility('Simple')) {\n          desc.attackerAbility = attacker.ability;\n        }\n      }\n\n      // the Pokémon hits THEN the stat rises / lowers\n      if (hasWhiteHerb && attacker.boosts[attackStat] < 0 && !usedWhiteHerb) {\n        dropCount += move.dropsStats * simpleMultiplier;\n        usedWhiteHerb = true;\n        desc.attackerItem = attacker.item;\n      }\n    }\n  }\n\n  desc.attackBoost =\n    move.named('Foul Play') ? defender.boosts[attackStat] : attacker.boosts[attackStat];\n\n  result.damage = childDamage ? [damage, childDamage] : damage;\n\n  // #endregion\n\n  return result;\n}\n","import {Generation, AbilityName, StatID, Terrain} from '../data/interface';\nimport {toID} from '../util';\nimport {\n  getBerryResistType,\n  getFlingPower,\n  getItemBoostType,\n  getMultiAttack,\n  getNaturalGift,\n  getTechnoBlast,\n  SEED_BOOSTED_STAT,\n} from '../items';\nimport {RawDesc} from '../desc';\nimport {Field} from '../field';\nimport {Move} from '../move';\nimport {Pokemon} from '../pokemon';\nimport {Result} from '../result';\nimport {\n  chainMods,\n  checkAirLock,\n  // checkDauntlessShield,\n  // checkDownload,\n  // checkEmbody,\n  checkForecast,\n  checkInfiltrator,\n  // checkIntimidate,\n  // checkIntrepidSword,\n  checkItem,\n  checkTeraformZero,\n  checkMultihitBoost,\n  // checkSeedBoost,\n  checkWonderRoom,\n  computeFinalStats,\n  countBoosts,\n  getBaseDamage,\n  getEVDescriptionText,\n  getFinalDamage,\n  getModifiedStat,\n  getQPBoostedStat,\n  getMoveEffectiveness,\n  getShellSideArmCategory,\n  getWeightFactor,\n  handleFixedDamageMoves,\n  isGrounded,\n  OF16, OF32,\n  pokeRound,\n  isQPActive,\n} from './util';\n\nexport function calculateSMSSSV(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field\n) {\n  // #region Initial\n\n  checkAirLock(attacker, field);\n  checkAirLock(defender, field);\n  checkTeraformZero(attacker, field);\n  checkTeraformZero(defender, field);\n  checkForecast(attacker, field.weather);\n  checkForecast(defender, field.weather);\n  checkItem(attacker, !!field.isMagicRoom);\n  checkItem(defender, !!field.isMagicRoom);\n  checkWonderRoom(attacker, !!field.isWonderRoom);\n  checkWonderRoom(defender, !!field.isWonderRoom);\n  // checkSeedBoost(attacker, field);\n  // checkSeedBoost(defender, field);\n  // checkDauntlessShield(attacker, gen);\n  // checkDauntlessShield(defender, gen);\n  // checkEmbody(attacker, gen);\n  // checkEmbody(defender, gen);\n\n  computeFinalStats(gen, attacker, defender, field, 'def', 'spd', 'spe');\n\n  // checkIntimidate(gen, attacker, defender);\n  // checkIntimidate(gen, defender, attacker);\n  // checkDownload(attacker, defender, !!field.isWonderRoom);\n  // checkDownload(defender, attacker, !!field.isWonderRoom);\n  // checkIntrepidSword(attacker, gen);\n  // checkIntrepidSword(defender, gen);\n\n  computeFinalStats(gen, attacker, defender, field, 'atk', 'spa');\n\n  checkInfiltrator(attacker, field.defenderSide);\n  checkInfiltrator(defender, field.attackerSide);\n\n  const atkTeraType = attacker.isTera ? attacker.teraType : undefined;\n  const defTeraType = defender.isTera ? defender.teraType : undefined;\n\n  const desc: RawDesc = {\n    attackerName: attacker.name,\n    attackerTera: atkTeraType,\n    moveName: move.name,\n    defenderName: defender.name,\n    defenderTera: defTeraType,\n    isDefenderDynamaxed: defender.isDynamaxed,\n    isWonderRoom: !!field.isWonderRoom,\n  };\n\n  const result = new Result(gen, attacker, defender, move, field, 0, desc);\n\n  if (move.category === 'Status' && !move.named('Nature Power')) {\n    return result;\n  }\n\n  const breaksProtect = move.breaksProtect || move.isZ || attacker.isDynamaxed ||\n  (attacker.hasAbility('Unseen Fist') && move.flags.contact);\n\n  if (field.defenderSide.isProtected && !breaksProtect) {\n    desc.isProtected = true;\n    return result;\n  }\n\n  const defenderIgnoresAbility = defender.hasAbility(\n    'Full Metal Body',\n    'Neutralizing Gas',\n    'Prism Armor',\n    'Shadow Shield'\n  );\n\n  const attackerIgnoresAbility = attacker.hasAbility('Mold Breaker', 'Teravolt', 'Turboblaze');\n  const moveIgnoresAbility = move.named(\n    'G-Max Drum Solo',\n    'G-Max Fire Ball',\n    'G-Max Hydrosnipe',\n    'Light That Burns the Sky',\n    'Menacing Moonraze Maelstrom',\n    'Moongeist Beam',\n    'Photon Geyser',\n    'Searing Sunraze Smash',\n    'Sunsteel Strike'\n  );\n  if (!defenderIgnoresAbility && !defender.hasAbility('Poison Heal') &&\n    (attackerIgnoresAbility || moveIgnoresAbility)) {\n    if (attackerIgnoresAbility) desc.attackerAbility = attacker.ability;\n    if (defender.hasItem('Ability Shield')) {\n      desc.defenderItem = defender.item;\n    } else {\n      defender.ability = '' as AbilityName;\n    }\n  }\n\n  const critStages = (move.highCritChance ? 1 : 0) + (attacker.isPumped || 0) + (attacker.hasAbility(\"Super Luck\") ? 1 : 0) + (attacker.hasItem(\"Scope Lens\", \"Razor Claw\") ? 1 : 0);\n  // Merciless does not ignore Shell Armor, damage dealt to a poisoned Pokemon with Shell Armor\n  // will not be a critical hit (UltiMario)\n  const isCritical = !defender.hasAbility('Battle Armor', 'Shell Armor') &&\n    ((move.isCrit || critStages >= 3) || (attacker.hasAbility('Merciless') && defender.hasStatus('psn', 'tox'))) &&\n    move.timesUsed === 1;\n\n  let type = move.type;\n  if (move.named('Weather Ball')) {\n    const holdingUmbrella = attacker.hasItem('Utility Umbrella');\n    type =\n      field.hasWeather('Sun', 'Harsh Sunshine') && !holdingUmbrella ? 'Fire'\n      : field.hasWeather('Rain', 'Heavy Rain') && !holdingUmbrella ? 'Water'\n      : field.hasWeather('Sand') ? 'Rock'\n      : field.hasWeather('Hail', 'Snow') ? 'Ice'\n      : 'Normal';\n    desc.weather = field.weather;\n    desc.moveType = type;\n  } else if (move.named('Judgment') && attacker.item && attacker.item.includes('Plate')) {\n    type = getItemBoostType(attacker.item)!;\n  } else if (move.named('Techno Blast') && attacker.item && attacker.item.includes('Drive')) {\n    type = getTechnoBlast(attacker.item)!;\n  } else if (move.named('Multi-Attack') && attacker.item && attacker.item.includes('Memory')) {\n    type = getMultiAttack(attacker.item)!;\n  } else if (move.named('Natural Gift') && attacker.item && attacker.item.includes('Berry')) {\n    const gift = getNaturalGift(gen, attacker.item)!;\n    type = gift.t;\n    desc.moveType = type;\n    desc.attackerItem = attacker.item;\n  } else if (\n    move.named('Nature Power') ||\n    (move.named('Terrain Pulse') && isGrounded(attacker, field))\n  ) {\n    type =\n      field.hasTerrain('Electric') ? 'Electric'\n      : field.hasTerrain('Grassy') ? 'Grass'\n      : field.hasTerrain('Misty') ? 'Fairy'\n      : field.hasTerrain('Psychic') ? 'Psychic'\n      : 'Normal';\n    desc.terrain = field.terrain;\n    desc.moveType = type;\n  } else if (move.named('Revelation Dance')) {\n    type = attacker.types[0];\n  } else if (move.named('Aura Wheel')) {\n    if (attacker.named('Morpeko')) {\n      type = 'Electric';\n    } else if (attacker.named('Morpeko-Hangry')) {\n      type = 'Dark';\n    }\n  } else if (move.named('Raging Bull')) {\n    if (attacker.named('Tauros-Paldea-Combat')) {\n      type = 'Fighting';\n    } else if (attacker.named('Tauros-Paldea-Blaze')) {\n      type = 'Fire';\n    } else if (attacker.named('Tauros-Paldea-Aqua')) {\n      type = 'Water';\n    }\n  } else if (move.named('Ivy Cudgel')) {\n    if (attacker.name.includes('Ogerpon-Cornerstone')) {\n      type = 'Rock';\n    } else if (attacker.name.includes('Ogerpon-Hearthflame')) {\n      type = 'Fire';\n    } else if (attacker.name.includes('Ogerpon-Wellspring')) {\n      type = 'Water';\n    }\n  }\n\n  let hasAteAbilityTypeChange = false;\n  let isAerilate = false;\n  let isPixilate = false;\n  let isRefrigerate = false;\n  let isGalvanize = false;\n  let isLiquidVoice = false;\n  let isNormalize = false;\n  const noTypeChange = move.named(\n    'Revelation Dance',\n    'Judgment',\n    'Nature Power',\n    'Techno Blast',\n    'Multi Attack',\n    'Natural Gift',\n    'Weather Ball',\n    'Terrain Pulse',\n  ) || (move.named('Tera Blast') && atkTeraType);\n\n  if (!move.isZ && !noTypeChange) {\n    const normal = move.hasType('Normal');\n    if ((isAerilate = attacker.hasAbility('Aerilate') && normal)) {\n      type = 'Flying';\n    } else if ((isGalvanize = attacker.hasAbility('Galvanize') && normal)) {\n      type = 'Electric';\n    } else if ((isLiquidVoice = attacker.hasAbility('Liquid Voice') && !!move.flags.sound)) {\n      type = 'Water';\n    } else if ((isPixilate = attacker.hasAbility('Pixilate') && normal)) {\n      type = 'Fairy';\n    } else if ((isRefrigerate = attacker.hasAbility('Refrigerate') && normal)) {\n      type = 'Ice';\n    } else if ((isNormalize = attacker.hasAbility('Normalize'))) { // Boosts any type\n      type = 'Normal';\n    }\n    if (isGalvanize || isPixilate || isRefrigerate || isAerilate || isNormalize) {\n      desc.attackerAbility = attacker.ability;\n      hasAteAbilityTypeChange = true;\n    } else if (isLiquidVoice) {\n      desc.attackerAbility = attacker.ability;\n    }\n  }\n\n  if (move.named('Tera Blast') && atkTeraType) {\n    type = atkTeraType;\n  }\n\n  move.type = type;\n\n  // FIXME: this is incorrect, should be move.flags.heal, not move.drain\n  if ((attacker.hasAbility('Triage') && move.drain) ||\n      (attacker.hasAbility('Gale Wings') &&\n       move.hasType('Flying') &&\n       attacker.curHP() === attacker.maxHP())) {\n    move.priority = 1;\n    desc.attackerAbility = attacker.ability;\n  }\n\n  const isGhostRevealed =\n    attacker.hasAbility('Scrappy') || attacker.hasAbility(\"Mind's Eye\") ||\n      field.defenderSide.isForesight;\n  const isRingTarget =\n    defender.hasItem('Ring Target') && !defender.hasAbility('Klutz');\n  const type1Effectiveness = getMoveEffectiveness(\n    gen,\n    move,\n    defender.types[0],\n    isGhostRevealed,\n    field.isGravity,\n    isRingTarget\n  );\n  const type2Effectiveness = defender.types[1]\n    ? getMoveEffectiveness(\n      gen,\n      move,\n      defender.types[1],\n      isGhostRevealed,\n      field.isGravity,\n      isRingTarget\n    )\n    : 1;\n  const type3Effectiveness = defender.types[2]\n    ? getMoveEffectiveness(\n      gen,\n      move,\n      defender.types[2],\n      isGhostRevealed,\n      field.isGravity,\n      isRingTarget\n    )\n    : 1;\n  let typeEffectiveness = type1Effectiveness * type2Effectiveness * type3Effectiveness;\n\n  if (defTeraType && defTeraType !== \"Stellar\") {\n    typeEffectiveness = getMoveEffectiveness(\n      gen,\n      move,\n      defTeraType,\n      isGhostRevealed,\n      field.isGravity,\n      isRingTarget\n    );\n  }\n\n  if (typeEffectiveness === 0 && move.hasType('Ground') &&\n    defender.hasItem('Iron Ball') && !defender.hasAbility('Klutz')) {\n    typeEffectiveness = 1;\n  }\n\n  if (typeEffectiveness === 0 && move.named('Thousand Arrows')) {\n    typeEffectiveness = 1;\n  }\n\n  if (typeEffectiveness === 0) {\n    return result;\n  }\n\n  if ((move.named('Sky Drop') &&\n        (defender.hasType('Flying') || defender.weightkg >= 200 || field.isGravity)) ||\n      (move.named('Synchronoise') && !defender.hasType(attacker.types[0]) &&\n        (!attacker.types[1] || !defender.hasType(attacker.types[1]))) ||\n      (move.named('Dream Eater') &&\n        (!(defender.hasStatus('slp') || defender.hasAbility('Comatose')))) ||\n      (move.named('Steel Roller') && !field.terrain) ||\n      (move.named('Poltergeist') && !defender.item)\n  ) {\n    return result;\n  }\n\n  if (\n    (field.hasWeather('Harsh Sunshine') && move.hasType('Water')) ||\n    (field.hasWeather('Heavy Rain') && move.hasType('Fire'))\n  ) {\n    desc.weather = field.weather;\n    return result;\n  }\n\n  if (field.hasWeather('Strong Winds') && defender.hasType('Flying') &&\n      gen.types.get(toID(move.type))!.effectiveness['Flying']! > 1) {\n    typeEffectiveness /= 2;\n    desc.weather = field.weather;\n  }\n\n  if (move.type === 'Stellar') {\n    typeEffectiveness = !defTeraType ? 1 : 2;\n  }\n\n  // Tera Shell works only at full HP, but for all hits of multi-hit moves\n  if (defender.hasAbility('Tera Shell') &&\n   defender.curHP() === defender.maxHP() &&\n   (!field.defenderSide.isSR && (!field.defenderSide.spikes || defender.hasType('Flying')) ||\n   defender.hasItem('Heavy-Duty Boots'))\n  ) {\n    typeEffectiveness = 0.5;\n    desc.defenderAbility = defender.ability;\n  }\n\n  if ((defender.hasAbility('Wonder Guard') && typeEffectiveness <= 1) ||\n      (move.hasType('Grass') && defender.hasAbility('Sap Sipper')) ||\n      (move.hasType('Fire') && defender.hasAbility('Flash Fire', 'Well-Baked Body')) ||\n      (move.hasType('Water') && defender.hasAbility('Dry Skin', 'Storm Drain', 'Water Absorb')) ||\n      (move.hasType('Electric') &&\n        defender.hasAbility('Lightning Rod', 'Motor Drive', 'Volt Absorb')) ||\n      (move.hasType('Ground') &&\n        !field.isGravity && !move.named('Thousand Arrows') &&\n        !defender.hasItem('Iron Ball') && defender.hasAbility('Levitate')) ||\n      (move.flags.bullet && defender.hasAbility('Bulletproof')) ||\n      (move.flags.sound && !move.named('Clangorous Soul') && defender.hasAbility('Soundproof')) ||\n      (move.priority > 0 && field.defenderSide.isDazzling || (defender.hasAbility('Queenly Majesty', 'Dazzling', 'Armor Tail'))) ||\n      (move.hasType('Ground') && defender.hasAbility('Earth Eater')) ||\n      (move.flags.wind && defender.hasAbility('Wind Rider'))\n  ) {\n    desc.defenderAbility = defender.ability;\n    return result;\n  }\n\n  if (move.hasType('Ground') && !move.named('Thousand Arrows') &&\n      !field.isGravity && defender.hasItem('Air Balloon')) {\n    desc.defenderItem = defender.item;\n    return result;\n  }\n\n  if (move.priority > 0 && field.hasTerrain('Psychic') && isGrounded(defender, field)) {\n    desc.terrain = field.terrain;\n    return result;\n  }\n\n  const weightBasedMove = move.named('Heat Crash', 'Heavy Slam', 'Low Kick', 'Grass Knot');\n  if (defender.isDynamaxed && weightBasedMove) {\n    return result;\n  }\n\n  desc.HPEVs = `${defender.evs.hp} HP`;\n\n  const fixedDamage = handleFixedDamageMoves(attacker, move);\n  if (fixedDamage) {\n    if (attacker.hasAbility('Parental Bond')) {\n      result.damage = [fixedDamage, fixedDamage];\n      desc.attackerAbility = attacker.ability;\n    } else {\n      result.damage = fixedDamage;\n    }\n    return result;\n  }\n\n  if (move.named('Final Gambit')) {\n    result.damage = attacker.curHP();\n    return result;\n  }\n\n  if (move.named('Guardian of Alola')) {\n    let zLostHP = Math.floor((defender.curHP() * 3) / 4);\n    if (field.defenderSide.isProtected && attacker.item && attacker.item.includes(' Z')) {\n      zLostHP = Math.ceil(zLostHP / 4 - 0.5);\n    }\n    result.damage = zLostHP;\n    return result;\n  }\n\n  if (move.named('Nature\\'s Madness')) {\n    const lostHP = field.defenderSide.isProtected ? 0 : Math.floor(defender.curHP() / 2);\n    result.damage = lostHP;\n    return result;\n  }\n\n  if (move.named('Spectral Thief')) {\n    let stat: StatID;\n    for (stat in defender.boosts) {\n      if (defender.boosts[stat]) {\n        attacker.boosts[stat] +=\n          attacker.hasAbility('Contrary') ? -defender.boosts[stat]! : defender.boosts[stat]!;\n        if (attacker.boosts[stat] || 0 > 6) attacker.boosts[stat] = 6;\n        if (attacker.boosts[stat] || 0 < -6) attacker.boosts[stat] = -6;\n        attacker.stats[stat] = getModifiedStat(attacker.rawStats[stat]!, attacker.boosts[stat]!);\n      }\n    }\n  }\n\n  if (move.hits > 1) {\n    desc.hits = move.hits;\n  }\n\n  // const turnOrder = attacker.stats.spe > defender.stats.spe ? 'first' : 'last';\n\n  // #endregion\n  // #region Base Power\n\n  const basePower = calculateBasePowerSMSSSV(\n    gen,\n    attacker,\n    defender,\n    move,\n    field,\n    hasAteAbilityTypeChange,\n    desc\n  );\n  if (basePower === 0) {\n    return result;\n  }\n\n  // #endregion\n  // #region (Special) Attack\n  const attack = calculateAttackSMSSSV(gen, attacker, defender, move, field, desc, isCritical);\n  const attackSource = move.named('Foul Play') ? defender : attacker;\n  const atkSourceTeraType = attackSource.isTera ? attackSource.teraType : undefined;\n  if (move.named('Photon Geyser', 'Light That Burns The Sky') ||\n      (move.named('Tera Blast') && atkSourceTeraType)) {\n    move.category = attackSource.stats.atk > attackSource.stats.spa ? 'Physical' : 'Special';\n  }\n  const attackStat =\n    move.named('Shell Side Arm') &&\n    getShellSideArmCategory(attacker, defender) === 'Physical'\n      ? 'atk'\n      : move.named('Body Press')\n        ? 'def'\n        : move.category === 'Special'\n          ? 'spa'\n          : 'atk';\n  // #endregion\n  // #region (Special) Defense\n\n  const defense = calculateDefenseSMSSSV(gen, attacker, defender, move, field, desc, isCritical);\n  const hitsPhysical = move.overrideDefensiveStat === 'def' || move.category === 'Physical' ||\n    (move.named('Shell Side Arm') && getShellSideArmCategory(attacker, defender) === 'Physical');\n  const defenseStat = hitsPhysical ? 'def' : 'spd';\n\n  // #endregion\n  // #region Damage\n\n  let baseDamage = getBaseDamage(attacker.level, basePower, attack, defense);\n\n  const isSpread = move.isSpread && ['allAdjacent', 'allAdjacentFoes'].includes(move.target);\n  if (isSpread) {\n    baseDamage = pokeRound(OF32(baseDamage * 3072) / 4096);\n    desc.isSpread = true;\n  }\n\n  if (attacker.hasAbility('Parental Bond (Child)')) {\n    baseDamage = pokeRound(OF32(baseDamage * 1024) / 4096);\n  }\n\n  if (\n    field.hasWeather('Sun') && move.named('Hydro Steam') && !attacker.hasItem('Utility Umbrella')\n  ) {\n    baseDamage = pokeRound(OF32(baseDamage * 6144) / 4096);\n    desc.weather = field.weather;\n  } else if (!defender.hasItem('Utility Umbrella')) {\n    if (\n      (field.hasWeather('Sun', 'Harsh Sunshine') && move.hasType('Fire')) ||\n      (field.hasWeather('Rain', 'Heavy Rain') && move.hasType('Water'))\n    ) {\n      baseDamage = pokeRound(OF32(baseDamage * 6144) / 4096);\n      desc.weather = field.weather;\n    } else if (\n      (field.hasWeather('Sun') && move.hasType('Water')) ||\n      (field.hasWeather('Rain') && move.hasType('Fire'))\n    ) {\n      baseDamage = pokeRound(OF32(baseDamage * 2048) / 4096);\n      desc.weather = field.weather;\n    }\n  }\n\n  if (hasTerrainSeed(defender) &&\n    field.hasTerrain(defender.item!.substring(0, defender.item!.indexOf(' ')) as Terrain) &&\n    SEED_BOOSTED_STAT[defender.item!] === defenseStat) {\n    // Last condition applies so the calc doesn't show a seed where it wouldn't affect the outcome\n    // (like Grassy Seed when being hit by a special move)\n    desc.defenderItem = defender.item;\n  }\n\n  if (isCritical) {\n    baseDamage = Math.floor(OF32(baseDamage * 1.5));\n    desc.isCritical = isCritical;\n  }\n\n  // the random factor is applied between the crit mod and the stab mod, so don't apply anything\n  // below this until we're inside the loop\n  let stabMod = 4096;\n  if (attacker.hasOriginalType(move.type)) {\n    stabMod += 2048;\n    if (attacker.hasAbility('Protean', 'Libero') && attacker.types[0] === move.type) {\n      desc.attackerAbility = attacker.ability;\n    }\n  }\n  const teraType = atkTeraType;\n  if (teraType === move.type && teraType !== 'Stellar') {\n    stabMod += 2048;\n    desc.attackerTera = teraType;\n  }\n  if (attacker.hasAbility('Adaptability') && attacker.hasType(move.type)) {\n    stabMod += teraType && attacker.hasOriginalType(teraType) ? 1024 : 2048;\n    desc.attackerAbility = attacker.ability;\n  }\n\n  // In Raids, stellar moves are always boosted\n  const isStellarBoosted = teraType === 'Stellar'; \n  if (isStellarBoosted) {\n    if (attacker.hasOriginalType(move.type)) {\n      stabMod += 2048;\n    } else {\n      stabMod = 4915;\n    }\n  }\n\n  const applyBurn =\n    attacker.hasStatus('brn') &&\n    move.category === 'Physical' &&\n    !attacker.hasAbility('Guts') &&\n    !move.named('Facade');\n  desc.isBurned = applyBurn;\n  const finalMods = calculateFinalModsSMSSSV(\n    gen,\n    attacker,\n    defender,\n    move,\n    field,\n    desc,\n    isCritical,\n    typeEffectiveness\n  );\n\n  let protect = false;\n  if (field.defenderSide.isProtected &&\n    (attacker.isDynamaxed || (move.isZ && attacker.item && attacker.item.includes(' Z')))) {\n    protect = true;\n    desc.isProtected = true;\n  }\n\n  const finalMod = chainMods(finalMods, 41, 131072);\n\n  let childDamage: number[] | undefined;\n  if (attacker.hasAbility('Parental Bond') && move.hits === 1 && !isSpread) {\n    const child = attacker.clone();\n    child.ability = 'Parental Bond (Child)' as AbilityName;\n    checkMultihitBoost(gen, child, defender, move, field, desc);\n    childDamage = calculateSMSSSV(gen, child, defender, move, field).damage as number[];\n    desc.attackerAbility = attacker.ability;\n  }\n\n  let damage = [];\n  for (let i = 0; i < 16; i++) {\n    damage[i] =\n      getFinalDamage(baseDamage, i, typeEffectiveness, applyBurn, stabMod, finalMod, protect);\n  }\n\n  if (move.dropsStats && move.timesUsed! > 1) {\n    const simpleMultiplier = attacker.hasAbility('Simple') ? 2 : 1;\n\n    desc.moveTurns = `over ${move.timesUsed} turns`;\n    const hasWhiteHerb = attacker.hasItem('White Herb');\n    let usedWhiteHerb = false;\n    let dropCount = attacker.boosts[attackStat];\n    for (let times = 0; times < move.timesUsed!; times++) {\n      const newAttack = getModifiedStat(attack, dropCount);\n      let damageMultiplier = 0;\n      damage = damage.map(affectedAmount => {\n        if (times) {\n          const newBaseDamage = getBaseDamage(attacker.level, basePower, newAttack, defense);\n          const newFinalDamage = getFinalDamage(\n            newBaseDamage,\n            damageMultiplier,\n            typeEffectiveness,\n            applyBurn,\n            stabMod,\n            finalMod,\n            protect\n          );\n          damageMultiplier++;\n          return affectedAmount + newFinalDamage;\n        }\n        return affectedAmount;\n      });\n\n      if (attacker.hasAbility('Contrary')) {\n        dropCount = Math.min(6, dropCount + move.dropsStats);\n        desc.attackerAbility = attacker.ability;\n      } else {\n        dropCount = Math.max(-6, dropCount - move.dropsStats * simpleMultiplier);\n        if (attacker.hasAbility('Simple')) {\n          desc.attackerAbility = attacker.ability;\n        }\n      }\n\n      // the Pokémon hits THEN the stat rises / lowers\n      if (hasWhiteHerb && attacker.boosts[attackStat] < 0 && !usedWhiteHerb) {\n        dropCount += move.dropsStats * simpleMultiplier;\n        usedWhiteHerb = true;\n        desc.attackerItem = attacker.item;\n      }\n    }\n  }\n\n  desc.attackBoost =\n    move.named('Foul Play') ? defender.boosts[attackStat] : attacker.boosts[attackStat];\n\n  result.damage = childDamage ? [damage, childDamage] : damage;\n\n  // Tera Raid Shield\n  if (defender.shieldData && defender.shieldActive) {\n    // TODO: Handle case when attacker tera and move type do not match\n    let damageCoef = atkTeraType === move.type \n      ? defender.shieldData.shieldDamageRateTera / 100 \n      : atkTeraType ? \n        defender.shieldData.shieldDamageRateTeraChange / 100 \n        : defender.shieldData.shieldDamageRate / 100;\n    damageCoef = damageCoef || 1;\n    result.damage = result.damage.map((dmg) => typeof(dmg) === \"number\" \n      ? Math.max(dmg > 0 ? 1 : 0, pokeRound(dmg * damageCoef))\n      : dmg.map((dmg2) => Math.max(dmg2 > 0 ? 1 : 0, pokeRound(dmg2 * damageCoef))\n    )) as number[] | [number[], number[]];\n    desc.shieldActive = true;\n  }\n\n  // #endregion\n\n  return result;\n}\n\nexport function calculateBasePowerSMSSSV(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field,\n  hasAteAbilityTypeChange: boolean,\n  desc: RawDesc\n) {\n  let turnOrder = attacker.stats.spe > defender.stats.spe ? 'first' : 'last';\n  turnOrder = field.isTrickRoom ? (turnOrder === 'first' ? 'last' : 'first') : turnOrder;\n\n  let basePower: number;\n  const atkTeraType = attacker.isTera ? attacker.teraType : undefined;\n\n  switch (move.name) {\n  case 'Payback':\n    basePower = move.bp * (turnOrder === 'last' ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Bolt Beak':\n  case 'Fishious Rend':\n    basePower = move.bp * (turnOrder !== 'last' ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Pursuit':\n    const switching = field.defenderSide.isSwitching === 'out';\n    basePower = move.bp * (switching ? 2 : 1);\n    if (switching) desc.isSwitching = 'out';\n    desc.moveBP = basePower;\n    break;\n  case 'Electro Ball':\n    const r = Math.floor(attacker.stats.spe / defender.stats.spe);\n    basePower = r >= 4 ? 150 : r >= 3 ? 120 : r >= 2 ? 80 : r >= 1 ? 60 : 40;\n    if (defender.stats.spe === 0) basePower = 40;\n    desc.moveBP = basePower;\n    break;\n  case 'Gyro Ball':\n    basePower = Math.min(150, Math.floor((25 * defender.stats.spe) / attacker.stats.spe) + 1);\n    if (attacker.stats.spe === 0) basePower = 1;\n    desc.moveBP = basePower;\n    break;\n  case 'Punishment':\n    basePower = Math.min(200, 60 + 20 * countBoosts(gen, defender.boosts, defender.randomBoosts));\n    desc.moveBP = basePower;\n    break;\n  case 'Low Kick':\n  case 'Grass Knot':\n    const w = defender.weightkg * getWeightFactor(defender);\n    basePower = w >= 200 ? 120 : w >= 100 ? 100 : w >= 50 ? 80 : w >= 25 ? 60 : w >= 10 ? 40 : 20;\n    desc.moveBP = basePower;\n    break;\n  case 'Hex':\n  case 'Infernal Parade':\n    // Hex deals double damage to Pokemon with Comatose (ih8ih8sn0w)\n    basePower = move.bp * (defender.status || defender.hasAbility('Comatose') ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Barb Barrage':\n    basePower = move.bp * (defender.hasStatus('psn', 'tox') ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Heavy Slam':\n  case 'Heat Crash':\n    const wr =\n        (attacker.weightkg * getWeightFactor(attacker)) /\n        (defender.weightkg * getWeightFactor(defender));\n    basePower = wr >= 5 ? 120 : wr >= 4 ? 100 : wr >= 3 ? 80 : wr >= 2 ? 60 : 40;\n    desc.moveBP = basePower;\n    break;\n  case 'Stored Power':\n  case 'Power Trip':\n    basePower = 20 + 20 * countBoosts(gen, attacker.boosts, attacker.randomBoosts);\n    desc.moveBP = basePower;\n    break;\n  case 'Spit Up':\n    basePower = 100 * attacker.stockpile;\n    desc.moveBP = basePower;\n    break;\n  case 'Rage Fist':\n    basePower = 50 + 50 * Math.min(6, attacker.hitsTaken);\n    desc.moveBP = basePower;\n    break;\n  case 'Last Respects':\n    basePower = 50 + 50 * Math.min(100, attacker.timesFainted);\n    desc.moveBP = basePower;\n    break;\n  case 'Acrobatics':\n    basePower = move.bp * (attacker.hasItem('Flying Gem') || !attacker.item ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Assurance':\n    basePower = move.bp * (defender.hasAbility('Parental Bond (Child)') ? 2 : 1);\n    // NOTE: desc.attackerAbility = 'Parental Bond' will already reflect this boost\n    break;\n  case 'Wake-Up Slap':\n    // Wake-Up Slap deals double damage to Pokemon with Comatose (ih8ih8sn0w)\n    basePower = move.bp * (defender.hasStatus('slp') || defender.hasAbility('Comatose') ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Smelling Salts':\n    basePower = move.bp * (defender.hasStatus('par') ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Weather Ball':\n    basePower = move.bp * (field.weather && !field.hasWeather('Strong Winds') ? 2 : 1);\n    if (field.hasWeather('Sun', 'Harsh Sunshine', 'Rain', 'Heavy Rain') &&\n      attacker.hasItem('Utility Umbrella')) basePower = move.bp;\n    desc.moveBP = basePower;\n    break;\n  case 'Terrain Pulse':\n    basePower = move.bp * (isGrounded(attacker, field) && field.terrain ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Rising Voltage':\n    basePower = move.bp * ((isGrounded(defender, field) && field.hasTerrain('Electric')) ? 2 : 1);\n    desc.moveBP = basePower;\n    break;\n  case 'Psyblade':\n    basePower = move.bp * (field.hasTerrain('Electric') ? 1.5 : 1);\n    if (field.hasTerrain('Electric')) {\n      desc.moveBP = basePower;\n      desc.terrain = field.terrain;\n    }\n    break;\n  case 'Fling':\n    basePower = getFlingPower(attacker.item);\n    desc.moveBP = basePower;\n    desc.attackerItem = attacker.item;\n    break;\n  case 'Dragon Energy':\n  case 'Eruption':\n  case 'Water Spout':\n    basePower = Math.max(1, Math.floor((150 * attacker.curHP()) / attacker.maxHP()));\n    desc.moveBP = basePower;\n    break;\n  case 'Flail':\n  case 'Reversal':\n    const p = Math.floor((48 * attacker.curHP()) / attacker.maxHP());\n    basePower = p <= 1 ? 200 : p <= 4 ? 150 : p <= 9 ? 100 : p <= 16 ? 80 : p <= 32 ? 40 : 20;\n    desc.moveBP = basePower;\n    break;\n  case 'Natural Gift':\n    if (attacker.item?.includes('Berry')) {\n      const gift = getNaturalGift(gen, attacker.item)!;\n      basePower = gift.p;\n      desc.attackerItem = attacker.item;\n      desc.moveBP = move.bp;\n    } else {\n      basePower = move.bp;\n    }\n    break;\n  case 'Nature Power':\n    move.category = 'Special';\n    move.secondaries = true;\n    switch (field.terrain) {\n    case 'Electric':\n      basePower = 90;\n      desc.moveName = 'Thunderbolt';\n      break;\n    case 'Grassy':\n      basePower = 90;\n      desc.moveName = 'Energy Ball';\n      break;\n    case 'Misty':\n      basePower = 95;\n      desc.moveName = 'Moonblast';\n      break;\n    case 'Psychic':\n      basePower = 90;\n      desc.moveName = 'Psychic';\n      break;\n    default:\n      basePower = 80;\n      desc.moveName = 'Tri Attack';\n    }\n    break;\n  case 'Water Shuriken':\n    basePower = attacker.named('Greninja-Ash') && attacker.hasAbility('Battle Bond') ? 20 : 15;\n    desc.moveBP = basePower;\n    break;\n  // Triple Axel's damage doubles after each consecutive hit (20, 40, 60), this is a hack\n  case 'Triple Axel':\n    basePower = move.hits === 2 ? 30 : move.hits === 3 ? 40 : move.bp;\n    desc.moveBP = basePower;\n    break;\n  // Triple Kick's damage doubles after each consecutive hit (10, 20, 30), this is a hack\n  case 'Triple Kick':\n    basePower = move.hits === 2 ? 15 : move.hits === 3 ? 30 : move.bp;\n    desc.moveBP = basePower;\n    break;\n  case 'Crush Grip':\n  case 'Wring Out':\n    basePower = 100 * Math.floor((defender.curHP() * 4096) / defender.maxHP());\n    basePower = Math.floor(Math.floor((120 * basePower + 2048 - 1) / 4096) / 100) || 1;\n    desc.moveBP = basePower;\n    break;\n  case 'Hard Press':\n    basePower = 100 * Math.floor((defender.curHP() * 4096) / defender.maxHP());\n    basePower = Math.floor(Math.floor((100 * basePower + 2048 - 1) / 4096) / 100) || 1;\n    desc.moveBP = basePower;\n    break;\n  // case 'Stomping Tantrum':\n  // case 'Temper Flare':\n  //   if (attacker.lastMoveFailed) {\n  //     basePower = 150;\n  //     desc.moveBP = basePower;\n  //   }\n  //   break;\n  case 'Tera Blast':\n    basePower = attacker.teraType === \"Stellar\" ? 100 : 80;\n    desc.moveBP = basePower;\n    break;\n  default:\n    basePower = move.bp;\n  }\n  if (basePower === 0) {\n    return 0;\n  }\n  if (move.named(\n    'Breakneck Blitz', 'Bloom Doom', 'Inferno Overdrive', 'Hydro Vortex', 'Gigavolt Havoc',\n    'Subzero Slammer', 'Supersonic Skystrike', 'Savage Spin-Out', 'Acid Downpour', 'Tectonic Rage',\n    'Continental Crush', 'All-Out Pummeling', 'Shattered Psyche', 'Never-Ending Nightmare',\n    'Devastating Drake', 'Black Hole Eclipse', 'Corkscrew Crash', 'Twinkle Tackle'\n  )) {\n    // show z-move power in description\n    desc.moveBP = move.bp;\n  }\n  const bpMods = calculateBPModsSMSSSV(\n    gen,\n    attacker,\n    defender,\n    move,\n    field,\n    desc,\n    basePower,\n    hasAteAbilityTypeChange,\n    turnOrder\n  );\n  basePower = OF16(Math.max(1, pokeRound((basePower * chainMods(bpMods, 41, 2097152)) / 4096)));\n  if (\n    atkTeraType && move.type === atkTeraType &&\n    attacker.hasType(atkTeraType) && move.hits === 1 &&\n    move.priority <= 0 && move.bp > 0 && !move.named('Dragon Energy', 'Eruption', 'Water Spout') &&\n    basePower < 60 && gen.num >= 9\n  ) {\n    basePower = 60;\n    desc.moveBP = 60;\n  }\n  return basePower;\n}\n\nexport function calculateBPModsSMSSSV(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field,\n  desc: RawDesc,\n  basePower: number,\n  hasAteAbilityTypeChange: boolean,\n  turnOrder: string\n) {\n  const bpMods = [];\n  const defTeraType = defender.isTera ? defender.teraType : undefined;\n\n  // Move effects\n\n  let resistedKnockOffDamage =\n    (attacker.bossMultiplier > 100) || // the Raid Boss does not get a boost to Knock Off\n    !defender.item ||\n    (defender.named('Dialga-Origin') && defender.hasItem('Adamant Crystal')) ||\n    (defender.named('Palkia-Origin') && defender.hasItem('Lustrous Globe')) ||\n    // Griseous Core for gen 9, Griseous Orb otherwise\n    (defender.name.includes('Giratina-Origin') && defender.item.includes('Griseous')) ||\n    (defender.name.includes('Arceus') && defender.item.includes('Plate')) ||\n    (defender.name.includes('Genesect') && defender.item.includes('Drive')) ||\n    (defender.named('Groudon', 'Groudon-Primal') && defender.hasItem('Red Orb')) ||\n    (defender.named('Kyogre', 'Kyogre-Primal') && defender.hasItem('Blue Orb')) ||\n    (defender.name.includes('Silvally') && defender.item.includes('Memory')) ||\n    defender.item.includes(' Z') ||\n    (defender.named('Zacian') && defender.hasItem('Rusted Sword')) ||\n    (defender.named('Zamazenta') && defender.hasItem('Rusted Shield')) ||\n    (defender.name.includes('Ogerpon-Cornerstone') && defender.hasItem('Cornerstone Mask')) ||\n    (defender.name.includes('Ogerpon-Hearthflame') && defender.hasItem('Hearthflame Mask')) ||\n    (defender.name.includes('Ogerpon-Wellspring') && defender.hasItem('Wellspring Mask')) ||\n    (defender.named('Venomicon-Epilogue') && defender.hasItem('Vile Vial'));\n\n  // The last case only applies when the Pokemon has the Mega Stone that matches its species\n  // (or when it's already a Mega-Evolution)\n  if (!resistedKnockOffDamage && defender.item) {\n    const item = gen.items.get(toID(defender.item))!;\n    if (item) {\n      resistedKnockOffDamage = !!item.megaEvolves && defender.name.includes(item.megaEvolves);\n    }\n  }\n\n  if ((move.named('Facade') && attacker.hasStatus('brn', 'par', 'psn', 'tox')) ||\n    (move.named('Brine') && defender.curHP() <= defender.maxHP() / 2) ||\n    (move.named('Venoshock') && defender.hasStatus('psn', 'tox')) ||\n    (move.named('Lash Out') && (countBoosts(gen, attacker.boosts, attacker.randomBoosts) < 0))\n  ) {\n    bpMods.push(8192);\n    desc.moveBP = basePower * 2;\n  } else if (\n    move.named('Expanding Force') && isGrounded(attacker, field) && field.hasTerrain('Psychic')\n  ) {\n    move.target = 'allAdjacentFoes';\n    bpMods.push(6144);\n    desc.moveBP = basePower * 1.5;\n  } else if (move.named('Tera Starstorm') && attacker.name === 'Terapagos-Stellar') {\n    move.target = 'allAdjacentFoes';\n    move.type = 'Stellar';\n  } else if ((move.named('Knock Off') && !resistedKnockOffDamage) ||\n    (move.named('Misty Explosion') && isGrounded(attacker, field) && field.hasTerrain('Misty')) ||\n    (move.named('Grav Apple') && field.isGravity)\n  ) {\n    bpMods.push(6144);\n    desc.moveBP = basePower * 1.5;\n  } else if (move.named('Solar Beam', 'Solar Blade') &&\n      field.hasWeather('Rain', 'Heavy Rain', 'Sand', 'Hail', 'Snow')) {\n    bpMods.push(2048);\n    desc.moveBP = basePower / 2;\n    desc.weather = field.weather;\n  } else if (move.named('Collision Course', 'Electro Drift')) {\n    const isGhostRevealed =\n      attacker.hasAbility('Scrappy') || field.defenderSide.isForesight;\n    const isRingTarget =\n      defender.hasItem('Ring Target') && !defender.hasAbility('Klutz');\n    const types = defTeraType ? [defTeraType] : defender.types;\n    const type1Effectiveness = getMoveEffectiveness(\n      gen,\n      move,\n      types[0],\n      isGhostRevealed,\n      field.isGravity,\n      isRingTarget\n    );\n    const type2Effectiveness = types[1] ? getMoveEffectiveness(\n      gen,\n      move,\n      types[1],\n      isGhostRevealed,\n      field.isGravity,\n      isRingTarget\n    ) : 1;\n    const type3Effectiveness = types[2] ? getMoveEffectiveness(\n      gen,\n      move,\n      types[2],\n      isGhostRevealed,\n      field.isGravity,\n      isRingTarget\n    ) : 1;\n    if (type1Effectiveness * type2Effectiveness * type3Effectiveness >= 2) {\n      bpMods.push(5461);\n      desc.moveBP = basePower * (5461 / 4096);\n    }\n  } else if (defender.isMinimize && move.named(\"Body Slam\", \"Stomp\", \"Dragon Rush\", \"Heat Crash\", \"Heavy Slam\", \"Flying Press\")) {\n    bpMods.push(8192);\n    desc.moveBP = basePower * 2;\n  }\n\n  if (field.attackerSide.isHelpingHand) {\n    bpMods.push(6144);\n    desc.isHelpingHand = true;\n  }\n\n  // Field effects\n\n  const terrainMultiplier = gen.num > 7 ? 5325 : 6144;\n  if (isGrounded(attacker, field)) {\n    if ((field.hasTerrain('Electric') && move.hasType('Electric')) ||\n        (field.hasTerrain('Grassy') && move.hasType('Grass')) ||\n        (field.hasTerrain('Psychic') && move.hasType('Psychic'))\n    ) {\n      bpMods.push(terrainMultiplier);\n      desc.terrain = field.terrain;\n    }\n  }\n  if (isGrounded(defender, field)) {\n    if ((field.hasTerrain('Misty') && move.hasType('Dragon')) ||\n        (field.hasTerrain('Grassy') && move.named('Bulldoze', 'Earthquake'))\n    ) {\n      bpMods.push(2048);\n      desc.terrain = field.terrain;\n    }\n  }\n\n  // Abilities\n\n  // Use BasePower after moves with custom BP to determine if Technician should boost\n  if ((attacker.hasAbility('Technician') && basePower <= 60) ||\n    (attacker.hasAbility('Flare Boost') &&\n      attacker.hasStatus('brn') && move.category === 'Special') ||\n    (attacker.hasAbility('Toxic Boost') &&\n      attacker.hasStatus('psn', 'tox') && move.category === 'Physical') ||\n    (attacker.hasAbility('Mega Launcher') && move.flags.pulse) ||\n    (attacker.hasAbility('Strong Jaw') && move.flags.bite) ||\n    (attacker.hasAbility('Steely Spirit') && move.hasType('Steel')) ||\n    (attacker.hasAbility('Sharpness') && move.flags.slicing)\n  ) {\n    bpMods.push(6144);\n    desc.attackerAbility = attacker.ability;\n  }\n\n\n  if (field.attackerSide.steelySpirits > 0 && move.hasType('Steel')){\n    for(var i = 0; i < field.attackerSide.steelySpirits; i++){\n        bpMods.push(6144);\n    }\n    desc.steelySpirits = field.attackerSide.steelySpirits;\n  }\n\n  if (field.attackerSide.isCharged && move.hasType('Electric')){\n    bpMods.push(8196);\n    desc.isCharged = true;\n  }\n\n  const aura = `${move.type} Aura`;\n  const isAttackerAura = attacker.hasAbility(aura);\n  const isDefenderAura = defender.hasAbility(aura);\n  const isUserAuraBreak = attacker.hasAbility('Aura Break') || defender.hasAbility('Aura Break');\n  const isFieldAuraBreak = field.isAuraBreak;\n  const isFieldFairyAura = field.isFairyAura && move.type === 'Fairy';\n  const isFieldDarkAura = field.isDarkAura && move.type === 'Dark';\n  const auraActive = isAttackerAura || isDefenderAura || isFieldFairyAura || isFieldDarkAura;\n  const auraBreak = isFieldAuraBreak || isUserAuraBreak;\n  if (auraActive) {\n    if (auraBreak) {\n      bpMods.push(3072);\n      desc.attackerAbility = attacker.ability;\n      desc.defenderAbility = defender.ability;\n    } else {\n      bpMods.push(5448);\n      if (isAttackerAura) desc.attackerAbility = attacker.ability;\n      if (isDefenderAura) desc.defenderAbility = defender.ability;\n    }\n  }\n\n  // Sheer Force does not power up max moves or remove the effects (SadisticMystic)\n  if (\n    (attacker.hasAbility('Sheer Force') &&\n      (move.secondaries || move.named('Jet Punch', 'Order Up')) && !move.isMax) ||\n    (attacker.hasAbility('Sand Force') &&\n      field.hasWeather('Sand') && move.hasType('Rock', 'Ground', 'Steel')) ||\n    (attacker.hasAbility('Analytic') &&\n      (turnOrder !== 'first' || field.defenderSide.isSwitching === 'out')) ||\n    (attacker.hasAbility('Tough Claws') && move.flags.contact) ||\n    (attacker.hasAbility('Punk Rock') && move.flags.sound)\n  ) {\n    bpMods.push(5325);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if (field.attackerSide.isBattery && move.category === 'Special') {\n    bpMods.push(5325);\n    desc.isBattery = true;\n  }\n\n  if (field.attackerSide.batteries > 0 && move.category === 'Special') {\n    for(var ii = 0; ii < field.attackerSide.batteries; ii++){\n        bpMods.push(5325);\n    }\n    desc.batteries = field.attackerSide.batteries;\n  }\n\n  if (field.attackerSide.isPowerSpot) {\n    bpMods.push(5325);\n    desc.isPowerSpot = true;\n  }\n\n  if (field.attackerSide.powerSpots > 0){\n    for(var iii = 0; iii < field.attackerSide.powerSpots; iii++){\n        bpMods.push(5325);\n    }\n    desc.powerSpots = field.attackerSide.powerSpots;\n  }\n\n\n  if (attacker.hasAbility('Rivalry') && ![attacker.gender, defender.gender].includes('N')) {\n    if (attacker.gender === defender.gender) {\n      bpMods.push(5120);\n      desc.rivalry = 'buffed';\n    } else {\n      bpMods.push(3072);\n      desc.rivalry = 'nerfed';\n    }\n    desc.attackerAbility = attacker.ability;\n  }\n\n  // The -ate abilities already changed move typing earlier, so most checks are done and desc is set\n  // However, Max Moves also don't boost -ate Abilities\n  if (!move.isMax && hasAteAbilityTypeChange) {\n    bpMods.push(4915);\n  }\n\n  if ((attacker.hasAbility('Reckless') && (move.recoil || move.hasCrashDamage)) ||\n      (attacker.hasAbility('Iron Fist') && move.flags.punch)\n  ) {\n    bpMods.push(4915);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if (attacker.hasItem('Punching Glove') && move.flags.punch) {\n    bpMods.push(4506);\n    desc.attackerItem = attacker.item;\n  }\n\n  if (defender.hasAbility('Heatproof') && move.hasType('Fire')) {\n    bpMods.push(2048);\n    desc.defenderAbility = defender.ability;\n  } else if (defender.hasAbility('Dry Skin') && move.hasType('Fire')) {\n    bpMods.push(5120);\n    desc.defenderAbility = defender.ability;\n  }\n\n  if (attacker.hasAbility('Supreme Overlord') && attacker.timesFainted) {\n    const powMod = [4096, 4506, 4915, 5325, 5734, 6144];\n    bpMods.push(powMod[Math.min(5, attacker.timesFainted)]);\n    desc.attackerAbility = attacker.ability;\n    desc.timesFainted = attacker.timesFainted;\n  }\n\n  // Items\n\n  if (attacker.hasItem(`${move.type} Gem`)) {\n    bpMods.push(5325);\n    desc.attackerItem = attacker.item;\n  } else if (\n    (((attacker.hasItem('Adamant Crystal') && attacker.named('Dialga-Origin')) ||\n      (attacker.hasItem('Adamant Orb') && attacker.named('Dialga'))) &&\n     move.hasType('Steel', 'Dragon')) ||\n    (((attacker.hasItem('Lustrous Orb') &&\n     attacker.named('Palkia')) ||\n      (attacker.hasItem('Lustrous Globe') && attacker.named('Palkia-Origin'))) &&\n     move.hasType('Water', 'Dragon')) ||\n    (((attacker.hasItem('Griseous Orb') || attacker.hasItem('Griseous Core')) &&\n     (attacker.named('Giratina-Origin') || attacker.named('Giratina'))) &&\n     move.hasType('Ghost', 'Dragon')) ||\n    (attacker.hasItem('Vile Vial') &&\n     attacker.named('Venomicon-Epilogue') &&\n     move.hasType('Poison', 'Flying')) ||\n    (attacker.hasItem('Soul Dew') &&\n     attacker.named('Latios', 'Latias', 'Latios-Mega', 'Latias-Mega') &&\n     move.hasType('Psychic', 'Dragon')) ||\n     attacker.item && move.hasType(getItemBoostType(attacker.item)) ||\n    (attacker.name.includes('Ogerpon-Cornerstone') && attacker.hasItem('Cornerstone Mask')) ||\n    (attacker.name.includes('Ogerpon-Hearthflame') && attacker.hasItem('Hearthflame Mask')) ||\n    (attacker.name.includes('Ogerpon-Wellspring') && attacker.hasItem('Wellspring Mask'))\n  ) {\n    bpMods.push(4915);\n    desc.attackerItem = attacker.item;\n  } else if (\n    (attacker.hasItem('Muscle Band') && move.category === 'Physical') ||\n    (attacker.hasItem('Wise Glasses') && move.category === 'Special')\n  ) {\n    bpMods.push(4505);\n    desc.attackerItem = attacker.item;\n  }\n  return bpMods;\n}\n\nexport function calculateAttackSMSSSV(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field,\n  desc: RawDesc,\n  isCritical = false\n) {\n  let attack: number;\n  const attackSource = move.named('Foul Play') ? defender : attacker;\n  const atkSourceTeraType = attackSource.isTera ? attackSource.teraType : undefined;\n  if (move.named('Photon Geyser', 'Light That Burns The Sky') ||\n      (move.named('Tera Blast') && atkSourceTeraType)) {\n    move.category = attackSource.stats.atk > attackSource.stats.spa ? 'Physical' : 'Special';\n  }\n  const attackStat =\n    move.named('Shell Side Arm') &&\n    getShellSideArmCategory(attacker, defender) === 'Physical'\n      ? 'atk'\n      : move.named('Body Press')\n        ? 'def'\n        : move.category === 'Special'\n          ? 'spa'\n          : 'atk';\n  desc.attackEVs =\n    move.named('Foul Play')\n      ? getEVDescriptionText(gen, defender, attackStat, defender.nature)\n      : getEVDescriptionText(gen, attacker, attackStat, attacker.nature);\n\n  if (attackSource.boosts[attackStat] === 0 ||\n      (isCritical && attackSource.boosts[attackStat] < 0)) {\n    attack = attackSource.rawStats[attackStat];\n  } else if (defender.hasAbility('Unaware')) {\n    attack = attackSource.rawStats[attackStat];\n    desc.defenderAbility = defender.ability;\n  } else {\n    attack = attackSource.stats[attackStat];\n    desc.attackBoost = attackSource.boosts[attackStat];\n  }\n\n  // unlike all other attack modifiers, Hustle gets applied directly\n  if (attacker.hasAbility('Hustle') && move.category === 'Physical') {\n    attack = pokeRound((attack * 3) / 2);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  const atMods = calculateAtModsSMSSSV(gen, attacker, defender, move, field, desc);\n  attack = OF16(Math.max(1, pokeRound((attack * chainMods(atMods, 410, 131072)) / 4096)));\n  return attack;\n}\n\nexport function calculateAtModsSMSSSV(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field,\n  desc: RawDesc\n) {\n  const atMods = [];\n\n  // Slow Start also halves damage with special Z-moves\n  if ((attacker.hasAbility('Slow Start') && attacker.abilityOn &&\n       (move.category === 'Physical' || (move.category === 'Special' && move.isZ))) ||\n      (attacker.hasAbility('Defeatist') && attacker.curHP() <= attacker.maxHP() / 2)\n  ) {\n    atMods.push(2048);\n    desc.attackerAbility = attacker.ability;\n  } else if (\n    (attacker.hasAbility('Solar Power') &&\n     field.hasWeather('Sun', 'Harsh Sunshine') &&\n     move.category === 'Special') ||\n    (attacker.named('Cherrim') &&\n     attacker.hasAbility('Flower Gift') &&\n     field.hasWeather('Sun', 'Harsh Sunshine') &&\n     move.category === 'Physical') ||\n    // Gorilla Tactics has no effect during Dynamax (Anubis)\n    (attacker.hasAbility('Gorilla Tactics') && move.category === 'Physical' &&\n     !attacker.isDynamaxed)) {\n    atMods.push(6144);\n    desc.attackerAbility = attacker.ability;\n    desc.weather = field.weather;\n  } else if (\n    field.attackerSide.isFlowerGift &&\n    field.hasWeather('Sun', 'Harsh Sunshine') &&\n    move.category === 'Physical') {\n    atMods.push(6144);\n    desc.weather = field.weather;\n    desc.isFlowerGiftAttacker = true;\n  } else if (\n    (attacker.hasAbility('Guts') && attacker.status && move.category === 'Physical') ||\n    (attacker.curHP() <= attacker.maxHP() / 3 &&\n      ((attacker.hasAbility('Overgrow') && move.hasType('Grass')) ||\n       (attacker.hasAbility('Blaze') && move.hasType('Fire')) ||\n       (attacker.hasAbility('Torrent') && move.hasType('Water')) ||\n       (attacker.hasAbility('Swarm') && move.hasType('Bug')))) ||\n    (move.category === 'Special' && attacker.abilityOn && attacker.hasAbility('Plus', 'Minus'))\n  ) {\n    atMods.push(6144);\n    desc.attackerAbility = attacker.ability;\n  } else if (attacker.hasAbility('Flash Fire') && attacker.abilityOn && move.hasType('Fire')) {\n    atMods.push(6144);\n    desc.attackerAbility = 'Flash Fire';\n  } else if (\n    (attacker.hasAbility('Steelworker') && move.hasType('Steel')) ||\n    (attacker.hasAbility('Dragon\\'s Maw') && move.hasType('Dragon')) ||\n    (attacker.hasAbility('Rocky Payload') && move.hasType('Rock'))\n  ) {\n    atMods.push(6144);\n    desc.attackerAbility = attacker.ability;\n  } else if (attacker.hasAbility('Transistor') && move.hasType('Electric')) {\n    atMods.push(gen.num >= 9 ? 5325 : 6144);\n    desc.attackerAbility = attacker.ability;\n  } else if (attacker.hasAbility('Stakeout') && attacker.abilityOn) {\n    atMods.push(8192);\n    desc.attackerAbility = attacker.ability;\n  } else if (\n    (attacker.hasAbility('Water Bubble') && move.hasType('Water')) ||\n    (attacker.hasAbility('Huge Power', 'Pure Power') && move.category === 'Physical')\n  ) {\n    atMods.push(8192);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if ((defender.hasAbility('Thick Fat') && move.hasType('Fire', 'Ice')) ||\n      (defender.hasAbility('Water Bubble') && move.hasType('Fire')) ||\n     (defender.hasAbility('Purifying Salt') && move.hasType('Ghost'))) {\n    atMods.push(2048);\n    desc.defenderAbility = defender.ability;\n  }\n\n  const isTabletsOfRuinActive = (defender.hasAbility('Tablets of Ruin') || field.isTabletsOfRuin) && !attacker.hasAbility('Tabelts of Ruin');\n  const isVesselOfRuinActive = (defender.hasAbility('Vessel of Ruin') || field.isVesselOfRuin) && !attacker.hasAbility('Vessel of Ruin');\n  if (\n    (isTabletsOfRuinActive && move.category === 'Physical') ||\n    (isVesselOfRuinActive && move.category === 'Special')\n  ) {\n    if (defender.hasAbility('Tablets of Ruin') || defender.hasAbility('Vessel of Ruin')) {\n      desc.defenderAbility = defender.ability;\n    } else {\n      desc[move.category === 'Special' ? 'isVesselOfRuin' : 'isTabletsOfRuin'] = true;\n    }\n    atMods.push(3072);\n  }\n\n  if (\n    (isQPActive(attacker, field))\n  ) {\n    if (\n      (move.category === 'Physical' && getQPBoostedStat(attacker) === 'atk') ||\n      (move.category === 'Special' && getQPBoostedStat(attacker) === 'spa')\n    ) {\n      atMods.push(5325);\n      desc.attackerAbility = attacker.ability;\n    }\n  }\n\n  if (\n    (attacker.hasAbility('Hadron Engine') && move.category === 'Special' &&\n      field.hasTerrain('Electric') && isGrounded(attacker, field)) ||\n    (attacker.hasAbility('Orichalcum Pulse') && move.category === 'Physical' &&\n      field.hasWeather('Sun', 'Harsh Sunshine') && !attacker.hasItem('Utility Umbrella'))\n  ) {\n    atMods.push(5461);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if ((attacker.hasItem('Thick Club') &&\n       attacker.named('Cubone', 'Marowak', 'Marowak-Alola', 'Marowak-Alola-Totem') &&\n       move.category === 'Physical') ||\n      (attacker.hasItem('Deep Sea Tooth') &&\n       attacker.named('Clamperl') &&\n       move.category === 'Special') ||\n      (attacker.hasItem('Light Ball') && attacker.name.includes('Pikachu') && !move.isZ)\n  ) {\n    atMods.push(8192);\n    desc.attackerItem = attacker.item;\n    // Choice Band/Scarf/Specs move lock and stat boosts are ignored during Dynamax (Anubis)\n  } else if (!move.isZ && !move.isMax &&\n    ((attacker.hasItem('Choice Band') && move.category === 'Physical') ||\n      (attacker.hasItem('Choice Specs') && move.category === 'Special'))\n  ) {\n    atMods.push(6144);\n    desc.attackerItem = attacker.item;\n  }\n\n  const attackerAtkCheerStack = (field.attackerSide.isAtkCheered ? 1 : 0) + attacker.permanentAtkCheers;\n  const attackerDefCheerStack = (field.attackerSide.isDefCheered ? 1 : 0) + attacker.permanentDefCheers;\n  const defenderAtkCheerStack = (field.defenderSide.isAtkCheered ? 1 : 0) + defender.permanentAtkCheers;\n\n  if (attackerAtkCheerStack && !move.named('Body Press') && !move.named('Foul Play')) {\n    atMods.push(4096 * (1 + attackerAtkCheerStack/2));\n    desc.isAtkCheered = attackerAtkCheerStack;\n  }\n\n  if (move.named('Foul Play') && defenderAtkCheerStack) {\n    atMods.push(4096 * (1 + defenderAtkCheerStack/2));\n    desc.isAtkCheered = defenderAtkCheerStack;\n  }\n\n  if (move.named('Body Press') && attackerDefCheerStack) {\n    atMods.push(4096 * (1 + attackerDefCheerStack/2));\n    desc.isDefCheeredBodyPress = attackerDefCheerStack;\n  }\n\n  return atMods;\n}\n\nexport function calculateDefenseSMSSSV(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field,\n  desc: RawDesc,\n  isCritical = false\n) {\n  let defense: number;\n  let hitsPhysical = move.overrideDefensiveStat === 'def' || move.category === 'Physical' ||\n    (move.named('Shell Side Arm') && getShellSideArmCategory(attacker, defender) === 'Physical');\n  const defenseStat = hitsPhysical ? 'def' : 'spd';\n  hitsPhysical = field.isWonderRoom ? !hitsPhysical : hitsPhysical;\n  desc.defenseEVs = getEVDescriptionText(gen, defender, defenseStat, defender.nature);\n  if (defender.boosts[defenseStat] === 0 ||\n      (isCritical && defender.boosts[defenseStat] > 0) ||\n      move.ignoreDefensive) {\n    defense = defender.rawStats[defenseStat];\n  } else if (attacker.hasAbility('Unaware')) {\n    defense = defender.rawStats[defenseStat];\n    desc.attackerAbility = attacker.ability;\n  } else {\n    defense = defender.stats[defenseStat];\n    desc.defenseBoost = defender.boosts[defenseStat];\n  }\n\n  // unlike all other defense modifiers, Sandstorm SpD boost gets applied directly\n  if (field.hasWeather('Sand') && defender.hasType('Rock') && !hitsPhysical) {\n    defense = pokeRound((defense * 3) / 2);\n    desc.weather = field.weather;\n  }\n  if (field.hasWeather('Snow') && defender.hasType('Ice') && hitsPhysical) {\n    defense = pokeRound((defense * 3) / 2);\n    desc.weather = field.weather;\n  }\n\n  const dfMods = calculateDfModsSMSSSV(\n    gen,\n    attacker,\n    defender,\n    move,\n    field,\n    desc,\n    isCritical,\n    hitsPhysical\n  );\n\n  return OF16(Math.max(1, pokeRound((defense * chainMods(dfMods, 410, 131072)) / 4096)));\n}\n\nexport function calculateDfModsSMSSSV(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field,\n  desc: RawDesc,\n  isCritical = false,\n  hitsPhysical = false\n) {\n  const dfMods = [];\n  if (defender.hasAbility('Marvel Scale') && defender.status && hitsPhysical) {\n    dfMods.push(6144);\n    desc.defenderAbility = defender.ability;\n  } else if (\n    defender.named('Cherrim') &&\n    defender.hasAbility('Flower Gift') &&\n    field.hasWeather('Sun', 'Harsh Sunshine') &&\n    !hitsPhysical\n  ) {\n    dfMods.push(6144);\n    desc.defenderAbility = defender.ability;\n    desc.weather = field.weather;\n  } else if (\n    field.defenderSide.isFlowerGift &&\n    field.hasWeather('Sun', 'Harsh Sunshine') &&\n    !hitsPhysical) {\n    dfMods.push(6144);\n    desc.weather = field.weather;\n    desc.isFlowerGiftDefender = true;\n  } else if (\n    defender.hasAbility('Grass Pelt') &&\n    field.hasTerrain('Grassy') &&\n    hitsPhysical\n  ) {\n    dfMods.push(6144);\n    desc.defenderAbility = defender.ability;\n  } else if (defender.hasAbility('Fur Coat') && hitsPhysical) {\n    dfMods.push(8192);\n    desc.defenderAbility = defender.ability;\n  }\n\n  const isSwordOfRuinActive = (attacker.hasAbility('Sword of Ruin') || field.isSwordOfRuin) && !defender.hasAbility('Sword of Ruin');\n  const isBeadsOfRuinActive = (attacker.hasAbility('Beads of Ruin') || field.isBeadsOfRuin) && !defender.hasAbility('Beads of Ruin');\n  if (\n    (isSwordOfRuinActive && hitsPhysical) ||\n    (isBeadsOfRuinActive && !hitsPhysical)\n  ) {\n    if (attacker.hasAbility('Sword of Ruin') || attacker.hasAbility('Beads of Ruin')) {\n      desc.attackerAbility = attacker.ability;\n    } else {\n      desc[hitsPhysical ? 'isSwordOfRuin' : 'isBeadsOfRuin'] = true;\n    }\n    dfMods.push(3072);\n  }\n\n  if (\n    (isQPActive(defender, field))\n  ) {\n    if (\n      (hitsPhysical && getQPBoostedStat(defender) === 'def') ||\n      (!hitsPhysical && getQPBoostedStat(defender) === 'spd')\n    ) {\n      desc.defenderAbility = defender.ability;\n      dfMods.push(5324);\n    }\n  }\n\n  if ((defender.hasItem('Eviolite') && gen.species.get(toID(defender.name))?.nfe) ||\n      (!hitsPhysical && defender.hasItem('Assault Vest'))) {\n    dfMods.push(6144);\n    desc.defenderItem = defender.item;\n  } else if (\n    (defender.hasItem('Metal Powder') && defender.named('Ditto') && hitsPhysical) ||\n    (defender.hasItem('Deep Sea Scale') && defender.named('Clamperl') && !hitsPhysical)\n  ) {\n    dfMods.push(8192);\n    desc.defenderItem = defender.item;\n  }\n\n  const defenderDefCheerStack = (field.defenderSide.isDefCheered ? 1 : 0) + defender.permanentDefCheers;\n  if (defenderDefCheerStack){\n    dfMods.push(4096 * (1 + defenderDefCheerStack/2));\n    desc.isDefCheered = defenderDefCheerStack;\n  }\n\n  return dfMods;\n}\n\nexport function calculateFinalModsSMSSSV(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field,\n  desc: RawDesc,\n  isCritical = false,\n  typeEffectiveness: number\n) {\n  const finalMods = [];\n\n  if (field.defenderSide.isReflect && move.category === 'Physical' &&\n      !isCritical && !field.defenderSide.isAuroraVeil) {\n    // doesn't stack with Aurora Veil\n    finalMods.push(field.gameType !== 'Singles' ? 2732 : 2048);\n    desc.isReflect = true;\n  } else if (\n    field.defenderSide.isLightScreen && move.category === 'Special' &&\n    !isCritical && !field.defenderSide.isAuroraVeil\n  ) {\n    // doesn't stack with Aurora Veil\n    finalMods.push(field.gameType !== 'Singles' ? 2732 : 2048);\n    desc.isLightScreen = true;\n  }\n  if (field.defenderSide.isAuroraVeil && !isCritical) {\n    finalMods.push(field.gameType !== 'Singles' ? 2732 : 2048);\n    desc.isAuroraVeil = true;\n  }\n\n  if (attacker.hasAbility('Neuroforce') && typeEffectiveness > 1) {\n    finalMods.push(5120);\n    desc.attackerAbility = attacker.ability;\n  } else if (attacker.hasAbility('Sniper') && isCritical) {\n    finalMods.push(6144);\n    desc.attackerAbility = attacker.ability;\n  } else if (attacker.hasAbility('Tinted Lens') && typeEffectiveness < 1) {\n    finalMods.push(8192);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if (defender.isDynamaxed && move.named('Dynamax Cannon', 'Behemoth Blade', 'Behemoth Bash')) {\n    finalMods.push(8192);\n  }\n\n  if (defender.hasAbility('Multiscale', 'Shadow Shield') &&\n      defender.curHP() === defender.maxHP() &&\n      (!field.defenderSide.isSR && (!field.defenderSide.spikes || defender.hasType('Flying')) ||\n      defender.hasItem('Heavy-Duty Boots')) && !attacker.hasAbility('Parental Bond (Child)')\n  ) {\n    finalMods.push(2048);\n    desc.defenderAbility = defender.ability;\n  }\n\n  if (defender.hasAbility('Fluffy') && move.flags.contact && !attacker.hasAbility('Long Reach')) {\n    finalMods.push(2048);\n    desc.defenderAbility = defender.ability;\n  } else if (\n    (defender.hasAbility('Punk Rock') && move.flags.sound) ||\n    (defender.hasAbility('Ice Scales') && move.category === 'Special')\n  ) {\n    finalMods.push(2048);\n    desc.defenderAbility = defender.ability;\n  }\n\n  if (defender.hasAbility('Solid Rock', 'Filter', 'Prism Armor') && typeEffectiveness > 1) {\n    finalMods.push(3072);\n    desc.defenderAbility = defender.ability;\n  }\n\n  if (field.defenderSide.isFriendGuard) {\n    finalMods.push(3072);\n    desc.isFriendGuard = true;\n  }\n\n  if (field.defenderSide.friendGuards > 0) {\n    for(var i = 0; i < field.defenderSide.friendGuards; ++i){\n        finalMods.push(3072);\n    }\n    desc.friendGuards = field.defenderSide.friendGuards;\n  }\n\n  if (defender.hasAbility('Fluffy') && move.hasType('Fire')) {\n    finalMods.push(8192);\n    desc.defenderAbility = defender.ability;\n  }\n\n  if (attacker.hasItem('Expert Belt') && typeEffectiveness > 1 && !move.isZ) {\n    finalMods.push(4915);\n    desc.attackerItem = attacker.item;\n  } else if (attacker.hasItem('Life Orb')) {\n    finalMods.push(5324);\n    desc.attackerItem = attacker.item;\n  } else if (attacker.hasItem('Metronome') && move.timesUsedWithMetronome! >= 1) {\n    const timesUsedWithMetronome = Math.floor(move.timesUsedWithMetronome!);\n    if (timesUsedWithMetronome <= 4) {\n      finalMods.push(4096 + timesUsedWithMetronome * 819);\n    } else {\n      finalMods.push(8192);\n    }\n    desc.attackerItem = attacker.item;\n  }\n\n  if (move.hasType(getBerryResistType(defender.item)) &&\n      (typeEffectiveness > 1 || move.hasType('Normal')) &&\n      !attacker.hasAbility('Unnerve', 'As One (Glastrier)', 'As One (Spectrier)')) {\n    if (defender.hasAbility('Ripen')) {\n      finalMods.push(1024);\n    } else {\n      finalMods.push(2048);\n    }\n    desc.defenderItem = defender.item;\n  }\n\n  return finalMods;\n}\n\nfunction hasTerrainSeed(pokemon: Pokemon) {\n  return pokemon.hasItem('Electric Seed', 'Misty Seed', 'Grassy Seed', 'Psychic Seed');\n}\n","import {Field} from './field';\nimport {Generation} from './data/interface';\nimport {Move} from './move';\nimport {Pokemon} from './pokemon';\nimport {Result} from './result';\n\nimport {calculateRBYGSC} from './mechanics/gen12';\nimport {calculateADV} from './mechanics/gen3';\nimport {calculateDPP} from './mechanics/gen4';\nimport {calculateBWXY} from './mechanics/gen56';\nimport {calculateSMSSSV} from './mechanics/gen789';\n\nconst MECHANICS = [\n  () => {},\n  calculateRBYGSC,\n  calculateRBYGSC,\n  calculateADV,\n  calculateDPP,\n  calculateBWXY,\n  calculateBWXY,\n  calculateSMSSSV,\n  calculateSMSSSV,\n  calculateSMSSSV,\n];\n\nexport function calculate(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field?: Field,\n) {\n  return MECHANICS[gen.num](\n    gen,\n    attacker.clone(),\n    defender.clone(),\n    move.clone(),\n    field ? field.clone() : new Field()\n  ) as Result;\n}\n","import {Generation} from '../data/interface';\nimport {getItemBoostType} from '../items';\nimport {RawDesc} from '../desc';\nimport {Pokemon} from '../pokemon';\nimport {Move} from '../move';\nimport {Field} from '../field';\nimport {Result} from '../result';\nimport {\n  getModifiedStat,\n  getEVDescriptionText,\n  getFinalSpeed,\n  getMoveEffectiveness,\n  checkAirLock,\n  checkForecast,\n  checkIntimidate,\n  handleFixedDamageMoves,\n} from './util';\n\nexport function calculateADV(\n  gen: Generation,\n  attacker: Pokemon,\n  defender: Pokemon,\n  move: Move,\n  field: Field\n) {\n  checkAirLock(attacker, field);\n  checkAirLock(defender, field);\n  checkForecast(attacker, field.weather);\n  checkForecast(defender, field.weather);\n  checkIntimidate(gen, attacker, defender);\n  checkIntimidate(gen, defender, attacker);\n  attacker.stats.spe = getFinalSpeed(gen, attacker, field, field.attackerSide);\n  defender.stats.spe = getFinalSpeed(gen, defender, field, field.defenderSide);\n\n  const desc: RawDesc = {\n    attackerName: attacker.name,\n    moveName: move.name,\n    defenderName: defender.name,\n  };\n\n  const result = new Result(gen, attacker, defender, move, field, 0, desc);\n\n  if (move.category === 'Status' && !move.named('Nature Power')) {\n    return result;\n  }\n\n  if (field.defenderSide.isProtected) {\n    desc.isProtected = true;\n    return result;\n  }\n\n  if (move.named('Weather Ball')) {\n    move.type =\n      field.hasWeather('Sun') ? 'Fire'\n      : field.hasWeather('Rain') ? 'Water'\n      : field.hasWeather('Sand') ? 'Rock'\n      : field.hasWeather('Hail') ? 'Ice'\n      : 'Normal';\n    move.category = move.type === 'Rock' ? 'Physical' : 'Special';\n    desc.weather = field.weather;\n    desc.moveType = move.type;\n    desc.moveBP = move.bp;\n  }\n\n  const typeEffectivenessPrecedenceRules = [\n    'Normal',\n    'Fire',\n    'Water',\n    'Electric',\n    'Grass',\n    'Ice',\n    'Fighting',\n    'Poison',\n    'Ground',\n    'Flying',\n    'Psychic',\n    'Bug',\n    'Rock',\n    'Ghost',\n    'Dragon',\n    'Dark',\n    'Steel',\n  ];\n\n  let firstDefenderType = defender.types[0];\n  let secondDefenderType = defender.types[1];\n\n  if (secondDefenderType && firstDefenderType !== secondDefenderType) {\n    const firstTypePrecedence = typeEffectivenessPrecedenceRules.indexOf(firstDefenderType);\n    const secondTypePrecedence = typeEffectivenessPrecedenceRules.indexOf(secondDefenderType);\n\n    if (firstTypePrecedence > secondTypePrecedence) {\n      [firstDefenderType, secondDefenderType] = [secondDefenderType, firstDefenderType];\n    }\n  }\n\n  const type1Effectiveness = getMoveEffectiveness(\n    gen,\n    move,\n    firstDefenderType,\n    field.defenderSide.isForesight\n  );\n  const type2Effectiveness = secondDefenderType\n    ? getMoveEffectiveness(gen, move, secondDefenderType, field.defenderSide.isForesight)\n    : 1;\n  const typeEffectiveness = type1Effectiveness * type2Effectiveness;\n\n  if (typeEffectiveness === 0) {\n    return result;\n  }\n\n  if ((defender.hasAbility('Flash Fire') && move.hasType('Fire')) ||\n      (defender.hasAbility('Levitate') && move.hasType('Ground')) ||\n      (defender.hasAbility('Volt Absorb') && move.hasType('Electric')) ||\n      (defender.hasAbility('Water Absorb') && move.hasType('Water')) ||\n      (defender.hasAbility('Wonder Guard') && !move.hasType('???') && typeEffectiveness <= 1) ||\n      (defender.hasAbility('Soundproof') && move.flags.sound)\n  ) {\n    desc.defenderAbility = defender.ability;\n    return result;\n  }\n\n  desc.HPEVs = `${defender.evs.hp} HP`;\n\n  const fixedDamage = handleFixedDamageMoves(attacker, move);\n  if (fixedDamage) {\n    result.damage = fixedDamage;\n    return result;\n  }\n\n  if (move.hits > 1) {\n    desc.hits = move.hits;\n  }\n\n  let bp = move.bp;\n  switch (move.name) {\n  case 'Flail':\n  case 'Reversal':\n    const p = Math.floor((48 * attacker.curHP()) / attacker.maxHP());\n    bp = p <= 1 ? 200 : p <= 4 ? 150 : p <= 9 ? 100 : p <= 16 ? 80 : p <= 32 ? 40 : 20;\n    desc.moveBP = bp;\n    break;\n  case 'Eruption':\n  case 'Water Spout':\n    bp = Math.max(1, Math.floor((150 * attacker.curHP()) / attacker.maxHP()));\n    desc.moveBP = bp;\n    break;\n  case 'Low Kick':\n    const w = defender.weightkg;\n    bp = w >= 200 ? 120 : w >= 100 ? 100 : w >= 50 ? 80 : w >= 25 ? 60 : w >= 10 ? 40 : 20;\n    desc.moveBP = bp;\n    break;\n  case 'Facade':\n    if (attacker.hasStatus('par', 'psn', 'tox', 'brn')) {\n      bp = move.bp * 2;\n      desc.moveBP = bp;\n    }\n    break;\n  case 'Nature Power':\n    move.category = 'Physical';\n    bp = 60;\n    desc.moveName = 'Swift';\n    break;\n  default:\n    bp = move.bp;\n  }\n\n  if (bp === 0) {\n    return result;\n  }\n\n  const isPhysical = move.category === 'Physical';\n  const attackStat = isPhysical ? 'atk' : 'spa';\n  desc.attackEVs = getEVDescriptionText(gen, attacker, attackStat, attacker.nature);\n  const defenseStat = isPhysical ? 'def' : 'spd';\n  desc.defenseEVs = getEVDescriptionText(gen, defender, defenseStat, defender.nature);\n\n  let at = attacker.rawStats[attackStat];\n  let df = defender.rawStats[defenseStat];\n\n  if (isPhysical && attacker.hasAbility('Huge Power', 'Pure Power')) {\n    at *= 2;\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if (!attacker.hasItem('Sea Incense') && move.hasType(getItemBoostType(attacker.item))) {\n    at = Math.floor(at * 1.1);\n    desc.attackerItem = attacker.item;\n  } else if (attacker.hasItem('Sea Incense') && move.hasType('Water')) {\n    at = Math.floor(at * 1.05);\n    desc.attackerItem = attacker.item;\n  } else if (\n    (isPhysical && attacker.hasItem('Choice Band')) ||\n    (!isPhysical && attacker.hasItem('Soul Dew') && attacker.named('Latios', 'Latias'))\n  ) {\n    at = Math.floor(at * 1.5);\n    desc.attackerItem = attacker.item;\n  } else if (\n    (!isPhysical && attacker.hasItem('Deep Sea Tooth') && attacker.named('Clamperl')) ||\n    (!isPhysical && attacker.hasItem('Light Ball') && attacker.named('Pikachu')) ||\n    (isPhysical && attacker.hasItem('Thick Club') && attacker.named('Cubone', 'Marowak'))\n  ) {\n    at *= 2;\n    desc.attackerItem = attacker.item;\n  }\n\n  if (!isPhysical && defender.hasItem('Soul Dew') && defender.named('Latios', 'Latias')) {\n    df = Math.floor(df * 1.5);\n    desc.defenderItem = defender.item;\n  } else if (\n    (!isPhysical && defender.hasItem('Deep Sea Scale') && defender.named('Clamperl')) ||\n    (isPhysical && defender.hasItem('Metal Powder') && defender.named('Ditto'))\n  ) {\n    df *= 2;\n    desc.defenderItem = defender.item;\n  }\n\n  if (defender.hasAbility('Thick Fat') && (move.hasType('Fire', 'Ice'))) {\n    at = Math.floor(at / 2);\n    desc.defenderAbility = defender.ability;\n  } else if (isPhysical && defender.hasAbility('Marvel Scale') && defender.status) {\n    df = Math.floor(df * 1.5);\n    desc.defenderAbility = defender.ability;\n  }\n\n  if ((isPhysical &&\n        (attacker.hasAbility('Hustle') || (attacker.hasAbility('Guts') && attacker.status))) ||\n      (!isPhysical && attacker.abilityOn && attacker.hasAbility('Plus', 'Minus'))\n  ) {\n    at = Math.floor(at * 1.5);\n    desc.attackerAbility = attacker.ability;\n  } else if (attacker.curHP() <= attacker.maxHP() / 3 &&\n    ((attacker.hasAbility('Overgrow') && move.hasType('Grass')) ||\n     (attacker.hasAbility('Blaze') && move.hasType('Fire')) ||\n     (attacker.hasAbility('Torrent') && move.hasType('Water')) ||\n     (attacker.hasAbility('Swarm') && move.hasType('Bug')))\n  ) {\n    bp = Math.floor(bp * 1.5);\n    desc.attackerAbility = attacker.ability;\n  }\n\n  if (move.named('Explosion', 'Self-Destruct')) {\n    df = Math.floor(df / 2);\n  }\n\n  const isCritical = move.isCrit && !defender.hasAbility('Battle Armor', 'Shell Armor');\n\n  const attackBoost = attacker.boosts[attackStat];\n  const defenseBoost = defender.boosts[defenseStat];\n  if (attackBoost > 0 || (!isCritical && attackBoost < 0)) {\n    at = getModifiedStat(at, attackBoost);\n    desc.attackBoost = attackBoost;\n  }\n  if (defenseBoost < 0 || (!isCritical && defenseBoost > 0)) {\n    df = getModifiedStat(df, defenseBoost);\n    desc.defenseBoost = defenseBoost;\n  }\n\n  const lv = attacker.level;\n  let baseDamage = Math.floor(Math.floor((Math.floor((2 * lv) / 5 + 2) * at * bp) / df) / 50);\n\n  if (attacker.hasStatus('brn') && isPhysical && !attacker.hasAbility('Guts')) {\n    baseDamage = Math.floor(baseDamage / 2);\n    desc.isBurned = true;\n  }\n\n  if (!isCritical) {\n    const screenMultiplier = field.gameType !== 'Singles' ? 2 / 3 : 1 / 2;\n    if (isPhysical && field.defenderSide.isReflect) {\n      baseDamage = Math.floor(baseDamage * screenMultiplier);\n      desc.isReflect = true;\n    } else if (!isPhysical && field.defenderSide.isLightScreen) {\n      baseDamage = Math.floor(baseDamage * screenMultiplier);\n      desc.isLightScreen = true;\n    }\n  }\n\n  if (move.named('Pursuit') && field.defenderSide.isSwitching === 'out') {\n    baseDamage = Math.floor(baseDamage * 2);\n    desc.isSwitching = 'out';\n  }\n\n  if (field.gameType !== 'Singles' && move.target === 'allAdjacentFoes') {\n    baseDamage = Math.floor(baseDamage / 2);\n  }\n\n  if ((field.hasWeather('Sun') && move.hasType('Fire')) ||\n      (field.hasWeather('Rain') && move.hasType('Water'))) {\n    baseDamage = Math.floor(baseDamage * 1.5);\n    desc.weather = field.weather;\n  } else if (\n    (field.hasWeather('Sun') && move.hasType('Water')) ||\n    (field.hasWeather('Rain') && move.hasType('Fire')) ||\n    (move.named('Solar Beam') && field.hasWeather('Rain', 'Sand', 'Hail'))\n  ) {\n    baseDamage = Math.floor(baseDamage / 2);\n    desc.weather = field.weather;\n  }\n\n  if (attacker.hasAbility('Flash Fire') && attacker.abilityOn && move.hasType('Fire')) {\n    baseDamage = Math.floor(baseDamage * 1.5);\n    desc.attackerAbility = 'Flash Fire';\n  }\n\n  baseDamage = (move.category === 'Physical' ? Math.max(1, baseDamage) : baseDamage) + 2;\n\n  if (isCritical) {\n    baseDamage *= 2;\n    desc.isCritical = true;\n  }\n\n  if (move.named('Weather Ball') && field.weather) {\n    baseDamage *= 2;\n    desc.moveBP = bp * 2;\n  }\n\n  if (field.attackerSide.isHelpingHand) {\n    baseDamage = Math.floor(baseDamage * 1.5);\n    desc.isHelpingHand = true;\n  }\n\n  if (move.hasType(...attacker.types)) {\n    baseDamage = Math.floor(baseDamage * 1.5);\n  }\n\n  baseDamage = Math.floor(baseDamage * typeEffectiveness);\n  result.damage = [];\n  for (let i = 85; i <= 100; i++) {\n    result.damage[i - 85] = Math.max(1, Math.floor((baseDamage * i) / 100));\n  }\n\n  return result;\n}\n","import * as I from './data/interface';\nimport {Stats} from './stats';\nimport {toID, extend, assignWithout} from './util';\nimport {State} from './state';\n\nconst STATS = ['hp', 'atk', 'def', 'spa', 'spd', 'spe'] as I.StatID[];\nconst SPC = new Set(['spc']);\n\n\nexport class Pokemon implements State.Pokemon {\n  gen: I.Generation;\n  name: I.SpeciesName;\n  species: I.Specie;\n\n  types: [I.TypeName] | [I.TypeName, I.TypeName] | [I.TypeName, I.TypeName, I.TypeName];\n  weightkg: number;\n\n  level: number;\n  bossMultiplier: number;\n  statMultipliers: I.StatsTable;\n  gender?: I.GenderName;\n  ability?: I.AbilityName;\n  abilityOn?: boolean;\n  isDynamaxed?: boolean;\n  dynamaxLevel?: number;\n  isSaltCure?: boolean;\n  alliesFainted?: number;\n  boostedStat?: I.StatIDExceptHP | 'auto';\n  item?: I.ItemName;\n  teraType?: I.TypeName;\n  isTera: boolean;\n  shieldData?: State.ShieldData;\n  shieldActive?: boolean;\n  isQP? : boolean;\n  usedBoosterEnergy?: boolean;\n  isIngrain?: boolean;\n  isSmackDown?: boolean;\n\n  nature: I.NatureName;\n  ivs: I.StatsTable;\n  evs: I.StatsTable;\n  boosts: I.StatsTable;\n  isPumped: number;\n  isMicle: boolean;\n  isMinimize: boolean;\n  randomBoosts: number;\n  stockpile: number;\n  rawStats: I.StatsTable;\n  stats: I.StatsTable;\n\n  originalCurHP: number;\n  status: I.StatusName | '';\n  volatileStatus: string[];\n  toxicCounter: number;\n  hitsTaken: number;\n  timesFainted: number;\n  hasExtraType?: boolean;\n  // lastMoveFailed: boolean;\n\n  moves: I.MoveName[];\n\n  abilityNullified: number | undefined;\n  permanentAtkCheers: number;\n  permanentDefCheers: number;\n\n  constructor(\n    gen: I.Generation,\n    name: string,\n    options: Partial<State.Pokemon> & {\n      types?: [I.TypeName] | [I.TypeName, I.TypeName] | [I.TypeName, I.TypeName, I.TypeName];\n      curHP?: number;\n      ivs?: Partial<I.StatsTable> & {spc?: number};\n      evs?: Partial<I.StatsTable> & {spc?: number};\n      boosts?: Partial<I.StatsTable> & {spc?: number};\n      rawStats?: I.StatsTable;\n      stats?: I.StatsTable;\n      statMultipliers?: Partial<I.StatsTable> & {spc?: number};\n    } = {}\n  ) {\n    this.species = extend(true, {}, gen.species.get(toID(name)), options.overrides);\n\n    this.gen = gen;\n    this.name = options.name || name as I.SpeciesName;\n    this.types = options.types || this.species.types;\n    this.weightkg = this.species.weightkg;\n\n    this.level = options.level || 100;\n    this.bossMultiplier = options.bossMultiplier || 100;\n    this.statMultipliers = Pokemon.withDefault(gen, options.statMultipliers, 1);\n\n    this.gender = options.gender || this.species.gender || 'N';\n    this.ability = options.ability || this.species.abilities?.[0] || undefined;\n    this.abilityOn = !!options.abilityOn;\n\n    this.isDynamaxed = !!options.isDynamaxed;\n    this.dynamaxLevel = this.isDynamaxed\n      ? (options.dynamaxLevel === undefined ? 10 : options.dynamaxLevel) : undefined;\n    this.isSaltCure = !!options.isSaltCure;\n    this.alliesFainted = options.alliesFainted;\n    this.boostedStat = options.boostedStat;\n    this.usedBoosterEnergy = options.usedBoosterEnergy;\n    this.isIngrain = options.isIngrain;\n    this.isSmackDown = options.isSmackDown;\n    this.teraType = options.teraType;\n    this.isTera = !!options.isTera;\n    this.shieldData = options.shieldData;\n    this.shieldActive = options.shieldActive;\n    this.item = options.item;\n    this.nature = options.nature || ('Serious' as I.NatureName);\n    this.ivs = Pokemon.withDefault(gen, options.ivs, 31);\n    this.evs = Pokemon.withDefault(gen, options.evs, gen.num >= 3 ? 0 : 252);\n    this.boosts = Pokemon.withDefault(gen, options.boosts, 0, false);\n    this.isPumped = options.isPumped || 0;\n    this.isMicle = !!options.isMicle;\n    this.isMinimize = !!options.isMinimize;\n    this.randomBoosts = options.randomBoosts || 0;\n    this.stockpile = options.stockpile || 0;\n\n    // Gigantamax 'forms' inherit weight from their base species when not dynamaxed\n    // TODO: clean this up with proper Gigantamax support\n    if (this.weightkg === 0 && !this.isDynamaxed && this.species.baseSpecies) {\n      this.weightkg = gen.species.get(toID(this.species.baseSpecies))!.weightkg;\n    }\n\n    if (gen.num < 3) {\n      this.ivs.hp = Stats.DVToIV(\n        Stats.getHPDV({\n          atk: this.ivs.atk,\n          def: this.ivs.def,\n          spe: this.ivs.spe,\n          spc: this.ivs.spa,\n        })\n      );\n    }\n\n    const rawStatsProvided = !!options.rawStats;\n    const statsProvided = !!options.stats;\n    this.rawStats = {} as I.StatsTable;\n    this.stats = {} as I.StatsTable;\n    for (const stat of STATS) {\n      const val = this.calcStat(gen, stat);\n      this.rawStats[stat] = rawStatsProvided ? options.rawStats![stat]! : ( stat === \"hp\" ? ~~val*this.bossMultiplier/100 : val);\n      this.stats[stat] =  statsProvided ? options.stats![stat]! : (stat === \"hp\" ? ~~val*this.bossMultiplier/100 : val);\n    }\n\n    const curHP = options.curHP || options.originalCurHP;\n    this.originalCurHP = curHP && curHP <= this.rawStats.hp ? curHP : curHP === 0 ? 0 : this.rawStats.hp;\n    this.status = options.status || '';\n    this.volatileStatus = options.volatileStatus || [];\n    this.toxicCounter = options.toxicCounter || 0;\n    this.hitsTaken = options.hitsTaken || 0;\n    this.timesFainted = options.timesFainted || 0;\n    this.hasExtraType = !!options.hasExtraType;\n    // this.lastMoveFailed = !!options.lastMoveFailed;\n    this.moves = options.moves || [];\n    this.abilityNullified = options.abilityNullified;\n    this.permanentAtkCheers = options.permanentAtkCheers || 0;\n    this.permanentDefCheers = options.permanentDefCheers || 0;\n  }\n\n  maxHP(original = false) {\n    // Shedinja still has 1 max HP during the effect even if its Dynamax Level is maxed (DaWoblefet)\n    if (!original && this.isDynamaxed && this.species.baseStats.hp !== 1) {\n      return Math.floor((this.rawStats.hp * (150 + 5 * this.dynamaxLevel!)) / 100);\n    }\n\n    return this.rawStats.hp;\n  }\n\n  curHP(original = false) {\n    // Shedinja still has 1 max HP during the effect even if its Dynamax Level is maxed (DaWoblefet)\n    if (!original && this.isDynamaxed && this.species.baseStats.hp !== 1) {\n      return Math.ceil((this.originalCurHP * (150 + 5 * this.dynamaxLevel!)) / 100);\n    }\n\n    return this.originalCurHP;\n  }\n\n  hasAbility(...abilities: string[]) {\n    return (this.abilityNullified || 0) === 0 && !!(this.ability && abilities.includes(this.ability));\n  }\n\n  hasItem(...items: string[]) {\n    return !!(this.item && items.includes(this.item));\n  }\n\n  hasStatus(...statuses: I.StatusName[]) {\n    return !!(this.status && statuses.includes(this.status));\n  }\n\n  hasType(...types: I.TypeName[]) {\n    for (const type of types) {\n      if ((this.isTera && this.teraType) ? this.teraType === type : this.types.includes(type)) return true;    }\n    return false;\n  }\n\n  /** Ignores Tera type */\n  hasOriginalType(...types: I.TypeName[]) {\n    for (const type of types) {\n      if (!this.types.includes(type)) return false;\n    }\n    return true;\n  }\n\n  named(...names: string[]) {\n    return names.includes(this.name);\n  }\n\n  clone() {\n    return new Pokemon(this.gen, this.name, {\n      level: this.level,\n      bossMultiplier: this.bossMultiplier,\n      statMultipliers: this.statMultipliers,\n      ability: this.ability,\n      abilityOn: this.abilityOn,\n      isDynamaxed: this.isDynamaxed,\n      dynamaxLevel: this.dynamaxLevel,\n      isSaltCure: this.isSaltCure,\n      alliesFainted: this.alliesFainted,\n      boostedStat: this.boostedStat,\n      usedBoosterEnergy: this.usedBoosterEnergy,\n      isIngrain: this.isIngrain,\n      item: this.item,\n      gender: this.gender,\n      nature: this.nature,\n      stats: this.stats,\n      ivs: extend(true, {}, this.ivs),\n      evs: extend(true, {}, this.evs),\n      boosts: extend(true, {}, this.boosts),\n      isPumped: this.isPumped,\n      isMicle: this.isMicle,\n      isMinimize: this.isMinimize,\n      randomBoosts: this.randomBoosts,\n      stockpile: this.stockpile,\n      originalCurHP: this.originalCurHP,\n      status: this.status,\n      volatileStatus: this.volatileStatus,\n      teraType: this.teraType,\n      isTera: this.isTera,\n      shieldData: this.shieldData,\n      shieldActive: this.shieldActive,\n      toxicCounter: this.toxicCounter,\n      hitsTaken: this.hitsTaken,\n      timesFainted: this.timesFainted,\n      types: this.types,\n      hasExtraType: this.hasExtraType,\n      // lastMoveFailed: this.lastMoveFailed,\n      moves: this.moves.slice(),\n      abilityNullified: this.abilityNullified,\n      permanentAtkCheers: this.permanentAtkCheers,\n      permanentDefCheers: this.permanentDefCheers,\n      overrides: this.species,\n    });\n  }\n\n  private calcStat(gen: I.Generation, stat: I.StatID) {\n    return Math.floor(this.statMultipliers[stat]! * Stats.calcStat(\n      gen,\n      stat,\n      this.species.baseStats[stat]!,\n      this.ivs[stat]!,\n      this.evs[stat]!,\n      this.level,\n      this.nature\n    ));\n  }\n\n  static getForme(\n    gen: I.Generation,\n    speciesName: string,\n    item?: I.ItemName,\n    moveName?: I.MoveName\n  ) {\n    const species = gen.species.get(toID(speciesName));\n    if (!species?.otherFormes) {\n      return speciesName;\n    }\n\n    let i = 0;\n    if (\n      (item &&\n        ((item.includes('ite') && !item.includes('ite Y')) ||\n          (speciesName === 'Groudon' && item === 'Red Orb') ||\n          (speciesName === 'Kyogre' && item === 'Blue Orb'))) ||\n      (moveName && speciesName === 'Meloetta' && moveName === 'Relic Song') ||\n      (speciesName === 'Rayquaza' && moveName === 'Dragon Ascent')\n    ) {\n      i = 1;\n    } else if (item?.includes('ite Y')) {\n      i = 2;\n    }\n\n    return i ? species.otherFormes[i - 1] : species.name;\n  }\n\n  private static withDefault(\n    gen: I.Generation,\n    current: Partial<I.StatsTable> & {spc?: number} | undefined,\n    val: number,\n    match = true,\n  ) {\n    const cur: Partial<I.StatsTable> = {};\n    if (current) {\n      assignWithout(cur, current, SPC);\n      if (current.spc) {\n        cur.spa = current.spc;\n        cur.spd = current.spc;\n      }\n      if (match && gen.num <= 2 && current.spa !== current.spd) {\n        throw new Error('Special Attack and Special Defense must match before Gen 3');\n      }\n    }\n    return {hp: val, atk: val, def: val, spa: val, spd: val, spe: val, ...cur};\n  }\n}\n","import * as I from './data/interface';\nimport {State} from './state';\nimport {toID, extend} from './util';\n\nconst SPECIAL = ['Fire', 'Water', 'Grass', 'Electric', 'Ice', 'Psychic', 'Dark', 'Dragon'];\n\nexport class Move implements State.Move {\n  gen: I.Generation;\n  name: I.MoveName;\n\n  originalName: string;\n  ability?: I.AbilityName;\n  item?: I.ItemName;\n  species?: I.SpeciesName;\n  useZ?: boolean;\n  useMax?: boolean;\n  overrides?: Partial<I.Move>;\n\n  hits: number;\n  timesUsed?: number;\n  timesUsedWithMetronome?: number;\n  bp: number;\n  type: I.TypeName;\n  category: I.MoveCategory;\n  flags: I.MoveFlags;\n  secondaries: any;\n  target: I.MoveTarget;\n  recoil?: [number, number];\n  hasCrashDamage: boolean;\n  mindBlownRecoil: boolean;\n  struggleRecoil: boolean;\n  isCrit: boolean;\n  highCritChance: boolean;\n  isSpread: boolean;\n  drain?: [number, number];\n  priority: number;\n  dropsStats?: number;\n  ignoreDefensive: boolean;\n  overrideOffensiveStat?: I.StatIDExceptHP;\n  overrideDefensiveStat?: I.StatIDExceptHP;\n  overrideOffensivePokemon?: 'target' | 'source';\n  overrideDefensivePokemon?: 'target' | 'source';\n  breaksProtect: boolean;\n  isZ: boolean;\n  isMax: boolean;\n\n  constructor(\n    gen: I.Generation,\n    name: string,\n    options: Partial<State.Move> & {\n      ability?: I.AbilityName;\n      item?: I.ItemName;\n      species?: I.SpeciesName;\n    } = {}\n  ) {\n    name = options.name || name;\n    this.originalName = name;\n    let data: I.Move = extend(true, {name}, gen.moves.get(toID(name)), options.overrides);\n\n    this.hits = options.hits || 1;\n    // If isZMove but there isn't a corresponding z-move, use the original move\n    if (options.useMax && data.maxMove) {\n      const maxMoveName: string = getMaxMoveName(\n        data.type,\n        options.species,\n        !!(data.category === 'Status'),\n        options.ability\n      );\n      const maxMove = gen.moves.get(toID(maxMoveName));\n      const maxPower = () => {\n        if (['G-Max Drum Solo', 'G-Max Fire Ball', 'G-Max Hydrosnipe'].includes(maxMoveName)) {\n          return 160;\n        }\n        // TODO: checking basePower === 10 is fragile (what if the maxMove's basePower is\n        // overridden?) and also fails for Max Flare, which is strangely 100 BP in the game data\n        if (maxMove!.basePower === 10 || maxMoveName === 'Max Flare') {\n          return data.maxMove!.basePower;\n        }\n        return maxMove!.basePower;\n      };\n      data = extend(true, {}, maxMove, {\n        name: maxMoveName,\n        basePower: maxPower(),\n        category: data.category,\n      });\n    }\n    if (options.useZ && data.zMove?.basePower) {\n      const zMoveName: string = getZMoveName(data.name, data.type, options.item);\n      const zMove = gen.moves.get(toID(zMoveName));\n      data = extend(true, {}, zMove, {\n        name: zMoveName,\n        basePower: zMove!.basePower === 1 ? data.zMove.basePower : zMove!.basePower,\n        category: data.category,\n      });\n    } else {\n      if (options.hits === undefined && data.multihit) {\n        if (typeof data.multihit === 'number') {\n          this.hits = data.multihit;\n        } else if (options.hits) {\n          this.hits = options.hits;\n        } else {\n          this.hits = (options.ability === 'Skill Link')\n            ? data.multihit[1]\n            : data.multihit[0] + 1;\n        }\n      }\n      this.timesUsedWithMetronome = options.timesUsedWithMetronome;\n    }\n    this.gen = gen;\n    this.name = data.name;\n    this.ability = options.ability;\n    this.item = options.item;\n    this.useZ = options.useZ;\n    this.useMax = options.useMax;\n    this.overrides = options.overrides;\n    this.species = options.species;\n\n\n    this.bp = options.bp ? options.bp : data.basePower;\n    // These moves have a type, but the damage they deal is typeless so we override it\n    const typelessDamage =\n      (gen.num >= 2 && data.id === 'struggle') ||\n      (gen.num <= 4 && ['futuresight', 'doomdesire'].includes(data.id));\n    this.type = typelessDamage ? '???' : data.type;\n    this.category = data.category ||\n      (gen.num < 4 ? (SPECIAL.includes(data.type) ? 'Special' : 'Physical') : 'Status');\n\n    const stat = this.category === 'Special' ? 'spa' : 'atk';\n    if (data.self?.boosts && data.self.boosts[stat] && data.self.boosts[stat]! < 0) {\n      this.dropsStats = Math.abs(data.self.boosts[stat]!);\n    }\n    this.timesUsed = (this.dropsStats && options.timesUsed) || 1;\n    this.secondaries = data.secondaries;\n    // For the purposes of the damage formula only 'allAdjacent' and 'allAdjacentFoes' matter, so we\n    // simply default to 'any' for the others even though they may not actually be 'any'-target\n    this.target = data.target || 'any';\n    this.recoil = data.recoil;\n    this.hasCrashDamage = !!data.hasCrashDamage;\n    this.mindBlownRecoil = !!data.mindBlownRecoil;\n    this.struggleRecoil = !!data.struggleRecoil;\n    this.isCrit = !!options.isCrit || !!data.willCrit ||\n      // These don't *always* crit (255/256 chance), but for the purposes of the calc they do\n      gen.num === 1 && ['crabhammer', 'razorleaf', 'slash', 'karate chop'].includes(data.id);\n    this.highCritChance = !!data.highCritChance;\n    this.isSpread = !!options.isSpread;\n    this.drain = data.drain;\n    this.flags = data.flags;\n    // The calc doesn't currently care about negative priority moves so we simply default to 0\n    this.priority = data.priority || 0;\n\n    this.ignoreDefensive = !!data.ignoreDefensive;\n    this.overrideOffensiveStat = data.overrideOffensiveStat;\n    this.overrideDefensiveStat = data.overrideDefensiveStat;\n    this.overrideOffensivePokemon = data.overrideOffensivePokemon;\n    this.overrideDefensivePokemon = data.overrideDefensivePokemon;\n    this.breaksProtect = !!data.breaksProtect;\n    this.isZ = !!data.isZ;\n    this.isMax = !!data.isMax;\n\n    if (!this.bp) {\n      // Assume max happiness for these moves because the calc doesn't support happiness\n      if (['return', 'frustration', 'pikapapow', 'veeveevolley'].includes(data.id)) {\n        this.bp = 102;\n      }\n    }\n  }\n\n  named(...names: string[]) {\n    return names.includes(this.name);\n  }\n\n  hasType(...types: Array<(I.TypeName | undefined)>) {\n    return types.includes(this.type);\n  }\n\n  clone() {\n    return new Move(this.gen, this.originalName, {\n      ability: this.ability,\n      item: this.item,\n      species: this.species,\n      useZ: this.useZ,\n      useMax: this.useMax,\n      isCrit: this.isCrit,\n      isSpread: this.isSpread,\n      hits: this.hits,\n      bp: this.bp,\n      timesUsed: this.timesUsed,\n      timesUsedWithMetronome: this.timesUsedWithMetronome,\n      overrides: this.overrides,\n    });\n  }\n}\n\nexport function getZMoveName(moveName: string, moveType: I.TypeName, item?: string) {\n  item = item || '';\n  if (moveName.includes('Hidden Power')) return 'Breakneck Blitz';\n  if (moveName === 'Clanging Scales' && item === 'Kommonium Z') return 'Clangorous Soulblaze';\n  if (moveName === 'Darkest Lariat' && item === 'Incinium Z') return 'Malicious Moonsault';\n  if (moveName === 'Giga Impact' && item === 'Snorlium Z') return 'Pulverizing Pancake';\n  if (moveName === 'Moongeist Beam' && item === 'Lunalium Z') return 'Menacing Moonraze Maelstrom';\n  if (moveName === 'Photon Geyser' && item === 'Ultranecrozium Z') {\n    return 'Light That Burns the Sky';\n  }\n  if (moveName === 'Play Rough' && item === 'Mimikium Z') return 'Let\\'s Snuggle Forever';\n  if (moveName === 'Psychic' && item === 'Mewnium Z') return 'Genesis Supernova';\n  if (moveName === 'Sparkling Aria' && item === 'Primarium Z') return 'Oceanic Operetta';\n  if (moveName === 'Spectral Thief' && item === 'Marshadium Z') {\n    return 'Soul-Stealing 7-Star Strike';\n  }\n  if (moveName === 'Spirit Shackle' && item === 'Decidium Z') return 'Sinister Arrow Raid';\n  if (moveName === 'Stone Edge' && item === 'Lycanium Z') return 'Splintered Stormshards';\n  if (moveName === 'Sunsteel Strike' && item === 'Solganium Z') return 'Searing Sunraze Smash';\n  if (moveName === 'Volt Tackle' && item === 'Pikanium Z') return 'Catastropika';\n  if (moveName === 'Nature\\'s Madness' && item === 'Tapunium Z') return 'Guardian of Alola';\n  if (moveName === 'Thunderbolt') {\n    if (item === 'Aloraichium Z') return 'Stoked Sparksurfer';\n    if (item === 'Pikashunium Z') return '10,000,000 Volt Thunderbolt';\n  }\n  return ZMOVES_TYPING[moveType]!;\n}\n\nconst ZMOVES_TYPING: {\n  [type in I.TypeName]?: string;\n} = {\n  Bug: 'Savage Spin-Out',\n  Dark: 'Black Hole Eclipse',\n  Dragon: 'Devastating Drake',\n  Electric: 'Gigavolt Havoc',\n  Fairy: 'Twinkle Tackle',\n  Fighting: 'All-Out Pummeling',\n  Fire: 'Inferno Overdrive',\n  Flying: 'Supersonic Skystrike',\n  Ghost: 'Never-Ending Nightmare',\n  Grass: 'Bloom Doom',\n  Ground: 'Tectonic Rage',\n  Ice: 'Subzero Slammer',\n  Normal: 'Breakneck Blitz',\n  Poison: 'Acid Downpour',\n  Psychic: 'Shattered Psyche',\n  Rock: 'Continental Crush',\n  Steel: 'Corkscrew Crash',\n  Water: 'Hydro Vortex',\n};\n\nexport function getMaxMoveName(\n  moveType: I.TypeName,\n  pokemonSpecies?: string,\n  isStatus?: boolean,\n  pokemonAbility?: string\n) {\n  if (isStatus) return 'Max Guard';\n  if (pokemonAbility === 'Normalize') return 'Max Strike';\n  if (moveType === 'Fire') {\n    if (pokemonSpecies === 'Charizard-Gmax') return 'G-Max Wildfire';\n    if (pokemonSpecies === 'Centiskorch-Gmax') return 'G-Max Centiferno';\n    if (pokemonSpecies === 'Cinderace-Gmax') return 'G-Max Fire Ball';\n  }\n  if (moveType === 'Normal') {\n    if (pokemonSpecies === 'Eevee-Gmax') return 'G-Max Cuddle';\n    if (pokemonSpecies === 'Meowth-Gmax') return 'G-Max Gold Rush';\n    if (pokemonSpecies === 'Snorlax-Gmax') return 'G-Max Replenish';\n    if (pokemonAbility === 'Pixilate') return 'Max Starfall';\n    if (pokemonAbility === 'Aerilate') return 'Max Airstream';\n    if (pokemonAbility === 'Refrigerate') return 'Max Hailstorm';\n    if (pokemonAbility === 'Galvanize') return 'Max Lightning';\n  }\n  if (moveType === 'Fairy') {\n    if (pokemonSpecies === 'Alcremie-Gmax') return 'G-Max Finale';\n    if (pokemonSpecies === 'Hatterene-Gmax') return 'G-Max Smite';\n  }\n  if (moveType === 'Steel') {\n    if (pokemonSpecies === 'Copperajah-Gmax') return 'G-Max Steelsurge';\n    if (pokemonSpecies === 'Melmetal-Gmax') return 'G-Max Meltdown';\n  }\n  if (moveType === 'Electric') {\n    if (pokemonSpecies === 'Pikachu-Gmax') return 'G-Max Volt Crash';\n    if (pokemonSpecies?.startsWith('Toxtricity') &&\n      pokemonSpecies?.endsWith('Gmax')) return 'G-Max Stun Shock';\n  }\n  if (moveType === 'Grass') {\n    if (pokemonSpecies === 'Appletun-Gmax') return 'G-Max Sweetness';\n    if (pokemonSpecies === 'Flapple-Gmax') return 'G-Max Tartness';\n    if (pokemonSpecies === 'Rillaboom-Gmax') return 'G-Max Drum Solo';\n    if (pokemonSpecies === 'Venusaur-Gmax') return 'G-Max Vine Lash';\n  }\n  if (moveType === 'Water') {\n    if (pokemonSpecies === 'Blastoise-Gmax') return 'G-Max Cannonade';\n    if (pokemonSpecies === 'Drednaw-Gmax') return 'G-Max Stonesurge';\n    if (pokemonSpecies === 'Inteleon-Gmax') return 'G-Max Hydrosnipe';\n    if (pokemonSpecies === 'Kingler-Gmax') return 'G-Max Foam Burst';\n    if (pokemonSpecies === 'Urshifu-Rapid-Strike-Gmax') return 'G-Max Rapid Flow';\n  }\n  if (moveType === 'Dark') {\n    if (pokemonSpecies === 'Grimmsnarl-Gmax') return 'G-Max Snooze';\n    if (pokemonSpecies === 'Urshifu-Gmax') return 'G-Max One Blow';\n  }\n  if (moveType === 'Poison' && pokemonSpecies === 'Garbodor-Gmax') return 'G-Max Malodor';\n  if (moveType === 'Fighting' && pokemonSpecies === 'Machamp-Gmax') return 'G-Max Chi Strike';\n  if (moveType === 'Ghost' && pokemonSpecies === 'Gengar-Gmax') return 'G-Max Terror';\n  if (moveType === 'Ice' && pokemonSpecies === 'Lapras-Gmax') return 'G-Max Resonance';\n  if (moveType === 'Flying' && pokemonSpecies === 'Corviknight-Gmax') return 'G-Max Wind Rage';\n  if (moveType === 'Dragon' && pokemonSpecies === 'Duraludon-Gmax') return 'G-Max Depletion';\n  if (moveType === 'Psychic' && pokemonSpecies === 'Orbeetle-Gmax') return 'G-Max Gravitas';\n  if (moveType === 'Rock' && pokemonSpecies === 'Coalossal-Gmax') return 'G-Max Volcalith';\n  if (moveType === 'Ground' && pokemonSpecies === 'Sandaconda-Gmax') return 'G-Max Sandblast';\n  if (moveType === 'Dark' && pokemonSpecies === 'Grimmsnarl-Gmax') return 'G-Max Snooze';\n  return 'Max ' + MAXMOVES_TYPING[moveType];\n}\n\nconst MAXMOVES_TYPING: {\n  [type in I.TypeName]?: string;\n} = {\n  Bug: 'Flutterby',\n  Dark: 'Darkness',\n  Dragon: 'Wyrmwind',\n  Electric: 'Lightning',\n  Fairy: 'Starfall',\n  Fighting: 'Knuckle',\n  Fire: 'Flare',\n  Flying: 'Airstream',\n  Ghost: 'Phantasm',\n  Grass: 'Overgrowth',\n  Ground: 'Quake',\n  Ice: 'Hailstorm',\n  Normal: 'Strike',\n  Poison: 'Ooze',\n  Psychic: 'Mindstorm',\n  Rock: 'Rockfall',\n  Steel: 'Steelspike',\n  Water: 'Geyser',\n};\n","import * as I from './data/interface';\n\nexport namespace State {\n\n  export type ShieldData  = {\n    hpTrigger: number;\n    timeTrigger: number;\n    shieldCancelDamage: number;\n    shieldDamageRate: number;\n    shieldDamageRateTera: number;\n    shieldDamageRateTeraChange: number;\n  }\n\n  export interface Pokemon {\n    name: I.SpeciesName;\n    level?: number;\n    bossMultiplier?: number;\n    statMultipliers?: I.StatsTable;\n    ability?: I.AbilityName;\n    abilityOn?: boolean;\n    isDynamaxed?: boolean;\n    dynamaxLevel?: number;\n    isSaltCure?: boolean;\n    alliesFainted?: number;\n    proteanLiberoType?: I.TypeName;\n    boostedStat?: I.StatIDExceptHP | 'auto';\n    usedBoosterEnergy?: boolean;\n    isIngrain?: boolean;\n    isSmackDown?: boolean;\n    item?: I.ItemName;\n    gender?: I.GenderName;\n    nature?: I.NatureName;\n    ivs?: Partial<I.StatsTable>;\n    evs?: Partial<I.StatsTable>;\n    boosts?: Partial<I.StatsTable>;\n    isPumped?: number;\n    isMicle?: boolean;\n    isMinimize?: boolean;\n    randomBoosts?: number;\n    stockpile?: number;\n    originalCurHP?: number;\n    status?: I.StatusName | '';\n    volatileStatus?: string[];\n    teraType?: I.TypeName;\n    isTera?: boolean;\n    shieldData?: ShieldData;\n    shieldActive?: boolean;\n    toxicCounter?: number;\n    hitsTaken?: number;\n    timesFainted?: number;\n    hasExtraType?: boolean;\n    // lastMoveFailed?: boolean;\n    moves?: I.MoveName[];\n    abilityNullified?: number;\n    permanentAtkCheers?: number;\n    permanentDefCheers?: number,\n    overrides?: Partial<I.Specie>;\n  }\n\n  export interface Move {\n    name: I.MoveName;\n    useZ?: boolean;\n    useMax?: boolean;\n    isCrit?: boolean;\n    highCritChance?: boolean;\n    isSpread?: boolean;\n    hits?: number;\n    bp?: number;\n    timesUsed?: number;\n    timesUsedWithMetronome?: number;\n    overrides?: Partial<I.Move>;\n  }\n\n  export interface Field {\n    gameType: I.GameType;\n    weather?: I.Weather;\n    weatherTurnsRemaining?: number;\n    terrain?: I.Terrain;\n    terrainTurnsRemaining?: number;\n    isMagicRoom?: number;       // # turns remaining\n    isWonderRoom?: number;      // # turns remaining\n    isGravity?: number;         // # turns remaining\n    isAuraBreak?: boolean;\n    isFairyAura?: boolean;\n    isDarkAura?: boolean;\n    isBeadsOfRuin?: boolean;\n    isSwordOfRuin?: boolean;\n    isTabletsOfRuin?: boolean;\n    isVesselOfRuin?: boolean;\n    isTrickRoom?: number;       // # turns remaining\n    isCloudNine?: boolean;\n    isTeraformZero?: boolean;\n    attackerSide: Side;\n    defenderSide: Side;\n  }\n\n  export interface Side {\n    spikes?: number;\n    steelsurge?: boolean;\n    vinelash?: boolean;\n    wildfire?: boolean;\n    cannonade?: boolean;\n    volcalith?: boolean;\n    isSR?: boolean;\n    isReflect?: number;         // # turns remaining\n    isLightScreen?: number;     // # turns remaining\n    isDefCheered?: number;      // # turns remaining\n    isProtected?: boolean;\n    isWideGuard?: boolean;\n    isQuickGuard?: boolean;\n    isSeeded?: boolean;\n    isForesight?: boolean;\n    isTailwind?: number;        // # turns remaining\n    isHelpingHand?: boolean;\n    isAtkCheered?: number;      // # turns remaining\n    isFlowerGift?: boolean;\n    isDazzling?: boolean;\n    isFriendGuard?: boolean;\n    friendGuards?: number;\n    isAuroraVeil?: number;      // # turns remaining\n    isBattery?: boolean;\n    batteries?: number;\n    isPowerSpot?: boolean;\n    powerSpots?: number;\n    steelySpirits?: number;\n    isSwitching?: 'out' | 'in';\n    isCharged?: boolean;\n    isMist?: number;            // # turns remaining\n    isSafeguard?: number;       // # turns remaining\n    isAromaVeil?: boolean;\n    isFlowerVeil?: boolean;\n  }\n}\n","// When using this library in the browser, a bundler like Webpack should be\n// used to encapsulate the various interdependencies between internal packages.\n// However, if you are requiring contents of this package in HTML <script>\n// tags, the following loading order is required:\n//\n//   - util.js\n//   - stats.js\n//\n//   - data/species.js\n//   - data/types.js\n//   - data/natures.js\n//   - data/abilities.js\n//   - data/moves.js\n//   - data/items.js\n//   - data/index.js\n//\n//   - pokemon.js\n//   - field.js\n//   - move.js\n//   - items.js\n//\n//   - mechanics/util.js\n//   - mechanics/gen78.js\n//   - mechanics/gen56.js\n//   - mechanics/gen4.js\n//   - mechanics/gen3.js\n//   - mechanics/gen12.js\n//\n//   - calc.js\n//   - desc.js\n//   - result.ts\n//\n//   - adaptable.js\n//   - index.js\n//\n// Furthermore, before anything is loaded, the following is required:\n//\n// <script type=\"text/javascript\">\n//\t\tvar calc = exports = {};\n//\t\tfunction require() { return exports; };\n//\t</script>\n\n// If we're not being used as a module we're just going to rely on globals and\n// that the correct loading order being followed.\n\nimport {Generations} from './data';\nimport {State} from './state';\nimport * as I from './data/interface';\nimport * as A from './adaptable';\n\nexport function calculate(\n  gen: I.GenerationNum | I.Generation,\n  attacker: A.Pokemon,\n  defender: A.Pokemon,\n  move: A.Move,\n  field?: A.Field\n): A.Result {\n  return (A.calculate)(\n    typeof gen === 'number' ? Generations.get(gen) : gen,\n    attacker,\n    defender,\n    move,\n    field\n  );\n}\n\nexport class Move extends A.Move {\n  constructor(\n    gen: I.GenerationNum | I.Generation,\n    name: string,\n    options: Partial<Omit<State.Move, 'ability' | 'item' | 'species'>> & {\n      ability?: string;\n      item?: string;\n      species?: string;\n    } = {}\n  ) {\n    super(typeof gen === 'number' ? Generations.get(gen) : gen, name, options as any);\n  }\n}\n\nexport class Pokemon extends A.Pokemon {\n  constructor(\n    gen: I.GenerationNum | I.Generation,\n    name: string,\n    options: Partial<Omit<State.Pokemon, 'ability' | 'item' | 'nature' | 'moves'>> & {\n      types?: [string] | [string, string] | [string, string, string];\n      ability?: string;\n      item?: string;\n      nature?: string;\n      moves?: string[];\n      curHP?: number;\n      ivs?: Partial<I.StatsTable> & {spc?: number};\n      evs?: Partial<I.StatsTable> & {spc?: number};\n      rawStats?: I.StatsTable;\n      stats?: I.StatsTable;\n      boosts?: Partial<I.StatsTable> & {spc?: number};\n    } = {}\n  ) {\n    super(typeof gen === 'number' ? Generations.get(gen) : gen, name, options as any);\n  }\n\n  static getForme(\n    gen: I.GenerationNum | I.Generation,\n    speciesName: string,\n    item?: string,\n    moveName?: string\n  ) {\n    return A.Pokemon.getForme(\n      typeof gen === 'number' ? Generations.get(gen) : gen,\n      speciesName,\n      item as I.ItemName,\n      moveName as I.MoveName\n    );\n  }\n}\n\nexport function calcStat(\n  gen: I.GenerationNum | I.Generation,\n  stat: I.StatID | 'spc',\n  base: number,\n  iv: number,\n  ev: number,\n  level: number,\n  nature?: string\n) {\n  return A.Stats.calcStat(\n    typeof gen === 'number' ? Generations.get(gen) : gen,\n    stat === 'spc' ? 'spa' : stat,\n    base,\n    iv,\n    ev,\n    level,\n    nature\n  );\n}\n\nexport {Field, Side} from './field';\nexport {Result} from './result';\nexport type {GenerationNum, StatsTable, StatID} from './data/interface';\nexport {Generations} from './data/index';\nexport {toID} from './util';\nexport {State} from './state';\n\nexport {ABILITIES} from './data/abilities';\nexport {ITEMS, MEGA_STONES} from './data/items';\nexport {MOVES} from './data/moves';\nexport {SPECIES} from './data/species';\nexport {NATURES} from './data/natures';\nexport {TYPE_CHART} from './data/types';\nexport {STATS, Stats} from './stats';\n","import { Move, Field, Pokemon, Generations, toID } from \"../calc\";\nimport { AilmentName, MoveData, Raider, RaidTurnInfo } from \"./interface\";\nimport { AbilityName, ItemName, StatIDExceptHP, TypeName } from \"../calc/data/interface\";\nimport { getModifiedStat, getMoveEffectiveness, isGrounded } from \"../calc/mechanics/util\";\nimport guaranteedHitMoves from \"../data/guaranteed_hit_moves.json\";\n\nconst gen = Generations.get(9);\n\nexport function absoluteFloor(num: number) {\n    return num < 0 ? Math.ceil(num) : Math.floor(num);\n}\n\n// next time I prepare the move data, I should eliminate the need for translation\nexport function isStatus(ailment: AilmentName): Boolean {\n    return (\n        ailment === \"par\" ||\n        ailment === \"psn\" ||\n        ailment === \"brn\" ||\n        ailment === \"frz\" ||\n        ailment === \"slp\" ||\n        ailment === \"tox\"\n    ); \n}\n\nexport function hasNoStatus(pokemon: Pokemon) {\n    return pokemon.status === \"\" || pokemon.status === undefined;\n}\n\n// See ../calc/mechanics/util.ts for the original\nexport function isSuperEffective(move: Move, moveType: TypeName, field: Field, attacker: Pokemon, defender: Pokemon) {\n    const testmove = new Move(9, move.name);\n    testmove.type = moveType;\n    if (!testmove.type) {return false; }\n    if (defender.hasAbility(\"Tera Shell\") && defender.originalCurHP === defender.maxHP()) { return false; }\n    const isGhostRevealed =\n    attacker.hasAbility('Scrappy') || attacker.hasAbility(\"Mind's Eye\") || field.defenderSide.isForesight;\n    const isRingTarget =\n      defender.hasItem('Ring Target') && !defender.hasAbility('Klutz');\n    const type1Effectiveness = getMoveEffectiveness(\n      gen,\n      testmove,\n      defender.types[0],\n      isGhostRevealed,\n      field.isGravity,\n      isRingTarget\n    );\n    const type2Effectiveness = defender.types[1]\n      ? getMoveEffectiveness(\n        gen,\n        testmove,\n        defender.types[1],\n        isGhostRevealed,\n        field.isGravity,\n        isRingTarget\n      )\n      : 1;\n    const type3Effectiveness = defender.types[2]\n      ? getMoveEffectiveness(\n        gen,\n        move,\n        defender.types[2],\n        isGhostRevealed,\n        field.isGravity,\n        isRingTarget\n      ) : 1;\n      \n    let typeEffectiveness = type1Effectiveness * type2Effectiveness * type3Effectiveness;\n  \n    if (defender.isTera && defender.teraType) {\n      typeEffectiveness = getMoveEffectiveness(\n        gen,\n        move,\n        defender.teraType,\n        isGhostRevealed,\n        field.isGravity,\n        isRingTarget\n      );\n    }\n  \n    if (typeEffectiveness === 0 && move.hasType('Ground') &&\n      defender.hasItem('Iron Ball') && !defender.hasAbility('Klutz')) {\n      typeEffectiveness = 1;\n    }\n  \n    if (typeEffectiveness === 0 && move.named('Thousand Arrows')) {\n      typeEffectiveness = 1;\n    }\n    return typeEffectiveness >= 2;\n}\n\nexport function pokemonIsGrounded(pokemon: Raider, field: Field) {\n    let grounded = isGrounded(pokemon, field);\n    if (pokemon.lastMove) { grounded = grounded || pokemon.lastMove.name === \"Roost\"; }\n    // TO DO: Ingrain, Smack Down\n    return grounded;\n}\n\nexport function getBoostCoefficient(pokemon: Pokemon) {\n    const hasSimple = pokemon.ability === \"Simple\";\n    const hasContrary = pokemon.ability === \"Contrary\";\n    return hasSimple ? 2 : hasContrary ? -1 : 1;\n}\n\nexport function safeStatStage(value: number) {\n    return Math.max(-6, Math.min(6, value));\n}\n\nexport function getAccuracy(movedata: MoveData, category: \"Physical\" | \"Special\" | \"Status\", attacker: Raider, defender: Raider, movesSecond: boolean = false, attackerIgnoresAbility: boolean = false): [number, string[]] {\n    // returns [accuracy (0-100)]\n\n    if (attacker.hasAbility(\"No Guard\") || defender.hasAbility(\"No Guard\")) {\n        return [100,[]];\n    }\n    \n    const movename = movedata.name;\n    // Toxic NEVER misses if used by a poison type\n    if (movename === \"Toxic\" && attacker.hasType(\"Poison\")) {\n        return [100,[]];\n    }\n    // semi-invulnerable moves\n    if (defender.isCharging && defender.lastMove) {\n        if ([\"Bounce\",\"Fly\",\"Sky Drop\"].includes(defender.lastMove.name)) {\n            if ([\"Gust\", \"Twister\"].includes(movename)) {\n                return [100,[]];\n            } else if ([\"Hurricane\", \"Sky Uppercut\", \"Smack Down\", \"Thunder\", \"Thousand Arrows\"].includes(movename)) {\n                return [100,[]];\n            } else {\n                return [0,[]];\n            }\n        } else if (defender.lastMove.name === \"Dig\") {\n            if ([\"Earthquake\", \"Magnitude\"].includes(movename)) {\n                return [100,[]];\n            } else if (movename === \"Fissure\") {\n                return [100,[]];\n            } else {\n                return [0,[]];\n            }\n        } else if (defender.lastMove.name === \"Dive\") {\n            if ([\"Surf\", \"Whirlpool\"].includes(movename)) {\n                return [100,[]];\n            } else {\n                return [0,[]];\n            }\n        }\n    }\n    // guaranteed hit moves\n    if (\n        !movedata.accuracy || \n        (attacker.lastMove && attacker.lastMove.name === \"Lock-On\") ||\n        (attacker.field.hasWeather(\"Rain\") && [\"Thunder\",\"Hurricane\",\"Sandsear Storm\",\"Bleakwind Storm\",\"Wildbolt Storm\"].includes(movename)) ||\n        (attacker.field.hasWeather(\"Snow\",\"Hail\") && movename === \"Blizzard\") ||\n        (defender.isMinimize && [\"Body Slam\",\"Stomp\",\"Dragon Rush\",\"Heat Crash\",\"Heavy Slam\",\"Flying Press\"].includes(movename)) ||\n        guaranteedHitMoves.includes(movename)\n    ) {\n        return [100,[]];\n    }\n\n    let baseAccuracy = movedata.accuracy;\n\n    let weatherMod = false;\n    // weather modifiers\n    if (attacker.field.hasWeather(\"Sun\") && [\"Hurricane\",\"Thunder\"].includes(movename)) {\n        baseAccuracy = 50;\n        weatherMod = true;\n    }\n\n    const accStage = attacker.boosts.acc || 0;\n    const evaStage = attacker.hasAbility(\"Keen Eye\", \"Illuminate\") ? 0 : (defender.boosts.eva || 0);\n    const calcStage = Math.max(-6, Math.min(6, accStage - evaStage));\n\n    const accMod = calcStage >= 0 ? ((calcStage + 3)/3) : (3/(3 - calcStage)); \n\n    let accuracy = baseAccuracy * accMod;\n    let effects: string[] = []\n    if (accStage) {\n        effects.push('Acc ' + (accStage > 0 ? '+' : '') + accStage);\n    }\n    if (evaStage) {\n        effects.push('Eva ' + (evaStage > 0 ? '+' : '') + evaStage);\n    }\n\n    // item modifiers\n    if (attacker.hasItem(\"Wide Lens\")) {\n        accuracy *= 4505/4096;\n        effects.push(\"Wide Lens\");\n    } else if (attacker.hasItem(\"Zoom Lens\") && movesSecond && (attacker.id === 0 || defender.id === 0)) {\n        accuracy *= 4915/4096;\n        effects.push(\"Zoom Lens\");\n    }\n    if (defender.hasItem(\"Bright Powder\") || defender.hasItem(\"Lax Incense\")) {\n        accuracy *= 3686/409;\n        effects.push(defender.item!);\n    }\n\n    // ability modifiers\n    if (attacker.hasAbility(\"Compound Eyes\")) {\n        accuracy *= 5325/4096;\n        effects.push(\"Compound Eyes\");\n    } else if (attacker.hasAbility(\"Hustle\") && category === \"Physical\") {\n        accuracy *= 3277/4096;\n        effects.push(\"Hustle\");\n    }\n    if (!attackerIgnoresAbility) {\n        if (defender.hasAbility(\"Tangled Feet\") && defender.volatileStatus.includes(\"confusion\")) {\n            accuracy *= 0.5;\n            effects.push(\"Tangled Feet\");\n        }\n    }\n    // field modifiers\n    if (attacker.field.isGravity) {\n        accuracy *= 6840/4096;\n        effects.push(\"Gravity\");\n    }\n    if (!attackerIgnoresAbility && defender.field.hasWeather(\"Sand\") && !defender.field.isCloudNine && defender.hasAbility(\"Sand Veil\")) {\n        accuracy *= 3277/4096;\n        effects.push(\"Sand Veil\");\n    }\n    if (!attackerIgnoresAbility && defender.field.hasWeather(\"Hail\", \"Snow\") && !defender.field.isCloudNine && defender.hasAbility(\"Snow Cloak\")) {\n        accuracy *= 3277/4096;\n        effects.push(\"Snow Cloak\");\n    }\n\n    // Micle Berry\n    if (attacker.isMicle) {\n        accuracy *= 4915/4096;\n        effects.push(\"Micle Berry\");\n    }\n\n    if (weatherMod) {\n        effects.push(\"reduced accuracy in Sun\")\n    }\n\n    return [accuracy, effects];\n}\n\nexport function getBpModifier(movedata: MoveData, defender: Raider, damaged: boolean = false): number {\n    const movename = movedata.name;\n\n    if (defender.isCharging && defender.lastMove) {\n        if ([\"Bounce\",\"Fly\",\"Sky Drop\"].includes(defender.lastMove.name) && [\"Gust\", \"Twister\"].includes(movename)) {\n            return 2;\n        } else if (defender.lastMove.name === \"Dig\" && [\"Earthquake\", \"Magnitude\"].includes(movename)) {\n            return 2;\n        } else if (defender.lastMove.name === \"Dive\" && [\"Surf\", \"Whirlpool\"].includes(movename)) {\n            return 2;\n        }\n    }\n    if (damaged) {\n        if ([\"Avalanche\", \"Revenge\"].includes(movename)) {\n            return 2;\n        }\n    }\n    return 1;\n}\n\n// Speed modifiers\n\nexport function getModifiedSpeed(pokemon: Raider) {\n    let speed = getModifiedStat(pokemon.stats.spe, pokemon.boosts.spe, gen);\n    speed = modifyPokemonSpeedByStatus(speed, pokemon.status, pokemon.ability);\n    speed = modifyPokemonSpeedByItem(speed, pokemon.item);\n    speed = modifyPokemonSpeedByAbility(speed, pokemon.ability, pokemon.abilityOn, pokemon.status);\n    speed = modifyPokemonSpeedByQP(speed, pokemon.field, pokemon.ability, pokemon.item, pokemon.boostedStat as StatIDExceptHP);\n    speed = modifyPokemonSpeedByField(speed, pokemon.field, pokemon.ability);\n    return speed;\n}\n\nexport function modifyPokemonSpeedByStatus(speed: number, status?: string, ability?: AbilityName) {\n    return status === \"par\" && ability !== \"Quick Feet\" ? speed * .5 : speed;\n}\n\nexport function modifyPokemonSpeedByItem(speed : number, item?: ItemName) {\n    switch(item) {\n        case \"Choice Scarf\":\n            return speed * 1.5;\n        case \"Iron Ball\":\n        case \"Macho Brace\":\n        case \"Power Anklet\":\n        case \"Power Band\":\n        case \"Power Belt\":\n        case \"Power Bracer\":\n        case \"Power Lens\":\n        case \"Power Weight\":\n            return speed * .5;\n        case \"Lagging Tail\":\n        case \"Full Incense\":\n            return 0;\n        // TODO: Quick Powder doubles the speed of untransformed Ditto\n        default:\n            return speed;\n    }\n}\n\nexport function modifyPokemonSpeedByAbility(speed: number, ability?: AbilityName, abilityOn?: boolean, status?: string) {\n    switch(ability) {\n        case \"Unburden\":\n            return abilityOn ? speed * 2 : speed;\n        case \"Slow Start\":\n            return abilityOn ? speed * .5 : speed;\n        case \"Quick Feet\":\n            return status ? speed * 1.5 : speed;\n        default:\n            return speed;\n    }\n}\n\nexport function modifyPokemonSpeedByQP(speed: number, field: Field, ability?: AbilityName, item?: ItemName, qpBoostedStat?: StatIDExceptHP) {\n    return qpBoostedStat === \"spe\" ? speed * 1.5 : speed;\n}\n\nexport function modifyPokemonSpeedByField(speed: number, field: Field, ability?: AbilityName) {\n    if (\n        !field.isCloudNine && (\n            ability === \"Chlorophyll\" && field.weather === \"Sun\" ||\n            ability === \"Sand Rush\" && field.weather === \"Sand\" ||\n            ability === \"Slush Rush\" && field.weather === \"Snow\" ||\n            ability === \"Swift Swim\" && field.weather === \"Rain\" ||\n            ability === \"Surge Surfer\" && field.terrain === \"Electric\"\n        )\n    ) {\n        speed *= 2;\n    }\n    if (field.attackerSide.isTailwind) {\n        speed *= 2;\n    }\n    return speed;\n}\n\n// no idea if this should go here\nexport function getGroupedTurnIDs(turns: RaidTurnInfo[]) {\n    const displayGroups: number[][] = [];\n    let currentGroupIndex = -1;\n    let currentGroupID: number | undefined = -1;\n    turns.forEach((t, index) => {\n        const g = t.group;\n        if (g === undefined || g !== currentGroupID) {\n            currentGroupIndex += 1;\n            displayGroups.push([index]);\n        } else {\n            displayGroups[currentGroupIndex].push(index);\n        }\n        currentGroupID = g;\n    });\n    return displayGroups;\n}\n\nexport function getGroupedTurns(turns: RaidTurnInfo[]) {\n    const groupedTurnIDs = getGroupedTurnIDs(turns);\n    const groupedTurns = groupedTurnIDs.map(indicesArray => indicesArray.map(index => turns[index]));\n    return groupedTurns;\n}\n\nconst RAID_ACTIONS = [\n    \"Attack Cheer\",\n    \"Defense Cheer\", \n    \"Heal Cheer\", \n    \"Remove Negative Effects\", \n    \"Clear Boosts / Abilities\",\n    \"Steal Tera Charge\",\n    \"Activate Shield\"\n]\n\nexport function isRaidAction(movename: string) {\n    return RAID_ACTIONS.includes(movename);\n}\n\nexport function isRegularMove(movename: string) {\n    return !isRaidAction(movename) && movename !== \"(No Move)\" && movename !== \"(Most Damaging)\" && movename !== \"(Optimal Move)\";\n}\n\nexport function getSelectableMoves(pokemon: Raider, isBossAction: boolean = false) {\n    let selectableMoves: MoveData[] = [...pokemon.moveData, ...(isBossAction ? pokemon.extraMoveData || [] : [])].filter(m => m.name !== \"(No Move)\");\n    if (!isBossAction) {\n        if ((pokemon.isChoiceLocked || pokemon.isEncore) && pokemon.lastMove) {\n            selectableMoves = selectableMoves.filter(m => m.name === pokemon.lastMove!.name);\n        }\n        if (pokemon.lastMove && (pokemon.isTorment || (pokemon.lastMove.name === \"Gigaton Hammer\" || pokemon.lastMove.name === \"Blood Moon\"))) {\n            selectableMoves = selectableMoves.filter(m => m.name !== pokemon.lastMove!.name);\n        }\n        if (pokemon.isDisable && pokemon.disabledMove) {\n            selectableMoves = selectableMoves.filter(m => m.name !== pokemon.disabledMove);\n        }\n        if (pokemon.isTaunt) {\n            selectableMoves = selectableMoves.filter(m => m.moveCategory !== \"Status\");\n        }\n        if (pokemon.isThroatChop) {\n            selectableMoves = selectableMoves.filter(m => !(m.isSound))\n        }\n        if (pokemon.item === \"Assault Vest\") {\n            selectableMoves = selectableMoves.filter(m => m.moveCategory !== \"Status\");\n        }\n    }\n    return selectableMoves.map(m => m.name);\n}\n\nexport function getCritChance(move: Move, attacker: Raider, defender: Raider) {\n    if (defender.hasAbility(\"Shell Armor\")) { return 0; }\n    const data = gen.moves.get(toID(move.name));\n    if (data && data.willCrit) { return 1; }\n    const critStages = (move.highCritChance ? 1 : 0) + (attacker.isPumped || 0) + (attacker.hasAbility(\"Super Luck\") ? 1 : 0) + (attacker.hasItem(\"Scope Lens\", \"Razor Claw\") ? 1 : 0);\n    switch (critStages) {\n        case 0:\n            return 1 / 24;\n        case 1:\n            return 1 / 8;\n        case 2:\n            return 1 / 2;\n        default:\n            return 1;\n    }\n}","import { Pokemon } from \"../calc\";\ntype ConditionalRoll = {\n    name: string,\n    roll: (d: number, p: Pokemon) => number,\n    condition: (newDamage: number, prevDamage: number, p: Pokemon) => boolean,\n}\n\nexport function getConditionalRoll(name: string | undefined): ConditionalRoll | undefined {\n    // TO DO: things that have totally different sets of rolls (i.e. Multiscale, Super-Effective reducing berries)\n    // TO DO: things that shouldn't totally go away if there is a chance to dodge (?) (i.e. Ice Face, Disguise)\n    if (!name) { return undefined;}\n    switch (name) {\n        case \"Sturdy\":\n        case \"Focus Sash\":\n            return {\n                name: name,\n                roll: (d, p) => p.maxHP() - 1,\n                condition: (newDamage, prevDamage, p) => (prevDamage === 0 && newDamage >= p.maxHP()),\n            }\n        case \"Endure\": \n            return {\n                name: name,\n                roll:  (d, p) => p.maxHP() - 1,\n                condition: (newDamage, prevDamage, p) => (newDamage >= p.maxHP()),\n            }\n        case \"Sitrus Berry\":\n            return {\n                name: name,\n                roll: (d, p) => d - Math.floor(p.maxHP() / (p.hasAbility(\"Ripen\") ? 2 : 4)),\n                condition: (newDamage, prevDamage, p) => ((newDamage < p.maxHP()) && (newDamage >= p.maxHP() / 2)),\n            }\n        case \"Oran Berry\":\n            return {\n                name: name,\n                roll: (d, p) => d - (p.hasAbility(\"Ripen\") ? 20 : 10),\n                condition: (newDamage, prevDamage, p) => ((newDamage < p.maxHP()) && (newDamage >= p.maxHP() / 2)),\n            }\n        case \"Aguav Berry\":\n        case \"Figy Berry\":\n        case \"Iapapa Berry\":\n        case \"Mago Berry\":\n        case \"Wiki Berry\":\n            return {\n                name: name,\n                roll: (d, p) => d - Math.floor(p.maxHP() * (p.hasAbility(\"Ripen\") ? 2 : 1) / 3),\n                condition: (newDamage, prevDamage, p) => ((newDamage < p.maxHP()) && (newDamage >= p.maxHP() / (p.hasAbility(\"Gluttony\") ? 2 : 4))),\n            }\n        default: return undefined;\n    }\n}\n\n\nexport function getRollCounts(rolls: number[][], min: number, max: number, chances: number[] | undefined = undefined) {\n    const cumRolls = new Map<number, number>();\n    for (let i=0; i<rolls.length; i++) {\n        addRollsToCounts(cumRolls, rolls[i], min, max, chances ? chances[i] : undefined);\n    }\n    return cumRolls;\n}\n\nexport function addRollsToCounts(cumRolls: Map<number, number>, newRolls: number[], min: number, max: number, chance: number | undefined = undefined) {\n    const rollChance = (chance || 1) / newRolls.length;\n    const prevCumRolls = new Map<number, number>(cumRolls);\n    if (prevCumRolls.size === 0) {\n        prevCumRolls.set(0, 1);\n    }\n    const prevRolls = Array.from(prevCumRolls.keys());\n    cumRolls.clear();\n    for (let i=0; i<newRolls.length; i++) {\n        const roll = newRolls[i];\n        for (let j=0; j<prevRolls.length; j++) {\n            const prevRoll = prevRolls[j];\n            const combinedRoll = prevRoll >= max ? max : Math.max(min, Math.min(max, roll + prevRoll)); // disallow healing if already fainted\n            const prevChance = prevCumRolls.get(combinedRoll) || 1;\n            const newChance = cumRolls.get(combinedRoll) || 0;\n            cumRolls.set(combinedRoll, newChance + prevChance * rollChance);\n        }\n    }\n    // mutates the first argument, but we'll also return it\n    return cumRolls;\n}\n\nexport function catRollCounts(a: Map<number, number>, b: Map<number, number>) {\n    const c = new Map<number, number>();\n    const aRolls = Array.from(a.keys());\n    const bRolls = Array.from(b.keys());\n    for (let i=0; i<aRolls.length; i++) {\n        const aCount = a.get(aRolls[i]) || 0;\n        const cCount = c.get(aRolls[i]) || 0;\n        c.set(aRolls[i], aCount + cCount);\n    }\n    for (let i=0; i<bRolls.length; i++) {\n        const bCount = b.get(bRolls[i]) || 0;\n        const cCount = c.get(bRolls[i]) || 0;\n        c.set(bRolls[i], bCount + cCount);\n    }\n    return c;\n}\n\nexport function combineRollCounts(a: Map<number, number>, b: Map<number, number>, min: number, max: number, p?: Pokemon, conditions?: ConditionalRoll[], seqCondition?: ConditionalRoll) {\n    const c = new Map<number, number>();\n    const seqRolls = new Map<number, number>();\n    const aRolls = Array.from(a.keys());\n    const bRolls = Array.from(b.keys());\n    if (aRolls.length === 0) {\n        aRolls.push(0);\n    }\n    if (bRolls.length === 0) {\n        bRolls.push(0);\n    }\n    for (let i=0; i<aRolls.length; i++) {\n        for (let j=0; j<bRolls.length; j++) {\n            let combinedRoll = aRolls[i] === max ? max : Math.max(min, Math.min(max, aRolls[i] + bRolls[j]));\n            const aChance = a.get(aRolls[i]) || 1;\n            const bChance = b.get(bRolls[j]) || 1;\n            if (p && conditions) {\n                for (const cond of conditions) {\n                    if (cond.condition(combinedRoll, aRolls[i], p)) {\n                        combinedRoll = cond.roll(combinedRoll, p);\n                    }\n                }\n            }\n            if (p && seqCondition && seqCondition.condition(combinedRoll, aRolls[i], p)) {\n                const seqRoll = Math.max(min, Math.min(seqCondition.roll(combinedRoll, p)));\n                const cChance = seqRolls.get(seqRoll) || 0;\n                seqRolls.set(seqRoll, aChance * bChance + cChance);\n            } else {\n                const cChance = c.get(combinedRoll) || 0;\n                c.set(combinedRoll, aChance * bChance + cChance);\n            }\n        }\n    }\n    return {c, seqRolls};\n}\n\nexport function getCumulativeKOChance(rolls: Map<number, number>, hp: number) {\n    const numRolls = Array.from(rolls.values()).reduce((a, b) => a + b, 0);\n    const koRolls = rolls.get(hp) || 0;\n    return parseFloat((koRolls / numRolls * 100).toPrecision(3));\n}\n\nexport class CumulativeRolls {\n    rolls: Map<number, number>[];\n    persistentConditions: ConditionalRoll[];\n    sequentialConditions: ConditionalRoll[];\n\n    constructor(rolls?: Map<number, number>[], persistentConditions?: ConditionalRoll[], sequentialConditions?: ConditionalRoll[]) {\n        this.rolls = rolls || [new Map<number, number>()];\n        this.persistentConditions = persistentConditions || [];\n        this.sequentialConditions = sequentialConditions || [];\n    }\n\n    clone() {\n        return new CumulativeRolls(\n            this.rolls.map(r => new Map(r)),\n            [...this.persistentConditions],\n            [...this.sequentialConditions]\n        );\n    }\n\n    public addPersistentCondition(name: string | undefined) {\n        const cond = getConditionalRoll(name);\n        if (cond) {\n            this.persistentConditions.push(cond);\n        }\n    }\n\n    public addSequentialCondition(name: string | undefined) {\n        const cond = getConditionalRoll(name);\n        if (cond) {\n            this.sequentialConditions.push(cond);\n            this.rolls.push(new Map<number, number>());\n        }\n    }\n\n    public removePersistentCondition(name: string | undefined) {\n        this.persistentConditions = this.persistentConditions.filter(cond => cond.name !== name);\n    }\n\n    public removeSequentialCondition(name: string | undefined) {\n        const condIdx = this.sequentialConditions.findIndex(cond => cond.name === name);\n        if (condIdx >= 0) {\n            this.sequentialConditions.splice(condIdx, 1);\n            const condRolls = this.rolls.splice(condIdx+1, 1)[0];\n            this.rolls[condIdx] = catRollCounts(this.rolls[condIdx], condRolls);\n        }\n    }\n\n    public addRolls(rolls: Map<number, number>, p: Pokemon) {\n        const newRolls:Map<number, number>[] = [];\n        const seqConditionalRolls: Map<number, number>[] = [];\n        for (let i=0; i<this.rolls.length; i++) {\n            if (i === 0 || this.rolls[i].size > 0) {\n                const {c, seqRolls} = combineRollCounts(this.rolls[i], rolls, 0, p.maxHP(), p, this.persistentConditions, this.sequentialConditions[i]);\n                newRolls.push(c);\n                if (i < this.rolls.length) {\n                    seqConditionalRolls.push(seqRolls);\n                }\n            } else {\n                newRolls.push(new Map<number, number>());\n                if (i < this.rolls.length) {\n                    seqConditionalRolls.push(new Map<number, number>());\n                }\n            }\n\n        }\n        let testCounter = 0;\n        while (!seqConditionalRolls.every(seqRolls => seqRolls.size === 0)) {\n            for (let i=1; i<newRolls.length; i++) {\n                const {c, seqRolls} = combineRollCounts(catRollCounts(newRolls[i], seqConditionalRolls[i-1]), new Map<number,number>(), 0, p.maxHP(), p, this.persistentConditions, this.sequentialConditions[i]);\n                newRolls[i] = c;\n                seqConditionalRolls[i-1] = seqRolls;\n            }\n            testCounter++;\n            if (testCounter > 10) {\n                console.log(\"Infinite loop detected\");\n                break;\n            }\n        }\n        this.rolls = newRolls;\n    }\n\n    public getKOChance(hp: number) {\n        let totalRolls = 0;\n        let koRolls = 0;\n        for (let rolls of this.rolls) {\n            totalRolls = totalRolls + Array.from(rolls.values()).reduce((a, b) => a + b, 0);\n            koRolls = koRolls + (rolls.get(hp) || 0);\n        }\n        return parseFloat((koRolls / totalRolls * 100).toPrecision(3));\n    }\n}","import { Move, Field, StatsTable, calculate} from \"../calc\";\nimport { MoveData, RaidMoveOptions } from \"./interface\";\nimport { RaidState } from \"./RaidState\";\nimport { Raider } from \"./Raider\";\nimport { AbilityName, ItemName, MoveName, SpeciesName, StatIDExceptHP, StatusName, TypeName } from \"../calc/data/interface\";\nimport { isGrounded } from \"../calc/mechanics/util\";\nimport { absoluteFloor, isSuperEffective, pokemonIsGrounded, isStatus, getAccuracy, getBpModifier, isRegularMove, isRaidAction, getCritChance } from \"./util\";\nimport { getRollCounts, catRollCounts, combineRollCounts } from \"./rolls\"\nimport persistentAbilities from \"../data/persistent_abilities.json\"\nimport bypassProtectMoves from \"../data/bypass_protect_moves.json\"\nimport chargeMoves from \"../data/charge_moves.json\";\nimport rechargeMoves from \"../data/recharge_moves.json\";\nimport magicBounceMoves from \"../data/magicbounce_moves.json\";\nimport thawUserMoves from \"../data/thaw_user_moves.json\";\n\nexport type RaidMoveResult= {\n    state: RaidState;\n    userID: number;\n    targetID: number;\n    damage: number[];\n    drain: number[];\n    healing: number[];\n    desc: string[];\n    flags: string[][];\n    causesFlinch: boolean[];\n    isSpread?: boolean;\n    warnings?: string[];\n}\n\nconst nonMoveActions = [\"(No Move)\",\"Attack Cheer\",\"Defense Cheer\",\"Heal Cheer\",\"Clear Boosts / Abilities\",\"Remove Negative Effects\",\"Steal Tera Charge\",\"Activate Shield\"];\nconst ignoredVolatileStatuses = [\n    \"banefulbunker\",\n    \"burningbulwark\",\n    \"charge\",\n    \"defensecurl\",\n    \"destinybond\",\n    \"protect\",\n    \"dragoncheer\",\n    \"electrify\",\n    \"embargo\",\n    \"endure\",\n    \"flinch\",\n    \"focusenergy\",\n    \"followme\",\n    \"foresight\",\n    \"gastroacid\",\n    \"grudge\",\n    \"helpinghand\",\n    \"partiallytrapped\",\n    \"imprison\",\n    \"kingsshield\",\n    \"laserfocus\",\n    \"magiccoat\",\n    \"maxguard\",\n    \"minimize\",\n    \"miracleeye\",\n    \"nightmare\",\n    \"noretreat\",\n    \"obstruct\",\n    \"octolock\",\n    \"no-type-immunity\",\n    \"powder\",\n    \"powershift\",\n    \"powertrick\",\n    \"protect\",\n    \"ragepowder\",\n    \"substitute\",\n    \"silktrap\",\n    \"smackdown\",\n    \"snatch\",\n    \"sparklingaria\",\n    \"spikyshield\",\n    \"spotlight\",\n    \"syrupbomb\",\n    \"telekinesis\",\n]\n\nconst healCheerRoll = Array.from(Array(16).keys()).map((i) => (0.2 + 0.8 * i/15));\n\nexport class RaidMove {\n    move: Move;\n    moveData: MoveData;\n    raidState: RaidState;\n    userID: number;     // the id of the user of this move\n    targetID: number;   // the id of the target of this move\n    raiderID: number;   // the id of the raider who initiated this round\n    movesFirst: boolean;\n    options: RaidMoveOptions;\n    hits: number;\n    isBossAction?: boolean;\n    flinch?: boolean;\n    damaged?: boolean;\n    delayed?: boolean;\n    instructed?: boolean;\n\n    _raidState!: RaidState;\n    _raiders!: Raider[];\n    _user!: Raider;\n    _affectedIDs!: number[];\n    _fields!: Field[];\n\n    _targetID!: number; // the id of the target can be affected by Magic Bounce\n    _doesNotAffect!: (string | undefined)[];\n    _causesFlinch!: boolean[];\n    _blockedBy!: (string | undefined)[];\n\n    _isSheerForceBoosted?: boolean;\n\n    _flingItem?: ItemName;\n    _powerHerbUsed?: boolean;\n\n    _moveType!: TypeName;\n    _isSpread?: boolean;\n    _damage!: number[];\n    _damageRolls!: Map<number,number>[][];\n    _healing!: number[];\n    _drain!: number[];\n\n    _desc!: string[];\n    _flags!: string[][];\n    _warnings!: string[];\n\n    constructor(moveData: MoveData, move: Move, raidState: RaidState, userID: number, targetID: number, raiderID: number, movesFirst: boolean,  raidMoveOptions?: RaidMoveOptions, isBossAction?: boolean, flinch?: boolean, damaged?: boolean, instructed?: boolean, delayed?: boolean) {\n        this.move = move;\n        this.moveData = moveData;\n        this.raidState = raidState;\n        this.userID = userID;\n        this.targetID = targetID;\n        this.raiderID = raiderID;\n        this.movesFirst = movesFirst;\n        this.options = raidMoveOptions || {};\n        this.isBossAction = isBossAction || false;\n        this.flinch = flinch || false;\n        this.damaged = damaged || false;\n        this.instructed = instructed || false;\n        this.delayed = delayed || false;\n        this.hits = this.move.category === \"Status\" ? 0 : Math.max(this.moveData.minHits || 1, Math.min(this.moveData.maxHits || 1, this.options.hits || 1));\n        this.hits = this.raidState.raiders[this.userID].hasAbility(\"Skill Link\") ? (this.moveData.maxHits || 1) : this.hits;\n    }\n\n    public result(): RaidMoveResult {\n        this.setOutputRaidState();\n        if (!this.checkIfMoves()) {\n            const output = this.output;\n            return output;\n        }\n        this._raidState.raiders[0].checkShield(); // check for shield activation\n        this.checkSheerForce();\n        this.setAffectedPokemon();\n        if (this.flinch) { // prevent moving upon flinch\n            this._desc[this.userID] = this._user.name + \" flinched!\";\n            // this._user.lastMoveFailed = true;\n        } else if ( // prevent the boss from moving if it's shield has just been broken\n            this.userID === 0 && \n            this._user.shieldBreakStun &&\n            this._user.shieldBreakStun![this._targetID-1]\n        ) {\n            this._desc[this.userID] = this._user.name + \" is stunned after having its shield broken!\";         \n            this._user.shieldBreakStun![this._targetID-1] = false;           \n        } else if ( // don't move yet for charge moves\n            !this._user.isCharging &&\n            chargeMoves.includes(this.move.name) &&\n            !(this._user.field.hasWeather(\"Sun\") && [\"Solar Beam\", \"Solar Blade\"].includes(this.move.name)) &&\n            !(this._user.field.hasWeather(\"Rain\") && this.move.name === \"Electro Shot\") &&\n            !this._user.hasItem(\"Power Herb\")\n        ) {\n            this._user.isCharging = true;\n            this._desc[this.userID] = this._user.name + \" is charging its attack!\";\n            // Electro Shot boost check\n            if (this.moveData.name === \"Electro Shot\" && !this._isSheerForceBoosted) {\n                this._raidState.applyStatChange(this.userID, {spa: 1});\n            }\n            if (this.moveData.name === \"Meteor Beam\" && !this._isSheerForceBoosted) {\n                this._raidState.applyStatChange(this.userID, {spa: 1});\n            }\n        } else if (this._user.isRecharging) {\n            this._user.isRecharging = false;\n            this._desc[this.userID] = this._user.name + \" is recharging!\";\n        } else if (!this.delayed && (this.move.name === \"Future Sight\" || this.move.name === \"Doom Desire\")) { // Delayed move check\n            const target = this.getPokemon(this._targetID);\n            if (target.delayedMoveCounter) {\n                this._desc[this.userID] = this._user.name + \" \" + this.move.name + \" vs. \" + this._raidState.getPokemon(this._targetID).name + \" — \" + this.move.name + \" failed!\";\n            } else {\n                target.delayedMoveCounter = 3;\n                target.delayedMoveSource = this.userID;\n                target.delayedMove = this.moveData;\n                if (this.moveData.name === \"Future Sight\") {\n                    this._desc[this.userID] = this._user.name + \" forsaw an attack!\";\n                } else {\n                    this._desc[this.userID] = this._user.name + \" chose Doom Desire as its destiny!\";\n                }\n            }\n        } else {\n            if (!this._user.isCharging && \n                chargeMoves.includes(this.move.name) && \n                !(this._user.field.hasWeather(\"Sun\") && [\"Solar Beam\", \"Solar Blade\"].includes(this.move.name)) &&\n                !(this._user.field.hasWeather(\"Rain\") && this.move.name === \"Electro Shot\") &&\n                this._user.hasItem(\"Power Herb\")\n            ) {\n                this._powerHerbUsed = true;\n                // this._raidState.loseItem(this.userID); // Power Herb is consumed after the move is used for the purposes of Symbiosis\n            }\n            this.setMoveType();\n            this.setDoesNotAffect();\n            this.checkProtection();\n            this.applyProtection();\n            this.applyPreDamageEffects();\n            this.applyDamage();\n            this.applyDrain();\n            this.applyHealing();\n            this.applySelfDamage();\n            this.applyFlinch();\n            this.applyStatChanges();\n            this.applyAilment();\n            this.applyFieldChanges();\n            this.applyOtherMoveEffects();\n            this.applyUniqueMoveEffects();\n            this._user.isCharging = false;\n            if (rechargeMoves.includes(this.move.name)) {\n                this._user.isRecharging = true;\n            }\n            if (this._powerHerbUsed && this._user.hasItem(\"Power Herb\")) {\n                this._raidState.consumeItem(this.userID, this._user.item!);\n            }\n            this.applyPostMoveEffects();\n        }\n        this._raidState.raiders[0].checkShield(); // check for shield breaking \n        this.setFlags();\n        // store move data and target\n        if (isRegularMove(this.moveData.name)) { // don't store cheers or (No Move) for Instruct/Mimic/Copycat\n            this._user.lastMove = this.moveData;\n            this._user.lastTarget = this.moveData.target === \"user\" ? this.userID : this._targetID;\n            this._raidState.lastMovedID = this.userID;\n            // remove Micle boost\n            this._user.isMicle = false;\n            if (this.userID !== 0) {\n                this._raidState.raiders[this.raiderID].isMicle = false; // in case of Instruct\n            }\n        }\n        return this.output;\n    }\n\n    public get output(): RaidMoveResult {\n        return {\n            state: this._raidState,\n            userID: this.userID,\n            targetID: this.targetID,\n            damage: this._damage,\n            drain: this._drain,\n            healing: this._healing,\n            desc: this._desc,\n            flags: this._flags,\n            causesFlinch: this._causesFlinch,\n            isSpread: this._isSpread,\n            warnings: this._warnings,\n        }\n    }\n\n    private setOutputRaidState() {\n        this._raidState = this.raidState.clone();\n        this._raiders = this._raidState.raiders;\n        this._fields = this._raidState.fields;\n        this._user = this._raiders[this.userID];\n        this._targetID = this.targetID;\n\n        // initialize arrays\n        this._doesNotAffect = [undefined, undefined, undefined, undefined, undefined];\n        this._blockedBy= [undefined, undefined, undefined, undefined, undefined];\n        this._causesFlinch = [false, false, false, false, false];\n        this._moveType = this.move.type;\n        this._damage = [0,0,0,0,0];\n        this._damageRolls = [[],[],[],[],[]];\n        this._drain = [0,0,0,0,0];\n        this._healing = [0,0,0,0,0];\n        this._desc = ['','','','',''];\n        this._flags=[[],[],[],[],[]];\n        this._warnings = [];\n    }\n\n    private checkIfMoves(): boolean {\n        if (this._user.originalCurHP === 0) {\n            this._warnings.push(this._user.name + \" fainted before moving.\");\n            return false;\n        } else if (this.isBossAction && this.userID !== 0) {\n            return false;\n        } else if (isRaidAction(this.moveData.name)) {\n            return true;\n        } else if (this.flinch) {\n            this._desc[this.userID] = this._user.name + \" flinched!\";\n            this._warnings.push(this._user.name + \" flinched and skips its move.\");\n            return false;\n        } else {\n            if (this._user.isSleep) {\n                this._desc[this.userID] = this._user.name + \" is fast asleep.\";\n                this._user.isSleep--; // decrement sleep counter\n                // this._user.lastMoveFailed = true;\n                this._warnings.push(this._user.name + \" is asleep and skips its move.\");\n                return false;\n            } else if (this._user.isFrozen && !thawUserMoves.includes(this.move.name)) {\n                this._desc[this.userID] = this._user.name + \" is frozen solid.\";\n                this._user.isFrozen--; // decrement frozen counter\n                // this._user.lastMoveFailed = true;\n                this._warnings.push(this._user.name + \" is frozen and skips its move.\");\n                return false;\n            } else if (\n                this._user.isTaunt && \n                this.move.category === \"Status\" && \n                !isRaidAction(this.moveData.name)\n            ) {\n                this._desc[this.userID] = this._user.name + \" can't use status moves due to Taunt!\";\n                this._user.isTaunt--; // decrement taunt counter\n                // this._user.lastMoveFailed = true;\n                this._warnings.push(this._user.name + \" is taunted and can't use \" + this.moveData.name + \".\");\n                return false;\n            } else if (this._user.isDisable && this.move.name === this._user.disabledMove) {\n                this._desc[this.userID] = this.move.name + \" is disabled!\";\n                // this._user.lastMoveFailed = true;\n                this._warnings.push(this.moveData.name + \" is disabled and can't be used.\");\n                return false;\n            } else if (this._user.isThroatChop && this.moveData.isSound) {\n                this._desc[this.userID] = this._user.name + \" can't use sound-based moves due to Throat Chop!\";\n                // this._user.lastMoveFailed = true;\n                this._warnings.push(\"Throat Chop prevents the use of \" + this.moveData.name + \".\");\n                return false;\n            } else if (this._user.status === \"par\" && this.options.allowMiss && this.options.roll === \"min\") {\n                this._desc[this.userID] = this._user.name + \" is fully paralyzed and can't move!\";\n                // this._user.lastMoveFailed = true;\n                this._warnings.push(this._user.name + \" is fully paralyzed and can't move.\");\n                return false;\n            } else if (this._user.volatileStatus.includes(\"confusion\") && this.options.allowMiss && this.options.roll === \"min\") {\n                // this._user.lastMoveFailed = true;\n                this.applyConfusionDamage();                \n                return false;\n            } else {\n                if (this._user.status === \"par\") {\n                    this._warnings.push(\"Paralysis may prevent \" + this._user.name + \" from moving.\");\n                } else if (this._user.volatileStatus.includes(\"confusion\")) {\n                    this._warnings.push(\"Confusion may prevent \" + this._user.name + \" from moving.\");\n                }\n                return true;\n            }\n        }\n    }\n\n    private applyConfusionDamage() {\n        const confusedPoke = this._user.clone();\n        if (confusedPoke.hasAbility(\"Pure Power\", \"Huge Power\", \"Super Luck\")) {\n            confusedPoke.ability = \"(No Ability)\" as AbilityName;\n        }\n        if (confusedPoke.boostedStat === \"atk\") {\n            confusedPoke.boostedStat = undefined;\n        }\n        if (confusedPoke.hasItem(\"Life Orb\", \"Choice Band\", \"Light Ball\", \"Thick Club\")) {\n            confusedPoke.item = undefined;\n        }\n        confusedPoke.isPumped = 0;\n        const field = new Field();\n        const move = new Move(9, \"hurt itself in its confusion\");\n        const res = calculate(9, confusedPoke, confusedPoke, move, field);\n        const damage = res.damage as number[];\n        const damageVal = this.options.roll === \"max\" ? damage[damage.length-1] : this.options.roll === \"min\" ? damage[0] : damage[Math.floor(damage.length/2)];\n        const roll = getRollCounts([damage], 0, confusedPoke.maxHP(), [1])\n        this._damage[this.userID] = damageVal;\n        this._desc[this.userID] = res.desc();\n        this._warnings.push(this._user.name + \" hurt itself in its confusion.\");\n        this._raidState.applyDamage(this.userID, damageVal, roll, 1, false, false, \"???\", \"Physical\", false, false, true, false);\n    }\n\n    private checkSheerForce() {\n        this._isSheerForceBoosted = (\n            this._user.hasAbility(\"Sheer Force\") && (\n                ((this.moveData.flinchChance || 0) > 0) ||\n                (this.moveData.category === \"damage+ailment\") ||\n                (this.moveData.category === \"damage+lower\" && Object.values(this.moveData.statChanges!).some((val) => val.change < 0)) ||\n                (this.moveData.category === \"damage+raise\" && Object.values(this.moveData.statChanges!).some((val) => val.change > 0)) ||\n                [\"Anchor Shot\",\"Ceaseless Edge\",\"Eerie Spell\",\"Genesis Supernova\",\"Secret Power\",\"Sparkling Aria\",\"Spirit Shackle\",\"Stone Axe\"].includes(this.moveData.name)\n            )\n        );\n    }\n\n    private setAffectedPokemon() {\n        const targetType = this.moveData.target;\n        if (this.moveData.name === \"Heal Cheer\") { this._affectedIDs = [1,2,3,4]; }\n        else if (targetType === \"user\") { this._affectedIDs = [this.userID]; }\n        else if (this.isBossAction && (targetType === \"all-other-pokemon\" || targetType === \"all-opponents\")) { this._affectedIDs = [1,2,3,4]; }\n        else if (targetType === \"selected-pokemon\" || targetType === \"all-opponents\" || targetType === \"all-other-pokemon\") { this._affectedIDs = [this._targetID]; }\n        else if (targetType === \"all-allies\") { this._affectedIDs = this.userID === 0 ? [] : [1,2,3,4].filter((i) => i !== this.userID); }\n        else if (targetType === \"user-and-allies\") { this._affectedIDs = this.userID === 0 ? [0] : [1,2,3,4]; }\n        else if ([\"users-field\", \"allies-field\", \"entire-field\"].includes(targetType || \"\")) { this._affectedIDs = [this.userID]; } // make user the target for the purposes of generating the desc\n        else { this._affectedIDs = [this._targetID]; }\n    }\n\n    private setMoveType() {\n        switch (this.move.name) {\n            case \"Weather Ball\":\n                const wbField = this._raidState.fields[this.userID];\n                this._moveType =\n                    wbField.hasWeather('Sun', 'Harsh Sunshine') && !this._user.hasItem(\"Utility Umbrella\") ? 'Fire'\n                    : wbField.hasWeather('Rain', 'Heavy Rain') && !this._user.hasItem(\"Utility Umbrella\") ? 'Water'\n                    : wbField.hasWeather('Sand') ? 'Rock'\n                    : wbField.hasWeather('Hail', 'Snow') ? 'Ice'\n                    : 'Normal';\n                return;\n            case \"Judgment\":\n                if (this._user.name.includes(\"Arceus\")) {\n                    this._moveType = this._user.types[0];\n                }\n                return;\n            case \"Revelation Dance\": \n                this._moveType = this._user.types[0];\n                return;\n            case \"Aura Wheel\":\n                this._moveType = this._user.named(\"Morpeko-Hangry\") ? \"Dark\" : \"Electric\";\n                return;\n            case \"Raging Bull\":\n                this._moveType =  this._user.named(\"Tauros-Paldea-Combat\") ? \"Fighting\" :\n                            this._user.named(\"Tauros-Paldea-Blaze\") ? \"Fire\" :\n                            this._user.named(\"Tauros-Paldea-Aqua\") ? \"Water\" :\n                            \"Normal\";\n                return;\n            case \"Terrain Pulse\":\n                const tpField = this._raidState.fields[this.userID];\n                this._moveType =  tpField.hasTerrain(\"Electric\") ? \"Electric\" :\n                            tpField.hasTerrain(\"Grassy\") ? \"Grass\" :\n                            tpField.hasTerrain(\"Psychic\") ? \"Psychic\" :\n                            tpField.hasTerrain(\"Misty\") ? \"Fairy\" :\n                            \"Normal\";\n                return;\n            case \"Tera Blast\":\n                this._moveType = (this._user.isTera && this._user.teraType) ? this._user.teraType : \"Normal\";\n                return;\n            case \"Ivy Cudgel\":\n                this._moveType =  this._user.named(\"Ogerpon-Wellspring\") ? \"Water\" : \n                            this._user.named(\"Ogerpon-Hearthflame\") ? \"Fire\" :\n                            this._user.named(\"Ogerpon-Cornerstone\") ? \"Rock\" :\n                            \"Grass\";\n                return;\n            case \"Tera Starstorm\":\n                this._moveType = this._user.named(\"Terapagos-Stellar\") ? \"Stellar\" : \"Normal\";\n                return;\n        }\n        const normal = this._moveType === \"Normal\"\n        switch (this._user.ability) {\n            case \"Aerilate\":\n                this._moveType = normal ? \"Flying\" : this._moveType;\n                break;\n            case \"Galvanize\":\n                this._moveType = normal ? \"Electric\" : this._moveType;\n                break;\n            case \"Liquid Voice\":\n                this._moveType = this.move.flags && this.move.flags.sound ? \"Water\" : this._moveType;\n                break;\n            case \"Pixilate\":\n                this._moveType = normal ? \"Fairy\" : this._moveType;\n                break;\n            case \"Refrigerate\":\n                this._moveType = normal ? \"Ice\" : this._moveType;\n                break;\n            case \"Normalize\":\n                this._moveType = \"Normal\";\n                break;\n        }\n    }\n\n    private setDoesNotAffect() {\n        if (isRaidAction(this.moveData.name)) { return; }\n        const category = this.move.category;\n        const targetType = this.moveData.target\n        const moveName = this.move.name;\n        for (let i=0; i<this._affectedIDs.length; i++) {\n            let id = this._affectedIDs[i];\n            if (this.userID === id) { \n                if (moveName === \"Stockpile\" && this._user.stockpile === 3) {\n                    this._doesNotAffect[id] = \"does not affect \" + this.getPokemon(id).name;\n                }\n                continue; \n            }\n            let pokemon = this.getPokemon(id);\n            const field = pokemon.field;\n            // Magic Bounce\n            if (magicBounceMoves.includes(moveName) && pokemon.hasAbility(\"Magic Bounce\")) {\n                this._doesNotAffect[id] = \"bounced back by Magic Bounce\";\n                this._affectedIDs[i] = this.userID;\n                this._targetID = this.userID;\n                id = this.userID\n                pokemon = this.getPokemon(id);\n            }\n            // Status Moves blocked by Boss Shield\n            if (this.userID !== 0 && pokemon.shieldActive && category === \"Status\") {\n                this._doesNotAffect[id] = \"blocked by \" + pokemon.name + \"'s shield\";\n            }\n            // Substitute blocks status\n            if (pokemon.substitute && category === \"Status\" && !this.moveData.isSound && !this.moveData.bypassSub && !this._user.hasAbility(\"Infiltrator\")) {\n                this._doesNotAffect[id] = \"blocked by \" + pokemon.name + \"'s substitute\";\n            }\n            // Field-based failure\n            if (field.hasTerrain(\"Psychic\") && pokemonIsGrounded(pokemon, field) && (this.moveData.priority || 0) > 0) {\n                if ((this.userID === 0) || (this._targetID === 0)) {\n                    this._doesNotAffect[id] = \"blocked by Psychic Terrain\";\n                    continue;\n                }\n            }\n            // Ability-based immunities\n            if (!pokemon.abilityNullified && !(this._user.hasAbility(\"Mold Breaker\", \"Teravolt\", \"Turboblaze\") && !pokemon.hasItem(\"Ability Shield\")) && !(this._user.hasAbility(\"Mycelium Might\") && this.move.category === \"Status\")) {\n                // NEEDS TESTING: Do Dazzling/Queenly Majesty/Armor Tail block priority moves before checking for immunity?\n                if (field.attackerSide.isDazzling && (this.moveData.priority || 0) > 0) {\n                    this._doesNotAffect[id] = \"blocked due to its priority\"\n                }\n                switch (pokemon.ability) {\n                    case \"Good as Gold\":\n                    case \"Good As Gold\":\n                        if (category === \"Status\" && targetType !== \"user\") { \n                            this._doesNotAffect[id] = \"does not affect \" + pokemon.name + \" due to \" + pokemon.ability;\n                            continue; \n                        }\n                        break;\n                    case \"Dry Skin\":\n                    case \"Water Absorb\":\n                        if (this._moveType === \"Water\") { \n                            this._doesNotAffect[id] = \"heals \" + pokemon.name + \" due to \" + pokemon.ability; \n                            this._healing[id] = Math.floor(pokemon.maxHP() * 0.25);\n                            continue;\n                        }\n                        break;\n                    case \"Volt Absorb\":\n                        if (this._moveType === \"Electric\") { \n                            this._doesNotAffect[id] = \"heals \" + pokemon.name + \" due to \" + pokemon.ability; \n                            this._healing[id] = Math.floor(pokemon.maxHP() * 0.25);\n                            continue;\n                        }\n                        break;\n                    case \"Earth Eater\":\n                        if (this._moveType === \"Ground\") {\n                            this._doesNotAffect[id] = \"heals \" + pokemon.name + \" due to \" + pokemon.ability; \n                            this._healing[id] = Math.floor(pokemon.maxHP() * 0.25);\n                            continue;\n                        }\n                        break;\n                    case \"Flash Fire\":\n                        if (this._moveType === \"Fire\") { \n                            this._doesNotAffect[id] = \"boosts \" + pokemon.name + \" due to \" + pokemon.ability; \n                            this._raidState.getPokemon(id).abilityOn = true;\n                            continue;\n                        }\n                        break;\n                    case \"Well-Baked Body\":\n                        if (pokemon.ability === \"Well-Baked Body\" && this._moveType === \"Fire\") {\n                            this._doesNotAffect[id] = \"boosts \" + pokemon.name + \" due to \" + pokemon.ability; \n                            const boost = {def: 2};\n                            this._raidState.applyStatChange(id, boost);\n                            continue;\n                        }\n                        break;\n                    case \"Sap Sipper\":\n                        if (this._moveType === \"Grass\") {\n                            this._doesNotAffect[id] = \"boosts \" + pokemon.name + \" due to \" + pokemon.ability; \n                            const boost = {atk: 1};\n                            this._raidState.applyStatChange(id, boost);\n                            continue;\n                        }\n                        break;\n                    case \"Motor Drive\":\n                        if (this._moveType === \"Electric\") {\n                            this._doesNotAffect[id] = \"boosts \" + pokemon.name + \" due to \" + pokemon.ability; \n                            const boost = {spe: 1};\n                            this._raidState.applyStatChange(id, boost);\n                            continue;\n                        }\n                        break;\n                    case \"Storm Drain\":\n                        if (this._moveType === \"Water\") {\n                            this._doesNotAffect[id] = \"boosts \" + pokemon.name + \" due to \" + pokemon.ability; \n                            const boost = {spa: 1};\n                            this._raidState.applyStatChange(id, boost);\n                            continue;\n                        }\n                        break;\n                    case \"Lightning Rod\":\n                        if (this._moveType === \"Electric\") {\n                            this._doesNotAffect[id] = \"boosts \" + pokemon.name + \" due to \" + pokemon.ability; \n                            const boost = {spa: 1};\n                            this._raidState.applyStatChange(id, boost);\n                            continue;\n                        }\n                        break;\n                    case \"Bulletproof\":\n                        if (this.moveData.isBullet) {\n                            this._doesNotAffect[id] = \"blocked by Bulletproof\";\n                            continue;\n                        }\n                        break;\n                    case \"Wind Rider\":\n                        if (this.moveData.isWind) {\n                            this._doesNotAffect[id] = \"blocked by Wind Rider\";\n                            const boost = {atk: 1};\n                            this._raidState.applyStatChange(id, boost);\n                            continue;\n                        }\n                        break;\n                    case \"Levitate\":\n                        if (!pokemonIsGrounded(pokemon, field) && this._moveType === \"Ground\") { \n                            this._doesNotAffect[id] = \"does not affect \" + pokemon.name + \" due to \" + pokemon.ability;\n                            continue;\n                        }\n                        break;\n                    case \"Soundproof\":\n                        if (this.moveData.isSound) {\n                            this._doesNotAffect[id] = \"blocked by Soundproof\";\n                            continue;\n                        }\n                        break;\n                    default: break;\n                }\n            }\n            // Type-based immunities\n            const targetTypes = (pokemon.isTera && pokemon.teraType) ? [pokemon.teraType] : pokemon.types;\n            if (category !== \"Status\" && pokemon.item !== \"Ring Target\") {\n                if (this._moveType === \"Ground\" && !pokemonIsGrounded(pokemon, field)) { \n                    this._doesNotAffect[id] = \"does not affect \" + pokemon.name;\n                    continue;\n                }\n                if (this._moveType === \"Electric\" && targetTypes.includes(\"Ground\")) { \n                    this._doesNotAffect[id] = \"does not affect \" + pokemon.name; \n                    continue;\n                }\n                if ([\"Normal\", \"Fighting\"].includes(this._moveType || \"\") && targetTypes.includes(\"Ghost\") && !([\"Scrappy\", \"Mind's Eye\"] as (AbilityName | undefined)[]).includes(this._user.ability)) {\n                    this._doesNotAffect[id] = \"does not affect \" + pokemon.name;\n                    continue;\n                }\n                if (this._moveType === \"Ghost\" && targetTypes.includes(\"Normal\")) {\n                    this._doesNotAffect[id] = \"does not affect \" + pokemon.name;\n                    continue;\n                }\n                if (this._moveType === \"Dragon\" && targetTypes.includes(\"Fairy\")) {\n                    this._doesNotAffect[id] = \"does not affect \" + pokemon.name;\n                    continue;\n                }\n                if (this._moveType === \"Psychic\" && targetTypes.includes(\"Dark\")) {\n                    this._doesNotAffect[id] = \"does not affect \" + pokemon.name;\n                    continue;\n                }\n                if (this._moveType === \"Poison\" && targetTypes.includes(\"Steel\") && !this._user.hasAbility(\"Corrosion\")) {\n                    this._doesNotAffect[id] = \"does not affect \" + pokemon.name;\n                    continue;\n                }\n            }\n            if (moveName === \"Thunder Wave\" && targetTypes.includes(\"Ground\") && pokemon.item !== \"Ring Target\") {\n                this._doesNotAffect[id] = \"does not affect \" + pokemon.name;\n                continue;\n            }\n            if ((moveName.includes(\"Powder\") || moveName.includes(\"Spore\") && moveName !== \"Powder Snow\") && (targetTypes.includes(\"Grass\") || pokemon.item === \"Safety Goggles\")) {\n                this._doesNotAffect[id] = \"does not affect \" + pokemon.name;\n                continue;\n            }\n            if (id !== this.userID && this._user.hasAbility(\"Prankster\") && category === \"Status\" && targetTypes.includes(\"Dark\")) {\n                this._doesNotAffect[id] = \"does not affect \" + pokemon.name;\n                continue;\n            }\n        }\n        for (let dne of this._doesNotAffect)  {\n            if (dne) {\n                // this._user.lastMoveFailed = true;\n                break;\n            }\n        }\n    }\n\n    private checkProtection() {\n        if (!bypassProtectMoves.includes(this.moveData.name)){\n            for (let id of this._affectedIDs) {\n                if (!this._doesNotAffect[id]) {\n                    const pokemon = this.getPokemon(id);\n                    const field = pokemon.field;\n                    if (field.attackerSide.isProtected) {\n                        this._blockedBy[id] = pokemon.lastMove!.name;\n                    } else if (field.attackerSide.isWideGuard && [\"all-pokemon\", \"all-other-pokemon\", \"all-opponents\"].includes(this.moveData.target || \"\")) {\n                        this._blockedBy[id] = \"Wide Guard\";\n                    } else if (field.attackerSide.isQuickGuard && (this.moveData.priority || 0) > 0) {\n                        this._blockedBy[id] = \"Quick Guard\";\n                    }\n                }\n            }\n        }\n    }\n\n    private applyProtection() {\n        const moveName = this.moveData.name;\n        if ([\"Protect\", \"Detect\", \"Spiky Shield\", \"Baneful Bunker\", \"Burning Bulwark\"].includes(moveName)) {\n            this._fields[this.userID].attackerSide.isProtected = true;\n        } else if (moveName === \"Wide Guard\")  {\n            if (this.userID === 0) {\n                this._fields[0].attackerSide.isWideGuard = true;\n            } else{\n                for (let i=1; i<5; i++)  {\n                    this._fields[i].attackerSide.isWideGuard = true;\n                }\n            }\n        } else if (moveName === \"Quick Guard\") {\n            if (this.userID === 0) {\n                this._fields[0].attackerSide.isQuickGuard = true;\n            } else{\n                for (let i=1; i<5; i++)  {\n                    this._fields[i].attackerSide.isQuickGuard = true;\n                }\n            }\n        }\n    }\n\n    private getMoveField(atkID:number, defID: number) {\n        const moveField = this._raidState.fields[atkID].clone();\n        moveField.defenderSide = this._raidState.fields[defID].attackerSide.clone();\n        return moveField;\n    }\n\n    private getPokemon(id: number) {\n        return this._raiders[id];\n    }\n\n    private applyDamage() {\n        const moveUser = this.getPokemon(this.userID);\n        // check for spread damage (boss actions only)\n        this._isSpread = this.moveData.category?.includes(\"damage\") && (this._affectedIDs.length > 1);\n        // protean / libero check\n        if (this.moveData.name !== \"(No Move)\" && this.moveData.type && moveUser.hasAbility(\"Protean\", \"Libero\") && !moveUser.abilityOn && !moveUser.isTera) {\n            moveUser.types = [this._moveType];\n            moveUser.abilityOn = true;\n            moveUser.hasExtraType = false;\n            this._flags[this.userID].push(\"changed to the \" + this._moveType + \" type\");\n        }\n        // Electro Shot boost check (with Power Herb or in Rain)\n        if (this.moveData.name === \"Electro Shot\" && !this._isSheerForceBoosted && !moveUser.isCharging) {\n            this._raidState.applyStatChange(this.userID, {spa: 1});\n        }\n        // Spit Up / Stockpile check\n        if (this.moveData.name === \"Spit Up\" && !this._user.stockpile) {\n            this._desc[this.userID] = this._user.name + \" \" + this.move.name + \" vs. \" + this._raidState.getPokemon(this._targetID).name + \" — \" + this.move.name + \" failed!\";\n        }\n        // calculate and apply damage\n        let hasCausedDamage = false;\n        for (let id of [0,1,2,3,4]) {\n            const target = this.getPokemon(id);\n            if (this._doesNotAffect[id]) {\n                this._desc[id] = this.move.name + \" \" + this._doesNotAffect[id] + \"!\";\n            } else if (this._blockedBy[id])  {\n                this._desc[id] = this.move.name + \" was blocked by \" + this._blockedBy[id] + \"!\";\n            } else if (this._affectedIDs.includes(id)) {\n                const critChance = getCritChance(this.move, moveUser, target);\n                const crit = this.options.crit || critChance >= 1;\n                const roll = this.options.roll || \"avg\";\n                const superEffective = isSuperEffective(this.move, this._moveType, target.field, this._user, target);\n                let results = [];\n                let damageResult: number | number[] | undefined = undefined;\n                let totalDamage = 0;\n\n                const attackerIgnoresAbility = (this._user.hasAbility(\"Mold Breaker\", \"Teravolt\", \"Turboblaze\") && !target.hasItem(\"Ability Shield\")) || (this._user.hasAbility(\"Mycelium Might\") && this.move.category === \"Status\");\n                let [accuracy, accEffectsList] = (this.instructed && this._user.lastAccuracy) ? [this._user.lastAccuracy, []] : getAccuracy(this.moveData, this.move.category, moveUser, target, !this.movesFirst, attackerIgnoresAbility);\n                this._user.lastAccuracy = accuracy;\n                const bpModifier = getBpModifier(this.moveData, target, this.damaged);\n                const accFraction = Math.min(1,accuracy/100);\n                const rollChance = accFraction * (crit ? critChance : (1 - critChance));\n                if (this.options.allowMiss ? (accuracy >= 100 || roll !== \"min\") : (accuracy > 0)) {\n                    try {\n                        const preDamageItem = target.item;\n                        // calculate each hit from a multi-hit move\n                        for (let i=0; i<this.hits; i++) { \n                            const calcMove = this.move.clone();\n                            calcMove.hits = 1;\n                            calcMove.isCrit = crit;\n                            calcMove.isSpread = !!this._isSpread;\n                            calcMove.bp = calcMove.bp * bpModifier; // from interactions like Dig + Earthquake\n                            calcMove.bp = ((calcMove.name === \"Triple Axel\" || calcMove.name === \"Triple Kick\") ? i+1 : 1) * calcMove.bp;\n                            if (calcMove.name === \"Pollen Puff\" && this.userID !== 0 && this._targetID !== 0) {\n                                break;\n                            }\n                            // handle moves that are affected by repeated use\n                            if (this._user.lastMove && (this.moveData.name === this._user.lastMove.name)) {\n                                this._user.moveRepeated = (this._user.moveRepeated || 0) + 1;\n                                 // calcMove.timesUsed = this._user.moveRepeated; // THIS CARRIES OUT THE MOVE MULTIPLE TIMES\n                                 // TO DO: Implement boosts for Fury Cutter and Rollout\n                            } else {\n                                this._user.moveRepeated = 0;\n                            }\n                            if (this._user.item === \"Metronome\") {\n                                calcMove.timesUsedWithMetronome = this._user.moveRepeated || 0; // TO DO: account for Symbiosis, etc\n                            }\n                            // get calc result\n                            const moveField = this.getMoveField(this.userID, id);\n                            const result = calculate(9, moveUser, target, calcMove, moveField);\n                            let otherResult = undefined;\n                            if (critChance > 0 && critChance < 1) {\n                                const otherCalcMove = calcMove.clone();\n                                otherCalcMove.isCrit = !crit;\n                                otherResult = calculate(9, moveUser, target, otherCalcMove, moveField);\n                            }\n                            \n                            results.push(result);\n                            // ignore the possibility that result.damage is [number[], number[]]. When would that come up?\n                            if (damageResult === undefined) {\n                                // @ts-ignore\n                                damageResult = result.damage;\n                            } else if (typeof(damageResult) === \"number\") {\n                                damageResult = (damageResult as number) + (result.damage as number);\n                            } else {\n                                damageResult = (damageResult as number[]).map((val, i) => val + (result.damage as number[])[i]);\n                            }\n                            let hitDamage = 0;\n                            let hitRoll = undefined;\n                            if (typeof(result.damage) === \"number\") {\n                                hitDamage = result.damage as number;\n                                hitRoll = getRollCounts([[hitDamage]], 0, target.maxHP(), [rollChance]);\n                            } else {\n                                //@ts-ignore\n                                hitDamage = roll === \"max\" ? result.damage[result.damage.length-1] : roll === \"min\" ? result.damage[0] : result.damage[Math.floor(result.damage.length/2)];\n                                hitRoll = getRollCounts([result.damage as number[]], 0, target.maxHP(), [rollChance]);\n                            }\n                            if (calcMove.name === \"False Swipe\") {\n                                hitDamage = Math.min(hitDamage, target.originalCurHP - 1);\n                            }\n                            if (otherResult) {\n                                const otherRollChance = accFraction * (crit ? 1 - critChance : critChance);\n                                if (typeof(otherResult.damage) === \"number\") {\n                                    hitRoll = catRollCounts(hitRoll, getRollCounts([[otherResult.damage as number]], 0, target.maxHP(), [otherRollChance]));\n                                } else {\n                                    hitRoll = catRollCounts(hitRoll, getRollCounts([otherResult.damage as number[]], 0, target.maxHP(), [otherRollChance]));\n                                }\n                            }\n                            if (accFraction > 0 && accFraction < 1) {\n                                hitRoll = catRollCounts(hitRoll, getRollCounts([[0]], 0, target.maxHP(), [1 - accFraction]));\n                            }\n                            const bypassSubstitute = this.moveData.bypassSub || moveUser.hasAbility(\"Infiltrator\");\n                            this._raidState.applyDamage(id, hitDamage, hitRoll, 1, result.rawDesc.isCritical, superEffective, this._moveType, this.move.category, true, this.moveData.isWind, bypassSubstitute, this._isSheerForceBoosted);\n                            totalDamage += hitDamage;\n                            this._damageRolls[id].push(hitRoll);\n        \n                            // remove buffs to user after damage\n                            if (totalDamage > 0) {\n                                hasCausedDamage = true;\n                                moveUser.field.attackerSide.isHelpingHand = false;\n                                if (this._moveType === \"Electric\") { moveUser.field.attackerSide.isCharged = false; }\n                            }\n                            // contact checks\n                            if (this.moveData.makesContact && !this._user.hasAbility(\"Long Reach\") && !this._user.hasItem(\"Protective Pads\")) {\n                                const target = this._raidState.raiders[this._targetID]; // All contact moves are single-target (?)\n                                // abilities\n                                const attackerIgnoresAbility = (this._user.hasAbility(\"Mold Breaker\", \"Teravolt\", \"Turboblaze\") || !target.hasItem(\"Ability Shield\")) && (this._user.hasAbility(\"Mycelium Might\") && this.move.category === \"Status\");\n                                if (!target.abilityNullified && !attackerIgnoresAbility) {\n                                    switch (this._raidState.raiders[this._targetID].ability) {\n                                        case \"Rough Skin\":\n                                        case \"Iron Barbs\":\n                                            this._raidState.applyDamage(this.userID, Math.floor(this._user.maxHP() / 8 / ((this._user.bossMultiplier || 100) / 100)));\n                                            break;\n                                        case \"Aftermath\":\n                                            if (target.originalCurHP === 0) {\n                                                this._raidState.applyDamage(this.userID, Math.floor(this._user.maxHP() / 4 / ((this._user.bossMultiplier || 100) / 100)));\n                                            }\n                                            break;\n                                        case \"Gooey\":\n                                        case \"Tangling Hair\":\n                                            this._raidState.applyStatChange(this.userID, {spe: -1});\n                                            break;\n                                        // Guessing NoReceiver\n                                        case \"Wandering Spirit\":\n                                            if (!persistentAbilities[\"NoReceiver\"].includes(this._user.ability as AbilityName)) {\n                                                target.ability = this._user.ability;\n                                                this._user.ability = \"Wandering Spirit\" as AbilityName;\n                                            }\n                                            break;\n                                        case \"Magician\":\n                                        case \"Pickpocket\":\n                                            if (!target.item && this._user.item) {\n                                                const item = this._user.item;\n                                                this._raidState.loseItem(this.userID);\n                                                this._raidState.receiveItem(this._targetID, item);\n                                            }\n                                            break;\n                                        // Guessing NoReceiver\n                                        case \"Mummy\":\n                                        case \"Lingering Aroma\":\n                                            if (!this._user.hasItem(\"Ability Shield\") && \n                                                !(!this._user.abilityNullified && (\n                                                    this._user.hasAbility(\"Lingering Aroma\",\"Mummy\") || persistentAbilities[\"NoReceiver\"].includes(this._user.ability || \"\")\n                                                ))) {\n                                                this._raidState.changeAbility(this._user.id, target.ability!)\n                                            }\n                                            break;\n                                        // TO DO: status-inflicting contact abilities. \n                                        default: break;\n                                    }\n                                }\n                                // items\n                                switch (target.item) {\n                                    case \"Rocky Helmet\":\n                                        this._raidState.applyDamage(this.userID, Math.floor(this._user.maxHP() / 6 / ((this._user.bossMultiplier || 100) / 100)));\n                                        break;\n                                    case \"Sticky Barb\":\n                                        if (!this._user.item) {\n                                            this._raidState.loseItem(this._targetID);\n                                            this._raidState.receiveItem(this.userID, \"Sticky Barb\" as ItemName);\n                                        }\n                                        break;\n                                    default: break; \n                                }\n                            }\n                        }\n                        const postDamageItem = target.item;\n                        if ((preDamageItem !== postDamageItem) && (!postDamageItem)) {\n                            this._raidState.loseItem(id); // This triggers Symbiosis, which only happens at the end of multi-strike moves\n                        }\n                        // prepare desc from results\n                        const result = results[0];\n                        result.damage = damageResult as number | number[];\n                        result.rawDesc.hits = this.hits > 1 ? this.hits : undefined;\n                        this._damage[id] = Math.min(totalDamage, this.raidState.raiders[id].originalCurHP);\n                        this._desc[id] = result.desc();\n                        // for Fling / Symbiosis interactions, the Flinger should lose their item *after* the target receives damage\n                        if (this.moveData.name === \"Fling\" && this._user.item) {\n                            this._flingItem = moveUser.item;\n                            this._raidState.loseItem(this.userID);\n                            this._user.lastConsumedItem = this._flingItem;\n                            if (this._user.hasAbility(\"Cud Chew\") && this._flingItem!.includes(\"Berry\")) {\n                                this._user.isCudChew = 2;\n                            }\n                        }\n                    } \n                    catch {\n                        this._desc[id] = this._user.name + \" used \" + this.move.name + \" on \" + this.getPokemon(id).name + \"!\";\n                    }\n\n                    // add accuracy to desc if there is a chance to miss\n                    if (accuracy < 100) {\n                        const accString = Math.round(accuracy * 10) / 10;\n                        const missString = Math.round((100 - accString) * 10) / 10;\n                        const accEffectsString = accEffectsList.length ? \" (\" + accEffectsList.join(\", \") + \")\" : \"\";\n                        this._desc[id] += \" [\" + accString + \"% chance to hit\" + accEffectsString + \"]\";\n                        this._warnings.push(this.move.name + \" has a \" + missString + \"% chance to miss\" + accEffectsString);\n                    }\n\n                    if (!nonMoveActions.includes(this.moveData.name)) {\n                        // this._user.lastMoveFailed = false;\n                    }\n                } else {\n                    const accString = Math.round(accuracy * 10) / 10;\n                    const missString = Math.round((100 - accString) * 10) / 10;\n                    const accEffectsString = accEffectsList.length ? \" with \" + accEffectsList.join(\", \") : \"\";\n                    this._desc[id] = this._user.name + \" used \" + this.move.name + \", but it missed! (\" + accString + \"% chance to hit \" + accEffectsString + \")\";\n                    this._warnings.push(this.move.name + \" missed (\" + missString + \"% chance to miss\" + accEffectsString + \").\");\n                    this._doesNotAffect[id] = \"missed\";\n                    // this._user.lastMoveFailed = true;\n                }\n            }\n            // protection contact checks\n            if (this._affectedIDs.includes(id)) {\n                if (this.moveData.makesContact && this._blockedBy[id] && target.lastMove && !this._user.hasAbility(\"Long Reach\") && !this._user.hasItem(\"Protective Pads\")) {\n                    switch (target.lastMove.name) {\n                        case \"Spiky Shield\":\n                            this._raidState.applyDamage(this.userID, Math.floor(this._user.maxHP() / 8 / ((this._user.bossMultiplier || 100) / 100)));\n                            break;\n                        case \"Baneful Bunker\":\n                            this._raidState.applyStatus(this.userID, \"psn\", target.id, false, false, this.options.roll);\n                            break;\n                        case \"Burning Bulwark\":\n                            this._raidState.applyStatus(this.userID, \"brn\", target.id, false, false, this.options.roll);\n                            break;\n                        case \"Beak Blast\":\n                            if (target.isCharging) {\n                                this._raidState.applyStatus(this.userID, \"brn\", target.id, false, false, this.options.roll);\n                            }\n                            break;\n                        case \"King's Shield\": \n                            this._raidState.applyStatChange(this.userID, {atk: -1});\n                            break;\n                        case \"Obstruct\":\n                            this._raidState.applyStatChange(this.userID, {def: -2});\n                            break;\n                        case \"Silk Trap\": {\n                            this._raidState.applyStatChange(this.userID, {spe: -1});\n                            break;\n                        }\n                        default: break;\n                    }\n                }   \n            }\n        }\n        // simplify/remove descs\n        if (this._affectedIDs.length > 1 && !this.moveData.category?.includes(\"damage\")) {\n            for (let id of this._affectedIDs) {\n                this._desc[id] = \"\";\n            }\n            this._desc[this.userID] = this._user.name + \" used \" + this.move.name + \"!\";\n        }\n        // } else if (this._affectedIDs.length === 1 && this._damage[this._affectedIDs[0]] === 0) {\n        //     if (this._affectedIDs[0] === this.userID) {\n        //         this._desc[this._affectedIDs[0]] = this._user.name + \" used \" + this.move.name + \"!\";\n        //     } else {\n        //         this._desc[this._affectedIDs[0]] = this._user.name + \" used \" + this.move.name + \" on \" + this.getPokemon(this._affectedIDs[0]).name + \"!\";\n        //     }\n        // }\n        // adjust tera charge\n        if ((this.moveData.category?.includes(\"damage\") || (this.moveData.category === \"unique\" && this.moveData.power)) && hasCausedDamage && this._user.teraCharge < 3) {\n            this._user.teraCharge++;\n        } \n    }\n\n    private applyDrain() { // this also accounts for recoil\n        let drainPercent = this.moveData.drain;\n        if ((this.moveData.drain || 0) < 0 && this._user.hasAbility(\"Rock Head\", \"Magic Guard\")) {\n            drainPercent = 0;\n        }\n        drainPercent = (drainPercent || 0) + ((!this._isSheerForceBoosted && this._user.hasItem(\"Shell Bell\")) ? 12.5 : 0);\n        const damage = this._damage.reduce((a,b) => a + b, 0);\n        if (drainPercent) {\n            // scripted Matcha Gotcha could potentially drain from multiple raiders\n            let drainRolls: Map<number,number> | undefined = undefined;\n            if (damage > 0) {\n                for (let id of this._affectedIDs) {\n                    this._drain[this.userID] = this._drain[this.userID] + absoluteFloor(this._damage[id] * drainPercent/100);\n                    for (let hitRolls of this._damageRolls[id]) {\n                        const scaledRolls = new Map<number,number>();\n                        for (let [key, val] of hitRolls) {\n                            scaledRolls.set(absoluteFloor(key * -drainPercent/100), val);\n                        }\n                        if (drainRolls === undefined) {\n                            drainRolls = scaledRolls;\n                        } else {\n                            drainRolls = combineRollCounts(drainRolls, scaledRolls, -this._raidState.raiders[id].maxHP(), this._raidState.raiders[id].maxHP()).c;\n                        }\n                    }\n                }\n            }\n            if (this._drain[this.userID] && this._user.originalCurHP > 0) {\n                this._raidState.applyDamage(this.userID, -this._drain[this.userID], drainRolls)\n            }\n        }\n    }\n\n    private applyHealing() {\n        let healingPercent = this.moveData.healing;\n        const healingRolls: (number[] | undefined)[] = [undefined, undefined, undefined, undefined, undefined];\n        for (let id of this._affectedIDs) {\n            if (this._doesNotAffect[id] || this._blockedBy[id]) { continue; }\n            const target = this.getPokemon(id);\n            const maxHP = target.maxHP();\n            if (this.move.name === \"Heal Cheer\") {\n                const roll = this.options.roll || \"avg\";\n                healingRolls[id] = healCheerRoll.map(val => -Math.floor(val * maxHP));\n                this._healing[id] += roll === \"min\" ? Math.floor(maxHP * 0.2) : roll === \"max\" ? maxHP : Math.floor(maxHP * 0.6);\n                const pokemon = this.getPokemon(id);\n                pokemon.status = \"\";\n                pokemon.isFrozen = 0;\n                pokemon.isSleep = 0;\n                pokemon.isYawn = 0;\n                pokemon.syrupBombDrops = 0;\n            } else if (this.move.name === \"Swallow\") {\n                // Swallow / Stockpile check\n                if (!target.stockpile) {\n                    this._desc[id] = target.name + \" \" + target.name + \" — \" + this.move.name + \" failed!\";\n                }\n                this._healing[id] += target.stockpile === 3 ? maxHP : Math.floor(maxHP * 0.25 * target.stockpile);\n            } else {\n                if (this._user.hasAbility(\"Mega Launcher\") && this.moveData.isPulse) {\n                    healingPercent = (healingPercent || 0) * 1.5;\n                }\n                if (this.moveData.name === \"Floral Healing\" && this._user.field.hasTerrain(\"Grassy\")) {\n                    healingPercent = 66.66; // Bulbapedia says 2/3, not sure what should be used here for perfect accuracy \n                }\n                const healAmount = Math.floor(target.maxHP() * (healingPercent || 0)/100 / ((target.bossMultiplier || 100) / 100));\n                this._healing[id] += healAmount;\n            }\n        }\n        for (let id=1; id<5; id++) {\n            if (this._healing[id] && this.getPokemon(id).originalCurHP > 0) {\n                this._raidState.applyDamage(id, -this._healing[id], healingRolls[id] ? getRollCounts([healingRolls[id] as number[]], -this._raidState.raiders[id].maxHP(), this._raidState.raiders[id].maxHP()) : undefined);\n            }\n        }\n    }\n\n    private applyFlinch() {\n        const flinchChance = (this.moveData.flinchChance || 0) * (this._user.hasAbility(\"Serene Grace\") ? 2 : 1);\n        const ignoreAbility = this._user.hasAbility(\"Mold Breaker\", \"Teravolt\", \"Turboblaze\") || (this._user.hasAbility(\"Mycelium Might\") && this.move.category === \"Status\");\n        if (flinchChance && !this._isSheerForceBoosted && (this.options.secondaryEffects || flinchChance >= 100)) {\n            for (let id of this._affectedIDs) {\n                if (id === 0) { continue; }\n                if (this._doesNotAffect[id] || this._blockedBy[id]) { continue; }\n                const target = this.getPokemon(id);\n                if (target.item === \"Covert Cloak\" || target.hasAbility(\"Shield Dust\")) { continue; }\n                if (target.hasAbility(\"Inner Focus\") && !(ignoreAbility && !target.hasItem(\"Ability Shield\"))) { continue; }\n                this._causesFlinch[id] = true;\n                if (this._user.hasAbility(\"Steadfast\")) {\n                    this._raidState.applyStatChange(id, {spe: 1}, true, this.userID, ignoreAbility);\n                }\n            }\n        }\n    }\n\n    private applyStatChanges() {\n        const category = this.moveData.category;\n        if (this._isSheerForceBoosted) { return; } \n        const affectedIDs = category === \"damage+raise\" ? [this.userID] : this._affectedIDs;\n        let statChanges = this.moveData.statChanges;\n        // handle Growth\n        if (this.move.name === \"Growth\" && this._fields[this.userID].weather?.includes(\"Sun\") && !this._fields[this.userID].isCloudNine) { statChanges = [{stat: \"atk\", change: 2}, {stat: \"spa\", change: 2}]; }\n        // handle Curse\n        if (this.move.name === \"Curse\" && this._raiders[this.userID].hasType(\"Ghost\")) { return; } // no stat changes\n        const chance = (this.moveData.statChance || 100) * (this._raiders[this.userID].hasAbility(\"Serene Grace\") ? 2 : 1);\n        if (chance && (this.options.secondaryEffects || chance >= 100 )) {\n            for (let id of affectedIDs) {\n                if (this._doesNotAffect[id] || this._blockedBy[id]) { continue; }\n                const pokemon = this.getPokemon(id);\n                if (pokemon.originalCurHP === 0) { continue; }\n                const field = pokemon.field;\n                if (id !== this.userID && this.moveData.category?.includes(\"damage\") && (pokemon.item === \"Covert Cloak\" || pokemon.hasAbility(\"Shield Dust\"))) { continue; }\n                const boost: Partial<StatsTable> = {};\n                for (let statChange of (statChanges || [])) {\n                    const stat = statChange.stat as StatIDExceptHP;\n                    let change = statChange.change;\n                    if (Number.isNaN(change)) {\n                        // apparently, I manually put some stat changes are stored under the \"value\" key rather than \"change\"\n                        // TODO: update the data files to fix this\n                        // @ts-ignore\n                        change = statChange.value;\n                    }\n                    if (Number.isNaN(change)) { console.log(\"Stat change info for \" + this.moveData.name + \" is missing.\"); continue; }\n                    if (change < 0 && id !== this.userID && (field.attackerSide.isProtected || (field.attackerSide.isMist && this._user.ability !== \"Infiltrator\"))) {\n                        continue;\n                    }\n                    boost[stat] = change;\n                }\n                this._raidState.applyStatChange(id, boost, true, this.userID, (this._user.hasAbility(\"Mold Breaker\", \"Teravolt\", \"Turboblaze\") && !pokemon.hasItem(\"Ability Shield\")) || (this._user.hasAbility(\"Mycelium Might\") && this.move.category === \"Status\"))\n            }\n        }\n    }\n\n    private applyAilment() {\n        const ailment = this.moveData.ailment;\n        const chance = (this.moveData.ailmentChance || 100) * (this._user.hasAbility(\"Serene Grace\") ? 2 : 1);\n        if (ailment && !this._isSheerForceBoosted && (chance >= 100 || this.options.secondaryEffects)) {\n            for (let id of this._affectedIDs) {\n                if (this._doesNotAffect[id] || this._blockedBy[id]) { continue; }\n                const pokemon = this.getPokemon(id);\n                if (pokemon.originalCurHP === 0) { continue; }\n                const ailmentIsStatus = isStatus(ailment);\n                const isSecondaryEffect = this.moveData.category?.includes(\"damage\");\n                // non-volatile status\n                if (ailmentIsStatus) {\n                    this._raidState.applyStatus(id, ailment as StatusName, this.userID, isSecondaryEffect, false, this.options.roll);\n                // volatile status\n                } else {\n                    this._raidState.applyVolatileStatus(id, ailment, isSecondaryEffect, this.userID, this.movesFirst);\n                }\n                // Toxic Chain\n                if (this._user.hasAbility(\"Toxic Chain\") && isSecondaryEffect && this.options.secondaryEffects) {\n                    this._raidState.applyStatus(id, \"tox\", this.userID, true, false, this.options.roll);\n                }\n            }\n        }\n    }\n\n    private applySelfDamage() {\n        if (this._user.hasAbility(\"Magic Guard\")) { return; }\n        const selfDamage = Math.floor((this._user.maxHP() * (this.moveData.selfDamage || 0) / 100) / ((this._user.bossMultiplier || 100) / 100)); \n        const lifeOrbDamage = (this._user.item === \"Life Orb\" && !this._isSheerForceBoosted && this._damage.reduce((a,b) => a + b, 0) > 0) ? Math.floor(this._user.maxHP() * 0.1) : 0;\n        if (selfDamage !== 0) {\n            const selfDamagePercent = this.moveData.selfDamage;\n            this._flags[this.userID].push!(selfDamagePercent + \"% self damage from \" + this.moveData.name)\n            this._raidState.applyDamage(this.userID, selfDamage);\n        }\n        if (lifeOrbDamage !== 0) {\n            this._flags[this.userID].push!(\"Life Orb damage\")\n            this._raidState.applyDamage(this.userID, lifeOrbDamage);\n        }\n    }\n\n    private applyFieldChanges() {\n        /// Whole-Field Effects\n        // Weather\n        if (this.move.name === \"Rain Dance\") { this._raidState.applyWeather(\"Rain\", this._user.item === \"Damp Rock\" ? 8 : 5); }\n        if (this.move.name === \"Sunny Day\") { this._raidState.applyWeather(\"Sun\", this._user.item === \"Heat Rock\" ? 8 : 5); }\n        if (this.move.name === \"Sandstorm\") { this._raidState.applyWeather(\"Sand\", this._user.item === \"Smooth Rock\" ? 8 : 5); }\n        if (this.move.name === \"Snowscape\" || this.move.name === \"Chilly Reception\") { this._raidState.applyWeather(\"Snow\", this._user.item === \"Icy Rock\" ? 8 : 5); }\n        // Terrain\n        if (this.move.name === \"Electric Terrain\") { this._raidState.applyTerrain(\"Electric\", this._user.item === \"Terrain Extender\" ? 8 : 5); }\n        if (this.move.name === \"Grassy Terrain\") { this._raidState.applyTerrain(\"Grassy\", this._user.item === \"Terrain Extender\" ? 8 : 5); }\n        if (this.move.name === \"Misty Terrain\") { this._raidState.applyTerrain(\"Misty\", this._user.item === \"Terrain Extender\" ? 8 : 5); }\n        if (this.move.name === \"Psychic Terrain\") { this._raidState.applyTerrain(\"Psychic\", this._user.item === \"Terrain Extender\" ? 8 : 5); }\n        // Gravity\n        const gravity = this.move.name === \"Gravity\";\n        // Trick Room\n        const trickroom = this.move.name === \"Trick Room\";\n        // Magic Room\n        const magicroom = this.move.name === \"Magic Room\";\n        // Wonder Room\n        const wonderroom = this.move.name === \"Wonder Room\";\n        // apply effects\n        for (let field of this._fields) {\n            field.isGravity = (gravity && !field.isGravity) ? 5 : field.isGravity;\n            field.isTrickRoom = trickroom ? (field.isTrickRoom ? 0 : 5) : field.isTrickRoom;\n            field.isMagicRoom = magicroom ? (field.isMagicRoom ? 0 : 5) : field.isMagicRoom;\n            field.isWonderRoom = wonderroom ? (field.isWonderRoom ? 0 : 5) : field.isWonderRoom;\n        }\n        /// Side Effects\n        // Reflect\n        let reflect = this.move.name === \"Reflect\";\n        // Light Screen\n        let lightscreen = this.move.name === \"Light Screen\";\n        // Aurora Veil\n        let auroraveil = this.move.name === \"Aurora Veil\" && this._user.field.hasWeather(\"Hail\", \"Snow\");\n        // Mist\n        let mist = this.move.name === \"Mist\";\n        // Safeguard\n        let safeguard = this.move.name === \"Safeguard\";\n        // Tailwind\n        let tailwind = this.move.name === \"Tailwind\";\n        // Attack Cheer\n        let attackcheer = this.move.name === \"Attack Cheer\";\n        // Defense Cheer\n        let defensecheer = this.move.name === \"Defense Cheer\";\n        // apply effects\n        const sideFieldIDs = this.userID === 0 ? [0] : [1,2,3,4];\n        for (let id of sideFieldIDs) {\n            const field = this._fields[id];\n            field.attackerSide.isReflect = (reflect && !field.attackerSide.isReflect) ? (this._user.item === \"Light Clay\" ? 8 : 5) : field.attackerSide.isReflect;\n            field.attackerSide.isLightScreen = (lightscreen && !field.attackerSide.isLightScreen) ? (this._user.item === \"Light Clay\" ? 8 : 5) : field.attackerSide.isLightScreen;\n            field.attackerSide.isAuroraVeil = (auroraveil && !field.attackerSide.isAromaVeil) ? (this._user.item === \"Light Clay\" ? 8 : 5) : field.attackerSide.isAuroraVeil;\n            field.attackerSide.isMist = (mist && !field.attackerSide.isMist) ? 5 : field.attackerSide.isMist;\n            field.attackerSide.isSafeguard = (safeguard && !field.attackerSide.isSafeguard) ? 5 : field.attackerSide.isSafeguard;\n            field.attackerSide.isTailwind = (tailwind && !field.attackerSide.isTailwind) ? 5 : field.attackerSide.isTailwind;\n            field.attackerSide.isAtkCheered = Math.min(6, (attackcheer ? 3 : 0) + field.attackerSide.isAtkCheered);\n            field.attackerSide.isDefCheered = Math.min(6, (defensecheer ? 3 : 0) + field.attackerSide.isDefCheered);\n        }\n\n        // Helping Hand\n        const helpinghand = this.move.name === \"Helping Hand\";\n        if (helpinghand) {\n            if (this._doesNotAffect[this._targetID]) {\n                this._desc[this._targetID] = this.move.name + \" \" + this._doesNotAffect[this._targetID] + \"!\";\n            } else {\n                this._fields[this._targetID].attackerSide.isHelpingHand = true;\n            }\n        }\n    }\n\n    private applyPreDamageEffects()  {\n        if ((this._user.isFrozen || this._user.hasStatus(\"frz\")) && thawUserMoves.includes(this.move.name)) {\n            this._user.status = \"\";\n            this._user.isFrozen = 0;\n        }\n\n        if (this._doesNotAffect[this._targetID]) { return; }\n        \n        switch (this.move.name) {\n            case \"Brick Break\":\n            case \"Psychic Fangs\":\n            case \"Raging Bull\":\n                const targetFields = this.userID === 0 ? this._fields.slice(1) : [this._fields[0]];\n                let hadScreens = false\n                for (let field of targetFields) {\n                    hadScreens = !!(field.attackerSide.isReflect || field.attackerSide.isLightScreen || field.attackerSide.isAuroraVeil) || hadScreens;\n                    field.attackerSide.isReflect = 0;\n                    field.attackerSide.isLightScreen = 0;\n                    field.attackerSide.isAuroraVeil = 0;\n                }\n                if (hadScreens) {\n                    this._flags[this.userID].push(this.move.name + \" broke the opponent's screens!\")\n                }\n                break;\n            case \"Clear Smog\":\n                const target = this.getPokemon(this._targetID);\n                for (let stat in target.boosts) {\n                    const statId = stat as StatIDExceptHP;\n                    target.boosts[statId] = 0;\n                }\n                break;\n            default: break;\n        }\n    }\n\n    private applyOtherMoveEffects() {\n        // Throat Spray\n        if (this.moveData.isSound && this._user.hasItem(\"Throat Spray\")) {\n            this._raidState.consumeItem(this.userID, this._user.item!);\n        }\n    }\n\n    private applyUniqueMoveEffects() {\n        const target = this.getPokemon(this._targetID);\n\n        const user_ability = this._user.ability as AbilityName;\n        const target_ability = target.ability as AbilityName;\n\n        if (this._doesNotAffect[this._targetID]) { return; }\n\n        switch (this.move.name) {\n            /// Ability-affecting moves\n            case \"Clear Boosts / Abilities\":\n                if (this.userID !== 0) {\n                    throw new Error(\"Only the Raid boss can remove stat boosts and abilities!\")\n                }\n                this._desc[this._targetID] = \"The Raid Boss nullified all stat boosts and abilities!\"\n                for (let i=1; i<5; i++) {\n                    const pokemon = this.getPokemon(i);\n                    // Helping Hand is NOT cleared\n                    // if (\n                    //     !persistentAbilities.unsuppressable.includes(pokemon.ability as AbilityName) \n                    //     && !pokemon.hasItem(\"Ability Shield\")\n                    //     && pokemon.ability !== \"(No Ability)\"\n                    // ) { // abilities that are not unsupressable are nullified\n                    //     this._raidState.changeAbility(i, \"(No Ability)\");\n                    // }\n                    if (!pokemon.hasItem(\"Ability Shield\") && !pokemon.hasAbility(\"Disguise\", \"Ice Face\")) {\n                        this._raidState.removeAbilityFieldEffect(i, pokemon.ability);\n                        pokemon.abilityNullified = 1;\n                        pokemon.abilityOn = false; // boosts from abilities (i.e. Flash Fire) are removed temporarily without Ability Shield\n                    }\n                    pokemon.field.attackerSide.isAtkCheered = 0; // clear active cheers\n                    pokemon.field.attackerSide.isDefCheered = 0;\n                    for (let stat in pokemon.boosts) {\n                        pokemon.boosts[stat as StatIDExceptHP] = Math.min(0, (pokemon.boosts[stat as StatIDExceptHP] || 0));\n                    }\n                }\n                break;\n            case \"Remove Negative Effects\":\n                if (this.userID !== 0) {\n                    throw new Error(\"Only the Raid boss can remove negative effects!\")\n                }\n                this._desc[this._targetID] = \"The Raid Boss removed all negative effects from itself!\"\n                const boss = this.getPokemon(0);\n                boss.status = \"\";\n                boss.volatileStatus = [];\n                // boss.isTaunt = 0; according to IVSore, taunt isn't cleared\n                boss.isSleep = 0;\n                boss.isYawn = 0;\n                boss.syrupBombDrops = 0;\n                for (let stat in boss.boosts) {\n                    boss.boosts[stat as StatIDExceptHP] = Math.max(0, boss.boosts[stat as StatIDExceptHP] || 0);\n                }\n                break;\n            case \"Steal Tera Charge\":\n                if (this.userID !== 0) {\n                    throw new Error(\"Only the Raid boss can steal tera charges!\")\n                }\n                this._desc[0] = \"The Raid Boss stole a Tera charge from its opponents!\";\n                for (let i=1; i<5; i++) {\n                    const pokemon = this._raidState.getPokemon(i);\n                    pokemon.teraCharge = Math.max(0, (pokemon.teraCharge || 0) - 1);\n                }\n                break;\n            case \"Activate Shield\":\n                if (this.userID !== 0) {\n                    throw new Error(\"Only the Raid boss can activate its shield!\")\n                }\n                if (!this._user.shieldBroken && !this._user.shieldActive && this._user.shieldData?.shieldCancelDamage) {\n                    this._desc[this._targetID] = \"The Raid Boss activated its shield!\";\n                    this._user.shieldActive = true;\n                    this._user.shieldActivateHP = this._user.originalCurHP;\n                } else {\n                    this._desc[this._targetID] = \"The Boss Shield is already active. You might need to change the shield's HP activation threshold.\";\n                }\n                break;\n            case \"Skill Swap\": \n                if (\n                    !this._user.abilityNullified && !target.abilityNullified &&\n                    !this._user.hasItem(\"Ability Shield\") && \n                    !target.hasItem(\"Ability Shield\") &&\n                    !persistentAbilities[\"FailSkillSwap\"].includes(user_ability) &&\n                    !persistentAbilities[\"FailSkillSwap\"].includes(target_ability)\n                ) {\n                    const tempUserAbility = user_ability;\n                    this._raidState.changeAbility(this.userID, target_ability, true);\n                    this._raidState.changeAbility(this._targetID, tempUserAbility, true);\n                } else {\n                    this._desc[this._targetID] = this._user.name + \" \" + this.move.name + \" vs. \" + target.name + \" — \" + this.move.name + \" failed!\";\n                }\n                break;\n            case \"Core Enforcer\":\n            case \"Gastro Acid\":\n                if (\n                    !persistentAbilities[\"CantSuppress\"].includes(target_ability) &&\n                    !target.hasItem(\"Ability Shield\")\n                ) {\n                    this._raidState.removeAbilityFieldEffect(target.id, target.ability);\n                    target.abilityNullified = -1;\n                } else {\n                    this._desc[this._targetID] = this._user.name + \" \" + this.move.name + \" vs. \" + target.name + \" — \" + this.move.name + \" failed!\";\n                }\n                break;\n            case \"Entrainment\":\n                if (\n                    !persistentAbilities[\"NoEntrain\"].includes(user_ability) &&\n                    !target.hasItem(\"Ability Shield\")\n                ) {\n                    this._raidState.changeAbility(this._targetID, user_ability);\n                } else {\n                    this._desc[this._targetID] = this._user.name + \" \" + this.move.name + \" vs. \" + target.name + \" — \" + this.move.name + \" failed!\";\n                }\n                break;\n            // Worry Seed is weird, using FailSkillSwap as an approximation\n            case \"Worry Seed\":\n                if (\n                    !persistentAbilities[\"FailSkillSwap\"].includes(target_ability) &&\n                    !target.hasItem(\"Ability Shield\")\n                ) {\n                    this._raidState.changeAbility(this._targetID, \"Insomnia\" as AbilityName);\n                } else {\n                    this._desc[this._targetID] = this._user.name + \" \" + this.move.name + \" vs. \" + target.name + \" — \" + this.move.name + \" failed!\";\n                }\n                break;\n            case \"Role Play\":\n                if (\n                    !target.abilityNullified &&\n                    !persistentAbilities[\"FailRolePlay\"].includes(target_ability) &&\n                    !this._user.hasItem(\"Ability Shield\")\n                ) {\n                    this._raidState.changeAbility(this.userID, target_ability);\n                } else {\n                    this._desc[this._targetID] = this._user.name + \" \" + this.move.name + \" vs. \" + target.name + \" — \" + this.move.name + \" failed!\";\n                }\n                break;\n            // Using CantSuppress as a guess\n            case \"Simple Beam\":\n                if (\n                    !persistentAbilities[\"CantSuppress\"].includes(target_ability) &&\n                    !target.hasItem(\"Ability Shield\")\n                ) {\n                    this._raidState.changeAbility(this._targetID, \"Simple\" as AbilityName);\n                } else {\n                    this._desc[this._targetID] = this._user.name + \" \" + this.move.name + \" vs. \" + target.name + \" — \" + this.move.name + \" failed!\";\n                }\n                break;\n            case \"Minimize\":\n                this._user.isMinimize = true;\n                break;\n            // Using FailRolePlay/NoReceiver as a guess\n            case \"Doodle\":\n                if (\n                    !persistentAbilities[\"NoReceiver\"].includes(target_ability) &&\n                    !this._user.hasItem(\"Ability Shield\")\n                ) {           \n                    this._raidState.changeAbility(this.userID, target_ability);\n                    if (this.userID !== 0) {\n                        for (let i=1; i<5; i++) {\n                            const pokemon = this.getPokemon(i);\n                            if (i !== this.userID &&\n                                !pokemon.hasItem(\"Ability Shield\") &&\n                                !persistentAbilities[\"NoReceiver\"].includes(pokemon.ability || \"\"))\n                            {\n                                this._raidState.changeAbility(i, target_ability);\n                            }\n                        }\n                    }\n                }\n                break;\n        /// Type-affecting moves\n            case \"Soak\":\n                if (!target.isTera || !(target.teraType !== undefined || target.teraType !== \"???\") && !(target.types.every(type => type === \"Water\"))) {\n                    target.types = [\"Water\"];\n                    target.hasExtraType = false;\n                    this._desc[target.id] = this._user.name + \" Soak vs. \" + target.name + \" — Soak changed \" + target.name + \"'s type to Water!\";\n                } else {\n                    this._desc[target.id] = this._user.name + \" Soak vs. \" + target.name + \" — Soak failed!\";\n                }\n                break;\n            case \"Magic Powder\":\n                if (!target.isTera || !(target.teraType !== undefined || target.teraType !== \"???\") && !(target.types.every(type => type === \"Psychic\"))) {\n                    target.types = [\"Psychic\"];\n                    target.hasExtraType = false;\n                    this._desc[target.id] = this._user.name + \" Magic Powder vs. \" + target.name + \" — Magic Powder changed \" + target.name + \"'s type to Psychic!\";\n                } else {\n                    this._desc[target.id] = this._user.name + \" Magic Powder vs. \" + target.name + \" — Magic Powder failed!\";\n                }\n                break;\n            case \"Forest's Curse\":\n                if (!target.isTera || !(target.teraType !== undefined || target.teraType !== \"???\") && !target.types.includes(\"Grass\")) {\n                    if (target.types.length === 3) {\n                        target.types[2] = \"Grass\";\n                    } else {\n                        target.types.push(\"Grass\");\n                    }\n                    target.hasExtraType = true;\n                    this._desc[target.id] = this._user.name + \" Forest's Curse vs. \" + target.name + \" — the Grass type was added to \" + target.name + \"!\";\n                } else {\n                    this._desc[target.id] = this._user.name + \" Forest's Curse vs. \" + target.name + \" — Forest's Curse failed!\";\n                } \n                break;\n            case \"Trick-or-Treat\":\n                if (!target.isTera || !(target.teraType !== undefined || target.teraType !== \"???\") && !target.types.includes(\"Ghost\")) {\n                    if (target.types.length === 3) {\n                        target.types[2] = \"Ghost\";\n                    } else {\n                        target.types.push(\"Ghost\");\n                    }\n                    target.hasExtraType = true;\n                    this._desc[target.id] = this._user.name + \" Trick-or-Treat vs. \" + target.name + \" — the Ghost type was added to \" + target.name + \"!\";\n                } else {\n                    this._desc[target.id] = this._user.name + \" Trick-or-Treat vs. \" + target.name + \" — Trick-or-Treat failed!\";\n                } \n                break;\n            case \"Conversion\":\n                const firstMoveType = this._user.moveData[0].type;\n                if (firstMoveType) {\n                    this._user.types = [firstMoveType];\n                    this._user.hasExtraType = false;\n                    this._desc[this.userID] = this._user.name + \" Conversion — \" + this._user.name + \" transformed into the \" + firstMoveType.toUpperCase() + \" type!\";\n                }\n                break;\n            case \"Reflect Type\":\n                if (!target.isTera || (target.teraType !== undefined || target.teraType !== \"???\")) {\n                    this._user.types = [...target.types];\n                    this._user.hasExtraType = target.hasExtraType;\n                    this._desc[this.userID] = this._user.name + \" Reflect Type vs. \" + target.name + \" — \" + this._user.name + \"'s types changed to match \" + target.name + \"'s!\";\n                } else {\n                    this._user.types = [target.teraType];\n                    this._user.hasExtraType = false;\n                }\n                this._desc[this.userID] = this._user.name + \" Reflect Type vs. \" + target.name + \" — \" + this._user.name + \"'s type changed to match \" + target.name + \"'s!\";\n                break;\n        /// Item-affecting moves\n            case \"Knock Off\":\n                // Knock Off doesn't remove raiders' items when used by the boss\n                if (this.userID !== 0 && target.item) {\n                    this._raidState.loseItem(this._targetID);\n                }\n                break;\n            case \"Switcheroo\":\n            case \"Trick\":\n                // These moves don't work in Tera raids\n                // const tempUserItem = this._user.item;\n                // const tempTargetItem = target.item;\n                // this._raidState.receiveItem(this._targetID, tempUserItem);\n                // this._raidState.receiveItem(this.userID, tempTargetItem);\n                break;\n            case \"Fling\":\n                if (this._flingItem && !(target.hasAbility(\"Shield Dust\") || target.hasItem(\"Covert Cloak\"))) {\n                    switch (this._flingItem) {\n                        case \"Light Ball\":\n                            this._raidState.applyStatus(target.id, \"par\", this.userID, true, false, this.options.roll);\n                            break;\n                        case \"Flame Orb\":\n                            this._raidState.applyStatus(target.id, \"brn\", this.userID, true, false, this.options.roll);\n                            break;\n                        case \"Toxic Orb\":\n                            this._raidState.applyStatus(target.id, \"tox\", this.userID, true, false, this.options.roll);\n                            break\n                        case \"Poison Barb\":\n                            this._raidState.applyStatus(target.id, \"psn\", this.userID, true, false, this.options.roll);\n                            break;\n                        case \"White Herb\":\n                        case \"Cheri Berry\":\n                        case \"Chesto Berry\":\n                        case \"Pecha Berry\":\n                        case \"Rawst Berry\":\n                        case \"Aspear Berry\":\n                        case \"Lum Berry\":\n                        case \"Persim Berry\": \n                        case \"Liechi Berry\":\n                        case \"Kee Berry\":\n                        case \"Ganlon Berry\":\n                        case \"Petaya Berry\":\n                        case \"Maranga Berry\":\n                        case \"Apicot Berry\":\n                        case \"Salac Berry\":\n                        case \"Starf Berry\":\n                        case \"Lansat Berry\":\n                        case \"Micle Berry\":\n                        case \"Sitrus Berry\":\n                        case \"Oran Berry\":\n                        case \"Mental Herb\":\n                            this._raidState.consumeItem(this._targetID, this._flingItem, false);\n                            break;\n                        default: break;\n                    }\n                }\n                break;\n            // other\n            case \"Defog\":\n                const targetFields = this.userID === 0 ? this._fields.slice(1) : [this._fields[0]];\n                for (let field of this._fields) {\n                    field.attackerSide.isReflect = 0;\n                    field.attackerSide.isLightScreen = 0;\n                    field.attackerSide.isSafeguard = 0;\n                    field.attackerSide.isMist = 0;\n                    field.terrain = undefined;\n                }\n                for (let field of targetFields) {\n                    field.attackerSide.isAuroraVeil = 0;\n                }\n                break;\n            case \"Court Change\": \n                const tempUserSide = {...(this._fields[this.userID].attackerSide)};\n                const sameSides = this.userID === 0 ? [this._fields[0]] : this._fields.slice(1);\n                const targetSides = this.userID === 0 ? this._fields.slice(1) : [this._fields[0]];\n                for (let side of sameSides) {\n                    side.attackerSide.isLightScreen = targetSides[0].attackerSide.isLightScreen;\n                    side.attackerSide.isReflect = targetSides[0].attackerSide.isReflect;\n                    side.attackerSide.isSafeguard = targetSides[0].attackerSide.isSafeguard;\n                    side.attackerSide.isMist = targetSides[0].attackerSide.isMist;\n                    side.attackerSide.isAuroraVeil = targetSides[0].attackerSide.isAuroraVeil;\n                    side.attackerSide.isTailwind = targetSides[0].attackerSide.isTailwind;\n                }\n                for (let side of targetSides) {\n                    side.attackerSide.isLightScreen = tempUserSide.isLightScreen;\n                    side.attackerSide.isReflect = tempUserSide.isReflect;\n                    side.attackerSide.isSafeguard = tempUserSide.isSafeguard;\n                    side.attackerSide.isMist = tempUserSide.isMist;\n                    side.attackerSide.isAuroraVeil = tempUserSide.isAuroraVeil;\n                    side.attackerSide.isTailwind = tempUserSide.isTailwind;\n                }\n                break;\n            case \"Haze\":\n                for (let id=0; id<5; id++) {\n                    const pokemon = this.getPokemon(id);\n                    for (let stat in pokemon.boosts) {\n                        const statId = stat as StatIDExceptHP\n                        pokemon.boosts[statId] = 0;\n                    }\n                }\n                break;\n            case \"Heal Bell\":\n            case \"Jungle Healing\":\n                for (let id of this._affectedIDs) {\n                    if (!this._doesNotAffect[id]) {\n                        const pokemon = this._raidState.getPokemon(id);\n                        pokemon.status = \"\";\n                    }\n                }\n                break;\n            case \"Charge\":\n                this._fields[this.userID].attackerSide.isCharged = true;\n                break;\n            case \"Endure\":\n                this._user.isEndure = true;\n                this._user.cumDamageRolls.addPersistentCondition(\"Endure\");\n                break;\n            case \"Substitute\":\n                const substituteHP = Math.floor(this._user.maxHP() / 4);\n                if (this._user.originalCurHP > substituteHP && this._user.substitute === undefined) {\n                    this._user.originalCurHP -= substituteHP;\n                    this._user.substitute = substituteHP\n                }\n                break;\n            case \"Psych Up\":\n                for (let stat of [\"atk\", \"def\", \"spa\", \"spd\", \"spe\", \"acc\", \"eva\"]) {\n                    const statId = stat as StatIDExceptHP;\n                    this._user.boosts[statId] = target.boosts[statId] || 0;\n                    this._user.isPumped = target.isPumped;\n                }\n                break;\n            case \"Power Swap\":\n                const tempUserAtkBoosts = {...this._user.boosts};\n                this._user.boosts.atk = target.boosts.atk;\n                this._user.boosts.spa = target.boosts.spa;\n                target.boosts.atk = tempUserAtkBoosts.atk;\n                target.boosts.spa = tempUserAtkBoosts.spa;\n                break;\n            case \"Guard Swap\":\n                const tempUserDefBoosts = {...this._user.boosts};\n                this._user.boosts.def = target.boosts.def;\n                this._user.boosts.spd = target.boosts.spd;\n                target.boosts.def = tempUserDefBoosts.def;\n                target.boosts.spd = tempUserDefBoosts.spd;\n                break;\n            case \"Heart Swap\":\n                const tempUserBoosts = {...this._user.boosts};\n                this._user.boosts = {...target.boosts};\n                target.boosts = {...tempUserBoosts};\n                break;\n            case \"Power Trick\":\n                const tempAtk = this._user.stats.atk;\n                this._user.stats.atk = this._user.stats.def;\n                this._user.stats.def = tempAtk;\n                break;\n            case \"Speed Swap\":\n                const tempSpe = this._user.stats.spe;\n                this._user.stats.spe = target.stats.spe;\n                target.stats.spe = tempSpe;\n                break;\n            case \"Topsy-Turvy\": \n                for (let stat in target.boosts) {\n                    target.boosts[stat as StatIDExceptHP] = -(target.boosts[stat as StatIDExceptHP] || 0);\n                }\n                break;\n            case \"Acupressure\":\n                target.randomBoosts += target.boostCoefficient * 2;\n                break;\n            case \"Rest\":\n                if ((this._user.status !== \"slp\")\n                    && !(isGrounded(this._user, this._user.field) && this._user.field.hasTerrain(\"Misty\") || this._user.field.hasTerrain(\"Electric\")) \n                    && (this._user.abilityNullified || ![\"Insomnia\", \"Purifying Salt\", \"Vital Spirit\"].includes(this._user.ability as string)) \n                    && !(this._user.field.hasWeather(\"Sun\") && this._user.hasAbility(\"Leaf Guard\"))\n                ) {\n                    this._user.originalCurHP = this._user.maxHP();\n                    this._user.isSleep = this.options.roll === \"max\" ? 1 : this.options.roll === \"min\" ? 3 : 2;\n                    this._raidState.applyStatus(this.userID, \"slp\", this.userID, false, false, this.options.roll);\n                }\n                break;\n            case \"Ingrain\":\n                this._user.isIngrain = true;\n                break;\n            case \"Smack Down\":\n                target.isSmackDown = true;\n                break;\n            case \"Focus Energy\":\n                if (!this._user.isPumped) {\n                    this._user.isPumped = 2;\n                } else {\n                    this._desc[this._targetID] = this._user.name + \" - \" + this.move.name + \" failed!\"\n                }\n                break;\n            case \"Dragon Cheer\": \n                const allyIDs = this.userID !== 0 ? [1,2,3,4].filter((id) => id !== this.userID) : [];\n                for (let allyID of allyIDs) {\n                    const ally = this._raidState.getPokemon(allyID);\n                    if (!ally.isPumped) {\n                        ally.isPumped = ally.hasType(\"Dragon\") ? 2: 1;\n                    } else {\n                        this._desc[allyID] = ally.name + \" - \" + this.move.name + \" failed!\"\n                    }\n                }\n                break;\n            case \"Syrup Bomb\":\n                if (!target.syrupBombDrops) {\n                    target.syrupBombDrops = 3;\n                    this._flags[this._targetID].push(\"Covered in Sticky Syrup!\");\n                }\n                break;\n            case \"Tailwind\":\n                // Tailwind is applied in applyFieldChanges()\n                const allies = this.userID !== 0 ? [1,2,3,4] : [0];\n                for (let id of allies) {\n                    const ally = this.getPokemon(id);\n                    if (ally.hasAbility(\"Wind Power\")) {\n                        this._fields[id].attackerSide.isCharged = true;\n                    } else if (ally.hasAbility(\"Wind Rider\")) {\n                        this._raidState.applyStatChange(id, {atk: 1});\n                    }\n                }\n                break;\n            case \"Curse\": \n                if (this._user.hasType(\"Ghost\")) {\n                    this._raidState.applyDamage(this.userID, this._user.maxHP() / 2);\n                    // (Ghost) Curse probably doesn't work in raids\n                }\n                break;\n            case \"Stockpile\":\n                this._user.stockpile = Math.min(3, this._user.stockpile + 1);\n                break;\n            case \"Spit Up\":\n                if (this._damage.reduce((a,b) => a + b, 0) > 0) {\n                    this._raidState.applyStatChange(this.userID, {def: -this._user.stockpile, spd: -this._user.stockpile}, false, this.userID, false);\n                    this._user.stockpile = 0;\n                }\n                break;\n            case \"Swallow\":\n                if (this._healing.reduce((a,b) => a + b, 0) > 0) {\n                    this._raidState.applyStatChange(this.userID, {def: -this._user.stockpile, spd: -this._user.stockpile}, false, this.userID, false);\n                    this._user.stockpile = 0;\n                }\n                break;\n            case \"Transform\":\n                this._raidState.transform(this.userID, target.id);\n                this._desc[this.targetID] = this._user.name + \" transformed into \" + target.name + \"!\";\n                break;\n            case \"Relic Song\":\n                if (this._user.name.includes(\"Meloetta\") && !this._user.hasAbility(\"Sheer Force\")) {\n                    if (this._user.name === \"Meloetta\") {\n                        this._user.changeForm(\"Meloetta-Pirouette\" as SpeciesName);\n                    } else {\n                        this._user.changeForm(\"Meloetta\" as SpeciesName);\n                    }\n                }\n                break;\n            case \"Mimic\":\n                const lastMove = target.lastMove;\n                if (lastMove) {\n                    this._user.mimicMove(lastMove, target.id)\n                    this._desc[this.targetID] = this._user.name + \" copied \" + lastMove.name + \" from \" + target.name + \"!\";\n                }\n                break;\n            case \"Sketch\":\n                const lastMove2 = target.lastMove;\n                if (lastMove2) {\n                    this._user.sketchMove(lastMove2, target.id)\n                    this._desc[this.targetID] = this._user.name + \" copied \" + lastMove2.name + \" from \" + target.name + \"!\";\n                }\n                break;\n            case \"Throat Chop\":\n                target.isThroatChop = target.id === 0 ? 8 : 2;\n                break;\n            default: break;\n            }\n    }\n\n    public applyPostMoveEffects() {\n        /// Item-related effects that occur at the end of a successful move\n        // Choice-locking items\n        if (this._user.hasItem(\"Choice Specs\", \"Choice Band\", \"Choice Scarf\") &&\n            this.raidState.raiders[this.raiderID].hasItem(\"Choice Specs\", \"Choice Band\", \"Choice Scarf\")) {\n            this._user.isChoiceLocked = true;\n        }\n    }\n\n    private setFlags() {\n        // check for fainting\n        const fainted = [false, false, false, false, false];\n        for (let i=0; i<5; i++) {\n            if (this._raiders[i].originalCurHP <= 0 && this.raidState.raiders[i].originalCurHP > 0) {\n                fainted[i] = true;\n            }\n        }\n        // crit stage check\n        for (let i=0; i<5; i++) {\n            if (fainted[i]) { continue; }\n            const pokemon = this._raiders[i];\n            const origPokemon = this.raidState.raiders[i];\n            if (pokemon.isPumped !== origPokemon.isPumped) {\n                this._flags[i].push(`is getting pumped (+${pokemon.isPumped})`);\n            }\n        }\n        // check for charged status\n        for (let i=0; i<5; i++) {\n            if (fainted[i]) { continue; }\n            const pokemon = this._raiders[i];\n            const origPokemon = this.raidState.raiders[i];\n            if (pokemon.field.attackerSide.isCharged !== origPokemon.field.attackerSide.isCharged) {\n                if (pokemon.field.attackerSide.isCharged) {\n                    this._flags[i].push(\"began charging power!\");\n                } else {\n                    this._flags[i].push(\"is no longer charged\");\n                }\n            }\n        }\n        // check for volatile status changes\n        const initialVolatileStatus = this.raidState.raiders.map(p => p.volatileStatus);\n        const finalVolatileStatus = this._raiders.map(p => p.volatileStatus);\n        for (let i=0; i<5; i++) {\n            if (fainted[i]) { continue; }\n            // check for new statuses\n            for (let vStat of finalVolatileStatus[i]) {\n                if (!initialVolatileStatus[i].includes(vStat)) {\n                    if (vStat === \"ingrain\") {\n                        this._flags[i].push(\" planted its roots!\");\n                    } else if (vStat === \"taunt\") {\n                        this._flags[i].push(\" fell for the taunt!\");\n                    } else if (vStat === \"yawn\") {\n                        this._flags[i].push(\" is getting drowsy...\");\n                    } else if (vStat === \"aquaring\") {\n                        // TO DO\n                    } else if (vStat === \"leech-seed\") {\n                        // TO DO\n                    } else if (vStat === \"magnetrise\") {\n                        // TO DO\n                    } else if (vStat === \"tarshot\") {\n                        // TO DO\n                    } else if (!ignoredVolatileStatuses.includes(vStat)) {\n                        this._flags[i].push(vStat + \" inflicted\")\n                    }\n                }\n            }\n            // check for removed statuses\n            for (let vStat of initialVolatileStatus[i]) {\n                if (!finalVolatileStatus[i].includes(vStat)) {\n                    if (vStat === \"ingrain\") {\n                        this._flags[i].push(vStat + \" lost\");\n                    } else {\n                        this._flags[i].push(vStat + \" cured\")\n                    }\n                }\n            }\n        }\n        // check for shield changes\n        const initialShield = this.raidState.raiders[0].shieldActive;\n        const finalShield = this._raiders[0].shieldActive;\n        if (initialShield !== finalShield) {\n            if (finalShield) {\n                this._flags[0].push(\"Shield activated\");\n            } else {\n                this._flags[0].push(\"Shield broken\");\n            }\n        }\n        // display fainting\n        for (let i=0; i<5; i++) {\n            if (fainted[i]) {\n                this._flags[i].push(this._raiders[i].name + \" fainted!\");\n            }\n        }\n        // check for item changes\n        const initialItems = this.raidState.raiders.map(p => p.item);\n        const finalItems = this._raiders.map(p => p.item);\n        for (let i=0; i<5; i++) {\n            if (initialItems[i] !== finalItems[i]) {\n                if (finalItems[i] === undefined) {\n                    this._flags[i].push(initialItems[i] + \" lost\")\n                } else if (initialItems[i] === undefined) {\n                    this._flags[i].push(finalItems[i] + \" gained\")\n                } else {\n                    this._flags[i].push(initialItems[i] + \" replaced with \" + finalItems[i])\n                }\n            }\n        }\n        // check for ability changes\n        const initialAbilities = this.raidState.raiders.map(p => p.ability);\n        const finalAbilities = this._raiders.map(p => p.ability);\n        for (let i=0; i<5; i++) {\n            if (fainted[i]) { continue; }\n            if (initialAbilities[i] !== finalAbilities[i])  {\n                if (finalAbilities[i] === \"(No Ability)\" || finalAbilities[i] === undefined) {\n                    this._flags[i].push(initialAbilities[i] + \" removed\")\n                } else {\n                    this._flags[i].push(\"ability changed to \" + finalAbilities[i])\n                }\n            }\n        }\n        // check for Ability Nullification\n        const initialNullified = this.raidState.raiders.map(p => p.abilityNullified)\n        const finalNullified = this._raidState.raiders.map(p => p.abilityNullified)\n        for (let i=0; i<5; i++) {\n            if (fainted[i] || (finalAbilities[i] === \"(No Ability)\")) { continue; }\n            if (!initialNullified[i] && !!finalNullified[i])  {\n                this._flags[i].push(finalAbilities[i] + \" nullified\")\n            }\n        }\n        // check for ability triggers\n        const initialAbilityOn = this.raidState.raiders.map(p => p.abilityOn);\n        const finalAbilityOn = this._raiders.map(p => p.abilityOn);\n        for (let i=0; i<5; i++) {\n            if (fainted[i]) { continue; }\n            if (initialAbilityOn[i] !== finalAbilityOn[i]) {\n                if (finalAbilityOn[i]) {\n                    this._flags[i].push(this._raiders[i].ability + \" activated\");\n                } else {\n                    this._flags[i].push(this._raiders[i].ability + \" deactivated\");\n                }\n            }\n        }\n        // check for status changes\n        const initialStatus = this.raidState.raiders.map(p => p.status);\n        const finalStatus = this._raiders.map(p => p.status);\n        for (let i=0; i<5; i++) {\n            if (fainted[i]) { continue; }\n            if (initialStatus[i] !== finalStatus[i]) {\n                if (finalStatus[i] === \"\" || finalStatus[i] === undefined) {\n                    this._flags[i].push(initialStatus[i] + \" cured\")\n                } else {\n                    this._flags[i].push(finalStatus[i] + \" inflicted\")\n                }\n            }\n        }\n        // check for stat changes\n        for (let i=0; i<5; i++) {\n            if (fainted[i]) { continue; }\n            const pokemon = this.getPokemon(i);\n            const origPokemon = this.raidState.raiders[i];\n            let boostStr: string[] = [];\n            for (let stat in pokemon.boosts) {\n                //@ts-ignore\n                const origStat = origPokemon.boosts[stat] || 0;\n                //@ts-ignore\n                const newStat = pokemon.boosts[stat] === undefined ? origStat : pokemon.boosts[stat];\n                const diff = newStat - origStat;\n                if (diff !== 0) {\n                    boostStr.push(stat + \" \" + (origStat > 0 ? \"+\" : \"\") + origStat + \" → \" + (newStat > 0 ? \"+\" : \"\") + newStat);\n                }\n            }\n            // acupressure check\n            if (pokemon.randomBoosts !== origPokemon.randomBoosts) {\n                boostStr.push(\"random stat \" + (origPokemon.randomBoosts > 0 ? \"+\" : \"\") + origPokemon.randomBoosts + \" → \" + (pokemon.randomBoosts > 0 ? \"+\" : \"\") + pokemon.randomBoosts);\n            }\n            if (boostStr.length > 0) {\n                const displayStr = \"Stat changes: (\" + boostStr.join(\", \") + \")\";\n                this._flags[i].push(displayStr);\n            }\n        }\n        // check for HP changes\n        for (let i=0; i<5; i++) {\n            const initialHP = this.raidState.raiders[i].originalCurHP;\n            const finalHP = this._raiders[i].originalCurHP;\n            if (initialHP !== finalHP) {\n                const initialPercent = Math.floor(initialHP / this.raidState.raiders[i].maxHP() * 1000)/10;;\n                const finalPercent = Math.floor(finalHP / this._raiders[i].maxHP() * 1000)/10;\n                const hpStr = \"HP: \" + initialPercent + \"% → \" + finalPercent + \"%\";\n                this._flags[i].push(hpStr);\n            }\n        }\n        // display overall fainting chance\n        for (let i=0; i<5; i++) {\n            if (i === this.userID || i === this.targetID || i === this.raiderID || this._affectedIDs.includes(i)) {\n                const poke = this._raiders[i];\n                const koChance = poke.koChance;\n                if (koChance > 0) {\n                    this._flags[i].push(koChance >= 100 ? \"Guaranteed KO\" : `${koChance}% overall chance of being KOd`);\n                }\n            }\n        }\n    }\n}\n","import { Generations, Move, calculate } from \"../calc\";\nimport { MoveData, RaidMoveOptions, RaidTurnInfo, RaidMoveInfo } from \"./interface\";\nimport { RaidState } from \"./RaidState\";\nimport { Raider } from \"./Raider\";\nimport { RaidMove, RaidMoveResult } from \"./RaidMove\";\nimport pranksterMoves from \"../data/prankster_moves.json\";\nimport triageMoves from \"../data/triage_moves.json\";\nimport chargeMoves from \"../data/charge_moves.json\";\nimport { MoveName, SpeciesName, StatusName } from \"../calc/data/interface\";\nimport { absoluteFloor, getSelectableMoves, isRegularMove } from \"./util\";\nimport { getEndOfTurn } from \"../calc/desc\";\n\nconst gen = Generations.get(9);\nconst dummyMove = new Move(gen, \"Splash\");\n\nexport type RaidTurnResult = {\n    state: RaidState;\n    results: RaidMoveResult[];\n    raiderMovesFirst: boolean;\n    raiderMoveUsed: string;\n    bossMoveUsed: string;\n    id: number;\n    group?: number;\n    moveInfo: RaidMoveInfo;\n    bossMoveInfo: RaidMoveInfo;\n    flags: string[][];\n    endFlags: string[];\n    turnNumber: number;\n}\n\nexport class RaidTurn {\n    raidState:      RaidState; // We shouldn't mutate this state; it is the result from the previous turn\n    raiderID:       number;\n    targetID:       number;\n    raiderMoveData!: MoveData;\n    bossMoveData!:   MoveData;\n    raiderOptions:  RaidMoveOptions;\n    bossOptions:    RaidMoveOptions;\n    id:        number;\n    group?:     number;\n    turnNumber: number;\n\n    _isBossAction!:     boolean;\n    _isCheer!:          boolean;\n    _isEmptyTurn!:      boolean;\n    _isEndOfFullTurn!:  boolean;\n\n    _raiderMovesFirst!: boolean;\n    _raider!:           Raider;\n    _boss!:             Raider;  \n    _raiderMove!:       Move;\n    _bossMove!:         Move;\n    _raiderMoveData!:   MoveData;\n    _bossMoveData!:     MoveData;\n    _raiderMoveID!:     number;     // the id of the raider performing the move (affected by instruct)\n    _raiderMoveTarget!: number;\n    _raiderMoveUsed!:   string;\n    _bossMoveUsed!:     string;\n    _instructed?:       boolean;\n\n    _raidMove1!:      RaidMove;\n    _raidMove2!:      RaidMove;\n\n    _result1!:        RaidMoveResult;\n    _result2!:        RaidMoveResult;\n    _delayedResults!: RaidMoveResult[];\n    _raidState!:      RaidState; // This tracks changes during this turn\n\n    _flags!:          string[][]; \n    _endFlags!:       string[];\n\n\n    constructor(raidState: RaidState, info: RaidTurnInfo, turnNumber: number) {\n        this.raidState = raidState;\n        this.raiderID = info.moveInfo.userID;\n        this.targetID = info.moveInfo.targetID;\n        this.raiderMoveData = info.moveInfo.moveData;\n        if (Object.keys(info.moveInfo.moveData).length === 1) { // Transform or Mimic can cause issues with loading full movedata from hashes\n            this.raiderMoveData = this.raidState.raiders[this.raiderID].moveData.find((move) => move.name === info.moveInfo.moveData.name) || {name: info.moveInfo.moveData.name} as MoveData;\n        }\n        this.bossMoveData = info.bossMoveInfo.moveData;\n        if (Object.keys(info.bossMoveInfo.moveData).length === 1) {\n            this.bossMoveData = this.raidState.raiders[0].moveData.find((move) => move.name === info.bossMoveInfo.moveData.name) || {name: info.bossMoveInfo.moveData.name} as MoveData;\n        }\n        this.id = info.id;\n        this.group = info.group;\n        this.turnNumber = turnNumber;\n\n        this.raiderOptions = info.moveInfo.options || {};\n        this.bossOptions = info.bossMoveInfo.options || {};\n    }\n\n    public result(): RaidTurnResult {\n        // check if the turn should be considered a boss action\n        this._isBossAction = this.raiderMoveData.name === \"(No Move)\" && this.bossMoveData.name !== \"(No Move)\";\n        this._isCheer = [\"Attack Cheer\", \"Defense Cheer\", \"Heal Cheer\"].includes(this.raiderMoveData.name);\n        this._isEmptyTurn = this.raiderMoveData.name === \"(No Move)\" && this.bossMoveData.name === \"(No Move)\";\n        // check if this marks the end of a 4-move \"turn\"\n        this._isEndOfFullTurn = !this._isBossAction && !this._isEmptyTurn && ((this.turnNumber % 4) === 3);\n        // set up moves\n        this._raiderMove = new Move(9, this.raiderMoveData.name, this.raiderOptions);\n        if (this.raiderOptions.crit) this._raiderMove.isCrit = true;\n        if (this.raiderOptions.hits !== undefined) this._raiderMove.hits = this.raiderOptions.hits;\n        this._bossMove = new Move(9, this.bossMoveData.name, this.bossOptions);\n        if (this.bossOptions.crit) this._bossMove.isCrit = true;\n        if (this.bossOptions.hits !== undefined) this._bossMove.hits = this.bossOptions.hits;\n\n        // copy the raid state\n        this._raidState = this.raidState.clone();\n        this._delayedResults = [];\n        this._flags = [[], [], [], [], []];\n        this._endFlags = [];\n\n        // switch-in if previously fainted\n        if (this._raidState.raiders[this.raiderID].originalCurHP === 0) {\n            this._flags[this.raiderID].push(\"Switched in\");\n            this._raidState.switchIn(this.raiderID);\n            // use dummy move to activate conditional items/abilities\n            const moveResult = new RaidMove(\n                {name: \"(No Move)\" as MoveName, target: \"user\"}, \n                new Move(gen, \"(No Move)\"), \n                this._raidState,\n                this.raiderID,\n                this.raiderID,\n                this.raiderID,\n                true,\n                ).result();\n            this._raidState = moveResult.state;\n            for (let i=0; i<5; i++) {\n                this._flags[i] = this._flags[i].concat(moveResult.flags[i]);\n            }\n        }\n\n        // activate Terastallization if specified\n        if (this.raiderOptions.activateTera) {\n            const activatedTera = this._raidState.activateTera(this.raiderID);\n            if (activatedTera) { this._flags[this.raiderID].push(\"Tera activated\"); }\n        }\n\n        // determine which move goes first\n        this.setTurnOrder();\n\n        this._raiderMoveID = this.raiderID;\n        this._raiderMoveTarget = this.targetID;\n        this._raiderMoveData = this.raiderMoveData;\n        this._bossMoveData = this.bossMoveData;\n        this._raiderMoveUsed = this._raiderMoveData.name;\n        this._bossMoveUsed = this._bossMoveData.name;\n\n        if (!this._isEmptyTurn) {\n            this.applyChangedMove();\n        }        \n\n        // steal tera charge \n        // deprecated, kept for compaitiblity of old links\n        if (this.bossOptions.stealTeraCharge) {\n            this._flags[0].push(\"The Raid Boss stole a Tera charge!\");\n            for (let i=1; i<5; i++) {\n                const pokemon = this._raidState.getPokemon(i);\n                pokemon.teraCharge = Math.max(0, (pokemon.teraCharge || 0) - 1);\n            }\n        }\n        if (!this._isCheer && !this._isBossAction && !this._isEmptyTurn) {\n            // sleep wake-up check\n            const moveUser = this._raidState.getPokemon(this._raiderMoveID);\n            if (moveUser.isSleep === 0 && moveUser.hasStatus(\"slp\")) {\n                moveUser.status = \"\";\n                this._flags[this._raiderMoveID].push(\"woke up\");\n            }\n            // taunt shake-off check\n            if (moveUser.isTaunt === 0 && moveUser.volatileStatus.includes(\"taunt\")) {\n                moveUser.volatileStatus = moveUser.volatileStatus.filter((status) => status !== \"taunt\");\n                this._flags[this._raiderMoveID].push(\"shook off the taunt\");\n            }\n        }\n        if (!this._isBossAction && !this._isEmptyTurn) {\n            // boss sleep wake-up check\n            if (this._boss.isSleep === 0 && this._boss.hasStatus(\"slp\")) {\n                this._boss.status = \"\";\n                this._flags[0].push(\"woke up\");\n            }\n            // boss taunt shake-off check\n            if (this._boss.isTaunt === 0 && this._boss.volatileStatus.includes(\"taunt\")) {\n                this._boss.volatileStatus = this._boss.volatileStatus.filter((status) => status !== \"taunt\");\n                this._flags[0].push(\"shook off the taunt\");\n            }\n        }\n        // execute moves\n        if (this._raiderMovesFirst) {\n            this._raidMove1 = new RaidMove(\n                this._raiderMoveData,\n                this._raiderMove, \n                this._raidState, \n                this._raiderMoveID, \n                this._raiderMoveTarget,\n                this.raiderID,\n                this._raiderMovesFirst,\n                this.raiderOptions,\n                this._isBossAction,\n                false,\n                false,\n                this._instructed,\n            );\n            this._result1 = this._raidMove1.result();\n            this._raidState = this._result1.state;\n            this._raidMove2 = new RaidMove(\n                this._bossMoveData,\n                this._bossMove, \n                this._raidState, \n                0, \n                [\"all-opponents\",\"all-other-pokemon\",\"all-pokemon\"].includes(this._bossMoveData.target || \"\") ? this._raiderMoveID : this.raiderID, // If Instruct is used before the boss moves, spread moves from the boss will hit the target of instruct \n                this.raiderID,\n                !this._raiderMovesFirst,\n                this.bossOptions,\n                this._isBossAction,\n                this._result1.causesFlinch[0],\n                this._result1.damage[0] > 0\n            );\n        } else {\n            this._raidMove1 = new RaidMove(\n                this._bossMoveData, \n                this._bossMove, \n                this._raidState, \n                0, \n                this.raiderID,\n                this.raiderID,\n                !this._raiderMovesFirst,\n                this.bossOptions,\n                this._isBossAction\n            );\n            this._result1 = this._raidMove1.result();\n            this._raidState = this._result1.state;\n            this._raidMove2 = new RaidMove(\n                this._raiderMoveData, \n                this._raiderMove, \n                this._raidState, \n                this._raiderMoveID, \n                this._raiderMoveTarget,\n                this.raiderID,\n                this._raiderMovesFirst,\n                this.raiderOptions,\n                this._isBossAction,\n                this._result1.causesFlinch[this.raiderID],\n                this._result1.damage[this.raiderID] > 0,\n                this._instructed,\n            );\n        }\n        this._raidMove2.result();\n        this._result2 = this._raidMove2.output\n        this._raidState = this._result2.state.clone();\n\n        if (!this._isEmptyTurn) {\n            this.removeProtection();\n            if (!this._isBossAction) {\n                // end-of-turn damage\n                this.applyEndOfTurnDamage();\n                // item effects\n                this.applyEndOfTurnItemEffects();\n                // ability effects\n                this.applyEndOfTurnAbilityEffects();\n                // Clear Endure (since side-attacks are not endured)\n                this._raidState.raiders[this.raiderID].isEndure = false;\n                this._raidState.raiders[this.raiderID].cumDamageRolls.removePersistentCondition(\"Endure\");\n                this._raidState.raiders[0].isEndure = false; // I am unaware of any raid bosses that have endure\n                this._raidState.raiders[0].cumDamageRolls.removePersistentCondition(\"Endure\");\n                // remove protect / wide guard / quick guard effects\n                this.countDownFieldEffects();\n                // other end-of-turn stuff\n                this.applyEndOfTurnMoveEffects();\n                this.applyEndOfTurnStatusEffects();\n                if (!this._isCheer)  {\n                    // delayed moves (Protect doesn't apply)\n                    this.countdownDelayedMoves();\n                }\n                if (!this._isBossAction){\n                    this.countDownAbilityNullification(); // this might happen earlier\n                }\n            }\n        }\n\n        return {\n            state: this._raidState,\n            results: [this._result1, this._result2, ...this._delayedResults],\n            raiderMovesFirst: this._raiderMovesFirst,\n            raiderMoveUsed: this._raiderMoveUsed + (this._raidState.raiders[this.raiderID].isCharging ? \" (Charging)\" : \"\"),\n            bossMoveUsed: this._bossMoveUsed + (this._raidState.raiders[0].isCharging ? \" (Charging)\" : \"\"),\n            id: this.id,\n            group: this.group,\n            moveInfo: {\n                userID: this.raiderID,\n                targetID: this.targetID,\n                moveData: this.raiderMoveData,\n                options: this.raiderOptions,\n            },\n            bossMoveInfo: {\n                userID: 0,\n                targetID: this.raiderID,\n                moveData: this.bossMoveData,\n                options: this.bossOptions,\n            },\n            flags: this._flags,\n            endFlags: this._endFlags,\n            turnNumber: this.turnNumber,\n        }\n\n    }\n\n    private applyChangedMove() {\n        // Charge up moves\n        if (this._raider.isCharging) {\n            this._raiderMoveData = this.raidState.raiders[this.raiderID].lastMove!;\n            this._raiderMove = new Move(9, this._raiderMoveData.name, this.raiderOptions);\n            if (this.raiderOptions.crit) this._raiderMove.isCrit = true;\n            if (this.raiderOptions.hits !== undefined) this._raiderMove.hits = this.raiderOptions.hits;\n            this._raiderMoveUsed = this._raiderMoveData.name;\n        }\n        if (this._boss.isCharging) {\n            this._bossMoveData = this.raidState.raiders[0].lastMove!;\n            this._bossMove = new Move(9, this._bossMoveData.name, this.bossOptions);\n            if (this.bossOptions.crit) this._bossMove.isCrit = true;\n            if (this.bossOptions.hits !== undefined) this._bossMove.hits = this.bossOptions.hits;\n            this._bossMoveUsed = this._bossMoveData.name;\n        }\n        // Recharging\n        if (this._raider.isRecharging) {\n            this._raiderMoveData = {name: \"(No Move)\" as MoveName};\n            this._raiderMove = new Move(9, \"(No Move)\");\n            this._raiderMoveUsed = \"(Recharging)\";\n        }\n        if (this._boss.isRecharging) {\n            this._bossMoveData = {name: \"(No Move)\" as MoveName};\n            this._bossMove = new Move(9, \"(No Move)\");\n            this._bossMoveUsed = \"(Recharging)\";\n        }\n        // pollen puff\n        if (this.raiderMoveData.name === \"Pollen Puff\") {\n            if (this.targetID !== 0) { \n                this._raiderMoveData = {\n                    ...this.raiderMoveData,\n                    power: 0,\n                    category: 'heal',\n                    healing: 50,\n                };\n            }\n        }\n        // disallow status moves if taunted\n        if (this._boss.isTaunt && this._bossMove.name !== \"(No Move)\") {\n            const testMove = new Move(9, this.bossMoveData.name, this.bossOptions);\n            if (testMove.category === \"Status\" && ![\"Clear Boosts / Abilities\", \"Remove Negative Effects\"].includes(testMove.name)) {\n                if (this._isBossAction) {\n                    if (isRegularMove(this._bossMoveData.name)) {\n                        this._bossMoveData = {name: \"(No Move)\" as MoveName, target: \"selected-pokemon\", category: \"damage\"}\n                        this._bossMove = new Move(9, \"(No Move)\", this.bossOptions);\n                        this._bossMoveUsed = \"(No Move)\";\n                    }\n                } else {\n                    this._bossMoveData = {name: \"(Most Damaging)\" as MoveName, target: \"selected-pokemon\", category: \"damage\"}\n                }\n            }\n        }\n        if (this._raider.isTaunt) {\n            const testMove = new Move(9, this.raiderMoveData.name, this.raiderOptions);\n            if (testMove.category === \"Status\" && ![\"Attack Cheer\", \"Defense Cheer\", \"Heal Cheer\"].includes(testMove.name)) {\n                this._raiderMoveData = {name: \"(Most Damaging)\" as MoveName, target: \"selected-pokemon\", category: \"damage\"}\n            }\n        }\n        // For this option, pick the most damaging move based on the current field.\n        if (!this.raidState.raiders[0].isCharging && this._bossMoveData.name === \"(Most Damaging)\") {\n            const moveOptions = getSelectableMoves(this._raidState.raiders[0], false);\n            let bestMove = \"(No Move)\";\n            let bestDamage = 0;\n            for (const move of moveOptions) {\n                const testMove = new Move(9, move, this.bossOptions);\n                testMove.isCrit = this.bossOptions.crit || false;\n                const testField = this._raidState.raiders[0].field;\n                testField.defenderSide = this._raidState.raiders[this.raiderID].field.attackerSide;\n                const result = calculate(9, this._raidState.raiders[0], this._raidState.raiders[this.raiderID], testMove, testField);\n                let damage: number = 0;\n                if (typeof(result.damage) === \"number\") {\n                    damage = result.damage;\n                } else {\n                    damage = (this.bossOptions.roll === \"min\" ? result.damage[0] :\n                              this.bossOptions.roll === \"max\" ? result.damage[result.damage.length - 1] : \n                              result.damage[Math.floor(result.damage.length / 2)]) as number;\n                }\n                if (damage > bestDamage) {\n                    bestMove = move;\n                    bestDamage = damage;\n                }\n            }\n            this._bossMoveData = this._raidState.raiders[0].moveData.find((move) => move.name === bestMove) || {name: bestMove} as MoveData;\n            this._bossMove = new Move(9, bestMove, this.bossOptions);\n            this._bossMoveUsed = bestMove;\n        }\n        if (!this.raidState.raiders[this.raiderID].isCharging && this._raiderMoveData.name === \"(Most Damaging)\") {\n            const moveOptions = this._raidState.raiders[this.raiderID].moves;\n            let bestMove = \"(No Move)\";\n            let bestDamage = 0;\n            for (const move of moveOptions) {\n                const testMove = new Move(9, move, this.raiderOptions);\n                testMove.isCrit = this.raiderOptions.crit || false;\n                const testField = this._raidState.raiders[this.raiderID].field;\n                testField.defenderSide = this._raidState.raiders[this.targetID].field.attackerSide;\n                const result = calculate(9, this._raidState.raiders[this.raiderID], this._raidState.raiders[0], testMove, testField);\n                let damage: number = 0;\n                if (typeof(result.damage) === \"number\") {\n                    damage = result.damage;\n                } else {\n                    damage = (this.raiderOptions.roll === \"min\" ? result.damage[0] :\n                              this.raiderOptions.roll === \"max\" ? result.damage[result.damage.length - 1] : \n                              result.damage[Math.floor(result.damage.length / 2)]) as number;\n                }\n                if (damage > bestDamage && !(testMove.name === \"Pollen Puff\" && this.targetID !== 0)) {\n                    bestMove = move;\n                    bestDamage = damage;\n                }\n            }\n            this._raiderMoveData = this._raidState.raiders[this.raiderID].moveData.find((move) => move.name === bestMove) || {name: bestMove} as MoveData;\n            this._raiderMove = new Move(9, bestMove, this.raiderOptions);\n            this._raiderMoveUsed = bestMove;\n        }\n        // Moves that cause different moves to be carried out (Instruct and Copycat, let's not worry about Metronome)\n        // Instruct\n        if (this.raiderMoveData.name === \"Instruct\" && this.raidState.raiders[this.targetID].lastMove !== undefined) {\n            if (!this.raidState.raiders[this.targetID].isCharging && !this.raidState.raiders[this.targetID].isRecharging && !chargeMoves.includes(this.raidState.raiders[this.targetID].lastMove?.name || \"\")) {\n                this._instructed = true;\n                this._raiderMoveID = this.targetID;\n                this._raiderMoveTarget = this.raidState.raiders[this._raiderMoveID].lastTarget!;\n                if (this._raiderMoveTarget === this.targetID) { this._raiderMoveTarget = this._raiderMoveID; }\n                this._raiderMoveData = this.raidState.raiders[this.targetID].lastMove!\n                this._raiderMove = new Move(9, this._raiderMoveData.name, this.raiderOptions);\n                if (this.raiderOptions.crit) { this._raiderMove.isCrit = true; }\n                if (this.raiderOptions.hits !== undefined) this._raiderMove.hits = this.raiderOptions.hits;\n            }\n        // Copycat\n        } else if (this.raiderMoveData.name === \"Copycat\") {\n            if (this._raidState.lastMovedID !== undefined) {\n                const lastMoveUser = this.raidState.getPokemon(this._raidState.lastMovedID);\n                this._raiderMoveTarget = 0; // always target the boss, when applicable?\n                this._raiderMoveData = lastMoveUser.lastMove!;\n                this._raiderMove = new Move(9, this._raiderMoveData.name, this.raiderOptions);\n                if (this.raiderOptions.crit) this._raiderMove.isCrit = true;\n                if (this.raiderOptions.hits !== undefined) this._raiderMove.hits = this.raiderOptions.hits;\n            }\n        // Force the move to be the last move used for Choice Lock / Encore\n        } else if (isRegularMove(this._raiderMove.name) && (this._raider.isChoiceLocked || this._raider.isEncore) && this._raider.lastMove !== undefined && this._raider.lastMove.name !== \"(No Move)\") {\n            this._raiderMoveData = this.raidState.raiders[this.raiderID].lastMove!;\n            this._raiderMove = new Move(9, this._raiderMoveData.name, this.raiderOptions);\n            if (this.raiderOptions.crit) this._raiderMove.isCrit = true;\n            if (this.raiderOptions.hits !== undefined) this._raiderMove.hits = this.raiderOptions.hits;\n            this._raiderMoveUsed = this._raiderMoveData.name;\n        } \n    }\n\n    private setTurnOrder() {\n        this._raider = this._raidState.raiders[this.raiderID];\n        this._boss = this._raidState.raiders[0];\n\n        this.modifyMovePriorityByAbility(this.raiderMoveData, this._raider);\n        this.modifyMovePriorityByAbility(this.bossMoveData, this._boss);\n\n        // first compare priority\n        const raiderPriority = this.raiderMoveData.priority || this._raiderMove.priority;\n        const bossPriority = this.bossMoveData.priority || this._bossMove.priority;\n        if (raiderPriority > bossPriority) {\n            this._raiderMovesFirst = true;\n        } else if (raiderPriority < bossPriority) {\n            this._raiderMovesFirst = false;\n        } else {\n            // if priority is the same, compare speed\n            const raiderMM = this._raider.hasAbility(\"Mycelium Might\") && this._raiderMove.category === \"Status\";\n            const bossMM = this._boss.hasAbility(\"Mycelium Might\") && this._bossMove.category === \"Status\";\n            if (raiderMM && !bossMM) {\n                this._raiderMovesFirst = false;\n            } else if (bossMM && !raiderMM) {\n                this._raiderMovesFirst = true;\n            } else {\n                const raiderSpeed = this._raider.effectiveSpeed;\n                const bossSpeed = this._boss.effectiveSpeed;\n    \n                const bossField = this._raidState.fields[0];\n                this._raiderMovesFirst = bossField.isTrickRoom ? (raiderSpeed < bossSpeed) : (raiderSpeed > bossSpeed);\n            }\n        }\n    }\n\n    private modifyMovePriorityByAbility(moveData: MoveData, raider: Raider) {\n        const ability = raider.ability;\n        if (!raider.abilityNullified) {\n            switch (ability) {\n                case \"Prankster\": // do dark-type prankster failure elsewhere\n                    if (moveData.priority !== undefined && pranksterMoves.includes(moveData.name)) {\n                        moveData.priority += 1;\n                    }\n                    break;\n                case \"Gale Wings\":\n                    if (moveData.priority !== undefined && raider.curHP() === raider.maxHP() && moveData.type === \"Flying\") {\n                        moveData.priority += 1;\n                    }\n                    break;\n                case \"Triage\": // Comfey's signature ability\n                    if (moveData.priority !== undefined && triageMoves.includes(moveData.name)) {\n                        moveData.priority += 3;\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n\n    private applyEndOfTurnDamage() {\n        if (this._isEndOfFullTurn) {\n            for (const pokemon of this._raidState.raiders) {\n                if (pokemon.originalCurHP > 0) {\n                    const moveField = pokemon.field.clone();\n                    moveField.defenderSide = pokemon.field.attackerSide;\n                    const eot = getEndOfTurn(gen, this._raidState.raiders[0], pokemon, dummyMove, moveField);\n                    if (eot.damage) {\n                        eot.damage = absoluteFloor(eot.damage / ((pokemon.bossMultiplier || 100) / 100));\n                        const initialHP = pokemon.originalCurHP;\n                        this._raidState.applyDamage(pokemon.id, -eot.damage);\n                        const finalHP = pokemon.originalCurHP;\n                        const initialPercent = Math.floor(initialHP / pokemon.maxHP() * 1000)/10;;\n                        const finalPercent = Math.floor(finalHP / pokemon.maxHP() * 1000)/10;\n                        this._endFlags.push(pokemon.role + \" —  HP: \" + initialPercent + \"% → \" + finalPercent + \"% after \" + eot.texts.join(\", \"));\n                    }\n                }\n            }\n        }\n    }\n\n    private applyEndOfTurnItemEffects() {\n        for (const pokemon of this._raidState.raiders) {\n            // Ailment-inducing Items\n            if (this._isEndOfFullTurn && (pokemon.status === undefined || pokemon.status === \"\")) {\n                switch (pokemon.item) {\n                    case \"Flame Orb\":\n                        this._raidState.applyStatus(pokemon.id, \"brn\", pokemon.id, false, true);\n                        if (pokemon.status as StatusName === \"brn\") {\n                            this._result2.flags[pokemon.id].push(\"brn inflicted\");\n                        }\n                        break;\n                    case \"Toxic Orb\":\n                        this._raidState.applyStatus(pokemon.id, \"tox\", pokemon.id, false, true);\n                        if (pokemon.status as StatusName === \"tox\") {\n                            this._result2.flags[pokemon.id].push(\"tox inflicted\");\n                        }\n                        break;\n                    default: break\n                }\n            }\n        }\n    }\n\n    private countdownDelayedMoves() {\n        for (let id of [0, this.raiderID]) { // Not worrying about speed order for now\n            const pokemon = this._raidState.raiders[id];\n            if (pokemon.delayedMoveCounter) {\n                pokemon.delayedMoveCounter--;\n                if (pokemon.delayedMoveCounter === 0) {\n                    if (pokemon.originalCurHP > 0) {\n                        const delayedMove = new RaidMove(\n                            pokemon.delayedMove!,\n                            new Move(gen, pokemon.delayedMove!.name),\n                            this._raidState,\n                            pokemon.delayedMoveSource!,\n                            pokemon.id,\n                            pokemon.delayedMoveSource!,\n                            true,\n                            pokemon.delayedMoveOptions!,\n                            false,\n                            false,\n                            false,\n                            false,\n                            true,\n                        );\n                        const delayedMoveResult = delayedMove.result();\n                        this._raidState = delayedMoveResult.state;\n                        this._delayedResults.push(delayedMoveResult);\n                    }\n                    pokemon.delayedMove = undefined;\n                    pokemon.delayedMoveSource = undefined;\n                    pokemon.delayedMoveCounter = undefined;\n                }\n            }\n        }\n    }\n\n    private applyEndOfTurnAbilityEffects() {\n        // things that happen at the end of each move for raiders\n        for (const id of [0, this.raiderID]) {\n            const pokemon =  this._raidState.raiders[id];\n            if (!pokemon.abilityNullified && (pokemon.id !== 0 || this._isEndOfFullTurn) && (pokemon.originalCurHP > 0)) {\n                switch (pokemon.ability) {\n                    case \"Slow Start\": \n                        if (pokemon.slowStartCounter) {\n                            pokemon.slowStartCounter--;\n                            if (pokemon.slowStartCounter === 0) {\n                                pokemon.abilityOn = false;\n                                this._endFlags.push(pokemon.role + \" — Slow Start ended\");\n                            }\n                        }\n                        break;\n                    case \"Hunger Switch\":\n                        if (this._raidState.raiders[this.raiderID].species.name === \"Morpeko\") {\n                            this._raidState.raiders[this.raiderID].changeForm(\"Morpeko-Hangry\" as SpeciesName);\n                        } else if (this._raidState.raiders[this.raiderID].species.name === \"Morpeko-Hangry\") {\n                            this._raidState.raiders[this.raiderID].changeForm(\"Morpeko\" as SpeciesName);\n                        }\n                        break;\n                    default: break;\n                }\n            }\n        }\n        // things that happen at the end of 4-move turns\n        for (const pokemon of this._raidState.raiders) {\n            if (!pokemon.abilityNullified && this._isEndOfFullTurn && pokemon.originalCurHP > 0) {\n                switch (pokemon.ability) {\n                    case \"Speed Boost\":\n                        if (pokemon.lastMove) {\n                            const origSpe = pokemon.boosts.spe || 0;\n                            this._raidState.applyStatChange(pokemon.id, {\"spe\": 1}, true, pokemon.id, false);\n                            this._endFlags.push(pokemon.role + \" — Spe: \" + origSpe + \"->\" + pokemon.boosts.spe! + \" (Speed Boost)\");\n                        }\n                        break;\n                    case \"Moody\":\n                        if (pokemon.lastMove) {\n                            pokemon.randomBoosts += 1;\n                            this._endFlags.push(pokemon.role + \" — Moody boosts one stat by two and lowers another by one\");\n                        }\n                        break;\n                    case \"Hydration\":\n                        pokemon.status = \"\";\n                        break;\n                    case \"Harvest\": \n                        if (pokemon.field.hasWeather(\"Sun\") && !pokemon.item && (pokemon.lastConsumedItem || \"\").includes(\"Berry\")) {\n                            this._raidState.receiveItem(pokemon.id, pokemon.lastConsumedItem!);\n                            this._endFlags.push(pokemon.role + ` — ${pokemon.lastConsumedItem} restored (Harvest)`);\n                        }\n                        break;\n                    case \"Cud Chew\":\n                        if (pokemon.isCudChew) {\n                            pokemon.isCudChew--;\n                            if (pokemon.isCudChew === 0 && (pokemon.lastConsumedItem || \"\").includes(\"Berry\")) {\n                                this._raidState.consumeItem(pokemon.id, pokemon.lastConsumedItem!, false);\n                                this._endFlags.push(pokemon.role + \" — \" + pokemon.lastConsumedItem + \" consumed via Cud Chew\");\n                            }\n                        }\n                        break;\n                    default: break;\n                }\n            }\n        }\n    }\n\n    private removeProtection() {\n        const fields = this._raidState.fields;\n        fields[this.raiderID].attackerSide.isProtected = false;\n        fields[0].attackerSide.isProtected = false;\n        for (let field of fields) {\n            if (this._isEndOfFullTurn) {\n                field.attackerSide.isWideGuard = false;\n                field.attackerSide.isQuickGuard = false;\n            }\n        }\n    }\n\n    private countDownFieldEffects() {\n        if (this._isEndOfFullTurn) {\n            const fields = this._raidState.fields;\n            for (let field of fields) {\n                // global effects\n                field.terrainTurnsRemaining = Math.max(0, (field.terrainTurnsRemaining || 0) - 1);\n                field.terrain = field.terrainTurnsRemaining ? field.terrain : undefined;\n                field.weatherTurnsRemaining = Math.max(0, (field.weatherTurnsRemaining || 0) - 1);\n                field.weather = field.weatherTurnsRemaining ? field.weather : undefined;\n                field.isGravity = Math.max(0, field.isGravity - 1);\n                field.isTrickRoom = Math.max(0, field.isTrickRoom - 1);\n                field.isMagicRoom = Math.max(0, field.isMagicRoom - 1);\n                field.isWonderRoom = Math.max(0, field.isWonderRoom - 1);\n                // single-side effects\n                field.attackerSide.isReflect = Math.max(0, field.attackerSide.isReflect - 1);\n                field.attackerSide.isLightScreen = Math.max(0, field.attackerSide.isLightScreen - 1);\n                field.attackerSide.isAuroraVeil = Math.max(0, field.attackerSide.isAuroraVeil - 1);\n                field.attackerSide.isMist = Math.max(0, field.attackerSide.isMist - 1);\n                field.attackerSide.isSafeguard = Math.max(0, field.attackerSide.isSafeguard - 1);\n                field.attackerSide.isTailwind = Math.max(0, field.attackerSide.isTailwind - 1);\n                field.attackerSide.isAtkCheered = Math.max(0, field.attackerSide.isAtkCheered - 1);\n                field.attackerSide.isDefCheered = Math.max(0, field.attackerSide.isDefCheered - 1);\n            }\n            /// add flags for effects that have ended\n            // global\n            if (this.raidState.fields[0].weather && !fields[0].weather) { this._endFlags.push(this.raidState.fields[0].weather! + \" ended\"); }\n            if (this.raidState.fields[0].terrain && !fields[0].terrain) { this._endFlags.push(this.raidState.fields[0].terrain! + \" terrain ended\"); }\n            if (this.raidState.fields[0].isGravity && !fields[0].isGravity) { this._endFlags.push(\"Gravity ended\"); }\n            if (this.raidState.fields[0].isTrickRoom && !fields[0].isTrickRoom) { this._endFlags.push(\"Trick Room ended\"); }\n            if (this.raidState.fields[0].isMagicRoom && !fields[0].isMagicRoom) { this._endFlags.push(\"Magic Room ended\"); }\n            if (this.raidState.fields[0].isWonderRoom && !fields[0].isWonderRoom) { this._endFlags.push(\"Wonder Room ended\"); }\n            // boss\n            if (this.raidState.fields[0].attackerSide.isReflect && !fields[0].attackerSide.isReflect) { this._endFlags.push(\"Reflect ended\"); }\n            if (this.raidState.fields[0].attackerSide.isLightScreen && !fields[0].attackerSide.isLightScreen) { this._endFlags.push(\"Light Screen ended\"); }\n            if (this.raidState.fields[0].attackerSide.isAuroraVeil && !fields[0].attackerSide.isAuroraVeil) { this._endFlags.push(\"Aurora Veil ended\"); }\n            if (this.raidState.fields[0].attackerSide.isMist && !fields[0].attackerSide.isMist) { this._endFlags.push(\"Mist ended\"); }\n            if (this.raidState.fields[0].attackerSide.isSafeguard && !fields[0].attackerSide.isSafeguard) { this._endFlags.push(\"Safeguard ended\"); }\n            if (this.raidState.fields[0].attackerSide.isTailwind && !fields[0].attackerSide.isTailwind) { this._endFlags.push(\"Tailwind ended\"); }\n            // raiders\n            if (this.raidState.fields[1].attackerSide.isReflect && !fields[1].attackerSide.isReflect) { this._endFlags.push(\"Reflect ended\"); }\n            if (this.raidState.fields[1].attackerSide.isLightScreen && !fields[1].attackerSide.isLightScreen) { this._endFlags.push(\"Light Screen ended\"); }\n            if (this.raidState.fields[1].attackerSide.isAuroraVeil && !fields[1].attackerSide.isAuroraVeil) { this._endFlags.push(\"Aurora Veil ended\"); }\n            if (this.raidState.fields[1].attackerSide.isMist && !fields[1].attackerSide.isMist) { this._endFlags.push(\"Mist ended\"); }\n            if (this.raidState.fields[1].attackerSide.isSafeguard && !fields[1].attackerSide.isSafeguard) { this._endFlags.push(\"Safeguard ended\"); }\n            if (this.raidState.fields[1].attackerSide.isTailwind && !fields[1].attackerSide.isTailwind) { this._endFlags.push(\"Tailwind ended\"); }\n            if (this.raidState.fields[1].attackerSide.isAtkCheered && !fields[1].attackerSide.isAtkCheered) { this._endFlags.push(\"Attack Cheer ended\"); }\n            if (this.raidState.fields[1].attackerSide.isDefCheered && !fields[1].attackerSide.isDefCheered) { this._endFlags.push(\"Defense Cheer ended\"); }\n        }\n    }\n\n    private applyEndOfTurnMoveEffects() {\n        // end-of-turn move effects\n        for (const pokemon of this._raidState.raiders) {\n            // syrup bomb\n            if (pokemon.syrupBombDrops && this._isEndOfFullTurn) {\n                const origSpe = pokemon.boosts.spe || 0;\n                this._raidState.applyStatChange(pokemon.id, {\"spe\": -1}, false, pokemon.id, false);\n                this._endFlags.push(pokemon.role + \" — Spe: \" + origSpe + \"->\" + pokemon.boosts.spe! + \" (Syrup Bomb)\");\n                pokemon.syrupBombDrops--;\n            }\n            // yawn\n            if (pokemon.isYawn && this._isEndOfFullTurn) {\n                pokemon.isYawn--;\n                if (pokemon.isYawn === 0) {\n                    const sleepTurns = pokemon.id === 0 ? (this.bossOptions.roll === \"max\" ? 1 : (this.bossOptions.roll === \"min\" ? 3 : 2)) : \n                                                (this.raiderOptions.roll === \"max\" ? 1 : (this.raiderOptions.roll === \"min\" ? 3 : 2));\n                    this._raidState.applyStatus(pokemon.id, \"slp\", pokemon.id, false);\n                    if (pokemon.status === \"slp\") {\n                        pokemon.isSleep = sleepTurns;\n                        this._endFlags.push(pokemon.name + \" fell asleep!\");\n                    }\n                    pokemon.volatileStatus = pokemon.volatileStatus.filter((status) => status !== \"yawn\");\n                }\n            }\n        }\n    }\n\n    private applyEndOfTurnStatusEffects() {\n        for (let pokemon of this._raidState.raiders) {\n            // Move-selection-related countdowns (TO DO: check if these are turn-based or not)\n            if (pokemon.isDisable) { pokemon.isDisable--; }\n            if (!pokemon.isDisable && pokemon.disabledMove) { pokemon.disabledMove = undefined; }\n            if (pokemon.isEncore) { pokemon.isEncore--; }\n            if (pokemon.isThroatChop) { pokemon.isThroatChop--; }\n            // Freeze thawing checks (I don't plan on checking to see when these are actually applied)\n            if (pokemon.isFrozen === 0 && pokemon.hasStatus(\"frz\")) {\n                pokemon.status = \"\";\n                this._endFlags.push(pokemon.role + \" thawed!\");\n            }\n        }\n    }\n\n    private countDownAbilityNullification() {\n        // count down nullified ability counter\n        const pokemon = this._raidState.getPokemon(this.raiderID);\n        if (pokemon.abilityNullified) {\n            pokemon.abilityNullified!--;\n            let abilityRestored = false;\n            let abilityReactivated = false;\n            if (pokemon.abilityNullified === 0) { // restore ability after a full turn\n                pokemon.abilityNullified = undefined;\n                this._raidState.addAbilityFieldEffect(pokemon.id, pokemon.ability, true);\n                abilityRestored = pokemon.ability !== \"(No Ability)\";\n                abilityReactivated = !!pokemon.abilityOn;\n                // Not sure if we need to do anything special here to trigger ability reactivation\n                if (pokemon.ability && (pokemon.ability !== \"(No Ability)\")) {\n                    if (abilityRestored && abilityReactivated) {\n                        this._endFlags.push(pokemon.role + \" — \" + pokemon.ability + \" restored and reactivated\");\n                    } else if (abilityRestored) {\n                        this._endFlags.push(pokemon.role + \" — \" + pokemon.ability + \" restored\");\n                    } else if (abilityReactivated) {\n                        this._endFlags.push(pokemon.role + \" — \" + pokemon.ability + \" reactivated\");\n                    }\n                }\n            }\n        }\n    }\n}","import { Move, Generations } from \"../calc\";\nimport { MoveName } from \"../calc/data/interface\";\nimport { TurnGroupInfo } from \"./interface\";\nimport { RaidState } from \"./RaidState\";\nimport { RaidMove } from \"./RaidMove\";\nimport { RaidTurn, RaidTurnResult } from \"./RaidTurn\";\n\nconst gen = Generations.get(9);\n\nexport type RaidBattleInfo = {\n    name?: string;\n    notes?: string;\n    credits?: string;\n    startingState: RaidState;\n    groups: TurnGroupInfo[];\n}\n\nexport type RaidBattleResults = {\n    endState: RaidState;\n    turnResults: RaidTurnResult[]; \n    turnZeroFlags: string[][];\n    turnZeroOrder: number[];\n    turnZeroState: RaidState;\n}\n\nexport class RaidBattle {\n    startingState: RaidState;\n    groups: TurnGroupInfo[];\n\n    _continuing!: boolean\n\n    _state!: RaidState;\n    _turnResults!: RaidTurnResult[];\n\n    _turnZeroFlags!: string[][];\n    _turnZeroOrder!: number[];\n\n    constructor(info: RaidBattleInfo, result: RaidBattleResults | null = null) {\n        if (result) {\n            this.startingState = result.endState;\n            this.groups = info.groups;\n            this._turnZeroFlags = result.turnZeroFlags;\n            this._turnZeroOrder = result.turnZeroOrder;\n            this._turnResults = result.turnResults;\n            this._continuing = true;\n        } else {\n            this.startingState = info.startingState;\n            this.groups = info.groups;\n            this._continuing = false;\n            this._turnResults = [];\n        }\n    }\n\n    public result(): RaidBattleResults {\n        try {\n            this._state = this.startingState.clone();\n            if (!this._continuing) {\n                this.calculateTurnZero();\n            }\n            const t0 = this._state.clone();\n            this.calculateTurns();\n            return {\n                endState: this._state,\n                turnResults: this._turnResults,\n                turnZeroFlags: this._turnZeroFlags,\n                turnZeroOrder: this._turnZeroOrder,\n                turnZeroState: t0\n            }\n        } catch (e) {\n            console.error(e);\n            return {\n                endState: this.startingState.clone(),\n                turnResults: [],\n                turnZeroFlags: [[],[],[],[],[],[],[],[],[],[]],\n                turnZeroOrder: [0,1,2,3,4],\n                turnZeroState: this.startingState.clone()\n            }\n        }\n    }\n\n    private calculateTurns(){\n        let turnCounter = 0;\n        if (this._continuing && this._turnResults.length > 0) {\n            const previousTurn = this._turnResults[this._turnResults.length - 1];\n            turnCounter = previousTurn.turnNumber + (previousTurn.moveInfo.moveData.name !== \"(No Move)\" ? 1 : 0);\n        }\n        for (let i = 0; i < this.groups.length; i++) {\n            const turns = this.groups[i].turns;\n            const repeats = this.groups[i].repeats || 1;\n            for (let j = 0; j < repeats; j++) {\n                for (let k = 0; k < turns.length; k++) {\n                    const turn = turns[k];\n                    const result = new RaidTurn(this._state, turn, turnCounter).result();\n                    this._turnResults.push(result);\n                    this._state = result.state;\n                    if(turn.moveInfo.moveData.name !== \"(No Move)\") {\n                        turnCounter++;\n                    }\n                }\n            }\n        }\n    }\n\n    private calculateTurnZero(){\n        this._turnZeroFlags = [[],[],[],[],[],[],[],[],[],[]];  // each pokemon gets two sets of flags, one for switch-in effects, one for item/ability effects as a result of the first round of effects\n        // sort pokemon by speed to see what happens first\n        const speeds = this._state.raiders.map(raider => raider.effectiveSpeed);\n        const speedOrder = speeds.map((speed, index) => [speed, index]).sort((a, b) => b[0] - a[0]).map(pair => pair[1]);\n        this._turnZeroOrder = speedOrder;\n        // activate switch-in effects\n        for (let id of speedOrder) {\n            const flags = this._state.switchIn(id);\n            for (let i=0; i<5; i++) {\n                this._turnZeroFlags[i] = this._turnZeroFlags[i].concat(flags[i]);\n            }\n        }\n        // check for item/ability activation by executing dummy moves\n        for (let id of speedOrder) {\n            const moveResult = new RaidMove(\n                {name: \"(No Move)\" as MoveName, target: \"user\"}, \n                new Move(gen, \"(No Move)\"), \n                this._state,\n                id,\n                id,\n                id,\n                true,\n                ).result();\n            this._state = moveResult.state;\n            for (let i=0; i<5; i++) {\n                this._turnZeroFlags[i+5] = this._turnZeroFlags[i+5].concat(moveResult.flags[i]);\n            }\n        } \n    }\n}","import { Field, Pokemon, Generations } from \"../calc\";\nimport { MoveName, StatsTable, StatIDExceptHP, AbilityName, ItemName, TypeName, SpeciesName } from \"../calc/data/interface\";\nimport { extend } from '../calc/util';\nimport { safeStatStage, getModifiedSpeed } from \"./util\";\nimport * as State from \"./interface\";\nimport { CumulativeRolls } from \"./rolls\";\n\nconst gen = Generations.get(9);\n\nexport class Raider extends Pokemon implements State.Raider {\n    id: number;\n    role: string;\n    shiny: boolean;\n    isAnyLevel: boolean;        // keeps track of whether or not the Raider should be displayed as having \"Any\" level for display/graphic purposes\n    field: Field;               // each pokemon gets its own field to deal with things like Helping Hand and Protect\n    moveData: State.MoveData[];   \n    extraMoves?: MoveName[];    // for special boss actions\n    extraMoveData?: State.MoveData[];\n\n    cumDamageRolls: CumulativeRolls;\n    koChance: number;\n\n    isEndure?: boolean;         // store that a Pokemon can't faint until its next move\n    isTaunt?: number;           // store number of turns that a Pokemon can't use status moves\n    isSleep?: number;           // store number of turns that a Pokemon is asleep\n    isYawn?: number;            // turn countdown until yawn takes effect\n    yawnSource?: number;        // id of the pokemon that inflicted the user with Yawn\n    isFrozen?: number;          // store number of turns that a Pokemon is frozen\n\n    isCharging?: boolean;       // indicates that a Pokemon is charging a move (e.g. Solar Beam)\n    isRecharging?: boolean;     // indicates that a Pokemon is recharging from a move (e.g. Hyper Beam)\n\n    lastMove?: State.MoveData;  // stored for Instruct and Copycat\n    lastTarget?: number;        // stored for Instruct and Copycat\n    lastAccuracy?: number;      // stored for accuracy of instructed moves\n    moveRepeated?: number;      // stored for boost from Metronome, Fury Cutter, etc\n    teraCharge: number;         // stored for Tera activation\n\n    isChoiceLocked?: boolean;   // indicates that a Pokemon is locked into a move\n    isEncore?: number;          // store number of turns that a Pokemon is encored\n    isTorment?: boolean;        \n    isDisable?: number;         // store number of turns that a Pokemon is disabled\n    disabledMove?: MoveName;    // store the move that is disabled\n    isThroatChop?: number;     \n\n    shieldActivateHP?: number;\n    shieldBroken?: boolean;\n    shieldBreakStun?: boolean[];\n    substitute?: number;\n\n    originalAbility: AbilityName | \"(No Ability)\";   // stores ability when nullified\n\n    syrupBombDrops?: number;  // stores the number of speed drops left to be applied from Syrup Bomb\n\n    lastConsumedItem?: ItemName; // stores the last berry consumed by the raider (via normal consuption of Fling)\n    isCudChew?: number;          // store number of \"turns\" (each made of 4 moves) until Cud Chew activates\n\n    isTransformed?: boolean; // indicates that the pokemon has been transformed by Transform or Imposter\n    isChangedForm?: boolean; // indicates that the pokemon has been changed form (e.g. Eiscue, Terapagos, Minior)\n    originalSpecies?: SpeciesName; // stores the state of the pokemon before transformation\n    originalMoves?: State.MoveData[]; // stores the moves of the pokemon before transformation or Mimic\n    originalFormAbility?: AbilityName | \"(No Ability)\"; // stores the ability of the pokemon before transformation\n\n    slowStartCounter?: number; // stores the number of turns left for Slow Start\n\n    delayedMoveCounter?: number;\n    delayedMoveSource?: number;\n    delayedMoveOptions?: State.RaidMoveOptions;\n    delayedMove?: State.MoveData;\n\n    constructor(\n        id: number, \n        role: string, \n        shiny: boolean | undefined,\n        isAnyLevel: boolean | undefined,\n        field: Field, \n        pokemon: Pokemon, \n        moveData: State.MoveData[], \n        extraMoves: MoveName[] = [], \n        extraMoveData: State.MoveData[] = [],\n        cumDamageRolls: CumulativeRolls | undefined = undefined,\n        koChance: number = 0,\n        isEndure: boolean = false, \n        isTaunt: number = 0,\n        isSleep: number = 0,\n        isYawn: number = 0,\n        yawnSource: number | undefined = undefined,\n        isFrozen: number = 0,\n        isCharging: boolean = false,\n        isRecharging: boolean = false,\n        lastMove: State.MoveData | undefined = undefined, \n        lastTarget: number | undefined = undefined, \n        lastAccuracy: number | undefined = undefined,\n        moveRepeated: number | undefined = undefined,\n        teraCharge: number | undefined = 0, \n        choiceLocked: boolean = false,\n        isEncore: number | undefined = 0,\n        isTorment: boolean | undefined = false,\n        isDisable: number | undefined = 0,\n        disabledMove: MoveName | undefined = undefined,\n        isThroatChop: number | undefined = 0,\n        shieldActivateHP: number | undefined = undefined, \n        shieldBroken: boolean | undefined = undefined, \n        shieldBreakStun: boolean[] | undefined = undefined,\n        substitute: number | undefined = undefined,\n        originalAbility: AbilityName | \"(No Ability)\" | undefined = undefined,\n        syrupBombDrops: number | undefined = 0,\n        lastConsumedItem: ItemName | undefined = undefined,\n        isCudChew: number | undefined = 0,\n        isTransformed: boolean | undefined = undefined,\n        isChangedForm: boolean | undefined = undefined,\n        originalSpecies: SpeciesName | undefined = undefined,\n        originalMoves: State.MoveData[] | undefined = undefined,\n        originalFormAbility: AbilityName | \"(No Ability)\" | undefined = undefined,\n        slowStartCounter: number | undefined = undefined,\n        delayedMoveCounter: number | undefined = undefined,\n        delayedMoveSource: number | undefined = undefined,\n        delayedMoveOptions: State.RaidMoveOptions | undefined = undefined,\n        delayedMove: State.MoveData | undefined = undefined,\n    ) {\n        super(pokemon.gen, pokemon.name, {...pokemon})\n        this.id = id;\n        this.role = role;\n        this.shiny = !!shiny;\n        this.isAnyLevel = !!isAnyLevel;\n        this.field = field;\n        this.moveData = moveData;\n        this.extraMoves = extraMoves;\n        this.extraMoveData = extraMoveData;\n        this.cumDamageRolls = cumDamageRolls || new CumulativeRolls();\n        this.koChance = koChance;\n        this.isEndure = isEndure;\n        this.isTaunt = isTaunt;\n        this.isSleep = isSleep;\n        this.isYawn = isYawn;\n        this.yawnSource = yawnSource;\n        this.isFrozen = isFrozen;\n        this.isCharging = isCharging;\n        this.isRecharging = isRecharging;\n        this.lastMove = lastMove;\n        this.lastTarget = lastTarget;\n        this.lastAccuracy = lastAccuracy;\n        this.moveRepeated = moveRepeated;\n        this.teraCharge = teraCharge;\n        this.isChoiceLocked = choiceLocked;\n        this.isEncore = isEncore;\n        this.isTorment = isTorment;\n        this.isDisable = isDisable;\n        this.disabledMove = disabledMove;\n        this.isThroatChop = isThroatChop;\n        this.shieldActivateHP = shieldActivateHP;\n        this.shieldBroken = shieldBroken;\n        this.shieldBreakStun = shieldBreakStun;\n        this.substitute = substitute;\n        this.originalAbility = originalAbility || pokemon.ability || \"(No Ability)\";\n        this.syrupBombDrops = syrupBombDrops;\n        this.lastConsumedItem = lastConsumedItem;\n        this.isCudChew = isCudChew;\n        this.isTransformed = isTransformed;\n        this.isChangedForm = isChangedForm;\n        this.originalSpecies  = originalSpecies;\n        this.originalMoves = originalMoves;\n        this.originalFormAbility = originalFormAbility || pokemon.ability || \"(No Ability)\";\n        this.slowStartCounter = slowStartCounter;\n        this.delayedMoveCounter = delayedMoveCounter;\n        this.delayedMoveSource = delayedMoveSource;\n        this.delayedMoveOptions = delayedMoveOptions;\n        this.delayedMove = delayedMove;\n    }\n\n    clone(): Raider {\n        return new Raider(\n            this.id, \n            this.role, \n            this.shiny,\n            this.isAnyLevel,\n            this.field.clone(),\n            new Pokemon(this.gen, this.name, {\n                level: this.level,\n                bossMultiplier: this.bossMultiplier,\n                statMultipliers: this.statMultipliers,\n                ability: this.ability,\n                abilityOn: this.abilityOn,\n                isDynamaxed: this.isDynamaxed,\n                dynamaxLevel: this.dynamaxLevel,\n                isSaltCure: this.isSaltCure,\n                alliesFainted: this.alliesFainted,\n                boostedStat: this.boostedStat,\n                usedBoosterEnergy: this.usedBoosterEnergy,\n                isIngrain: this.isIngrain,\n                isSmackDown: this.isSmackDown,\n                item: this.item,\n                gender: this.gender,\n                nature: this.nature,\n                rawStats: this.rawStats,\n                stats: this.stats,\n                ivs: extend(true, {}, this.ivs),\n                evs: extend(true, {}, this.evs),\n                boosts: extend(true, {}, this.boosts),\n                isPumped: this.isPumped,\n                isMicle: this.isMicle,\n                isMinimize: this.isMinimize,\n                randomBoosts: this.randomBoosts,\n                stockpile: this.stockpile,\n                originalCurHP: this.originalCurHP,\n                status: this.status,\n                volatileStatus: this.volatileStatus.slice(),\n                teraType: this.teraType,\n                isTera: this.isTera,\n                shieldData: this.shieldData,\n                shieldActive: this.shieldActive,\n                toxicCounter: this.toxicCounter,\n                hitsTaken: this.hitsTaken,\n                timesFainted: this.timesFainted,\n                types: this.types,\n                hasExtraType: this.hasExtraType,\n                // lastMoveFailed: this.lastMoveFailed,\n                moves: this.moves.slice(),\n                abilityNullified: this.abilityNullified,\n                permanentAtkCheers: this.permanentAtkCheers,\n                permanentDefCheers: this.permanentDefCheers,\n                overrides: this.species,\n            }),\n            this.moveData,\n            this.extraMoves,\n            this.extraMoveData,\n            this.cumDamageRolls.clone(),\n            this.koChance,\n            this.isEndure,\n            this.isTaunt,\n            this.isSleep,\n            this.isYawn,\n            this.yawnSource,\n            this.isFrozen,\n            this.isCharging,\n            this.isRecharging,\n            this.lastMove,\n            this.lastTarget,\n            this.lastAccuracy,\n            this.moveRepeated,\n            this.teraCharge,\n            this.isChoiceLocked,\n            this.isEncore,\n            this.isTorment,\n            this.isDisable,\n            this.disabledMove,\n            this.isThroatChop,\n            this.shieldActivateHP,\n            this.shieldBroken,\n            this.shieldBreakStun,\n            this.substitute,\n            this.originalAbility,\n            this.syrupBombDrops,\n            this.lastConsumedItem,\n            this.isCudChew,\n            this.isTransformed,\n            this.isChangedForm,\n            this.originalSpecies,\n            this.originalMoves,\n            this.originalFormAbility,\n            this.slowStartCounter,\n            this.delayedMoveCounter,\n            this.delayedMoveSource,\n            this.delayedMoveOptions,\n            this.delayedMove,\n        )\n    }\n\n    public get boostCoefficient(): number {\n        const hasSimple = this.hasAbility(\"Simple\");\n        const hasContrary = this.hasAbility(\"Contrary\");\n        return hasSimple ? 2 : hasContrary ? -1 : 1;\n    }\n\n    public get effectiveSpeed(): number {\n        // moved to util.ts for use with R\n        return getModifiedSpeed(this);\n    }\n\n    public applyDamage(damage: number, damageRolls?: Map<number,number>, ignoreForRolls?: boolean): number { \n        this.originalCurHP = Math.min(this.maxHP(), Math.max(0, this.originalCurHP - damage));\n        if (this.isEndure && this.originalCurHP === 0) {\n            this.originalCurHP = 1;\n        }\n        if (!ignoreForRolls) {\n            const safeDamageRolls = damageRolls || new Map<number, number>();\n            if (safeDamageRolls.size === 0 && damage !== 0) {\n                safeDamageRolls.set(damage, 1);\n            }\n            this.addDamageRoll(safeDamageRolls);\n        }\n        return this.originalCurHP;\n    }\n\n    public applyStatChange(boosts: Partial<StatsTable>, ignoreAbility: boolean = false): StatsTable {\n        const diff: StatsTable = {hp: 0, atk: 0, def: 0, spa: 0, spd: 0, spe: 0, acc: 0, eva: 0};\n        for (let stat in boosts) {\n            const statId = stat as StatIDExceptHP;\n            const originalStat = this.boosts[statId] || 0;\n            this.boosts[statId] = safeStatStage(originalStat + (boosts[statId] || 0) * (ignoreAbility ? 1 : this.boostCoefficient))\n            diff[statId] = (this.boosts[statId] || 0) - originalStat;\n        }\n        return diff;\n    }\n\n    public loseItem() {\n        // Unburden\n        if (this.hasAbility(\"Unburden\") && this.item !== undefined) {\n            this.abilityOn = true;\n        }\n        if (this.hasItem(\"Choice Band\", \"Choice Specs\", \"Choice Scarf\")) {\n            this.isChoiceLocked = false;\n        }\n        this.item = undefined;\n    }\n\n    public activateTera(): boolean {\n        if (!this.isTera && this.teraCharge >= 3) {\n            this.isTera = true;\n            if (this.hasExtraType && this.types.length > 1) {\n                this.types = this.types.slice(0, this.types.length-1) as ([TypeName] | [TypeName, TypeName]);\n                this.hasExtraType = false;\n            }\n            if (this.name.includes(\"Ogerpon\")) {\n                if (this.name === \"Ogerpon\") {\n                    this.teraType = \"Grass\";\n                    this.ability = \"Embody Aspect (Teal)\" as AbilityName;\n                } else if (this.name === \"Ogerpon-Hearthflame\") {\n                    this.teraType = \"Fire\";\n                    this.ability = \"Embody Aspect (Hearthflame)\" as AbilityName;\n                } else if (this.name === \"Ogerpon-Wellspring\") {\n                    this.teraType = \"Water\"\n                    this.ability = \"Embody Aspect (Wellspring)\" as AbilityName;\n                } else { // (pokemmon.name === \"Ogerpon-Cornerstone\")\n                    this.teraType = \"Rock\"\n                    this.ability = \"Embody Aspect (Cornerstone)\" as AbilityName;\n                }\n                this.abilityOn = true;\n            } else if (this.name.includes(\"Terapagos\")) {\n                this.changeForm(\"Terapagos-Stellar\" as SpeciesName);\n                // this.ability = \"Teraform Zero\" as AbilityName; // Needs to be handled in the RaidState\n                this.teraType = \"Stellar\";\n            }\n            return true;\n        }\n        return false;\n    }\n\n    public checkShield() {\n        if (this.id !== 0) { return; }\n        if (!this.shieldData) { return; }\n        if (this.shieldBroken) { return; }\n        if (this.originalCurHP === 0) { return; }\n        if (this.shieldActivateHP === undefined) { // check for shield activation by damage\n            const activationHP = this.shieldData.hpTrigger / 100 * this.maxHP();\n            if (this.originalCurHP <= activationHP) {\n                this.shieldActive = true;\n                this.shieldActivateHP = this.originalCurHP;\n            }\n        } else { // check for shield breaking by damage\n            const breakHP = this.shieldActivateHP - (this.shieldData.shieldCancelDamage / 100 * this.maxHP());\n            if (this.originalCurHP < breakHP) {\n                this.shieldActive = false;\n                this.shieldBroken = true;\n                this.shieldBreakStun = [true, true, true, true];\n            }\n        }\n    }\n\n    public transformInto(pokemon: Raider) {\n        // make the transformation revertable on fainting\n        this.isTransformed = true;\n        this.originalSpecies = this.name;\n        this.originalMoves = this.moveData.slice();\n        // copy species details\n        this.name = pokemon.name;\n        this.species = pokemon.species;\n        this.weightkg = pokemon.weightkg;\n        this.rawStats = {...pokemon.rawStats, hp: this.rawStats.hp}; // HP is retained\n        this.types = pokemon.types.slice() as [TypeName] | [TypeName, TypeName];\n        this.hasExtraType = pokemon.hasExtraType;\n        // copy stats and moves\n        this.boosts = {...pokemon.boosts};\n        this.moves = pokemon.moves.slice();\n        this.moveData = pokemon.moveData.slice();\n        this.stats = {...pokemon.stats, hp: this.stats.hp}; // HP is retained\n        this.originalAbility = pokemon.ability as AbilityName;\n        // this.ability = pokemon.ability; // handle ability change in the RaidState\n    }\n\n    public changeForm(formName: SpeciesName) {\n        const newForm = new Pokemon(gen, formName, {level: this.level, ivs: this.ivs, evs: this.evs, nature: this.nature, bossMultiplier: this.bossMultiplier});\n        // make the form change revertable on fainting\n        this.isChangedForm = true;\n        this.originalSpecies = this.name;\n        this.originalMoves = this.moveData.slice();\n        // copy species details\n        this.name = formName;\n        this.species = newForm.species;\n        this.weightkg = newForm.weightkg;\n        this.rawStats = {...newForm.rawStats, hp: this.rawStats.hp}; // HP is retained\n        this.types = newForm.types.slice() as [TypeName] | [TypeName, TypeName];\n        this.hasExtraType = false;\n        // copy stats\n        this.stats = {...newForm.stats, hp: this.stats.hp}; // HP is retained\n    }\n\n    public mimicMove(move: State.MoveData, targetID: number) {\n        // if (targetID === 0) { return; } // ???\n        if (!this.originalMoves) {\n            this.originalMoves = this.moveData.slice();\n        }\n        const mimicIndex = this.moves.findIndex(m => m === \"Mimic\");\n        if (mimicIndex === -1) { return; }\n        this.moves[mimicIndex] = move.name;\n        this.moveData[mimicIndex] = {...move};\n        this.lastMove = move;\n        this.lastTarget = targetID;\n        this.moveRepeated = 0;\n    }\n\n    public sketchMove(move: State.MoveData, targetID: number) {\n        // if (targetID === 0) { return; } // ???\n        const sketchIndex = this.moves.findIndex(m => m === \"Sketch\");\n        if (sketchIndex === -1) { return; }\n        this.moves[sketchIndex] = move.name;\n        this.moveData[sketchIndex] = {...move};\n        this.lastMove = move;\n        this.lastTarget = targetID;\n        this.moveRepeated = 0;\n    }\n\n    public addDamageRoll(damageRolls: Map<number, number>) {\n        this.cumDamageRolls.addRolls(damageRolls, this);\n        this.koChance = this.cumDamageRolls.getKOChance(this.maxHP());\n    }\n}","import { Field, Generations, Pokemon, StatsTable, toID } from \"../calc\";\nimport { Raider } from \"./Raider\";\nimport { getModifiedStat, getQPBoostedStat } from \"../calc/mechanics/util\";\nimport * as State from \"./interface\";\nimport { AbilityName, ItemName, SpeciesName, StatIDExceptHP, StatusName, Terrain, TypeName, Weather } from \"../calc/data/interface\";\nimport persistentAbilities from \"../data/persistent_abilities.json\"\nimport { hasNoStatus, pokemonIsGrounded } from \"./util\";\nimport { CumulativeRolls } from \"./rolls\";\n\nconst gen = Generations.get(9);\n\nexport class RaidState implements State.RaidState{\n    raiders: Raider[];      // raiders[0] is the boss, while raiders 1-5 are the players\n    lastMovedID?: number;   // id of the last Pokemon to move\n\n    constructor(raiders: Raider[], lastMovedID?: number) {\n        this.raiders = raiders;\n        this.lastMovedID = lastMovedID;\n    }\n\n    clone(): RaidState {\n        return new RaidState(\n            this.raiders.map(raider => raider.clone()),\n            this.lastMovedID,\n        )\n    }\n\n    public get fields(): Field[] {\n        return this.raiders.map(raider => raider.field);\n    }\n\n    public getPokemon(id: number): Raider {\n        return this.raiders[id];\n    }\n\n    public applyDamage(id: number, damage: number, damageRolls: Map<number,number> | undefined = undefined, nHits: number = 0, isCrit: boolean = false, isSuperEffective: boolean = false, moveType?: TypeName, moveCategory?: \"Physical\" | \"Special\" | \"Status\" | undefined, blockSymbiosis: boolean = false, isWind: boolean = false, bypassSubstitute: boolean = false, isSheerForceBoosted = false) {\n        const pokemon = this.getPokemon(id);\n        const originalHP = pokemon.originalCurHP;\n        const originalDamageRolls = pokemon.cumDamageRolls.clone();\n        if (pokemon.originalCurHP === 0) {          // prevent healing KOd Pokemon, and there's no need to subtract damage from 0HP\n            if (damage !== 0 && damageRolls) {\n                pokemon.addDamageRoll(damageRolls); // but we should still record the damage rolls\n            }\n            return; \n        } \n\n        if (pokemon.substitute && !bypassSubstitute) {\n            pokemon.substitute = pokemon.substitute <= 0 ? undefined : pokemon.substitute - damage;\n        } else {\n            pokemon.applyDamage(damage, damageRolls);\n        }\n\n        const maxHP = pokemon.maxHP();\n        const opponents = id === 0 ? [1,2,3,4] : [0];\n        let unnerve = false;\n        let fainted = pokemon.originalCurHP <= 0;\n        for (let i of opponents) {\n            if (this.getPokemon(i).hasAbility(\"Unnerve\")) { unnerve = true; break; }\n        }\n        if (nHits > 0 && damage > 0) { // checks that the pokemon was attacked, and that the damage was not due to recoil or chip damage\n            if (damage > 0) {\n                pokemon.hitsTaken = pokemon.hitsTaken + 1;\n            }\n            // Item consumption / Ability Activation triggered by damage\n            if (pokemon.hasAbility(\"Ice Face\") && !pokemon.abilityOn && pokemon.name.includes(\"Eiscue\") && moveCategory === \"Physical\") {\n                pokemon.changeForm(\"Eiscue-Noice\" as SpeciesName);\n                pokemon.abilityOn = true;\n                pokemon.originalCurHP = originalHP; // no damage is done\n                pokemon.cumDamageRolls = originalDamageRolls;\n                fainted = false;\n                return; // don't trigger item use\n            }\n            if (pokemon.hasAbility(\"Disguise\") && !pokemon.abilityOn && pokemon.name.includes(\"Mimikyu\")) {\n                pokemon.abilityOn = true;\n                pokemon.originalCurHP = originalHP; // negate damage from attack\n                pokemon.cumDamageRolls = originalDamageRolls;\n                pokemon.applyDamage(Math.floor(pokemon.maxHP()/8)); // bust disguise, 1/8 max HP damage                \n                if (pokemon.originalCurHP === 0) {\n                    this.faint(id);\n                }\n                return; // don't trigger item use (except for Air Balloon)\n            }\n            if (pokemon.item === \"Focus Sash\" || pokemon.hasAbility(\"Sturdy\")) {\n                if (pokemon.originalCurHP <= 0 && originalHP === maxHP) { \n                    pokemon.originalCurHP = 1;\n                    if (pokemon.ability !== \"Sturdy\") { this.consumeItem(id, pokemon.item!, true, blockSymbiosis); } \n                    fainted = false;\n                }\n            }\n            if (pokemon.item === \"Air Balloon\") {\n                this.loseItem(id, true, blockSymbiosis);\n            }\n            // Weakness Policy and Super-Effective reducing Berries\n            // TO DO - abilities that let users use berries more than once\n            if (isSuperEffective) {\n                if (!fainted && pokemon.item === \"Weakness Policy\") { // weakness policy isn't consumed if the target faints (?)\n                    this.consumeItem(id, pokemon.item, true, blockSymbiosis);\n                } else if (!unnerve) {\n                    switch (pokemon.item) {\n                        case \"Enigma Berry\":\n                            this.consumeItem(id, pokemon.item, true, blockSymbiosis);\n                            break;\n                        case \"Occa Berry\":  // the calc alread takes the berry into account, so we can just remove it here\n                            if (moveType === \"Fire\") { this.consumeItem(id, pokemon.item, true, blockSymbiosis); }\n                            break;\n                        case \"Passho Berry\":\n                            if (moveType === \"Water\") { this.consumeItem(id, pokemon.item, true, blockSymbiosis); }\n                            break;\n                        case \"Wacan Berry\":\n                            if (moveType === \"Electric\") { this.consumeItem(id, pokemon.item, true, blockSymbiosis); }\n                            break;\n                        case \"Rindo Berry\":\n                            if (moveType === \"Grass\") { this.consumeItem(id, pokemon.item, true, blockSymbiosis); }\n                            break;\n                        case \"Yache Berry\":\n                            if (moveType === \"Ice\") { this.consumeItem(id, pokemon.item, true, blockSymbiosis); }\n                            break;\n                        case \"Chople Berry\":\n                            if (moveType === \"Fighting\") { this.consumeItem(id, pokemon.item, true, blockSymbiosis); }\n                            break;\n                        case \"Kebia Berry\":\n                            if (moveType === \"Poison\") { this.consumeItem(id, pokemon.item, true, blockSymbiosis); }\n                            break;\n                        case \"Shuca Berry\":\n                            if (moveType === \"Ground\") { this.consumeItem(id, pokemon.item, true, blockSymbiosis); }\n                            break;\n                        case \"Coba Berry\":\n                            if (moveType === \"Flying\") { this.consumeItem(id, pokemon.item, true, blockSymbiosis); }\n                            break;\n                        case \"Payapa Berry\":\n                            if (moveType === \"Psychic\") { this.consumeItem(id, pokemon.item, true, blockSymbiosis); }\n                            break;\n                        case \"Tanga Berry\":\n                            if (moveType === \"Bug\") { this.consumeItem(id, pokemon.item, true, blockSymbiosis); }\n                            break;\n                        case \"Charti Berry\":\n                            if (moveType === \"Rock\") { this.consumeItem(id, pokemon.item, true, blockSymbiosis); }\n                            break;\n                        case \"Kasib Berry\":\n                            if (moveType === \"Ghost\") { this.consumeItem(id, pokemon.item, true, blockSymbiosis); }\n                            break;\n                        case \"Haban Berry\":\n                            if (moveType === \"Dragon\") { this.consumeItem(id, pokemon.item, true, blockSymbiosis); }\n                            break;\n                        case \"Colbur Berry\":\n                            if (moveType === \"Dark\") { this.consumeItem(id, pokemon.item, true, blockSymbiosis); }\n                            break;\n                        case \"Babiri Berry\":\n                            if (moveType === \"Steel\") { this.consumeItem(id, pokemon.item, true, blockSymbiosis); }\n                            break;\n                        case \"Roseli Berry\":\n                            if (moveType === \"Fairy\") { this.consumeItem(id, pokemon.item, true, blockSymbiosis); }\n                            break;\n                        default: break;\n                    }\n                }\n            }\n            /// Non-super effective items consumed after damage\n            if ( (!unnerve && pokemon.item === \"Chilan Berry\" && moveType === \"Normal\") ||\n                 (pokemon.item === \"Absorb Bulb\" && moveType === \"Water\") ||\n                 (pokemon.item === \"Cell Battery\" && moveType === \"Electric\") || \n                 (pokemon.item === \"Luminous Moss\" && moveType === \"Water\") ||\n                 (pokemon.item === \"Snowball\" && moveType === \"Ice\") ||\n                 (pokemon.item === \"Kee Berry\" && moveCategory === \"Physical\" && !isSheerForceBoosted) ||\n                 (pokemon.item === \"Maranga Berry\" && moveCategory === \"Special\" && !isSheerForceBoosted)\n                ) {\n                this.consumeItem(id, pokemon.item, true, blockSymbiosis);\n            }\n \n            /// abilities triggered by damage even if the target faints\n            if (pokemon.hasAbility(\"Seed Sower\")) {\n                this.applyTerrain(\"Grassy\", pokemon.hasItem(\"Terrain Extender\") ? 8 : 5);\n            } else if (pokemon.hasAbility(\"Sand Spit\")){\n                this.applyWeather(\"Sand\", pokemon.hasItem(\"Smooth Rock\") ? 8 : 5)\n            }\n\n            /// the rest can be skipped if the target faints\n            if (fainted) { this.faint(id); return; }\n            /// abilities triggered by damage if the target survives\n            if (isCrit && pokemon.hasAbility(\"Anger Point\")) { \n                const boost = {atk: 12};\n                this.applyStatChange(id, boost, true, id);\n            } else if ((moveType === \"Fire\" || moveType === \"Water\" ) && pokemon.hasAbility(\"Steam Engine\")) {\n                const boost = {spe: 6};\n                this.applyStatChange(id, boost, true, id);\n            } else if (moveType === \"Water\" && pokemon.hasAbility(\"Water Compaction\")) {\n                const boost = {def: 2};\n                this.applyStatChange(id, boost, true, id);\n            } else if (moveType === \"Dark\" && pokemon.hasAbility(\"Justified\")) {\n                const boost = {atk: 1};\n                this.applyStatChange(id, boost, true, id);\n            } else if (moveType === \"Fire\" && pokemon.hasAbility(\"Thermal Exchange\")) {\n                const boost = {atk: 1};\n                this.applyStatChange(id, boost, true, id);\n            }  else if (moveCategory === \"Physical\" && pokemon.hasAbility(\"Weak Armor\")) {\n                const boost = {def: -1, spe: 2};\n                this.applyStatChange(id, boost, true, id);\n            } else if (pokemon.hasAbility(\"Stamina\")) {\n                const boost = {def: 1};\n                this.applyStatChange(id, boost, true, id);\n            } else if (pokemon.hasAbility(\"Anger Shell\") && !isSheerForceBoosted && originalHP > maxHP/2 && pokemon.originalCurHP <= maxHP/2) {\n                const boost = {atk: 1, spa: 1, spe: 1};\n                this.applyStatChange(id, boost, true, id);\n            } else if (pokemon.hasAbility(\"Berserk\") && !isSheerForceBoosted && originalHP > maxHP/2 && pokemon.originalCurHP <= maxHP/2) {\n                const boost = {spa: 1};\n                this.applyStatChange(id, boost, true, id);\n            } else if (pokemon.hasAbility( \"Electromorphosis\")) {\n                pokemon.field.attackerSide.isCharged = true;\n            } else if (pokemon.hasAbility(\"Rattled\") && [\"Dark\", \"Ghost\", \"Bug\"].includes(moveType || \"\")) {\n                const boost = {spe: 1};\n                this.applyStatChange(id, boost, true, id);\n            } else if (pokemon.hasAbility(\"Wind Power\") && isWind){\n                pokemon.field.attackerSide.isCharged = true;\n            }\n        }\n        /// Abilities activated by HP %\n        // Shields Down\n        if (pokemon.hasAbility(\"Shields Down\") && pokemon.name.includes(\"Minior\")) {\n            if (pokemon.originalCurHP < maxHP/2 && pokemon.species.name === \"Minior-Meteor\") {\n                pokemon.changeForm(\"Minior\" as SpeciesName);\n            } else if (pokemon.originalCurHP >= maxHP/2 && pokemon.species.name === \"Minior\") {\n                pokemon.changeForm(\"Minior-Meteor\" as SpeciesName);\n            }\n        }\n        /// Berry Consumption triggered by damage\n        if (!unnerve && pokemon.item && pokemon.item?.includes(\"Berry\")) {\n            // 50% HP Berries\n            if (pokemon.originalCurHP <= maxHP / 2) {\n                if (pokemon.item === \"Sitrus Berry\" || pokemon.item === \"Oran Berry\") {\n                    this.consumeItem(id, pokemon.item as ItemName, true, blockSymbiosis)\n                }\n            }\n            // 25% HP Berries\n            if ((pokemon.originalCurHP <= maxHP / 4) || (pokemon.hasAbility(\"Gluttony\") && (pokemon.originalCurHP <= maxHP / 2))) {\n                switch (pokemon.item) {\n                    case \"Liechi Berry\":\n                    case \"Ganlon Berry\":\n                    case \"Petaya Berry\":\n                    case \"Apicot Berry\":\n                    case \"Salac Berry\":\n                    case \"Lansat Berry\":\n                    case \"Micle Berry\":\n                    case \"Aguav Berry\":\n                    case \"Figy Berry\":\n                    case \"Iapapa Berry\":\n                    case \"Mago Berry\":\n                    case \"Wiki Berry\":\n                        this.consumeItem(id, pokemon.item as ItemName, true, blockSymbiosis);\n                        break;\n                }\n            }\n        }\n        // Final Check for fainting\n        if (fainted) { this.faint(id); }\n    }\n\n    public consumeItem(id: number, item: ItemName, lost: boolean = true, blockSymbiosis = false) {\n        const pokemon = this.getPokemon(id);\n        switch (item) {\n            case \"White Herb\":\n                for (let stat in pokemon.boosts) {\n                    const statId = stat as StatIDExceptHP;\n                    if ((pokemon.boosts[statId] || 0) < 0) { \n                        pokemon.boosts[statId] = 0; \n                        pokemon.lastConsumedItem = item as ItemName;\n                    }\n                }\n                break;\n            // Status-Curing Berries\n            case \"Cheri Berry\":\n                if (pokemon.status === \"par\") { \n                    pokemon.status = \"\";\n                    pokemon.lastConsumedItem = item as ItemName; \n                    if (pokemon.hasAbility(\"Cud Chew\")) { pokemon.isCudChew = 2; }\n                }\n                break;\n            case \"Chesto Berry\":\n                if (pokemon.status === \"slp\") { \n                    pokemon.status = \"\";\n                    pokemon.lastConsumedItem = item as ItemName; \n                    if (pokemon.hasAbility(\"Cud Chew\")) { pokemon.isCudChew = 2; }\n                }\n                break;\n            case \"Pecha Berry\":\n                if (pokemon.status === \"psn\") { \n                    pokemon.status = \"\";\n                    pokemon.lastConsumedItem = item as ItemName; \n                    if (pokemon.hasAbility(\"Cud Chew\")) { pokemon.isCudChew = 2; }\n                }\n                break;\n            case \"Rawst Berry\":\n                if (pokemon.status === \"brn\") { \n                    pokemon.status = \"\";\n                    pokemon.lastConsumedItem = item as ItemName; \n                    if (pokemon.hasAbility(\"Cud Chew\")) { pokemon.isCudChew = 2; }\n                }\n                break;\n            case \"Aspear Berry\":\n                if (pokemon.status === \"frz\") { \n                    pokemon.status = \"\";\n                    pokemon.lastConsumedItem = item as ItemName; \n                    if (pokemon.hasAbility(\"Cud Chew\")) { pokemon.isCudChew = 2; }\n                }\n                break;\n            case \"Lum Berry\":\n                if (pokemon.status !== \"\") { \n                    pokemon.status = \"\";\n                    pokemon.lastConsumedItem = item as ItemName; \n                    if (pokemon.hasAbility(\"Cud Chew\")) { pokemon.isCudChew = 2; }\n                }\n                if (pokemon.volatileStatus.includes(\"confusion\")) { \n                    pokemon.volatileStatus = pokemon.volatileStatus.filter(status => status !== \"confusion\"); \n                    pokemon.lastConsumedItem = item as ItemName;\n                    if (pokemon.hasAbility(\"Cud Chew\")) { pokemon.isCudChew = 2; }\n                }\n                break;\n            case \"Persim Berry\": \n                if (pokemon.volatileStatus.includes(\"confusion\")) { \n                    pokemon.volatileStatus = pokemon.volatileStatus.filter(status => status !== \"confusion\"); \n                    pokemon.lastConsumedItem = item as ItemName;\n                    if (pokemon.hasAbility(\"Cud Chew\")) { pokemon.isCudChew = 2; }\n                }\n                break;\n            // Stat-Boosting Berries\n            case \"Liechi Berry\":\n                const atkDiff = this.applyStatChange(id, {atk: (pokemon.hasAbility(\"Ripen\") ? 2 : 1)});\n                if (atkDiff.atk){\n                    pokemon.lastConsumedItem = item as ItemName;\n                    if (pokemon.hasAbility(\"Cud Chew\")) { pokemon.isCudChew = 2; }\n                }\n                break;\n            case \"Kee Berry\":\n            case \"Ganlon Berry\":\n                const defDiff = this.applyStatChange(id, {def: (pokemon.hasAbility(\"Ripen\") ? 2 : 1)});\n                if (defDiff.def){\n                    pokemon.lastConsumedItem = item as ItemName;\n                    if (pokemon.hasAbility(\"Cud Chew\")) { pokemon.isCudChew = 2; }\n                }\n                break;\n            case \"Petaya Berry\":\n                const spaDiff = this.applyStatChange(id, {spa: (pokemon.hasAbility(\"Ripen\") ? 2 : 1)});\n                if (spaDiff.spa){\n                    pokemon.lastConsumedItem = item as ItemName;\n                    if (pokemon.hasAbility(\"Cud Chew\")) { pokemon.isCudChew = 2; }\n                }\n                break;\n            case \"Maranga Berry\":\n            case \"Apicot Berry\":\n                const spdDiff = this.applyStatChange(id, {spd: (pokemon.hasAbility(\"Ripen\") ? 2 : 1)});\n                if (spdDiff.spd){\n                    pokemon.lastConsumedItem = item as ItemName;\n                    if (pokemon.hasAbility(\"Cud Chew\")) { pokemon.isCudChew = 2; }\n                }\n                break;\n            case \"Salac Berry\":\n                const speDiff = this.applyStatChange(id, {spe: (pokemon.hasAbility(\"Ripen\") ? 2 : 1)});\n                if (speDiff.spe){\n                    pokemon.lastConsumedItem = item as ItemName;\n                    if (pokemon.hasAbility(\"Cud Chew\")) { pokemon.isCudChew = 2; }\n                }\n                break;\n            case \"Starf Berry\":\n                pokemon.randomBoosts += pokemon.boostCoefficient * (pokemon.hasAbility(\"Ripen\") ? 4 : 2);\n                pokemon.lastConsumedItem = item as ItemName;\n                if (pokemon.hasAbility(\"Cud Chew\")) { pokemon.isCudChew = 2; }\n                break;\n            case \"Lansat Berry\":\n                if (!pokemon.isPumped) {\n                    pokemon.lastConsumedItem = item as ItemName;\n                    if (pokemon.hasAbility(\"Cud Chew\")) { pokemon.isCudChew = 2; }\n                }\n                pokemon.isPumped = 2;\n                break;\n            case \"Micle Berry\":\n                if (!pokemon.isMicle) {\n                    pokemon.lastConsumedItem = item as ItemName;\n                    if (pokemon.hasAbility(\"Cud Chew\")) { pokemon.isCudChew = 2; }\n                }\n                pokemon.isMicle = true;\n                break;\n            // Healing Berries (TO DO, other healing berries that confuse depending on nature)\n            case \"Enigma Berry\":\n            case \"Sitrus Berry\":\n                let maxhp = pokemon.maxHP();\n                if (pokemon.originalCurHP < maxhp) {\n                    pokemon.applyDamage(-Math.floor(maxhp / (pokemon.hasAbility(\"Ripen\") ? 2 : 4)), undefined, true);\n                    pokemon.lastConsumedItem = item as ItemName;\n                    if (pokemon.hasAbility(\"Cud Chew\")) { pokemon.isCudChew = 2; }\n                }\n                break;\n            case \"Oran Berry\":\n                if (pokemon.originalCurHP < pokemon.maxHP()) {\n                    pokemon.applyDamage(-Math.min(pokemon.maxHP(), pokemon.originalCurHP + (pokemon.hasAbility(\"Ripen\") ? 20 : 10)), undefined, true);\n                    pokemon.lastConsumedItem = item as ItemName;\n                    if (pokemon.hasAbility(\"Cud Chew\")) { pokemon.isCudChew = 2; }\n                }\n                break;\n            case \"Aguav Berry\":\n            case \"Figy Berry\":\n            case \"Iapapa Berry\":\n            case \"Mago Berry\":\n            case \"Wiki Berry\":\n                maxhp = pokemon.maxHP();\n                if (pokemon.originalCurHP < maxhp) {\n                    pokemon.applyDamage(-Math.floor(pokemon.maxHP() * (pokemon.hasAbility(\"Ripen\") ? 2 : 1) / 3), undefined, true);\n                    pokemon.lastConsumedItem = item as ItemName;\n                    if (pokemon.hasAbility(\"Cud Chew\")) { pokemon.isCudChew = 2; }\n                    const nature = gen.natures.get(toID(pokemon.nature));\n                    if ((item === \"Aguav Berry\"  && (nature!.plus !== \"spd\" && nature!.minus === \"spd\")) ||\n                        (item === \"Figy Berry\"   && (nature!.plus !== \"atk\" && nature!.minus === \"atk\")) ||\n                        (item === \"Iapapa Berry\" && (nature!.plus !== \"def\" && nature!.minus === \"def\")) ||\n                        (item === \"Mago Berry\"   && (nature!.plus !== \"spe\" && nature!.minus === \"spe\")) ||\n                        (item === \"Wiki Berry\"   && (nature!.plus !== \"spa\" && nature!.minus === \"spa\"))\n                    ) {\n                        this.applyVolatileStatus(id, \"confusion\", false, id);\n                    }\n                }\n                break;\n            // Terrain Seeds\n            case \"Electric Seed\": \n            case \"Grassy Seed\":\n                const gsdiff = this.applyStatChange(id, {def: 1}, true, id);\n                if (gsdiff.def){\n                    pokemon.lastConsumedItem = item as ItemName;\n                }\n                break;\n            case \"Psychic Seed\":\n            case \"Misty Seed\":\n                const msdiff = this.applyStatChange(id, {spd: 1}, true, id);\n                if (msdiff.spd){\n                    pokemon.lastConsumedItem = item as ItemName;\n                }\n                break;\n            // Other boosting items\n            case \"Weakness Policy\":\n                const wpdiff = this.applyStatChange(id, {atk: 2, spa: 2}, true, id);\n                if (wpdiff.atk || wpdiff.spa){\n                    pokemon.lastConsumedItem = item as ItemName;\n                }\n                break;\n            case \"Absorb Bulb\":\n            case \"Throat Spray\":\n                const tsdiff = this.applyStatChange(id, {spa: 1}, true, id);\n                if (tsdiff.spa){\n                    pokemon.lastConsumedItem = item as ItemName;\n                }\n                break;\n            case \"Luminous Moss\":\n                const lmdiff = this.applyStatChange(id, {spd: 1}, true, id);\n                if (lmdiff.spd){\n                    pokemon.lastConsumedItem = item as ItemName;\n                }\n                break;\n            case \"Cell Battery\":\n            case \"Snowball\":\n                const sbdiff = this.applyStatChange(id, {atk: 1}, true, id);\n                if (sbdiff.atk){\n                    pokemon.lastConsumedItem = item as ItemName;\n                }\n                break;\n            // Other\n            case \"Mental Herb\":\n                const vslen = pokemon.volatileStatus.length;\n                pokemon.volatileStatus = [...pokemon.volatileStatus].filter(status => ![\"infatuation\", \"taunt\", \"encore\", \"disable\", \"torment\", \"heal-block\"].includes(status));\n                if (pokemon.volatileStatus.length < vslen) {\n                    pokemon.lastConsumedItem = item as ItemName;\n                }\n                break;\n            default: \n                pokemon.lastConsumedItem = item as ItemName;\n                break;\n        }\n        if (lost) { this.loseItem(id, true, blockSymbiosis); }\n    }\n\n    public applyStatChange(id: number, boosts: Partial<StatsTable>, copyable: boolean = true, sourceID: number = id, ignoreAbility: boolean = false, fromMirrorArmor = false): StatsTable {\n        const pokemon = this.getPokemon(id);\n        const fromSelf = id === sourceID;\n        const fromEnemy = (id === 0) ? (sourceID !== 0) : (sourceID === 0)\n        const boostCoef = pokemon.boostCoefficient;\n        // Mirror Armor\n        if (!fromSelf && !fromMirrorArmor && !ignoreAbility && pokemon.hasAbility(\"Mirror Armor\")) {\n            for (const stat in boosts) {\n                const mirroredBoosts: Partial<StatsTable> = {};\n                const statId = stat as StatIDExceptHP;\n                if ((boosts[statId] || 0) < 0) {\n                    mirroredBoosts[statId] = boosts[statId]!;\n                    boosts[statId] = 0;\n                }\n                this.applyStatChange(sourceID, mirroredBoosts, false, id, false, true);\n            }\n        }\n        // Clear Amulet, Clear Body, White Smoke, Full Metal Body\n        if (!fromSelf && (pokemon.item === \"Clear Amulet\" || (!ignoreAbility && pokemon.hasAbility(\"Clear Body\", \"White Smoke\", \"Full Metal Body\")))) {\n            for (const stat in boosts) {\n                const statId = stat as StatIDExceptHP;\n                if (((boosts[statId] || 0) * boostCoef) < 0) {\n                    boosts[statId] = 0;\n                }\n            }\n        }\n        if (!fromSelf && !ignoreAbility) {\n            if (pokemon.hasAbility(\"Keen Eye\", \"Illuminate\")) {\n                boosts[\"acc\"] = Math.max(0, boosts[\"acc\"] || 0);\n            }\n            else if (pokemon.hasAbility(\"Hyper Cutter\")) {\n                boosts[\"atk\"] = Math.max(0, boosts[\"atk\"] || 0);\n            }\n            else if (pokemon.hasAbility(\"Big Pecks\")) {\n                boosts[\"def\"] = Math.max(0, boosts[\"def\"] || 0);\n            }\n            if (pokemon.field.attackerSide.isFlowerVeil && pokemon.hasType(\"Grass\")) {\n                for (const stat in boosts) {\n                    const statId = stat as StatIDExceptHP;\n                    if (((boosts[statId] || 0) * boostCoef) < 0) {\n                        boosts[statId] = 0;\n                    }\n                }\n            }\n        }\n        // Apply stat changes\n        const diff = pokemon.applyStatChange(boosts, ignoreAbility);\n        // Defiant and Competitive\n        if (!fromSelf && fromEnemy && !ignoreAbility && (pokemon.hasAbility(\"Defiant\", \"Competitive\"))) {\n            const numNegativeBoosts = Object.values(diff).reduce((p, c) => p + (c < 0 ? 1 : 0), 0);\n            if (numNegativeBoosts > 0) {\n                const boost = pokemon.hasAbility(\"Defiant\") ? {atk: 2 * numNegativeBoosts} : {spa: 2 * numNegativeBoosts};\n                this.applyStatChange(id, boost, true, id);\n            }\n        }\n        // Mirror Herb and Opportunist\n        if (copyable) { // Stat changes that are being copied shouldn't be copied in turn\n            const opponentIds = id === 0 ? [1,2,3,4] : [0];\n            for (const opponentId of opponentIds) {\n                const opponent = this.getPokemon(opponentId);\n                const mirrorHerb = opponent.item === \"Mirror Herb\";\n                const opportunist = opponent.hasAbility(\"Opportunist\");\n                if (mirrorHerb || opportunist)  {\n                    const both = mirrorHerb && opportunist;\n                    const positiveDiff = {...diff};\n                    let hasPositiveBoost = false;\n                    for (const stat in positiveDiff) {\n                        const statId = stat as StatIDExceptHP;\n                        if (both) {\n                            positiveDiff[statId] *= 2;\n                        }\n                        if ((positiveDiff[statId] || 0) <= 0) {\n                            positiveDiff[statId] = 0;\n                        } else {\n                            hasPositiveBoost = true;\n                        }\n                    }\n                    if (hasPositiveBoost) {\n                        const changes = this.applyStatChange(opponentId, positiveDiff, false, id);\n                        if (Object.values(changes).some(val => val > 0) && opponent.item === \"Mirror Herb\") { \n                            this.consumeItem(opponentId, opponent.item); \n                        }\n                    }\n                }\n            }\n        }\n        // White Herb\n        if (pokemon.item === \"White Herb\" && Object.values(diff).some(val => val < 0)) {\n            this.consumeItem(id, pokemon.item, false);\n        }\n \n        return diff;\n    }\n\n    public applyStatus(id: number, status: StatusName, source: number, isSecondaryEffect: boolean = false, fromHeldItem: boolean | undefined = false, roll: \"max\" | \"min\" | \"avg\" | undefined = \"avg\") {\n        const pokemon = this.getPokemon(id);\n        const field = pokemon.field;\n        const sourcePoke = this.getPokemon(source);\n        const sourceAbility = sourcePoke.abilityNullified ? undefined : sourcePoke.ability;\n        const attackerIgnoresAbility = (!this.getPokemon(source).abilityNullified && !this.getPokemon(source).abilityNullified && [\"Mold Breaker\", \"Teravolt\", \"Turboblaze\"].includes(sourceAbility || \"\") && !pokemon.hasItem(\"Ability Shield\")) || (sourcePoke.hasAbility(\"Mycelium Might\") && !isSecondaryEffect);\n        const selfInflicted = id === source;\n\n        if (hasNoStatus(pokemon)) {\n            let success = true;\n            // Secondary effect blockers\n            if (!selfInflicted && isSecondaryEffect && (pokemon.item === \"Covert Cloak\" || pokemon.hasAbility(\"Shield Dust\"))) { success = false; }\n            // Purifying Salt blocks all non-volatile statuses\n            if (pokemon.hasAbility(\"Purifying Salt\")) { success = false; }\n            // field-based immunities\n            if (selfInflicted) {\n                if (fromHeldItem && (field.hasTerrain(\"Misty\") && pokemonIsGrounded(pokemon, field))) { success = false; }\n            } else {\n                if ((field.attackerSide.isSafeguard && sourceAbility !== \"Infiltrator\") || (field.hasTerrain(\"Misty\") && pokemonIsGrounded(pokemon, field)) || field.attackerSide.isProtected) { success = false; }\n            }\n            if (status === \"slp\" && (field.hasTerrain(\"Electric\") && pokemonIsGrounded(pokemon, field))) { success = false; }\n            // type-based and ability-based immunities\n            if (status === \"brn\" && (pokemon.hasType(\"Fire\") || pokemon.hasAbility(\"Water Veil\") || pokemon.hasAbility(\"Thermal Exchange\") || pokemon.hasAbility(\"Water Bubble\"))) { success = false; }\n            if (status === \"frz\" && (pokemon.field.hasWeather(\"Sun\") || pokemon.hasType(\"Ice\") || (!attackerIgnoresAbility && pokemon.hasAbility(\"Magma Armor\")))) { success = false; }\n            if ((status === \"psn\" || status === \"tox\") && ((!attackerIgnoresAbility && pokemon.hasAbility(\"Immunity\")) || (sourceAbility !== \"Corrosion\" && pokemon.hasType(\"Poison\", \"Steel\")))) { success = false; }\n            if ((status === \"par\" && (pokemon.hasType(\"Electric\") || (!attackerIgnoresAbility && pokemon.hasAbility(\"Limber\"))))) { success = false; }\n            if (status === \"slp\" && !attackerIgnoresAbility && (\n                [\"Insomnia\", \"Vital Spirit\"].includes(pokemon.ability as string) || \n                (id === 0 ? [0] : [1,2,3,4]).map(i => this.getPokemon(i)).some(poke => poke.hasAbility(\"Sweet Veil\"))\n            )) { success = false; }\n            if (pokemon.field.hasWeather(\"Sun\") && !attackerIgnoresAbility && pokemon.hasAbility(\"Leaf Guard\")) { success = false; }\n            \n            if (success) {\n                pokemon.status = status;\n                if (status === \"slp\") { // lasts 1-3 turns\n                    pokemon.isSleep = roll === \"max\" ? 3 : roll === \"min\" ? 1 : 2;\n                } else if (status === \"frz\") { // lasts indefinitely, average of 3 turns\n                    pokemon.isFrozen = roll === \"max\" ? 10 : roll === \"min\" ? 1 : 3;\n                }\n            }\n        }\n\n        // Status curing berries\n        if ( (pokemon.item === \"Cheri Berry\" && pokemon.status === \"par\") || \n             (pokemon.item === \"Chesto Berry\" && pokemon.status === \"slp\") ||\n             (pokemon.item === \"Pecha Berry\" && pokemon.status === \"psn\") ||\n             (pokemon.item === \"Rawst Berry\" && pokemon.status === \"brn\") ||\n             (pokemon.item === \"Aspear Berry\" && pokemon.status === \"frz\") ||\n             (pokemon.item === \"Lum Berry\" && pokemon.status !== \"\") ) { \n            this.consumeItem(id, pokemon.item, true);\n        }\n    }\n\n    public applyVolatileStatus(id: number, ailment: string, isSecondaryEffect: boolean = false, source: number, firstMove?: boolean) {\n        const pokemon = this.getPokemon(id);\n        const field = pokemon.field;\n        const sourcePoke = this.getPokemon(source);\n        const sourceAbility = sourcePoke.abilityNullified ? undefined : sourcePoke.ability;\n        const attackerIgnoresAbility = ([\"Mold Breaker\", \"Teravolt\", \"Turboblaze\"].includes(sourceAbility || \"\") && !pokemon.hasItem(\"Ability Shield\")) || (sourcePoke.hasAbility(\"Mycelium Might\") && !isSecondaryEffect);\n        const selfInflicted = id === source;\n\n        if (!pokemon.volatileStatus.includes(ailment)) {\n            let success = true;\n            // Any non-volatile status, Electric Terrain, and Safeguard block Yawn\n            if (ailment === \"yawn\" && ((pokemon.status !== \"\") || field.hasTerrain(\"Electric\") || field.attackerSide.isSafeguard)) { success = false; }\n            // Safeguard and Misty Terrain block confusion\n            if (ailment === \"confusion\" && ((field.attackerSide.isSafeguard && sourceAbility !== \"Infiltrator\") || (field.hasTerrain(\"Misty\") && pokemonIsGrounded(pokemon, field)))) { success = false; }\n            // Covert Cloak\n            if (ailment === \"confusion\" && !selfInflicted && isSecondaryEffect && (pokemon.item === \"Covert Cloak\" || pokemon.ability === \"Shield Dust\")) { success = false; }\n            // Aroma Veil\n            if (field.attackerSide.isAromaVeil && [\"confusion\", \"taunt\", \"encore\", \"disable\", \"infatuation\", \"yawn\"].includes(ailment)) {\n                success = false;\n            // Own Tempo\n            } else if (!attackerIgnoresAbility && pokemon.hasAbility(\"Own Tempo\") && ailment === \"confusion\") {\n                success = false;\n            // Oblivious\n            } else if (!attackerIgnoresAbility && pokemon.hasAbility(\"Oblivious\") && (ailment === \"taunt\" || ailment === \"infatuation\")) {\n                success = false;\n            // yawn immunity\n            } else if (ailment === \"yawn\" && !attackerIgnoresAbility && (pokemon.hasAbility(\"Vital Spirit\", \"Insomnia\") || (pokemon.hasAbility(\"Leaf Guard\") && pokemon.field.hasWeather(\"Sun\")))) {\n                success = false;\n            } \n\n            if (success) {\n                pokemon.volatileStatus.push!(ailment);\n                if (ailment === \"taunt\") {\n                    pokemon.isTaunt = (firstMove ? 3 : 4);\n                } else if (ailment === \"encore\") {\n                    pokemon.isEncore = 3;\n                } else if (ailment === \"torment\") {\n                    pokemon.isTorment = true;\n                } else if (ailment === \"disable\" && pokemon.lastMove) {\n                    pokemon.isDisable = 4;\n                    pokemon.disabledMove = pokemon.lastMove!.name;\n                } else if (ailment === \"yawn\") {\n                    pokemon.isYawn = 2;\n                } else if (ailment === \"ingrain\") {\n                    pokemon.isIngrain = true;\n                }\n            }\n        }\n\n        // Volatile Status curing berries + Mental Herb\n        if ( (pokemon.hasItem(\"Persim Berry\", \"Lum Berry\") && pokemon.volatileStatus.includes(\"confusion\")) || \n             (pokemon.hasItem(\"Mental Herb\") && [\"infatuation\", \"taunt\", \"encore\", \"disable\", \"torment\", \"heal-block\"].includes(ailment)) ) {\n            this.consumeItem(id, pokemon.item!, true);\n        } \n    }\n\n    public loseItem(id: number, consumed: boolean = false, blockSymbiosis: boolean = false) {\n        const pokemon = this.getPokemon(id);\n        if (!consumed) {\n            pokemon.cumDamageRolls.removeSequentialCondition(pokemon.item);\n        }\n        pokemon.loseItem();\n        // Symbiosis\n        if (id > 0 && !blockSymbiosis) {\n            const symbiosisIds: number[] = []\n            for (let sid=1; sid<5; sid++) {\n                if (sid !== id && this.getPokemon(sid).hasAbility(\"Symbiosis\") && this.getPokemon(sid).item !== undefined) {\n                    symbiosisIds.push(sid);\n                }\n            }\n            if (symbiosisIds.length > 0) {\n                // speed check for symbiosis\n                let fastestSymbId = symbiosisIds[0];\n                let fastestSymbPoke = this.getPokemon(fastestSymbId);\n                let fastestSymbSpeed = fastestSymbPoke.effectiveSpeed;\n                for (let i=1; i<symbiosisIds.length; i++) {\n                    const poke = this.getPokemon(symbiosisIds[i]);\n                    const speed = getModifiedStat(poke.stats.spe, poke.boosts.spe, gen);\n                    // Apparently, Trick Room isn't considered for this check\n                    // const field = poke.field;\n                    // if ( (!field.isTrickRoom && speed > fastestSymbSpeed) || (field.isTrickRoom && speed < fastestSymbSpeed) ) {\n                    if ( speed > fastestSymbSpeed ) {\n                        fastestSymbId = symbiosisIds[i];\n                        fastestSymbPoke = poke;\n                        fastestSymbSpeed = speed;\n                    } \n                }\n                // symbiosis item transfer\n                const passedItem = fastestSymbPoke.item!;\n                fastestSymbPoke.item = undefined; // don't call loseItem because it will trigger symbiosis again\n                fastestSymbPoke.isChoiceLocked = false;\n                fastestSymbPoke.cumDamageRolls.removeSequentialCondition(passedItem);\n                // NOTE: it is important to clear the item from the Symbiosis passer FIRST to avoid an infinite loop in case the item is immediately consumed after passing\n                this.receiveItem(id, passedItem);\n            }\n        }\n    }\n\n    public receiveItem(id: number, item: ItemName | undefined) {\n        const pokemon = this.getPokemon(id);\n        pokemon.item = item;\n        pokemon.cumDamageRolls.addSequentialCondition(item);\n        /// Items that activate upon reciept or switch in\n        // Booster Energy\n        if (pokemon.item === \"Booster Energy\" && pokemon.hasAbility(\"Protosynthesis\", \"Quark Drive\") && !pokemon.abilityOn) {\n            pokemon.abilityOn = true;\n            const statId = getQPBoostedStat(pokemon, gen) as StatIDExceptHP;\n            pokemon.boostedStat = statId;\n            pokemon.usedBoosterEnergy = true;\n            this.loseItem(id)\n        }\n        // Terrain Seeds\n        if (item && item.includes(\"Seed\")) {\n            this.applyTerrain(pokemon.field.terrain, pokemon.field.terrainTurnsRemaining, [id]);\n        }\n        // Berries consumed immediately upon reciept (via Symbiosis, Trick, etc) if their conditions are met\n        this.applyDamage(id, 0);\n    }\n\n    public applyTerrain(terrain: Terrain | \"Teraform Zero\" | undefined, turns: number = 5, ids: number[] = [0,1,2,3,4]) {\n        const setTeraformZero = terrain === \"Teraform Zero\";\n        for (let id of ids) {\n            const pokemon = this.getPokemon(id);\n            if (setTeraformZero) {\n                pokemon.field.isTeraformZero = true;\n            } else if (!!terrain) {\n                pokemon.field.terrain = terrain;\n                pokemon.field.terrainTurnsRemaining = turns;\n            }\n            // Quark Drive\n            if (pokemon.hasAbility(\"Quark Drive\") && !pokemon.usedBoosterEnergy) {\n                if (pokemon.field.hasTerrain(\"Electric\") && !pokemon.abilityOn) {\n                    pokemon.abilityOn = true;\n                    const statId = getQPBoostedStat(pokemon, gen) as StatIDExceptHP;\n                    pokemon.boostedStat = statId;\n                } else if (!pokemon.field.hasTerrain(\"Electric\") && pokemon.abilityOn) {\n                    pokemon.abilityOn = false;\n                    pokemon.boostedStat = undefined;\n                    if (pokemon.item === \"Booster Energy\") { this.receiveItem(id, \"Booster Energy\" as ItemName); }\n                }\n            }\n            // Terrain Seeds\n            if ( (pokemon.item === \"Electric Seed\" && pokemon.field.hasTerrain(\"Electric\")) ||\n                 (pokemon.item === \"Grassy Seed\" && pokemon.field.hasTerrain(\"Grassy\")) ||\n                 (pokemon.item === \"Psychic Seed\" && pokemon.field.hasTerrain(\"Psychic\")) ||\n                 (pokemon.item === \"Misty Seed\" && pokemon.field.hasTerrain(\"Misty\")) ) {\n                this.consumeItem(id, pokemon.item, true);\n            }\n        }\n    }\n\n    public applyWeather(weather: Weather | \"Cloud Nine\" | undefined, turns = 5, ids: number[] = [0,1,2,3,4]) {\n        const setCloudNine = weather === \"Cloud Nine\";\n        for (let id of ids) {\n            const pokemon = this.getPokemon(id);\n            if (setCloudNine) {\n                pokemon.field.isCloudNine = true;\n            } else if (!!weather) {\n                pokemon.field.weather = weather;\n                pokemon.field.weatherTurnsRemaining = turns;\n            }\n            // Protosynthesis\n            if (pokemon.hasAbility(\"Protosynthesis\") && !pokemon.usedBoosterEnergy) {\n                if (pokemon.field.hasWeather(\"Sun\") && !pokemon.abilityOn) {\n                    pokemon.abilityOn = true;\n                    const statId = getQPBoostedStat(pokemon, gen) as StatIDExceptHP;\n                    pokemon.boostedStat = statId;\n                } else if (!pokemon.field.hasWeather(\"Sun\") && pokemon.abilityOn) {\n                    pokemon.abilityOn = false;\n                    pokemon.boostedStat = undefined;\n                    if (pokemon.item === \"Booster Energy\") { this.receiveItem(id, \"Booster Energy\" as ItemName); }\n                } \n            }\n            // Ice Face\n            if ((weather === \"Snow\" || weather === \"Hail\") && pokemon.hasAbility(\"Ice Face\") && pokemon.name.includes(\"Eiscue\") && pokemon.abilityOn) {\n                pokemon.changeForm(\"Eiscue\" as SpeciesName);\n                pokemon.abilityOn = false;\n            }\n            \n        }\n    }\n\n    public activateTera(id: number): boolean {\n        const pokemon = this.getPokemon(id);\n        const terastalized = pokemon.activateTera();\n        if (terastalized) {\n            if (pokemon.name.includes(\"Terapagos\")) {\n                this.changeAbility(id, \"Teraform Zero\" as AbilityName);\n            }\n            if (pokemon.name.includes(\"Ogerpon\")) {\n                this.addAbilityFieldEffect(id, pokemon.ability);\n            }\n        }\n        return terastalized\n    }\n\n    public changeAbility(id: number, ability: AbilityName | \"(No Ability)\", isSkillSwap: boolean = false) {\n        const pokemon = this.getPokemon(id);\n        if (pokemon.hasItem(\"Ability Shield\")) { return; }\n        if (!isSkillSwap && persistentAbilities[\"CantSuppress\"].includes(pokemon.ability || \"\")) { return; }\n        const oldAbility = pokemon.ability;\n        pokemon.ability = ability as AbilityName;\n        pokemon.abilityOn = false;\n        // lost field effects\n        if (!pokemon.abilityNullified) {\n            this.removeAbilityFieldEffect(id, oldAbility);\n        }\n        pokemon.abilityNullified = undefined;\n        // gained field effects\n        this.addAbilityFieldEffect(id, ability);\n    }\n\n    public nullifyAbility(id: number)  {\n        const pokemon = this.getPokemon(id);\n        if (pokemon.hasItem(\"Ability Shield\")) { return; }\n        const oldAbility = pokemon.ability;\n        // pokemon.ability = undefined;\n        pokemon.abilityOn = false;\n        // lost field effects\n        this.removeAbilityFieldEffect(id, oldAbility);\n    }\n\n    public addAbilityFieldEffect(id: number, ability: AbilityName | \"(No Ability)\" | undefined, restore: boolean = false): string[][] {\n        const pokemon = this.getPokemon(id);\n        const flags: string[][] = [[],[],[],[],[]];\n        if (pokemon.abilityNullified) { return flags; }\n        /// Imposter\n        if (ability === \"Imposter\") {\n            const target = id === 0 ? this.raiders[1] : this.raiders[0];\n            this.transform(id, target.id);\n            flags[id].push(\"Imposter transforms \" + pokemon.name + \" into \" + target.name);\n        }\n        /// Tera Shift\n        if (ability === \"Tera Shift\" && pokemon.species.name === \"Terapagos\") {\n            pokemon.changeForm(\"Terapagos-Terastal\" as SpeciesName);\n            pokemon.originalCurHP = pokemon.maxHP(); // this should only happen at the beginning of a battle\n            flags[id].push(\"Tera Shift transforms Terapagos into Terapagos-Terastal\");\n        }\n        /// Trace (handled separately so the traced ability can activate if applicable)\n        if (ability === \"Trace\") {\n            const opponentIds = id === 0 ? [1,2,3,4] : [0];\n            for (let oid of opponentIds) { // Trace might be random for bosses, but we'll check abilities in order\n                const copiedAbility = this.raiders[oid].ability;\n                if (copiedAbility && !this.raiders[oid].abilityNullified && !persistentAbilities[\"NoTrace\"].includes(copiedAbility)) {\n                    pokemon.ability = copiedAbility;\n                    ability = copiedAbility;\n                    flags[id].push(\"Trace copies \" + copiedAbility);\n                    break;\n                }\n            } \n        }\n\n        // add relevant effects to the damage rolls\n        pokemon.cumDamageRolls.addPersistentCondition(ability);\n\n        //// Abilities only activated upon switch-in or skill change\n        if (!restore) {\n            switch (ability) {\n            /// Weather Abilities\n            case \"Drought\":\n                if (this.fields[0].weather !== \"Sun\") {\n                    this.applyWeather(\"Sun\", pokemon.item === \"Heat Rock\" ? 8 : 5);\n                    flags[id].push(\"Drought summons the Sun\");\n                }\n                break;\n            case \"Drizzle\":\n                if (this.fields[0].weather !== \"Rain\") {\n                    this.applyWeather(\"Rain\", pokemon.item === \"Damp Rock\" ? 8 : 5);\n                    flags[id].push(\"Drizzle summons the Rain\");\n                }\n                break;\n            case \"Sand Stream\":\n                if (this.fields[0].weather !== \"Sand\") {\n                    this.applyWeather(\"Sand\", pokemon.item === \"Smooth Rock\" ? 8 : 5);\n                    flags[id].push(\"Sand Stream summons a Sandstorm\");\n                }\n                break;\n            case \"Snow Warning\":\n                if (this.fields[0].weather !== \"Snow\") {\n                    this.applyWeather(\"Snow\", pokemon.item === \"Icy Rock\" ? 8 : 5);\n                    flags[id].push(\"Snow Warning summons a Snowstorm\");\n                }\n                break;\n            case \"Orichalcum Pulse\":\n                if (this.fields[0].weather !== \"Sun\") {\n                    this.applyWeather(\"Sun\", pokemon.item === \"Heat Rock\" ? 8 : 5);\n                    flags[id].push(\"Orichalcum Pulse summons the Sun\");\n                }\n                break;\n            /// Terrain Abilities\n            case \"Grassy Surge\":\n                if (this.fields[0].terrain !== \"Grassy\") {\n                    this.applyTerrain(\"Grassy\", pokemon.item === \"Terrain Extender\" ? 8 : 5);\n                    flags[id].push(\"Grassy Surge summons Grassy Terrain\");\n                }\n                break;\n            case \"Electric Surge\":\n                if (this.fields[0].terrain !== \"Electric\") {\n                    this.applyTerrain(\"Electric\", pokemon.item === \"Terrain Extender\" ? 8 : 5);\n                    flags[id].push(\"Electric Surge summons Electric Terrain\");\n                }\n                break;\n            case \"Misty Surge\":\n                if (this.fields[0].terrain !== \"Misty\") {\n                    this.applyTerrain(\"Misty\", pokemon.item === \"Terrain Extender\" ? 8 : 5);\n                    flags[id].push(\"Misty Surge summons Misty Terrain\");\n                }\n                break;\n            case \"Psychic Surge\":\n                if (this.fields[0].terrain !== \"Psychic\") {\n                    this.applyTerrain(\"Psychic\", pokemon.item === \"Terrain Extender\" ? 8 : 5);\n                    flags[id].push(\"Psychic Surge summons Psychic Terrain\");\n                }\n                break;\n            case \"Hadron Engine\":\n                if (this.fields[0].terrain !== \"Electric\") {\n                    this.applyTerrain(\"Electric\", pokemon.item === \"Terrain Extender\" ? 8 : 5);\n                    flags[id].push(\"Hadron Engine summons Electric Terrain\");\n                }\n                break;\n            /// Ruin Abilities (should be uncopyable / unsupressable)\n            case \"Sword of Ruin\":\n                for (let field of this.fields) {\n                    field.isSwordOfRuin = true;\n                }\n                flags[id].push(\"Sword of Ruin lowers Defenses\");\n                break;\n            case \"Beads of Ruin\":\n                for (let field of this.fields) {\n                    field.isBeadsOfRuin = true;\n                }\n                flags[id].push(\"Beads of Ruin lowers Special Defenses\");\n                break;\n            case \"Vessel of Ruin\":\n                for (let field of this.fields) {\n                    field.isVesselOfRuin = true;\n                }\n                flags[id].push(\"Vessel of Ruin lowers Special Attacks\");\n                break;\n            case \"Tablets of Ruin\":\n                for (let field of this.fields) {\n                    field.isTabletsOfRuin = true;\n                }\n                flags[id].push(\"Tablets of Ruin lowers Attacks\");\n                break;\n            /// others\n            case \"Supersweet Syrup\":\n                const affectedSSPokemon = id === 0 ? this.raiders.slice(1) : [this.raiders[0]];\n                for (let opponent of affectedSSPokemon) {\n                    const origEva = opponent.boosts.eva || 0;\n                    this.applyStatChange(opponent.id, {eva: -1}, true, id);\n                    flags[opponent.id].push(\"Eva: \" + origEva + \" → \" + opponent.boosts.eva + \" (Supersweet Syrup)\");\n                }\n                break;\n            case \"Hospitality\":\n                if (id !== 0) {\n                    const allies = this.raiders.slice(1).splice(id-1, 1);\n                    for (let ally of allies) {\n                        const healing = Math.floor(ally.maxHP() / 4);\n                        this.applyDamage(ally.id, -healing)\n                    }\n                }\n                break;\n            case \"Download\":\n                const target = id === 0 ? this.raiders[1] : this.raiders[0];\n                let def = target.stats.def;\n                let spd = target.stats.spd;\n                def = getModifiedStat(def, target.boosts.def, target.gen);\n                spd = getModifiedStat(spd, target.boosts.spd, target.gen);\n                if (spd <= def) {\n                    const origSpa = pokemon.boosts.spa;\n                    this.applyStatChange(id, {spa: 1}, true, id);\n                    flags[id].push(\"SpA: \" + origSpa + \" → \" + (pokemon.boosts.spa > 0 ? \"+\" : \"\") + pokemon.boosts.spa + \" (Download)\");\n                } else {\n                    const origAtk = pokemon.boosts.atk;\n                    this.applyStatChange(id, {atk: 1}, true, id);\n                    flags[id].push(\"Atk: \" + origAtk + \" → \" + (pokemon.boosts.atk > 0 ? \"+\" : \"\") + pokemon.boosts.atk + \" (Download)\");\n                }\n                break;\n            case \"Intrepid Sword\":\n                const origAtk = pokemon.boosts.atk;\n                this.applyStatChange(id, {atk: 1}, true, id);\n                flags[id].push(\"Atk: \" + origAtk + \" → \" + pokemon.boosts.atk + \" (Intrepid Sword)\");\n                break;\n            case \"Dauntless Shield\":\n                const origDef = pokemon.boosts.def;\n                this.applyStatChange(id, {def: 1}, true, id);\n                flags[id].push(\"Def: \" + origDef + \" → \" + pokemon.boosts.def + \" (Dauntless Shield)\");\n                break;\n            case \"Embody Aspect (Teal)\":\n                this.applyStatChange(id, {spe: 1}, true, id);\n                break;\n            case \"Embody Aspect (Wellspring)\":\n                this.applyStatChange(id, {spd: 1}, true, id);\n                break;\n            case \"Embody Aspect (Hearthflame)\":\n                this.applyStatChange(id, {atk: 1}, true, id);\n                break;           \n            case \"Embody Aspect (Cornerstone)\":\n                this.applyStatChange(id, {def: 1}, true, id);\n                break;     \n            case \"Protosynthesis\": \n            case \"Quark Drive\":\n                if (pokemon.item === \"Booster Energy\" && !pokemon.abilityOn) {\n                    this.receiveItem(id, \"Booster Energy\" as ItemName); // consume Booster Energy\n                }\n                break;\n            case \"Slow Start\":\n                pokemon.slowStartCounter = 5;\n                pokemon.abilityOn = true;\n                break;\n            case \"Intimidate\":\n                const affectedPokemon = id === 0 ? this.raiders.slice(1) : [this.raiders[0]];\n                for (let opponent of affectedPokemon) {\n                    if (opponent.hasAbility(\"Guard Dog\")) {\n                        const origAtk = opponent.boosts.atk ||  0;\n                        this.applyStatChange(opponent.id, {atk: 1}, true, id);\n                        flags[opponent.id].push(\"Atk: \" + origAtk + \" → \" + opponent.boosts.atk + \" (Guard Dog)\");\n                    } else if (opponent.abilityNullified || ![\"Oblivious\", \"Own Tempo\", \"Inner Focus\", \"Scrappy\"].includes(opponent.ability || \"\")) {\n                        const origAtk = opponent.boosts.atk ||  0;\n                        const origSourceAtk = pokemon.boosts.atk || 0;\n                        this.applyStatChange(opponent.id, {atk: -1}, true, id);\n                        if (opponent.hasAbility(\"Mirror Armor\")) {\n                            flags[id].push(\"Atk: \" + origSourceAtk + \" → \" + pokemon.boosts.atk + \" (Mirror Armor)\");\n                        } else {\n                            flags[opponent.id].push(\"Atk: \" + origAtk + \" → \" + opponent.boosts.atk + \" (Intimidate)\");\n                        }\n                    }\n                    if (opponent.hasAbility(\"Rattled\")) {\n                        const origSpe = opponent.boosts.spe || 0;\n                        this.applyStatChange(opponent.id, {spe: 1}, true, opponent.id);\n                        flags[opponent.id][flags[opponent.id].length-1] += \", Spe: \" + origSpe + \" → \" + opponent.boosts.spe + \" (Rattled)\";\n                    }\n                }\n            }\n        }\n        /// Other Field-Related Abilities\n        switch (ability) {\n            case \"Neutralizing Gas\":\n                for (let i = 0; i < 5; i++) {\n                    if (i !== id ) {\n                        const target = this.raiders[i];\n                        const targetAbility = this.raiders[i].ability;\n                        if (\n                            target.hasItem(\"Ability Shield\") ||\n                            (targetAbility === \"Neutralizing Gas\")\n                        ) { \n                            continue; \n                        }\n                        this.removeAbilityFieldEffect(i, target.ability)\n                        target.abilityNullified = -1;\n                        flags[i].push(\"Ability suppressed by Neutralizing Gas\");\n                    }\n                }\n                break;\n                        case \"Cloud Nine\":\n            case \"Air Lock\": \n                this.applyWeather(\"Cloud Nine\");\n                flags[id].push(ability + \" negates the weather\");\n                break;\n            case \"Teraform Zero\":\n                this.applyWeather(\"Cloud Nine\");\n                this.applyTerrain(\"Teraform Zero\");\n                flags[id].push(\"Teraform Zero negates the weather and terrain\");\n                break;\n            case \"Steely Spirit\":\n                if (id !== 0) {\n                    for (let [index, field] of this.fields.entries()) {\n                        if (index !== 0 && index !== id) {\n                            field.attackerSide.steelySpirits += 1;\n                        }\n                    }\n                }\n                flags[id].push(\"Steely Spirit boosts Allies' Steel-type attacks\");\n                break;\n            case \"Aroma Veil\":\n                if (id === 0) {\n                    this.fields[0].attackerSide.isAromaVeil = true;\n                } else {\n                    for (let field of this.fields.slice(1)) {\n                        field.attackerSide.isAromaVeil = true;\n                    }\n                }\n                flags[id].push(\"Aroma Veil protects allies\");\n                break;\n            case \"Power Spot\":\n                if (id !== 0) {\n                    for (let [index,field] of this.fields.entries()) {\n                        if (index !== 0 && index !== id) {\n                            field.attackerSide.powerSpots += 1;\n                        }\n                    }\n                }\n                flags[id].push(\"Power Spot boosts attack power\");\n                break;\n            case \"Battery\":\n                if (id !==0 ) {\n                    for (let [index,field] of this.fields.entries()) {\n                        if (index !== 0 && index !== id) {\n                            field.attackerSide.batteries += 1;\n                        }\n                    }\n                }\n                flags[id].push(\"Battery boosts special attack power\");\n                break;\n            case \"Friend Guard\":\n                if (id !== 0) {\n                    for (let fid=1; fid<5; fid++) {\n                        if (id !== fid) {\n                            this.fields[fid].attackerSide.friendGuards += 1;\n                        }\n                    }\n                }\n                flags[id].push(\"Friend Guard reduces allies' damage taken\");\n                break;\n            case \"Flower Veil\":\n                if (id !== 0) {\n                    for (let fid=1; fid<5; fid++) {\n                        this.fields[fid].attackerSide.isFlowerVeil = true;\n                    }\n                } else {\n                    this.fields[0].attackerSide.isFlowerVeil = true;\n                }\n                break;\n            case \"Dazzling\":\n            case \"Queenly Majesty\":\n            case \"Armor Tail\":\n                if (id !== 0) {\n                    for (let fid=1; fid<5; fid++) {\n                        this.fields[fid].attackerSide.isDazzling = true;\n                    }\n                } else {\n                    this.fields[0].attackerSide.isDazzling = true;\n                }\n                break;\n            case \"Plus\":\n            case \"Minus\":\n                const allyIDs = id !== 0 ? [1,2,3,4].filter(i => i !== id) : [];\n                for (id of allyIDs) {\n                    const ally = this.getPokemon(id);\n                    if (ally.originalCurHP > 0 && ally.ability === \"Minus\" || ally.ability === \"Plus\") {\n                        pokemon.abilityOn = true;\n                        ally.abilityOn = true;\n                        flags[id].push(ability + \" activated\");\n                    }\n                }\n                break;\n            default: break;\n        }\n        return flags;\n    }\n\n    public removeAbilityFieldEffect(id: number, ability: AbilityName | \"(No Ability)\" | undefined) {\n        const poke = this.getPokemon(id);\n        if (ability === undefined || ability === \"(No Ability)\" || poke.abilityNullified) { return; }\n        // remove relevant effects from the damage rolls\n        poke.cumDamageRolls.removePersistentCondition(ability);\n        switch (ability) {\n            // on/off field-based abilties\n            case \"Neutralizing Gas\":\n                if (\n                    !this.raiders\n                    .filter(r => r.id !== id && r.originalCurHP !== 0)\n                    .map(r => r.ability).includes(\"Neutralizing Gas\" as AbilityName)\n                ) {\n                    for (let i = 0; i < 5; i++) {\n                        if (i !== id ) {\n                            const target = this.raiders[i];\n                            if ((target.abilityNullified || 0) < 0 && target.originalAbility !== \"(No Ability)\") {\n                                target.abilityNullified = undefined;\n                                this.addAbilityFieldEffect(i, target.ability, true);\n                            }\n                        }\n                    }\n                }\n                break;\n            case \"Cloud Nine\":\n            case \"Air Lock\":\n                if (\n                    !this.raiders\n                    .filter(r => r.id !== id && r.originalCurHP !== 0)\n                    .some(r => [\"Cloud Nine\", \"Air Lock\", \"Teraform Zero\"].includes(r.ability as AbilityName))\n                ) {\n                    for (let field of this.fields) {\n                        field.isCloudNine = false;\n                    }\n                    this.applyWeather(undefined);\n                }\n                break;\n            case \"Teraform Zero\":\n                if (\n                    !this.raiders\n                    .filter(r => r.id !== id && r.originalCurHP !== 0)\n                    .some(r => [\"Cloud Nine\", \"Air Lock\", \"Teraform Zero\"].includes(r.ability as AbilityName))\n                ) {\n                    for (let field of this.fields) {\n                        field.isCloudNine = false;\n                    }\n                    this.applyWeather(undefined);\n                }\n                if (\n                    !this.raiders\n                    .filter(r => r.id !== id && r.originalCurHP !== 0)\n                    .map(r => r.ability).includes(\"Teraform Zero\" as AbilityName)\n                ) {\n                    for (let field of this.fields) {\n                        field.isTeraformZero = false;\n                    }\n                    this.applyTerrain(undefined);\n                }\n            \n                break;\n            case \"Sword of Ruin\":\n                if (\n                    !this.raiders\n                    .filter(r => r.id !== id && r.originalCurHP !== 0)\n                    .map(r => r.ability).includes(\"Sword of Ruin\" as AbilityName)\n                ) {\n                    for (let field of this.fields) {\n                        field.isSwordOfRuin = false;\n                    }\n                }\n                break;\n            case \"Beads of Ruin\":\n                if (\n                    !this.raiders\n                    .filter(r => r.id !== id && r.originalCurHP !== 0)\n                    .map(r => r.ability).includes(\"Beads of Ruin\" as AbilityName)\n                ) {\n                    for (let field of this.fields) {\n                        field.isBeadsOfRuin = false;\n                    }\n                }\n                break;\n            case \"Vessel of Ruin\":\n                if (\n                    !this.raiders\n                    .filter(r => r.id !== id && r.originalCurHP !== 0)\n                    .map(r => r.ability).includes(\"Vessel of Ruin\" as AbilityName)\n                ) {\n                    for (let field of this.fields) {\n                        field.isVesselOfRuin = false;\n                    }\n                }\n                break;\n            case \"Tablets of Ruin\":\n                if (\n                    !this.raiders\n                    .filter(r => r.id !== id && r.originalCurHP !== 0)\n                    .map(r => r.ability).includes(\"Tablets of Ruin\" as AbilityName)\n                ) {\n                    for (let field of this.fields) {\n                        field.isTabletsOfRuin = false;\n                    }\n                }\n                break;\n            // stackable abilities\n            case \"Steely Spirit\":\n                if (id !== 0) {\n                    for (let [index,field] of this.fields.entries()) {\n                        if (index !== 0 && index !== id) {\n                            field.attackerSide.steelySpirits -= 1;\n                        }\n                    }\n                }\n                break;\n            case \"Power Spot\":\n                if (id !== 0) {\n                    for (let [index,field] of this.fields.entries()) {\n                        if (index !== 0 && index !== id) {\n                            field.attackerSide.powerSpots -= 1;\n                        }\n                    }\n                }\n                break;\n            case \"Battery\":\n                if (id !==0) {\n                    for (let [index,field] of this.fields.entries()) {\n                        if (index !== 0 && index !== id) {\n                            field.attackerSide.batteries -= 1;\n                            if (field.attackerSide.batteries === 0) {\n                                field.attackerSide.isBattery = false;\n                            }\n                        }\n                    }\n                }\n                break;\n            case \"Friend Guard\":\n                if (id !== 0) {\n                    for (let fid=1; fid<5; fid++) {\n                        if (id !== fid) {\n                            this.fields[fid].attackerSide.friendGuards -= 1;\n                            if (this.fields[fid].attackerSide.friendGuards === 0) {\n                            }\n                        }\n                    }\n                }\n                break;\n            // single-side field abilities\n            case \"Aroma Veil\":\n                if (id === 0) {\n                    this.fields[0].attackerSide.isAromaVeil = false;\n                } else if (\n                    !this.raiders.slice(1)\n                    .filter(r => r.id !== id && r.originalCurHP !== 0)\n                    .map(r => r.ability).includes(\"Aroma Veil\" as AbilityName)\n                ) {\n                    for (let field of this.fields.slice(1)) {\n                        field.attackerSide.isAromaVeil = false;\n                    }\n                }\n                break;\n            case \"Flower Veil\":\n                if (id === 0) {\n                    this.fields[0].attackerSide.isFlowerVeil = false;\n                } else if (\n                    !this.raiders.slice(1)\n                    .filter(r => r.id !== id && r.originalCurHP !== 0)\n                    .map(r => r.ability).includes(\"Flower Veil\" as AbilityName)\n                ) {\n                    for (let field of this.fields.slice(1)) {\n                        field.attackerSide.isFlowerVeil = false;\n                    }\n                }\n                break;\n            case \"Dazzling\":\n            case \"Queenly Majesty\":\n            case \"Armor Tail\":\n                if (id === 0) {\n                    this.fields[0].attackerSide.isDazzling = false;\n                } else if (\n                    !this.raiders.slice(1)\n                    .filter(r => r.id !== id && r.originalCurHP !== 0)\n                    .some(r => [\"Dazzling\", \"Queenly Majesty\", \"Armor Tail\"].includes(r.ability as AbilityName))\n                ) {\n                    for (let field of this.fields.slice(1)) {\n                        field.attackerSide.isDazzling = false;\n                    }\n                }\n                break;\n            // Plus-Minus check\n            case \"Plus\":\n            case \"Minus\":\n                const allyIDs = id !== 0 ? [1,2,3,4].filter(i => i !== id) : [];\n                const plusMinusCount = allyIDs.reduce((p, c) => p + (this.getPokemon(c).ability === \"Minus\" || this.getPokemon(c).ability === \"Plus\" ? 1 : 0), 0);\n                for (id of allyIDs) {\n                    const ally = this.getPokemon(id);\n                    if (ally.originalCurHP > 0 && ally.ability === \"Minus\" || ally.ability === \"Plus\") {\n                        ally.abilityOn = plusMinusCount > 1;\n                    }\n                }\n                break;\n            // Individuual changes\n            case \"Protosynthesis\":\n            case \"Quark Drive\":\n            case \"Orichalcum Pulse\":\n            case \"Hadron Engine\":\n                poke.boostedStat = undefined;\n                poke.isQP = false;\n                poke.usedBoosterEnergy = false;\n                break;\n            default: break;\n        }\n    }\n\n    public faint(id: number) {\n        let pokemon = this.getPokemon(id);\n        const ability = pokemon.ability;\n        // check Receiver / Power of Alchemy\n        for (let i=1; i<5; i++) {\n            if (i === id) { continue; }\n            const ally = this.getPokemon(i);\n            if ((ally.ability === \"Receiver\" || ally.ability === \"Power Of Alchemy\") && ally.originalCurHP !== 0) {\n                if (ability && !persistentAbilities[\"NoReceiver\"].includes(ability)) {\n                    ally.ability = ability;\n                }\n            }\n        }\n        // check Soul-Heart\n        for (let i=0; i<5; i++) {\n            if (i === id) { continue; }\n            const poke = this.getPokemon(i);\n            if (poke.ability === \"Soul-Heart\" && poke.originalCurHP !== 0) {\n                this.applyStatChange(i, {spa: 1}, true, i);\n            }\n        }\n        // handle permanent cheer stacking\n        if (pokemon.field.attackerSide.isAtkCheered) {\n            pokemon.permanentAtkCheers += 1;\n        }\n        if (pokemon.field.attackerSide.isDefCheered) {\n            pokemon.permanentDefCheers += 1;\n        }\n        pokemon.field.attackerSide.isAtkCheered = 0;\n        pokemon.field.attackerSide.isDefCheered = 0;\n        // remove some \"field\" modifiers\n        pokemon.field.attackerSide.isHelpingHand = false;\n        pokemon.field.attackerSide.isCharged = false;\n        pokemon.field.attackerSide.isProtected = false;\n        pokemon.field.attackerSide.isWideGuard = false;\n        pokemon.field.attackerSide.isQuickGuard = false;\n        // reset stats, status, etc, keeping a few things. HP is reset upon switch-in\n        const originalSpecies = new Pokemon(9, pokemon.originalSpecies || pokemon.name, {\n            ivs: pokemon.ivs,\n            evs: pokemon.evs,\n            nature: pokemon.nature,\n            statMultipliers: pokemon.statMultipliers,\n            bossMultiplier: pokemon.bossMultiplier,\n        });\n        pokemon.name = originalSpecies.name;\n        pokemon.species = originalSpecies.species;\n        pokemon.weightkg = originalSpecies.weightkg;\n        pokemon.types = originalSpecies.types;\n        pokemon.stats = originalSpecies.stats;\n        pokemon.rawStats = originalSpecies.rawStats;\n        pokemon.isTransformed = false;\n        pokemon.isChangedForm = false;\n        pokemon.originalAbility = pokemon.originalFormAbility as AbilityName;\n        if (pokemon.originalMoves) {\n            pokemon.moveData = pokemon.originalMoves;\n            pokemon.moves = pokemon.originalMoves.map(m => m.name);\n        }\n        pokemon.ability = pokemon.originalAbility as AbilityName; // restore original ability\n        pokemon.abilityOn = false;\n        pokemon.boosts = {hp: 0, atk: 0, def: 0, spa: 0, spd: 0, spe: 0, eva: 0, acc: 0};\n        pokemon.isPumped = 0;\n        pokemon.isMicle = false;\n        pokemon.isMinimize = false;\n        pokemon.randomBoosts = 0;\n        pokemon.alliesFainted = (pokemon.alliesFainted || 0) + 1;\n        pokemon.status = \"\";\n        pokemon.isSleep = 0;\n        pokemon.isFrozen = 0;\n        pokemon.isYawn = 0;\n        pokemon.syrupBombDrops = 0;\n        pokemon.volatileStatus = [];\n        pokemon.originalCurHP = 0;\n        pokemon.isEndure = false;\n        pokemon.isTaunt = 0;\n        pokemon.isCharging = false;\n        pokemon.isRecharging = false;\n        pokemon.abilityNullified = undefined;\n        pokemon.moveRepeated = undefined;\n        pokemon.isChoiceLocked = false;\n        pokemon.isSaltCure = false;\n        pokemon.usedBoosterEnergy = false;\n        pokemon.boostedStat = undefined;\n        pokemon.isIngrain = false;\n        pokemon.isSmackDown = false;\n        pokemon.stockpile = 0;\n        pokemon.isEncore = 0;\n        pokemon.isTorment = false;\n        pokemon.isDisable = 0;\n        pokemon.disabledMove = undefined;\n        pokemon.isThroatChop = 0;\n        pokemon.hasExtraType =false;\n        pokemon.substitute = undefined;\n        pokemon.moveData = pokemon.originalMoves || pokemon.moveData;\n        pokemon.moves = pokemon.moveData.map(m => m.name);\n        \n        pokemon.delayedMoveCounter = undefined;\n        pokemon.delayedMoveSource = undefined;\n        pokemon.delayedMove = undefined;        \n\n        // increment fainted count\n        pokemon.timesFainted += 1;\n        \n        // remove ability effects that are removed upon fainting\n        this.removeAbilityFieldEffect(id, ability);\n    }\n\n    public switchIn(id: number): string[][] {\n        const pokemon = this.getPokemon(id);\n        let ability = pokemon.ability;\n        // reset HP and damage rolls\n        pokemon.originalCurHP = pokemon.maxHP();\n        pokemon.cumDamageRolls = new CumulativeRolls();\n        pokemon.cumDamageRolls.addSequentialCondition(pokemon.item)\n        // check Neutralizing Gas\n        const neutralizingGas = this.raiders.reduce((p, c) => p || c.ability === \"Neutralizing Gas\", false);\n        if (neutralizingGas && !pokemon.hasItem(\"Ability Shield\") && ability !== \"Neutralizing Gas\") { \n            pokemon.abilityNullified = -1;\n        }\n        // add abilites that Take Effect upon switch-in\n        const flags = this.addAbilityFieldEffect(id, ability);\n        // Mew stat boosts for Mewtwo event.\n        if (id !== 0 && pokemon.name === \"Mew\" && this.raiders[0].name === \"Mewtwo\") {\n            this.raiders[id] = new Raider(\n                id,\n                pokemon.role,\n                pokemon.shiny,\n                false,\n                pokemon.field.clone(),\n                new Pokemon(\n                    gen,\n                    pokemon.name as SpeciesName,\n                    {\n                        ...pokemon,\n                        rawStats: undefined,\n                        stats: undefined,\n                        statMultipliers: {\n                            hp: 1.5,\n                            atk: 1.2,\n                            def: 1.2,\n                            spa: 1.2,\n                            spd: 1.2,\n                            spe: 1.2,\n                        }\n                    }\n                ),\n                [...pokemon.moveData],\n                [...(pokemon.extraMoves || [])],\n                [...(pokemon.extraMoveData || [])],\n\n            );\n            this.raiders[id].originalCurHP = this.raiders[id].maxHP();\n            flags[id].push(pokemon.name + \" is going to go all out against this formidable opponent!\")\n        }\n        return flags;\n    }\n\n    public transform(id:number, target: number): boolean {\n        const pokemon = this.getPokemon(id);\n        const targetPokemon = this.getPokemon(target);\n        if (!pokemon.isTransformed && !targetPokemon.isTransformed) {\n            pokemon.transformInto(targetPokemon);\n            this.changeAbility(id, targetPokemon.ability || \"(No Ability)\");\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n","import { RaidBattle, RaidBattleInfo, RaidBattleResults } from \"../raidcalc/RaidBattle\";\nimport { MoveData, RaidTurnInfo, TurnGroupInfo } from \"../raidcalc/interface\";\nimport { RaidState } from \"../raidcalc/RaidState\";\nimport { Raider } from \"../raidcalc/Raider\";\nimport { MoveName } from \"../calc/data/interface\";\nimport { RaidTurn, RaidTurnResult } from \"../raidcalc/RaidTurn\";\n\n// expand groups with repeats into multiple groups\nfunction expandRepeats(groups: TurnGroupInfo[]) {\n    const newGroups: TurnGroupInfo[] = [];\n    for (let g of groups) {\n        for (let i=0; i<(g.repeats || 1); i++) {\n            newGroups.push(\n                {\n                    ...g,\n                    repeats: 1,\n                }\n            );\n        }\n    }\n    return newGroups;\n}\n\n// break groups into \"chunks\" at points where \"(Optimal Move)\" is selected for the boss\nfunction splitGroups(groups: TurnGroupInfo[]): TurnGroupInfo[][] {\n    const groupsChunks: TurnGroupInfo[][] = [];\n    let currentChunk: TurnGroupInfo[] = [];\n    for (let i = 0; i < groups.length; i++) {\n        let g = groups[i];\n        if (\n            g.turns.some((t) => t.bossMoveInfo.moveData.name === \"(Optimal Move)\")\n        ) {\n            let partialGroup: TurnGroupInfo = {\n                id: g.id,\n                turns: [],\n                repeats: g.repeats,\n            }\n            for (let j = 0; j < g.turns.length; j++) {\n                const t = g.turns[j]\n                partialGroup.turns.push(t);\n                if (\n                    (t.bossMoveInfo.moveData.name === \"(Optimal Move)\")\n                ) {\n                    currentChunk.push(partialGroup);\n                    groupsChunks.push(currentChunk);\n                    partialGroup = {\n                        id: g.id,\n                        turns: [],\n                        repeats: g.repeats,\n                    }\n                    currentChunk = [];\n                } else if (j === g.turns.length-1) {\n                    currentChunk.push(partialGroup);\n                }\n            }\n        } else {\n            currentChunk.push(g);\n            if (i === groups.length-1) {\n                groupsChunks.push(currentChunk);\n            }\n        }\n    }\n    return groupsChunks;\n}\n\n// checks for changes in stats and other modifiers between two states for a single raider\nfunction nonHPChanges(caseA: Raider, caseB: Raider): boolean {\n    const boostsAreEqual = (\n        caseA.boosts.atk === caseB.boosts.atk &&\n        caseA.boosts.def === caseB.boosts.def &&\n        caseA.boosts.spa === caseB.boosts.spa &&\n        caseA.boosts.spd === caseB.boosts.spd &&\n        caseA.boosts.spe === caseB.boosts.spe &&\n        caseA.boosts.acc === caseB.boosts.acc &&\n        caseA.boosts.eva === caseB.boosts.eva\n    );\n    return (\n        !boostsAreEqual ||\n        caseA.item !== caseB.item ||\n        caseA.status !== caseB.status ||\n        caseA.ability !== caseB.ability ||\n        caseA.abilityOn !== caseB.abilityOn ||\n        caseA.isTera !== caseB.isTera ||\n        caseA.isQP !== caseB.isQP ||\n        caseA.isPumped !== caseB.isPumped ||\n        caseA.isMicle !== caseB.isMicle ||\n        caseA.randomBoosts !== caseB.randomBoosts ||\n        caseA.timesFainted !== caseB.timesFainted ||\n        caseA.isTaunt !== caseB.isTaunt ||\n        caseA.isEndure !== caseB.isEndure ||\n        caseA.isYawn !== caseB.isYawn ||\n        caseA.syrupBombDrops !== caseB.syrupBombDrops ||\n        (caseA.moves.includes(\"Rage Fist\" as MoveName) && (caseA.hitsTaken !== caseB.hitsTaken)) ||\n        caseA.isFrozen !== caseB.isFrozen ||\n        caseA.isChoiceLocked !== caseB.isChoiceLocked ||\n        caseA.isEncore !== caseB.isEncore ||\n        caseA.isTorment !== caseB.isTorment ||\n        caseA.isDisable !== caseB.isDisable ||\n        caseA.isIngrain !== caseB.isIngrain ||\n        caseA.abilityNullified !== caseB.abilityNullified ||\n        caseA.field.terrain !== caseB.field.terrain ||\n        caseA.field.weather !== caseB.field.weather ||\n        caseA.field.isTrickRoom !== caseB.field.isTrickRoom ||\n        caseA.field.isWonderRoom !== caseB.field.isWonderRoom ||\n        caseA.field.isMagicRoom !== caseB.field.isMagicRoom ||\n        caseA.field.isCloudNine !== caseB.field.isCloudNine ||\n        caseA.field.isSwordOfRuin !== caseB.field.isSwordOfRuin ||\n        caseA.field.isBeadsOfRuin !== caseB.field.isBeadsOfRuin ||\n        caseA.field.isVesselOfRuin !== caseB.field.isVesselOfRuin ||\n        caseA.field.isTabletsOfRuin !== caseB.field.isTabletsOfRuin ||\n        caseA.field.attackerSide.isAuroraVeil !== caseB.field.attackerSide.isAuroraVeil ||\n        caseA.field.attackerSide.isReflect !== caseB.field.attackerSide.isReflect ||\n        caseA.field.attackerSide.isLightScreen !== caseB.field.attackerSide.isLightScreen ||\n        caseA.field.attackerSide.isSafeguard !== caseB.field.attackerSide.isSafeguard ||\n        caseA.field.attackerSide.isMist !== caseB.field.attackerSide.isMist ||\n        caseA.field.attackerSide.isTailwind !== caseB.field.attackerSide.isTailwind ||\n        caseA.field.attackerSide.isSeeded !== caseB.field.attackerSide.isSeeded ||\n        caseA.field.attackerSide.powerSpots !== caseB.field.attackerSide.powerSpots ||\n        caseA.field.attackerSide.steelySpirits !== caseB.field.attackerSide.steelySpirits ||\n        caseA.field.attackerSide.friendGuards !== caseB.field.attackerSide.friendGuards ||\n        caseA.field.attackerSide.batteries !== caseB.field.attackerSide.batteries\n    );\n}\n\n// checks if a move results in secondary effects or turn order changes\nfunction moveIsInteresting(resultA: RaidTurnResult, resultB: RaidTurnResult): boolean {\n    const targetID = resultB.bossMoveInfo.targetID;\n    const targetA = resultA.state.raiders[targetID];\n    const targetB = resultB.state.raiders[targetID];\n    const bossA = resultA.state.raiders[0];\n    const bossB = resultB.state.raiders[0];\n\n    const orderChange = resultA.raiderMovesFirst !== resultB.raiderMovesFirst;\n    \n    return (\n        orderChange || \n        nonHPChanges(targetA, targetB) ||\n        nonHPChanges(bossA, bossB)\n    );\n}\n\n// returns the results from boss moves that have secondary effects or cause the most damage.\nfunction pickInterestingMoves(state: RaidState, turn: RaidTurnInfo, turnNumber: number, moveData: MoveData[]): RaidTurnResult[] {\n    const turnResults: RaidTurnResult[] = [];\n    let mostDamage = -Infinity;\n    let mostDamagingMoveIdx: number = -1;\n    let leastDamage = Infinity;\n    let leastDamagingMoveIdx: number = -1;\n    for (let i=0; i<moveData.length; i++) {\n        const m = moveData[i];\n        const turnInfo: RaidTurnInfo = {\n            ...turn,\n            bossMoveInfo: {\n                ...turn.bossMoveInfo,\n                moveData: m,\n            }\n        }\n        const result = new RaidTurn(state, turnInfo, turnNumber).result();\n        const targetID = turn.moveInfo.userID;\n        const damage = state.raiders[targetID].originalCurHP - result.state.raiders[targetID].originalCurHP;\n        if (damage > mostDamage) {\n            mostDamage = damage;\n            mostDamagingMoveIdx = i;\n        } \n        if (damage < leastDamage) {\n            leastDamage = damage;\n            leastDamagingMoveIdx = i;\n        }\n        turnResults.push(result);\n    }\n    const interestingMoveResults: RaidTurnResult[] = [turnResults[mostDamagingMoveIdx]];\n    if (leastDamagingMoveIdx !== mostDamagingMoveIdx) {\n        interestingMoveResults.push(turnResults[leastDamagingMoveIdx]);\n    }\n    let moveidx = 0;\n    while (moveidx < moveData.length) {\n        if (moveidx !== mostDamagingMoveIdx && moveidx !== leastDamagingMoveIdx) {\n            let resIsDifferent = true;\n            for (let r of interestingMoveResults) {\n                if (!moveIsInteresting(r, turnResults[moveidx])) {\n                    resIsDifferent = false;\n                    break;\n                }\n            }\n            if (resIsDifferent) {\n                interestingMoveResults.push(turnResults[moveidx]);\n            }\n        }\n        moveidx++;\n    }\n    // const interestingMoveResults = turnResults.filter(t => moveIsInteresting(noMoveResult, mostDamagingResult, t));\n    if (mostDamagingMoveIdx >= 0 && !interestingMoveResults.some((r) => r.bossMoveInfo.moveData.name === moveData[mostDamagingMoveIdx].name)) {\n        interestingMoveResults.push(turnResults[mostDamagingMoveIdx]);\n    }\n    if (interestingMoveResults.length === 0) { // This probably only happens when the boss faints unavoidably before moving\n        interestingMoveResults.push(turnResults[0]);\n    }\n    return interestingMoveResults;\n}\n\n// from a result up to a certain point, split the battle into multiple branches based on different choices for the boss's move\nfunction splitBranch(info: RaidBattleInfo, prevResults: RaidBattleResults, moveData: MoveData[]): RaidBattleResults[] {\n    let penultimateResult = prevResults;\n    if (info.groups.length > 1) {\n        penultimateResult = new RaidBattle({...info, groups: info.groups.slice(0,-1)}, penultimateResult).result();\n    }\n    const lastGroup = info.groups[info.groups.length-1];\n    if (lastGroup.turns.length > 1) {\n        penultimateResult = new RaidBattle({...info, groups: [{...lastGroup, turns: lastGroup.turns.slice(0,-1)}]}, prevResults).result();\n    }\n\n    const lastMove = lastGroup.turns[lastGroup.turns.length-1];\n    const previousTurn = penultimateResult.turnResults.length ? penultimateResult.turnResults[penultimateResult.turnResults.length - 1] : undefined;\n    const branchTurnResults = pickInterestingMoves(\n        penultimateResult.endState, \n        lastMove, \n        previousTurn ? (previousTurn.turnNumber + (previousTurn.moveInfo.moveData.name !== \"(No Move)\" ? 1 : 0)) : 0, \n        moveData\n    );\n    const branchResults = branchTurnResults.map((t) => {\n        const res: RaidBattleResults = {\n            endState: t.state,\n            turnResults: [...prevResults.turnResults, t],\n            turnZeroFlags: prevResults.turnZeroFlags,\n            turnZeroOrder: prevResults.turnZeroOrder,\n            turnZeroState: prevResults.turnZeroState,\n        }\n        return res;\n    });\n    return branchResults;\n}\n\n// recursively calculate the results of all \"interesting\" branches of the battle\nfunction calculateBranches(branchChunks: TurnGroupInfo[][], prevResults: RaidBattleResults[], moveData: MoveData[]): RaidBattleResults[] {\n    if (branchChunks.length === 0 ||\n        (branchChunks.reduce((acc, c) => acc + c.reduce((acc2, g) => acc2 + g.turns.length, 0), 0) === 0)\n    ) {\n        return prevResults;\n    }\n    if (branchChunks.length === 1) {\n        const lastGroup = branchChunks[0][branchChunks[0].length-1];\n        const lastTurn = lastGroup.turns[lastGroup.turns.length-1];\n        if (lastTurn.bossMoveInfo.moveData.name !== \"(Optimal Move)\") {\n            return prevResults.map((pr) => {\n                const info: RaidBattleInfo = {\n                    startingState: pr.endState,\n                    groups: branchChunks[0]\n                };\n                return new RaidBattle(info, pr).result();\n            });\n        }\n    }\n    const branchResults = prevResults.map((pr, i) => {\n        const branchInfo: RaidBattleInfo = {\n            startingState: pr.endState,\n            groups: branchChunks[0]\n        }\n        const nextResults = splitBranch(branchInfo, pr, moveData);\n        return calculateBranches(branchChunks.slice(1), nextResults, moveData);\n    }).flat();\n    return branchResults;\n}\n\nfunction resultObjective(result: RaidBattleResults): number {\n    const bossKO = result.endState.raiders[0].originalCurHP <= 0;\n    const raiderKOs = result.endState.raiders.slice(1).reduce((acc, r) => acc + r.timesFainted, 0);\n    const raiderKOChances = result.endState.raiders.slice(1).reduce((acc, r) => {\n        const koChance = r.cumDamageRolls.getKOChance(r.maxHP()) || 0;\n        const score = koChance === 0 ? 0 : Math.max(1, koChance)\n        return acc + score;\n    }, 0);\n    const raiderHP = result.endState.raiders.slice(1).reduce((acc, r) => acc + r.originalCurHP, 0);\n    return ( bossKO ? 0 : 1000000000 ) + raiderKOs * 1000000 + raiderKOChances * 5000 - raiderHP;\n}\n\nexport function optimizeBossMoves(raiders: Raider[], groups: TurnGroupInfo[]) {\n    const startingState = new RaidState(raiders);\n    const startingInfo: RaidBattleInfo = {\n        startingState: startingState,\n        groups: [],\n    }\n    const startingResult = new RaidBattle(startingInfo).result();\n\n    const branchChunks = splitGroups(expandRepeats(groups).filter((g) => g.turns.length > 0));\n    const branchResults = calculateBranches(branchChunks, [startingResult], raiders[0].moveData);\n    const branchScores = branchResults.map((r) => resultObjective(r));\n    console.log(\"Number of branches for boss move optimization: \" + branchResults.length);\n    const bestResult = branchResults[branchScores.indexOf(Math.max(...branchScores))];\n    return bestResult;\n}","import { RaidBattle, RaidBattleInfo } from \"../raidcalc/RaidBattle\";\nimport { TurnGroupInfo } from \"../raidcalc/interface\";\nimport { RaidState } from \"../raidcalc/RaidState\";\nimport { Raider } from \"../raidcalc/Raider\";\nimport { Field, Pokemon, Generations } from \"../calc\";\nimport { optimizeBossMoves } from \"../raidcalc/optmoves\";\n\ndeclare var self: DedicatedWorkerGlobalScope;\nexport {};\n\nconst gen = Generations.get(9);\n\nself.onmessage = (event: MessageEvent<{raiders: Raider[], groups: TurnGroupInfo[]}>) => {\n    const raidersMessage = event.data.raiders;\n    const raiders = raidersMessage.map((r) => new Raider(r.id, r.role, r.shiny, false, new Field(), new Pokemon(gen, r.name, {\n        level: r.level,\n        gender: r.gender,\n        bossMultiplier: r.bossMultiplier,\n        ability: r.ability,\n        nature: r.nature,\n        evs: r.evs,\n        ivs: r.ivs,\n        item: r.item,\n        teraType: r.teraType,\n        moves: r.moves,\n        shieldData: r.shieldData,\n    }), r.moveData, r.extraMoves, r.extraMoveData))\n\n    raiders[0].isTera = true; // ensure the boss is Tera'd on T0\n    for (let i = 0; i < raiders.length; i++) {\n        raiders[i].field.gameType = 'Doubles'; // affects Reflect/Light Screen/Aurora Veil \n    }\n\n    const numBranches = (event.data.groups.map((g) => g.turns.map((t) => t.bossMoveInfo.moveData.name === \"(Optimal Move)\" ? 1 : 0)).flat() as number[]).reduce((acc, v) => acc + v, 0);\n    if (numBranches > 0 && raiders[0].moveData.filter(m => m.name !== \"(No Move)\").length > 1) {\n        self.postMessage(JSON.parse(JSON.stringify(optimizeBossMoves(raiders, event.data.groups))));\n    } else {\n        const state = new RaidState(raiders);\n            const info: RaidBattleInfo = {\n                startingState: state,\n                groups: event.data.groups,\n            }\n        \n            const battle = new RaidBattle(info);\n            const result = battle.result();\n            self.postMessage(JSON.parse(JSON.stringify(result)));\n    }\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = function() {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [8064], function() { return __webpack_require__(87828); })\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"10b072bf\" + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/tera-raid-builder/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t7828: 1\n};\n\n// importScripts chunk loading\nvar installChunk = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = function(chunkId, promises) {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunktera_raid_builder\"] = self[\"webpackChunktera_raid_builder\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = function() {\n\treturn __webpack_require__.e(8064).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["toID","text","toLowerCase","replace","error","err","msg","Error","console","log","assignWithout","a","b","exclude","key","Object","prototype","hasOwnProperty","call","has","class2Type","coreToString","toString","coreHasOwn","getType","obj","String","isPlainObject","nodeType","window","isWindow","constructor","e","extend","options","name","src","copy","copyIsArray","clone","target","arguments","length","undefined","i","deep","this","Array","isArray","ADV","DPP","concat","BW","XY","SM","SS","SV","ABILITIES","_Symbol$iterator","Symbol","iterator","Abilities","gen","_classCallCheck","_createClass","value","id","ABILITIES_BY_ID","_regeneratorRuntime","mark","_id","wrap","_context","prev","next","t0","keys","t1","done","get","stop","Ability","kind","_i","_ABILITIES","_step","abilities","map","_iterator","_createForOfIteratorHelper","s","n","f","push","GSC","MEGA_STONES","Absolite","Abomasite","Aerodactylite","Aggronite","Alakazite","Altarianite","Ampharosite","Audinite","Banettite","Beedrillite","Blastoisinite","Blazikenite","Cameruptite","Crucibellite","Diancite","Galladite","Garchompite","Gardevoirite","Gengarite","Glalitite","Gyaradosite","Heracronite","Houndoominite","Kangaskhanite","Latiasite","Latiosite","Lopunnite","Lucarionite","Manectite","Mawilite","Medichamite","Metagrossite","Pidgeotite","Pinsirite","Sablenite","Salamencite","Sceptilite","Scizorite","Sharpedonite","Slowbronite","Steelixite","Swampertite","Tyranitarite","Venusaurite","sort","filter","BERRIES","t","p","Berry","ITEMS","Items","ITEMS_BY_ID","Item","megaEvolves","isBerry","naturalGift","berry","basePower","type","_ITEMS","items","RBY","bp","category","Absorb","drain","Acid","Amnesia","Barrage","multihit","Bide","Bind","Bite","Blizzard","Bonemerang","Bubble","Clamp","Constrict","Conversion","Counter","Crabhammer","highCritChance","Dig","Disable","recoil","Earthquake","Explosion","Fissure","Fly","Glare","Growth","Guillotine","Gust","Haze","hasCrashDamage","Metronome","Mimic","Minimize","Mist","Psychic","Psywave","Rage","Recover","Reflect","Rest","Roar","Slash","Sludge","Stomp","Struggle","Submission","Substitute","Swift","Thrash","Thunder","Transform","Twineedle","Whirlwind","Wrap","Growl","Leer","Surf","Toxic","Flash","Hypnosis","Waterfall","Tackle","Barrier","Flamethrower","Lick","Screech","Sing","Smog","Spore","Supersonic","Thunderbolt","Kinesis","Meditate","Sharpen","Teleport","Agility","Confusion","Cut","Ember","Harden","Headbutt","Peck","Pound","Psybeam","priority","Scratch","Slam","Smokescreen","Splash","Strength","Withdraw","Aeroblast","Attract","Curse","Detect","Encore","Endure","Flail","Foresight","Moonlight","Nightmare","Outrage","Present","Protect","Pursuit","Reversal","Safeguard","Sandstorm","Sketch","Spikes","Spite","Swagger","Synthesis","Thief","Twister","Crunch","Whirlpool","Magnitude","Charm","Snore","Rollout","Frustration","Return","Megahorn","Octazooka","Spark","makesContact","isSound","Assist","Astonish","Block","Bounce","Camouflage","Charge","Covet","Dive","Extrasensory","Hail","Ingrain","Memento","Overheat","self","boosts","spa","Revenge","Stockpile","Swallow","Taunt","Tickle","Trick","Uproar","Aromatherapy","Endeavor","Imprison","Recycle","Snatch","Torment","Wish","Facade","Howl","Refresh","Eruption","Flatter","Grudge","Superpower","atk","def","Yawn","isPunch","struggleRecoil","isBite","Acupressure","Assurance","Avalanche","Chatter","Copycat","Defog","Embargo","Feint","breaksProtect","Fling","Gravity","Payback","Pluck","Roost","Switcheroo","Tailwind","Captivate","Judgment","Punishment","Brine","Discharge","secondaries","Autotomize","Bestow","Entrainment","willCrit","Hex","Hurricane","Incinerate","Round","ignoreDefensive","Scald","Snarl","Soak","Steamroller","Synchronoise","Telekinesis","Quash","Acrobatics","Bulldoze","Coil","Electroweb","overrideOffensivePokemon","Glaciate","Inferno","Psyshock","overrideDefensiveStat","Psystrike","Retaliate","Venoshock","isBullet","isPulse","Powder","Geomancy","Rototiller","Belch","Boomburst","Celebrate","Confide","Electrify","Infestation","Moonblast","Nuzzle","zp","isZ","Catastropika","Instruct","mindBlownRecoil","Spotlight","Accelerock","Leafage","Liquidation","Lunge","Purify","maxPower","overrideOffensiveStat","Decorate","Eternabeam","isMax","Obstruct","Octolock","Overdrive","Poltergeist","Teatime","_LGPE_MOVES","isSlicing","isWind","Comeuppance","Doodle","Pounce","Psyblade","Ruination","Shelter","Snowscape","Thunderclap","Trailblaze","MOVES","Moves","MOVES_BY_ID","Move","data","flags","overrideDefensivePokemon","zMove","maxMove","contact","punch","bite","bullet","sound","pulse","slicing","wind","FLAGS","Set","_i2","_MOVES","moves","move","m","Arbok","types","bs","hp","at","df","sp","sl","weightkg","Arcanine","Articuno","Bellsprout","nfe","Blastoise","Bulbasaur","Chansey","gender","Charizard","Charmander","Charmeleon","Clefable","Clefairy","Cloyster","Dewgong","Diglett","Ditto","Dodrio","Doduo","Dragonair","Dragonite","Dratini","Drowzee","Dugtrio","Eevee","Ekans","Electabuzz","Electrode","Exeggcute","Exeggutor","Flareon","Gastly","Gengar","Geodude","Gloom","Golduck","Golem","Graveler","Grimer","Growlithe","Gyarados","Haunter","Hitmonchan","Hitmonlee","Horsea","Hypno","Ivysaur","Jigglypuff","Jolteon","Koffing","Lapras","Magikarp","Magmar","Magnemite","Magneton","Mankey","Meowth","Mew","Mewtwo","Moltres","Muk","Ninetales","Oddish","Persian","Pikachu","Poliwag","Poliwhirl","Poliwrath","Porygon","Primeape","Psyduck","Raichu","Rhydon","Rhyhorn","Sandshrew","Sandslash","Scyther","Seadra","Seel","Shellder","Slowbro","Slowpoke","Snorlax","Squirtle","Tauros","Tentacool","Tentacruel","Vaporeon","Venomoth","Venonat","Venusaur","Victreebel","Vileplume","Voltorb","Vulpix","Wartortle","Weepinbell","Weezing","Wigglytuff","Zapdos","sa","sd","Aipom","Ampharos","Ariados","Azumarill","Bayleef","Bellossom","Blissey","Chikorita","Chinchou","Cleffa","Croconaw","Cyndaquil","Delibird","Donphan","Dunsparce","Elekid","Entei","Espeon","Feraligatr","Flaaffy","Forretress","Furret","Girafarig","Gligar","Granbull","Heracross","Hitmontop","Hoothoot","Hoppip","Houndoom","Houndour","Igglybuff","Jumpluff","Kingdra","Lanturn","Larvitar","Lugia","Magby","Magcargo","Mareep","Marill","Meganium","Misdreavus","Murkrow","Noctowl","Phanpy","Pichu","Piloswine","Pineco","Politoed","Porygon2","Pupitar","Quagsire","Quilava","Qwilfish","Raikou","Scizor","Sentret","Skarmory","Skiploom","Slowking","Slugma","Smeargle","Sneasel","Snubbull","Spinarak","Stantler","Sudowoodo","Suicune","Sunflora","Sunkern","Swinub","Teddiursa","Totodile","Typhlosion","Tyranitar","Tyrogue","Umbreon","Ursaring","Wooper","Yanma","Altaria","Azurill","Bagon","Banette","Barboach","Beldum","Blaziken","Breloom","Cacnea","Cacturne","Camerupt","Chimecho","Combusken","Corphish","Crawdaunt","Deoxys","otherFormes","baseSpecies","Dusclops","Duskull","Feebas","Flygon","Gardevoir","Glalie","Groudon","Grovyle","Grumpig","Gulpin","Hariyama","Illumise","Jirachi","Kirlia","Kyogre","Latias","Latios","Lombre","Lotad","Ludicolo","Luvdisc","Makuhita","Marshtomp","Masquerain","Medicham","Meditite","Metagross","Metang","Mightyena","Milotic","Minun","Mudkip","Nosepass","Numel","Nuzleaf","Pelipper","Plusle","Poochyena","Ralts","Rayquaza","Regice","Regirock","Registeel","Sableye","Salamence","Sceptile","Seedot","Seviper","Shelgon","Shiftry","Shroomish","Shuppet","Slaking","Slakoth","Snorunt","Spoink","Surskit","Swablu","Swalot","Swampert","Torchic","Torkoal","Trapinch","Treecko","Tropius","Vibrava","Vigoroth","Volbeat","Whiscash","Wingull","Zangoose","Abomasnow","Ambipom","Arceus","Azelf","Bastiodon","Bonsly","Bronzong","Bronzor","Buizel","Chimchar","Chingling","Combee","Cranidos","Cresselia","Croagunk","Darkrai","Dialga","Drifblim","Drifloon","Dusknoir","Electivire","Empoleon","Finneon","Floatzel","Froslass","Gabite","Gallade","Garchomp","Gastrodon","Gible","Giratina","Glaceon","Gliscor","Grotle","Happiny","Heatran","Hippopotas","Hippowdon","Honchkrow","Infernape","Kricketot","Kricketune","Leafeon","Lucario","Lumineon","Luxio","Luxray","Magmortar","Magnezone","Mamoswine","Manaphy","Mesprit","Mismagius","Monferno","Munchlax","Pachirisu","Palkia","Phione","Piplup","Prinplup","Probopass","Rampardos","Regigigas","Rhyperior","Riolu","Rotom","Shaymin","Shellos","Shieldon","Shinx","Skuntank","Snover","Spiritomb","Staraptor","Staravia","Starly","Stunky","Torterra","Toxicroak","Turtwig","Uxie","Vespiquen","Weavile","Yanmega","Alomomola","Amoonguss","Axew","Basculin","Beartic","Bisharp","Blitzle","Braviary","Chandelure","Cinccino","Cobalion","Conkeldurr","Cottonee","Cryogonal","Cubchoo","Deerling","Deino","Dewott","Drilbur","Ducklett","Duosion","Eelektrik","Eelektross","Emboar","Excadrill","Foongus","Fraxure","Galvantula","Golett","Golurk","Gothita","Gothitelle","Gothorita","Gurdurr","Haxorus","Hydreigon","Joltik","Keldeo","Krokorok","Krookodile","Kyurem","Lampent","Landorus","Larvesta","Leavanny","Lilligant","Litwick","Mandibuzz","Meloetta","Mienfoo","Mienshao","Minccino","Oshawott","Pawniard","Petilil","Pignite","Reshiram","Reuniclus","Rufflet","Samurott","Sandile","Sawsbuck","Scrafty","Scraggy","Serperior","Servine","Sewaddle","Snivy","Solosis","Swadloon","Swanna","Tepig","Terrakion","Thundurus","Timburr","Tornadus","Tynamo","Virizion","Volcarona","Vullaby","Whimsicott","Zebstrika","Zekrom","Zoroark","Zorua","Zweilous","Avalugg","Bergmite","Braixen","Carbink","Chesnaught","Chespin","Clauncher","Clawitzer","Diancie","Dedenne","Delphox","Dragalge","Espurr","Fennekin","Flabébé","Fletchinder","Fletchling","Floette","Florges","Froakie","Frogadier","Gogoat","Goodra","Goomy","Greninja","Hawlucha","Hoopa","Inkay","Klefki","Litleo","Malamar","Noibat","Noivern","Phantump","Pyroar","Quilladin","Scatterbug","Skiddo","Skrelp","Sliggoo","Spewpa","Sylveon","Talonflame","Trevenant","Vivillon","Volcanion","Araquanid","Bounsweet","Brionne","Bruxish","Charjabug","Comfey","Cosmoem","Cosmog","Crabominable","Crabrawler","Cutiefly","Dartrix","Decidueye","Dewpider","Fomantis","Grubbin","Gumshoos","Incineroar","Komala","Litten","Lunala","Lurantis","Lycanroc","Magearna","Mareanie","Mimikyu","Minior","Mudbray","Mudsdale","Necrozma","Oranguru","Oricorio","Palossand","Passimian","Pikipek","Popplio","Primarina","Ribombee","Rockruff","Rowlet","Salandit","Salazzle","Sandygast","Solgaleo","Steenee","Torracat","Toucannon","Toxapex","Trumbeak","Tsareena","Vikavolt","Yungoos","Alcremie","Appletun","Applin","Arrokuda","Barraskewda","Calyrex","Carkol","Chewtle","Cinderace","Coalossal","Copperajah","Corviknight","Corvisquire","Cramorant","Cufant","Dragapult","Drakloak","Drednaw","Dreepy","Drizzile","Duraludon","Eiscue","Eternatus","Falinks","Flapple","Frosmoth","Glastrier","Greedent","Grimmsnarl","Grookey","Hatenna","Hatterene","Hattrem","Impidimp","Indeedee","Inteleon","Milcery","Morgrem","Morpeko","Perrserker","Pincurchin","Polteageist","Raboot","Regidrago","Regieleki","Rillaboom","Rolycoly","Rookidee","Sandaconda","Scorbunny","Silicobra","Sinistea","Skwovet","Snom","Sobble","Spectrier","Stonjourner","Thwackey","Toxel","Toxtricity","Urshifu","Zacian","Zamazenta","Zarude","SPECIES","Annihilape","Arboliva","Archaludon","Arctibax","Armarouge","Baxcalibur","Bellibolt","Bombirdier","Brambleghast","Bramblin","Capsakid","Ceruledge","Cetitan","Cetoddle","Charcadet","Clodsire","Crocalor","Cyclizar","Dachsbun","Dipplin","Dolliv","Dondozo","Dudunsparce","Espathra","Farigiraf","Fezandipiti","Fidough","Finizen","Flamigo","Flittle","Floragato","Frigibax","Fuecoco","Garganacl","Gholdengo","Gimmighoul","Glimmet","Glimmora","Grafaiai","Greavard","Houndstone","Hydrapple","Kilowattrel","Kingambit","Klawf","Koraidon","Lechonk","Lokix","Mabosstiff","Maschiff","Maushold","Meowscarada","Miraidon","Munkidori","Nacli","Naclstack","Nymble","Ogerpon","Oinkologne","Okidogi","Orthworm","Palafin","Pawmi","Pawmo","Pawmot","Pecharunt","Poltchageist","Quaquaval","Quaxly","Quaxwell","Rabsca","Rellor","Revavroom","Scovillain","Shroodle","Skeledirge","Smoliv","Spidops","Sprigatito","Squawkabilly","Tadbulb","Tandemaus","Tarountula","Tatsugiri","Terapagos","Tinkatink","Tinkaton","Tinkatuff","Toedscool","Toedscruel","Varoom","Veluza","Wattrel","Wiglett","Wugtrio","Basculegion","Enamorus","Kleavor","Overqwil","Sneasler","Ursaluna","Wyrdeer","Species","SPECIES_BY_ID","Specie","baseStats","spd","spe","includes","endsWith","_toConsumableArray","EXCLUDE","_SPECIES","species","specie","Normal","Grass","Fire","Water","Electric","Ice","Flying","Bug","Poison","Ground","Rock","Fighting","Ghost","Dragon","Dark","Steel","Fairy","TYPE_CHART","Stellar","Types","TYPES_BY_ID","Type","effectiveness","_TYPE_CHART","typeChart","_objectSpread","NATURES","Adamant","Bashful","Bold","Brave","Calm","Careful","Docile","Gentle","Hardy","Hasty","Impish","Jolly","Lax","Lonely","Mild","Modest","Naive","Naughty","Quiet","Quirky","Rash","Relaxed","Sassy","Serious","Timid","Natures","NATURES_BY_ID","Nature","_ref","_ref2","_slicedToArray","plus","minus","nature","Generations","_class","Generation","num","natures","Field","field","gameType","weather","weatherTurnsRemaining","terrain","terrainTurnsRemaining","isMagicRoom","isWonderRoom","isGravity","isAuraBreak","isFairyAura","isDarkAura","isBeadsOfRuin","isSwordOfRuin","isTabletsOfRuin","isVesselOfRuin","isTrickRoom","isCloudNine","isTeraformZero","attackerSide","defenderSide","Side","_len","weathers","_key","_len2","terrains","_key2","side","spikes","steelsurge","vinelash","wildfire","cannonade","volcalith","isSR","isReflect","isLightScreen","isDefCheered","isProtected","isWideGuard","isQuickGuard","isSeeded","isForesight","isTailwind","isHelpingHand","isAtkCheered","isFlowerGift","isDazzling","isFriendGuard","friendGuards","isAuroraVeil","isBattery","batteries","isPowerSpot","powerSpots","steelySpirits","isSwitching","isCharged","isMist","isSafeguard","isAromaVeil","isFlowerVeil","SEED_BOOSTED_STAT","getItemBoostType","item","getBerryResistType","FLING_120","FLING_100","FLING_90","FLING_85","FLING_80","FLING_70","FLING_60","FLING_30","FLING_10","getFlingPower","getNaturalGift","_gen$items$get","gift","getTechnoBlast","HP_TYPES","HP","ivs","dvs","Stats","stat","IVToDV","spc","iv","Math","floor","dv","DVToIV","base","ev","level","calcStatRBY","calcStatADV","mods","nat","calcStatRBYFromDV","hpType","DVsToIVs","tr","bits","pow","atkDV","defDV","speDV","spcDV","power","hpTypeX","hpPowerX","EV_ITEMS","isGrounded","pokemon","hasItem","isIngrain","isSmackDown","hasType","hasAbility","getModifiedStat","mod","min","max","modernGenBoostTable","OF16","computeFinalStats","attacker","defender","sides","stats","_sides","_sides$_i","getFinalSpeed","rawStats","speed","speedMods","abilityOn","status","isQPActive","getQPBoostedStat","apply","named","OF32","pokeRound","chainMods","hasStatus","getMoveEffectiveness","isGhostRevealed","isRingTarget","checkAirLock","checkTeraformZero","checkForecast","checkItem","magicRoomActive","checkWonderRoom","wonderRoomActive","checkIntimidate","source","blocked","checkDownload","checkInfiltrator","affectedSide","checkSeedBoost","terrainSeed","substring","indexOf","hasTerrain","checkMultihitBoost","desc","usedWhiteHerb","attackerItem","defenderAbility","ability","attackerAbility","defenderItem","simple","dropsStats","lowerBound","upperBound","_step2","M","_iterator2","getBaseDamage","attack","defense","boostedStat","bestStat","_arr","getFinalDamage","baseAmount","isBurned","stabMod","finalMod","protect","damageAmount","getShellSideArmCategory","getWeightFactor","countBoosts","randomBoosts","sum","_i3","_STATS","boost","getEVDescriptionText","natureName","evs","displayStat","handleFixedDamageMoves","ceil","display","damage","rawDesc","notation","_damageRange","damageRange","_damageRange2","minDamage","maxDamage","hits","minDisplay","toDisplay","maxHP","maxDisplay","description","_getDescriptionLevels","elide","getDescriptionLevels","_getDescriptionLevels2","attackerLevel","defenderLevel","output","attackBoost","appendIfSet","attackEVs","rivalry","timesFainted","attackerTera","attackerName","isDefCheeredBodyPress","isFlowerGiftAttacker","moveName","moveBP","moveType","moveTurns","defenseBoost","HPEVs","defenseEVs","isDefenderDynamaxed","defenderTera","defenderName","isFlowerGiftDefender","isCritical","isSpread","shieldActive","buildDescription","damageText","bossMultiplier","dp","parseFloat","toFixed","getBossMultiplierDesc","koChanceText","getKOChance","getRecovery","_damageRange5","_damageRange6","minD","maxD","recovery","ignoresShellBell","round","percentHealed","range","j","drained","trunc","minHealthRecovered","maxHealthRecovered","getRecoil","_damageRange7","_damageRange8","damageOverflow","curHP","minRecoilDamage","maxRecoilDamage","genMultiplier","gen4CrashDamage","slice","d","combined","combine","isNaN","chance","timesUsed","timesUsedWithMetronome","hazards","texts","rockType","steelType","getHazards","eot","getEndOfTurn","toxicCounter","qualifier","r","val","squashMultihit","hazardsText","serializeText","afterText","computeKOChance","predictTotal","TRAPPING","hasWeather","loseItem","isSaltCure","isWaterOrSteel","teraType","toxicDamage","lastc","c","arr","str","toAppend","Result","fullDesc","_damageRange3","_damageRange4","recoveryText","recoilText","displayMove","calculateRBYGSC","result","fixedDamage","typeEffectivenessPrecedenceRules","firstDefenderType","secondDefenderType","type1Effectiveness","type2Effectiveness","typeEffectiveness","isCrit","isPhysical","attackStat","defenseStat","ignoreMods","lv","lookup","baseDamage","itemBoostType","getSimpleModifiedStat","simpleMod","calculateBWXY","_gen$species$get","isAerilate","isPixilate","isRefrigerate","isNormalize","noTypeChange","normal","resistedKnockOffDamage","turnOrder","switching","w","wr","bpMods","aura","isAttackerAura","isDefenderAura","isUserAuraBreak","isFieldAuraBreak","isFieldFairyAura","isFieldDarkAura","attackSource","atMods","startsWith","hitsPhysical","dfMods","applyBurn","finalMods","childDamage","child","simpleMultiplier","hasWhiteHerb","dropCount","_loop","times","newAttack","damageMultiplier","affectedAmount","newFinalDamage","calculateSMSSSV","atkTeraType","isTera","defTeraType","isDynamaxed","defenderIgnoresAbility","attackerIgnoresAbility","moveIgnoresAbility","critStages","isPumped","holdingUmbrella","getMultiAttack","hasAteAbilityTypeChange","isGalvanize","isLiquidVoice","weightBasedMove","zLostHP","lostHP","_attacker$item","stockpile","hitsTaken","isMinimize","terrainMultiplier","auraBreak","ii","iii","powMod","calculateBPModsSMSSSV","calculateBasePowerSMSSSV","atkSourceTeraType","isTabletsOfRuinActive","isVesselOfRuinActive","attackerAtkCheerStack","permanentAtkCheers","attackerDefCheerStack","permanentDefCheers","defenderAtkCheerStack","calculateAtModsSMSSSV","calculateAttackSMSSSV","isSwordOfRuinActive","isBeadsOfRuinActive","defenderDefCheerStack","calculateDfModsSMSSSV","calculateDefenseSMSSSV","hasOriginalType","calculateFinalModsSMSSSV","shieldData","damageCoef","shieldDamageRateTera","shieldDamageRateTeraChange","shieldDamageRate","dmg","dmg2","MECHANICS","screenMultiplier","rawAttack","rawDefense","filterMod","ebeltMod","tintedMod","berryMod","STATS","SPC","Pokemon","_this$species$abiliti","statMultipliers","dynamaxLevel","alliesFainted","isQP","usedBoosterEnergy","isMicle","originalCurHP","volatileStatus","hasExtraType","abilityNullified","overrides","withDefault","getHPDV","rawStatsProvided","statsProvided","calcStat","_len3","statuses","_key3","_len4","_key4","_types","_len5","_key5","_types2","_len6","names","_key6","speciesName","current","match","cur","SPECIAL","_data$zMove","_data$self","originalName","useZ","useMax","maxMoveName","pokemonSpecies","isStatus","pokemonAbility","MAXMOVES_TYPING","getMaxMoveName","zMoveName","ZMOVES_TYPING","getZMoveName","typelessDamage","abs","State","calculate","A","_A$Move","_inherits","_super","_createSuper","_A$Pokemon","_super2","getForme","absoluteFloor","ailment","isSuperEffective","testmove","pokemonIsGrounded","grounded","lastMove","getAccuracy","movedata","movesSecond","movename","isCharging","accuracy","guaranteedHitMoves","baseAccuracy","weatherMod","accStage","acc","evaStage","eva","calcStage","effects","getBpModifier","damaged","RAID_ACTIONS","isRaidAction","isRegularMove","getCritChance","getConditionalRoll","roll","condition","newDamage","prevDamage","getRollCounts","rolls","chances","cumRolls","Map","addRollsToCounts","newRolls","rollChance","prevCumRolls","size","set","prevRolls","from","clear","prevRoll","combinedRoll","prevChance","newChance","catRollCounts","aRolls","bRolls","aCount","cCount","bCount","combineRollCounts","conditions","seqCondition","seqRolls","aChance","bChance","cond","seqRoll","cChance","CumulativeRolls","persistentConditions","sequentialConditions","condIdx","findIndex","splice","condRolls","seqConditionalRolls","_combineRollCounts","testCounter","every","_combineRollCounts2","totalRolls","koRolls","values","reduce","toPrecision","nonMoveActions","ignoredVolatileStatuses","healCheerRoll","RaidMove","moveData","raidState","userID","targetID","raiderID","movesFirst","raidMoveOptions","isBossAction","flinch","instructed","delayed","_raidState","_raiders","_user","_affectedIDs","_fields","_targetID","_doesNotAffect","_causesFlinch","_blockedBy","_isSheerForceBoosted","_flingItem","_powerHerbUsed","_moveType","_isSpread","_damage","_damageRolls","_healing","_drain","_desc","_flags","_warnings","minHits","maxHits","raiders","setOutputRaidState","checkIfMoves","checkShield","checkSheerForce","setAffectedPokemon","shieldBreakStun","chargeMoves","isRecharging","setMoveType","setDoesNotAffect","checkProtection","applyProtection","applyPreDamageEffects","applyDamage","applyDrain","applyHealing","applySelfDamage","applyFlinch","applyStatChanges","applyAilment","applyFieldChanges","applyOtherMoveEffects","applyUniqueMoveEffects","rechargeMoves","consumeItem","applyPostMoveEffects","getPokemon","delayedMoveCounter","delayedMoveSource","delayedMove","applyStatChange","setFlags","lastTarget","lastMovedID","state","healing","causesFlinch","warnings","fields","isSleep","isFrozen","thawUserMoves","isTaunt","isDisable","disabledMove","isThroatChop","allowMiss","applyConfusionDamage","confusedPoke","res","damageVal","flinchChance","statChanges","some","change","_this","targetType","wbField","tpField","magicBounceMoves","substitute","bypassSub","targetTypes","bypassProtectMoves","atkID","defID","moveField","_this$moveData$catego","_this$moveData$catego2","_this$moveData$catego3","_this2","moveUser","hasCausedDamage","critChance","crit","superEffective","results","damageResult","totalDamage","lastAccuracy","accEffectsList","bpModifier","accFraction","preDamageItem","calcMove","moveRepeated","getMoveField","otherResult","otherCalcMove","hitDamage","hitRoll","otherRollChance","bypassSubstitute","persistentAbilities","receiveItem","changeAbility","postDamageItem","lastConsumedItem","isCudChew","_unused","accString","missString","accEffectsString","join","applyStatus","_step3","_iterator3","teraCharge","drainPercent","drainRolls","_step4","_iterator4","_step5","_iterator5","_step6","hitRolls","scaledRolls","_iterator6","_step6$value","_step7","_this3","healingPercent","healingRolls","_iterator7","_loop2","isYawn","syrupBombDrops","healAmount","ignoreAbility","secondaryEffects","_step8","_iterator8","_this$_fields$this$us","affectedIDs","statChance","_step9","_iterator9","_this$moveData$catego4","_step10","_iterator10","statChange","Number","ailmentChance","_step11","_iterator11","_this$moveData$catego5","ailmentIsStatus","isSecondaryEffect","applyVolatileStatus","selfDamage","lifeOrbDamage","selfDamagePercent","applyWeather","applyTerrain","_step12","gravity","trickroom","magicroom","wonderroom","_iterator12","reflect","lightscreen","auroraveil","mist","safeguard","tailwind","attackcheer","defensecheer","_sideFieldIDs","_step13","targetFields","hadScreens","_iterator13","statId","_this$_user$shieldDat","_this4","user_ability","target_ability","removeAbilityFieldEffect","boss","shieldBroken","shieldCancelDamage","shieldActivateHP","tempUserAbility","firstMoveType","toUpperCase","_step14","_iterator14","_step15","_iterator15","_step16","tempUserSide","sameSides","targetSides","_iterator16","_step17","_iterator17","_step18","_iterator18","isEndure","cumDamageRolls","addPersistentCondition","substituteHP","_i6","_arr2","tempUserAtkBoosts","tempUserDefBoosts","tempUserBoosts","tempAtk","tempSpe","boostCoefficient","_step19","allyIDs","_iterator19","allyID","ally","_i7","_allies","transform","changeForm","mimicMove","lastMove2","sketchMove","isChoiceLocked","fainted","origPokemon","initialVolatileStatus","finalVolatileStatus","_step20","_iterator20","vStat","_step21","_iterator21","initialShield","finalShield","initialItems","finalItems","initialAbilities","finalAbilities","initialNullified","finalNullified","initialAbilityOn","finalAbilityOn","initialStatus","finalStatus","boostStr","origStat","newStat","displayStr","initialHP","finalHP","hpStr","koChance","dummyMove","RaidTurn","info","turnNumber","raiderMoveData","bossMoveData","raiderOptions","bossOptions","group","_isBossAction","_isCheer","_isEmptyTurn","_isEndOfFullTurn","_raiderMovesFirst","_raider","_boss","_raiderMove","_bossMove","_raiderMoveData","_bossMoveData","_raiderMoveID","_raiderMoveTarget","_raiderMoveUsed","_bossMoveUsed","_instructed","_raidMove1","_raidMove2","_result1","_result2","_delayedResults","_endFlags","moveInfo","find","bossMoveInfo","switchIn","moveResult","activateTera","setTurnOrder","applyChangedMove","stealTeraCharge","removeProtection","applyEndOfTurnDamage","applyEndOfTurnItemEffects","applyEndOfTurnAbilityEffects","removePersistentCondition","countDownFieldEffects","applyEndOfTurnMoveEffects","applyEndOfTurnStatusEffects","countdownDelayedMoves","countDownAbilityNullification","raiderMovesFirst","raiderMoveUsed","bossMoveUsed","endFlags","testMove","moveOptions","selectableMoves","extraMoveData","isEncore","isTorment","moveCategory","getSelectableMoves","bestMove","bestDamage","testField","_this$raidState$raide","lastMoveUser","modifyMovePriorityByAbility","raiderPriority","bossPriority","raiderMM","bossMM","raiderSpeed","effectiveSpeed","bossSpeed","bossField","raider","pranksterMoves","triageMoves","initialPercent","finalPercent","role","delayedMoveResult","delayedMoveOptions","slowStartCounter","origSpe","sleepTurns","abilityRestored","abilityReactivated","addAbilityFieldEffect","RaidBattle","startingState","groups","_continuing","_state","_turnResults","_turnZeroFlags","_turnZeroOrder","endState","turnZeroFlags","turnZeroOrder","turnResults","calculateTurnZero","calculateTurns","turnZeroState","turnCounter","previousTurn","turns","repeats","k","turn","speedOrder","index","pair","Raider","_Pokemon","shiny","isAnyLevel","extraMoves","yawnSource","choiceLocked","originalAbility","isTransformed","isChangedForm","originalSpecies","originalMoves","originalFormAbility","hasSimple","hasContrary","modifyPokemonSpeedByStatus","modifyPokemonSpeedByItem","modifyPokemonSpeedByAbility","modifyPokemonSpeedByField","qpBoostedStat","modifyPokemonSpeedByQP","getModifiedSpeed","damageRolls","ignoreForRolls","safeDamageRolls","addDamageRoll","diff","originalStat","activationHP","hpTrigger","breakHP","formName","newForm","mimicIndex","sketchIndex","addRolls","RaidState","_pokemon$item","nHits","blockSymbiosis","isSheerForceBoosted","originalHP","originalDamageRolls","opponents","unnerve","_opponents","faint","lost","maxhp","wpdiff","vslen","copyable","sourceID","fromMirrorArmor","fromSelf","fromEnemy","boostCoef","mirroredBoosts","numNegativeBoosts","_opponentIds","opponentId","opponent","mirrorHerb","opportunist","both","positiveDiff","hasPositiveBoost","changes","fromHeldItem","sourcePoke","sourceAbility","selfInflicted","hasNoStatus","success","poke","firstMove","consumed","removeSequentialCondition","symbiosisIds","sid","fastestSymbId","fastestSymbPoke","fastestSymbSpeed","passedItem","addSequentialCondition","ids","setTeraformZero","setCloudNine","terastalized","isSkillSwap","oldAbility","restore","_opponentIds2","oid","copiedAbility","affectedSSPokemon","origEva","allies","origSpa","origAtk","origDef","affectedPokemon","origSourceAtk","targetAbility","entries","_step10$value","_step12$value","_step13$value","fid","_step22","_iterator22","_step22$value","_step23","_iterator23","_step23$value","_step24","_iterator24","_step24$value","_step25","_iterator25","_step26","_iterator26","_step27","_iterator27","_step28","plusMinusCount","_iterator28","targetPokemon","transformInto","nonHPChanges","caseA","caseB","moveIsInteresting","resultA","resultB","targetA","targetB","bossA","bossB","splitBranch","prevResults","penultimateResult","lastGroup","branchTurnResults","mostDamage","mostDamagingMoveIdx","leastDamage","Infinity","leastDamagingMoveIdx","turnInfo","interestingMoveResults","moveidx","resIsDifferent","pickInterestingMoves","branchResults","calculateBranches","branchChunks","acc2","g","pr","nextResults","flat","optimizeBossMoves","startingResult","groupsChunks","currentChunk","partialGroup","splitGroups","newGroups","expandRepeats","branchScores","onmessage","event","numBranches","v","postMessage","JSON","parse","stringify","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","x","__webpack_exports__","O","deferred","chunkIds","fn","notFulfilled","fulfilled","definition","o","defineProperty","enumerable","chunkId","Promise","all","promises","u","miniCssF","prop","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop","then"],"sourceRoot":""}